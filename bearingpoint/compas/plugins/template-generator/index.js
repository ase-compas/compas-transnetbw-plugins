var Gc = Object.defineProperty;
var Vc = (n, e, t) => e in n ? Gc(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t;
var ha = (n, e, t) => (Vc(n, typeof e != "symbol" ? e + "" : e, t), t);
function Le() {
}
const rr = (n) => n;
function te(n, e) {
  for (const t in e)
    n[t] = e[t];
  return (
    /** @type {T & S} */
    n
  );
}
function od(n) {
  return n();
}
function wr() {
  return /* @__PURE__ */ Object.create(null);
}
function ze(n) {
  n.forEach(od);
}
function Fe(n) {
  return typeof n == "function";
}
function Ce(n, e) {
  return n != n ? e == e : n !== e || n && typeof n == "object" || typeof n == "function";
}
function jc(n) {
  return Object.keys(n).length === 0;
}
function ir(n, ...e) {
  if (n == null) {
    for (const s of e)
      s(void 0);
    return Le;
  }
  const t = n.subscribe(...e);
  return t.unsubscribe ? () => t.unsubscribe() : t;
}
function rn(n) {
  let e;
  return ir(n, (t) => e = t)(), e;
}
function Ye(n, e, t) {
  n.$$.on_destroy.push(ir(e, t));
}
function Pe(n, e, t, s) {
  if (n) {
    const a = dd(n, e, t, s);
    return n[0](a);
  }
}
function dd(n, e, t, s) {
  return n[1] && s ? te(t.ctx.slice(), n[1](s(e))) : t.ctx;
}
function ve(n, e, t, s) {
  if (n[2] && s) {
    const a = n[2](s(t));
    if (e.dirty === void 0)
      return a;
    if (typeof a == "object") {
      const r = [], o = Math.max(e.dirty.length, a.length);
      for (let i = 0; i < o; i += 1)
        r[i] = e.dirty[i] | a[i];
      return r;
    }
    return e.dirty | a;
  }
  return e.dirty;
}
function Me(n, e, t, s, a, r) {
  if (a) {
    const o = dd(e, t, s, r);
    n.p(o, a);
  }
}
function Re(n) {
  if (n.ctx.length > 32) {
    const e = [], t = n.ctx.length / 32;
    for (let s = 0; s < t; s++)
      e[s] = -1;
    return e;
  }
  return -1;
}
function ct(n) {
  const e = {};
  for (const t in n)
    t[0] !== "$" && (e[t] = n[t]);
  return e;
}
function Te(n, e) {
  const t = {};
  e = new Set(e);
  for (const s in n)
    !e.has(s) && s[0] !== "$" && (t[s] = n[s]);
  return t;
}
function cd(n) {
  const e = {};
  for (const t in n)
    e[t] = !0;
  return e;
}
function Fn(n, e, t) {
  return n.set(t), e;
}
function De(n) {
  return n && Fe(n.destroy) ? n.destroy : Le;
}
function Br(n) {
  const e = typeof n == "string" && n.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);
  return e ? [parseFloat(e[1]), e[2] || "px"] : [
    /** @type {number} */
    n,
    "px"
  ];
}
const ld = typeof window < "u";
let or = ld ? () => window.performance.now() : () => Date.now(), dr = ld ? (n) => requestAnimationFrame(n) : Le;
const Qn = /* @__PURE__ */ new Set();
function Cd(n) {
  Qn.forEach((e) => {
    e.c(n) || (Qn.delete(e), e.f());
  }), Qn.size !== 0 && dr(Cd);
}
function cr(n) {
  let e;
  return Qn.size === 0 && dr(Cd), {
    promise: new Promise((t) => {
      Qn.add(e = { c: n, f: t });
    }),
    abort() {
      Qn.delete(e);
    }
  };
}
const ud = typeof window < "u" ? window : typeof globalThis < "u" ? globalThis : (
  // @ts-ignore Node typings have this
  global
);
function U(n, e) {
  n.appendChild(e);
}
function md(n) {
  if (!n)
    return document;
  const e = n.getRootNode ? n.getRootNode() : n.ownerDocument;
  return e && /** @type {ShadowRoot} */
  e.host ? (
    /** @type {ShadowRoot} */
    e
  ) : n.ownerDocument;
}
function kc(n) {
  const e = Z("style");
  return e.textContent = "/* empty */", wc(md(n), e), e.sheet;
}
function wc(n, e) {
  return U(
    /** @type {Document} */
    n.head || n,
    e
  ), e.sheet;
}
function G(n, e, t) {
  n.insertBefore(e, t || null);
}
function F(n) {
  n.parentNode && n.parentNode.removeChild(n);
}
function lr(n, e) {
  for (let t = 0; t < n.length; t += 1)
    n[t] && n[t].d(e);
}
function Z(n) {
  return document.createElement(n);
}
function Ct(n) {
  return document.createElementNS("http://www.w3.org/2000/svg", n);
}
function Se(n) {
  return document.createTextNode(n);
}
function $() {
  return Se(" ");
}
function st() {
  return Se("");
}
function ce(n, e, t, s) {
  return n.addEventListener(e, t, s), () => n.removeEventListener(e, t, s);
}
function vs(n) {
  return function(e) {
    return e.stopPropagation(), n.call(this, e);
  };
}
function R(n, e, t) {
  t == null ? n.removeAttribute(e) : n.getAttribute(e) !== t && n.setAttribute(e, t);
}
const Bc = ["width", "height"];
function Ae(n, e) {
  const t = Object.getOwnPropertyDescriptors(n.__proto__);
  for (const s in e)
    e[s] == null ? n.removeAttribute(s) : s === "style" ? n.style.cssText = e[s] : s === "__value" ? n.value = n[s] = e[s] : t[s] && t[s].set && Bc.indexOf(s) === -1 ? n[s] = e[s] : R(n, s, e[s]);
}
function Ur(n, e) {
  for (const t in e)
    R(n, t, e[t]);
}
function Uc(n, e) {
  Object.keys(e).forEach((t) => {
    Hc(n, t, e[t]);
  });
}
function Hc(n, e, t) {
  const s = e.toLowerCase();
  s in n ? n[s] = typeof n[s] == "boolean" && t === "" ? !0 : t : e in n ? n[e] = typeof n[e] == "boolean" && t === "" ? !0 : t : R(n, e, t);
}
function qs(n) {
  return /-/.test(n) ? Uc : Ae;
}
function Kc(n) {
  return Array.from(n.childNodes);
}
function je(n, e) {
  e = "" + e, n.data !== e && (n.data = /** @type {string} */
  e);
}
function Hr(n, e) {
  n.value = e ?? "";
}
function ln(n, e, t, s) {
  t == null ? n.style.removeProperty(e) : n.style.setProperty(e, t, "");
}
function ut(n, e, t) {
  n.classList.toggle(e, !!t);
}
function pd(n, e, { bubbles: t = !1, cancelable: s = !1 } = {}) {
  return new CustomEvent(n, { detail: e, bubbles: t, cancelable: s });
}
function Gt(n, e) {
  return new n(e);
}
const zs = /* @__PURE__ */ new Map();
let Xs = 0;
function Wc(n) {
  let e = 5381, t = n.length;
  for (; t--; )
    e = (e << 5) - e ^ n.charCodeAt(t);
  return e >>> 0;
}
function qc(n, e) {
  const t = { stylesheet: kc(e), rules: {} };
  return zs.set(n, t), t;
}
function Cr(n, e, t, s, a, r, o, i = 0) {
  const d = 16.666 / s;
  let c = `{
`;
  for (let _ = 0; _ <= 1; _ += d) {
    const A = e + (t - e) * r(_);
    c += _ * 100 + `%{${o(A, 1 - A)}}
`;
  }
  const l = c + `100% {${o(t, 1 - t)}}
}`, C = `__svelte_${Wc(l)}_${i}`, u = md(n), { stylesheet: m, rules: p } = zs.get(u) || qc(u, n);
  p[C] || (p[C] = !0, m.insertRule(`@keyframes ${C} ${l}`, m.cssRules.length));
  const D = n.style.animation || "";
  return n.style.animation = `${D ? `${D}, ` : ""}${C} ${s}ms linear ${a}ms 1 both`, Xs += 1, C;
}
function Zs(n, e) {
  const t = (n.style.animation || "").split(", "), s = t.filter(
    e ? (r) => r.indexOf(e) < 0 : (r) => r.indexOf("__svelte") === -1
    // remove all Svelte animations
  ), a = t.length - s.length;
  a && (n.style.animation = s.join(", "), Xs -= a, Xs || zc());
}
function zc() {
  dr(() => {
    Xs || (zs.forEach((n) => {
      const { ownerNode: e } = n.stylesheet;
      e && F(e);
    }), zs.clear());
  });
}
function Xc(n, e, t, s) {
  if (!e)
    return Le;
  const a = n.getBoundingClientRect();
  if (e.left === a.left && e.right === a.right && e.top === a.top && e.bottom === a.bottom)
    return Le;
  const {
    delay: r = 0,
    duration: o = 300,
    easing: i = rr,
    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?
    start: d = or() + r,
    // @ts-ignore todo:
    end: c = d + o,
    tick: l = Le,
    css: C
  } = t(n, { from: e, to: a }, s);
  let u = !0, m = !1, p;
  function D() {
    C && (p = Cr(n, 0, 1, o, r, i, C)), r || (m = !0);
  }
  function _() {
    C && Zs(n, p), u = !1;
  }
  return cr((A) => {
    if (!m && A >= d && (m = !0), m && A >= c && (l(1, 0), _()), !u)
      return !1;
    if (m) {
      const b = A - d, S = 0 + 1 * i(b / o);
      l(S, 1 - S);
    }
    return !0;
  }), D(), l(0, 1), _;
}
function Zc(n) {
  const e = getComputedStyle(n);
  if (e.position !== "absolute" && e.position !== "fixed") {
    const { width: t, height: s } = e, a = n.getBoundingClientRect();
    n.style.position = "absolute", n.style.width = t, n.style.height = s, Yc(n, a);
  }
}
function Yc(n, e) {
  const t = n.getBoundingClientRect();
  if (e.left !== t.left || e.top !== t.top) {
    const s = getComputedStyle(n), a = s.transform === "none" ? "" : s.transform;
    n.style.transform = `${a} translate(${e.left - t.left}px, ${e.top - t.top}px)`;
  }
}
let Ds;
function ps(n) {
  Ds = n;
}
function tt() {
  if (!Ds)
    throw new Error("Function called outside component initialization");
  return Ds;
}
function at(n) {
  tt().$$.on_mount.push(n);
}
function an(n) {
  tt().$$.on_destroy.push(n);
}
function Qt() {
  const n = tt();
  return (e, t, { cancelable: s = !1 } = {}) => {
    const a = n.$$.callbacks[e];
    if (a) {
      const r = pd(
        /** @type {string} */
        e,
        t,
        { cancelable: s }
      );
      return a.slice().forEach((o) => {
        o.call(n, r);
      }), !r.defaultPrevented;
    }
    return !0;
  };
}
function qe(n, e) {
  return tt().$$.context.set(n, e), e;
}
function Qe(n) {
  return tt().$$.context.get(n);
}
function Cn(n, e) {
  const t = n.$$.callbacks[e.type];
  t && t.slice().forEach((s) => s.call(this, e));
}
const Xn = [], de = [];
let Jn = [];
const wa = [], _d = /* @__PURE__ */ Promise.resolve();
let Ba = !1;
function Id() {
  Ba || (Ba = !0, _d.then(Dd));
}
function Qc() {
  return Id(), _d;
}
function ns(n) {
  Jn.push(n);
}
function we(n) {
  wa.push(n);
}
const ya = /* @__PURE__ */ new Set();
let Un = 0;
function Dd() {
  if (Un !== 0)
    return;
  const n = Ds;
  do {
    try {
      for (; Un < Xn.length; ) {
        const e = Xn[Un];
        Un++, ps(e), Jc(e.$$);
      }
    } catch (e) {
      throw Xn.length = 0, Un = 0, e;
    }
    for (ps(null), Xn.length = 0, Un = 0; de.length; )
      de.pop()();
    for (let e = 0; e < Jn.length; e += 1) {
      const t = Jn[e];
      ya.has(t) || (ya.add(t), t());
    }
    Jn.length = 0;
  } while (Xn.length);
  for (; wa.length; )
    wa.pop()();
  Ba = !1, ya.clear(), ps(n);
}
function Jc(n) {
  if (n.fragment !== null) {
    n.update(), ze(n.before_update);
    const e = n.dirty;
    n.dirty = [-1], n.fragment && n.fragment.p(n.ctx, e), n.after_update.forEach(ns);
  }
}
function xc(n) {
  const e = [], t = [];
  Jn.forEach((s) => n.indexOf(s) === -1 ? e.push(s) : t.push(s)), t.forEach((s) => s()), Jn = e;
}
let is;
function bd() {
  return is || (is = Promise.resolve(), is.then(() => {
    is = null;
  })), is;
}
function Ys(n, e, t) {
  n.dispatchEvent(pd(`${e ? "intro" : "outro"}${t}`));
}
const Us = /* @__PURE__ */ new Set();
let On;
function he() {
  On = {
    r: 0,
    c: [],
    p: On
    // parent group
  };
}
function ye() {
  On.r || ze(On.c), On = On.p;
}
function L(n, e) {
  n && n.i && (Us.delete(n), n.i(e));
}
function h(n, e, t, s) {
  if (n && n.o) {
    if (Us.has(n))
      return;
    Us.add(n), On.c.push(() => {
      Us.delete(n), s && (t && n.d(1), s());
    }), n.o(e);
  } else
    s && s();
}
const fd = { duration: 0 };
function $c(n, e, t) {
  const s = { direction: "in" };
  let a = e(n, t, s), r = !1, o, i, d = 0;
  function c() {
    o && Zs(n, o);
  }
  function l() {
    const {
      delay: u = 0,
      duration: m = 300,
      easing: p = rr,
      tick: D = Le,
      css: _
    } = a || fd;
    _ && (o = Cr(n, 0, 1, m, u, p, _, d++)), D(0, 1);
    const A = or() + u, b = A + m;
    i && i.abort(), r = !0, ns(() => Ys(n, !0, "start")), i = cr((S) => {
      if (r) {
        if (S >= b)
          return D(1, 0), Ys(n, !0, "end"), c(), r = !1;
        if (S >= A) {
          const f = p((S - A) / m);
          D(f, 1 - f);
        }
      }
      return r;
    });
  }
  let C = !1;
  return {
    start() {
      C || (C = !0, Zs(n), Fe(a) ? (a = a(s), bd().then(l)) : l());
    },
    invalidate() {
      C = !1;
    },
    end() {
      r && (c(), r = !1);
    }
  };
}
function el(n, e, t) {
  const s = { direction: "out" };
  let a = e(n, t, s), r = !0, o;
  const i = On;
  i.r += 1;
  let d;
  function c() {
    const {
      delay: l = 0,
      duration: C = 300,
      easing: u = rr,
      tick: m = Le,
      css: p
    } = a || fd;
    p && (o = Cr(n, 1, 0, C, l, u, p));
    const D = or() + l, _ = D + C;
    ns(() => Ys(n, !1, "start")), "inert" in n && (d = /** @type {HTMLElement} */
    n.inert, n.inert = !0), cr((A) => {
      if (r) {
        if (A >= _)
          return m(0, 1), Ys(n, !1, "end"), --i.r || ze(i.c), !1;
        if (A >= D) {
          const b = u((A - D) / C);
          m(1 - b, b);
        }
      }
      return r;
    });
  }
  return Fe(a) ? bd().then(() => {
    a = a(s), c();
  }) : c(), {
    end(l) {
      l && "inert" in n && (n.inert = d), l && a.tick && a.tick(1, 0), r && (o && Zs(n, o), r = !1);
    }
  };
}
function Vt(n) {
  return (n == null ? void 0 : n.length) !== void 0 ? n : Array.from(n);
}
function Os(n, e) {
  h(n, 1, 1, () => {
    e.delete(n.key);
  });
}
function tl(n, e) {
  n.f(), Os(n, e);
}
function Ss(n, e, t, s, a, r, o, i, d, c, l, C) {
  let u = n.length, m = r.length, p = u;
  const D = {};
  for (; p--; )
    D[n[p].key] = p;
  const _ = [], A = /* @__PURE__ */ new Map(), b = /* @__PURE__ */ new Map(), S = [];
  for (p = m; p--; ) {
    const I = C(a, r, p), N = t(I);
    let j = o.get(N);
    j ? S.push(() => j.p(I, e)) : (j = c(N, I), j.c()), A.set(N, _[p] = j), N in D && b.set(N, Math.abs(p - D[N]));
  }
  const f = /* @__PURE__ */ new Set(), E = /* @__PURE__ */ new Set();
  function y(I) {
    L(I, 1), I.m(i, l), o.set(I.key, I), l = I.first, m--;
  }
  for (; u && m; ) {
    const I = _[m - 1], N = n[u - 1], j = I.key, v = N.key;
    I === N ? (l = I.first, u--, m--) : A.has(v) ? !o.has(j) || f.has(j) ? y(I) : E.has(v) ? u-- : b.get(j) > b.get(v) ? (E.add(j), y(I)) : (f.add(v), u--) : (d(N, o), u--);
  }
  for (; u--; ) {
    const I = n[u];
    A.has(I.key) || d(I, o);
  }
  for (; m; )
    y(_[m - 1]);
  return ze(S), _;
}
function Ee(n, e) {
  const t = {}, s = {}, a = { $$scope: 1 };
  let r = n.length;
  for (; r--; ) {
    const o = n[r], i = e[r];
    if (i) {
      for (const d in o)
        d in i || (s[d] = 1);
      for (const d in i)
        a[d] || (t[d] = i[d], a[d] = 1);
      n[r] = i;
    } else
      for (const d in o)
        a[d] = 1;
  }
  for (const o in s)
    o in t || (t[o] = void 0);
  return t;
}
function Ne(n) {
  return typeof n == "object" && n !== null ? n : {};
}
function Ve(n, e, t) {
  const s = n.$$.props[e];
  s !== void 0 && (n.$$.bound[s] = t, t(n.$$.ctx[s]));
}
function X(n) {
  n && n.c();
}
function q(n, e, t) {
  const { fragment: s, after_update: a } = n.$$;
  s && s.m(e, t), ns(() => {
    const r = n.$$.on_mount.map(od).filter(Fe);
    n.$$.on_destroy ? n.$$.on_destroy.push(...r) : ze(r), n.$$.on_mount = [];
  }), a.forEach(ns);
}
function z(n, e) {
  const t = n.$$;
  t.fragment !== null && (xc(t.after_update), ze(t.on_destroy), t.fragment && t.fragment.d(e), t.on_destroy = t.fragment = null, t.ctx = []);
}
function nl(n, e) {
  n.$$.dirty[0] === -1 && (Xn.push(n), Id(), n.$$.dirty.fill(0)), n.$$.dirty[e / 31 | 0] |= 1 << e % 31;
}
function ue(n, e, t, s, a, r, o = null, i = [-1]) {
  const d = Ds;
  ps(n);
  const c = n.$$ = {
    fragment: null,
    ctx: [],
    // state
    props: r,
    update: Le,
    not_equal: a,
    bound: wr(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(e.context || (d ? d.$$.context : [])),
    // everything else
    callbacks: wr(),
    dirty: i,
    skip_bound: !1,
    root: e.target || d.$$.root
  };
  o && o(c.root);
  let l = !1;
  if (c.ctx = t ? t(n, e.props || {}, (C, u, ...m) => {
    const p = m.length ? m[0] : u;
    return c.ctx && a(c.ctx[C], c.ctx[C] = p) && (!c.skip_bound && c.bound[C] && c.bound[C](p), l && nl(n, C)), u;
  }) : [], c.update(), l = !0, ze(c.before_update), c.fragment = s ? s(c.ctx) : !1, e.target) {
    if (e.hydrate) {
      const C = Kc(e.target);
      c.fragment && c.fragment.l(C), C.forEach(F);
    } else
      c.fragment && c.fragment.c();
    e.intro && L(n.$$.fragment), q(n, e.target, e.anchor), Dd();
  }
  ps(d);
}
class me {
  constructor() {
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    ha(this, "$$");
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    ha(this, "$$set");
  }
  /** @returns {void} */
  $destroy() {
    z(this, 1), this.$destroy = Le;
  }
  /**
   * @template {Extract<keyof Events, string>} K
   * @param {K} type
   * @param {((e: Events[K]) => void) | null | undefined} callback
   * @returns {() => void}
   */
  $on(e, t) {
    if (!Fe(t))
      return Le;
    const s = this.$$.callbacks[e] || (this.$$.callbacks[e] = []);
    return s.push(t), () => {
      const a = s.indexOf(t);
      a !== -1 && s.splice(a, 1);
    };
  }
  /**
   * @param {Partial<Props>} props
   * @returns {void}
   */
  $set(e) {
    this.$$set && !jc(e) && (this.$$.skip_bound = !0, this.$$set(e), this.$$.skip_bound = !1);
  }
}
const sl = "4";
typeof window < "u" && (window.__svelte || (window.__svelte = { v: /* @__PURE__ */ new Set() })).v.add(sl);
const Ad = "template-generator", Ed = "0.0.1";
var Ua = function(n, e) {
  return Ua = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t, s) {
    t.__proto__ = s;
  } || function(t, s) {
    for (var a in s)
      Object.prototype.hasOwnProperty.call(s, a) && (t[a] = s[a]);
  }, Ua(n, e);
};
function Tt(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
  Ua(n, e);
  function t() {
    this.constructor = n;
  }
  n.prototype = e === null ? Object.create(e) : (t.prototype = e.prototype, new t());
}
var et = function() {
  return et = Object.assign || function(e) {
    for (var t, s = 1, a = arguments.length; s < a; s++) {
      t = arguments[s];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, et.apply(this, arguments);
};
function He(n, e, t, s) {
  function a(r) {
    return r instanceof t ? r : new t(function(o) {
      o(r);
    });
  }
  return new (t || (t = Promise))(function(r, o) {
    function i(l) {
      try {
        c(s.next(l));
      } catch (C) {
        o(C);
      }
    }
    function d(l) {
      try {
        c(s.throw(l));
      } catch (C) {
        o(C);
      }
    }
    function c(l) {
      l.done ? r(l.value) : a(l.value).then(i, d);
    }
    c((s = s.apply(n, e || [])).next());
  });
}
function al(n, e) {
  var t = { label: 0, sent: function() {
    if (r[0] & 1)
      throw r[1];
    return r[1];
  }, trys: [], ops: [] }, s, a, r, o = Object.create((typeof Iterator == "function" ? Iterator : Object).prototype);
  return o.next = i(0), o.throw = i(1), o.return = i(2), typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function i(c) {
    return function(l) {
      return d([c, l]);
    };
  }
  function d(c) {
    if (s)
      throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, c[0] && (t = 0)), t; )
      try {
        if (s = 1, a && (r = c[0] & 2 ? a.return : c[0] ? a.throw || ((r = a.return) && r.call(a), 0) : a.next) && !(r = r.call(a, c[1])).done)
          return r;
        switch (a = 0, r && (c = [c[0] & 2, r.value]), c[0]) {
          case 0:
          case 1:
            r = c;
            break;
          case 4:
            return t.label++, { value: c[1], done: !1 };
          case 5:
            t.label++, a = c[1], c = [0];
            continue;
          case 7:
            c = t.ops.pop(), t.trys.pop();
            continue;
          default:
            if (r = t.trys, !(r = r.length > 0 && r[r.length - 1]) && (c[0] === 6 || c[0] === 2)) {
              t = 0;
              continue;
            }
            if (c[0] === 3 && (!r || c[1] > r[0] && c[1] < r[3])) {
              t.label = c[1];
              break;
            }
            if (c[0] === 6 && t.label < r[1]) {
              t.label = r[1], r = c;
              break;
            }
            if (r && t.label < r[2]) {
              t.label = r[2], t.ops.push(c);
              break;
            }
            r[2] && t.ops.pop(), t.trys.pop();
            continue;
        }
        c = e.call(n, t);
      } catch (l) {
        c = [6, l], a = 0;
      } finally {
        s = r = 0;
      }
    if (c[0] & 5)
      throw c[1];
    return { value: c[0] ? c[1] : void 0, done: !0 };
  }
}
function kt(n) {
  var e = typeof Symbol == "function" && Symbol.iterator, t = e && n[e], s = 0;
  if (t)
    return t.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && s >= n.length && (n = void 0), { value: n && n[s++], done: !n };
      }
    };
  throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function Ha(n, e) {
  var t = typeof Symbol == "function" && n[Symbol.iterator];
  if (!t)
    return n;
  var s = t.call(n), a, r = [], o;
  try {
    for (; (e === void 0 || e-- > 0) && !(a = s.next()).done; )
      r.push(a.value);
  } catch (i) {
    o = { error: i };
  } finally {
    try {
      a && !a.done && (t = s.return) && t.call(s);
    } finally {
      if (o)
        throw o.error;
    }
  }
  return r;
}
function Od(n, e, t) {
  if (t || arguments.length === 2)
    for (var s = 0, a = e.length, r; s < a; s++)
      (r || !(s in e)) && (r || (r = Array.prototype.slice.call(e, 0, s)), r[s] = e[s]);
  return n.concat(r || Array.prototype.slice.call(e));
}
function le(n) {
  return Object.entries(n).filter(([e, t]) => e !== "" && t).map(([e]) => e).join(" ");
}
function Oe(n, e, t, s = { bubbles: !0 }, a = !1) {
  if (typeof Event > "u")
    throw new Error("Event not defined.");
  if (!n)
    throw new Error("Tried to dipatch event without element.");
  const r = new CustomEvent(e, Object.assign(Object.assign({}, s), { detail: t }));
  if (n == null || n.dispatchEvent(r), a && e.startsWith("SMUI")) {
    const o = new CustomEvent(e.replace(/^SMUI/g, () => "MDC"), Object.assign(Object.assign({}, s), { detail: t }));
    n == null || n.dispatchEvent(o), o.defaultPrevented && r.preventDefault();
  }
  return r;
}
function jt(n, e) {
  let t = Object.getOwnPropertyNames(n);
  const s = {};
  for (let a = 0; a < t.length; a++) {
    const r = t[a], o = r.indexOf("$");
    o !== -1 && e.indexOf(r.substring(0, o + 1)) !== -1 || e.indexOf(r) === -1 && (s[r] = n[r]);
  }
  return s;
}
const Kr = /^[a-z]+(?::(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/, rl = /^[^$]+(?:\$(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/;
function lt(n) {
  let e, t = [];
  n.$on = (a, r) => {
    let o = a, i = () => {
    };
    return e ? i = e(o, r) : t.push([o, r]), o.match(Kr) && console && console.warn('Event modifiers in SMUI now use "$" instead of ":", so that all events can be bound with modifiers. Please update your event binding: ', o), () => {
      i();
    };
  };
  function s(a) {
    const r = n.$$.callbacks[a.type];
    r && r.slice().forEach((o) => o.call(this, a));
  }
  return (a) => {
    const r = [], o = {};
    e = (i, d) => {
      let c = i, l = d, C = !1;
      const u = c.match(Kr), m = c.match(rl), p = u || m;
      if (c.match(/^SMUI:\w+:/)) {
        const A = c.split(":");
        let b = "";
        for (let S = 0; S < A.length; S++)
          b += S === A.length - 1 ? ":" + A[S] : A[S].split("-").map((f) => f.slice(0, 1).toUpperCase() + f.slice(1)).join("");
        console.warn(`The event ${c.split("$")[0]} has been renamed to ${b.split("$")[0]}.`), c = b;
      }
      if (p) {
        const A = c.split(u ? ":" : "$");
        c = A[0];
        const b = A.slice(1).reduce((S, f) => (S[f] = !0, S), {});
        b.passive && (C = C || {}, C.passive = !0), b.nonpassive && (C = C || {}, C.passive = !1), b.capture && (C = C || {}, C.capture = !0), b.once && (C = C || {}, C.once = !0), b.preventDefault && (l = il(l)), b.stopPropagation && (l = ol(l)), b.stopImmediatePropagation && (l = dl(l)), b.self && (l = cl(a, l)), b.trusted && (l = ll(l));
      }
      const D = Wr(a, c, l, C), _ = () => {
        D();
        const A = r.indexOf(_);
        A > -1 && r.splice(A, 1);
      };
      return r.push(_), c in o || (o[c] = Wr(a, c, s)), _;
    };
    for (let i = 0; i < t.length; i++)
      e(t[i][0], t[i][1]);
    return {
      destroy: () => {
        for (let i = 0; i < r.length; i++)
          r[i]();
        for (let i of Object.entries(o))
          i[1]();
      }
    };
  };
}
function Wr(n, e, t, s) {
  return n.addEventListener(e, t, s), () => n.removeEventListener(e, t, s);
}
function il(n) {
  return function(e) {
    return e.preventDefault(), n.call(this, e);
  };
}
function ol(n) {
  return function(e) {
    return e.stopPropagation(), n.call(this, e);
  };
}
function dl(n) {
  return function(e) {
    return e.stopImmediatePropagation(), n.call(this, e);
  };
}
function cl(n, e) {
  return function(t) {
    if (t.target === n)
      return e.call(this, t);
  };
}
function ll(n) {
  return function(e) {
    if (e.isTrusted)
      return n.call(this, e);
  };
}
function Je(n, e) {
  let t = Object.getOwnPropertyNames(n);
  const s = {};
  for (let a = 0; a < t.length; a++) {
    const r = t[a];
    r.substring(0, e.length) === e && (s[r.substring(e.length)] = n[r]);
  }
  return s;
}
function rt(n, e) {
  let t = [];
  if (e)
    for (let s = 0; s < e.length; s++) {
      const a = e[s], r = Array.isArray(a) ? a[0] : a;
      Array.isArray(a) && a.length > 1 ? t.push(r(n, a[1])) : t.push(r(n));
    }
  return {
    update(s) {
      if ((s && s.length || 0) != t.length)
        throw new Error("You must not change the length of an actions array.");
      if (s)
        for (let a = 0; a < s.length; a++) {
          const r = t[a];
          if (r && r.update) {
            const o = s[a];
            Array.isArray(o) && o.length > 1 ? r.update(o[1]) : r.update();
          }
        }
    },
    destroy() {
      for (let s = 0; s < t.length; s++) {
        const a = t[s];
        a && a.destroy && a.destroy();
      }
    }
  };
}
var Ms;
function Cl(n, e) {
  e === void 0 && (e = !1);
  var t = n.CSS, s = Ms;
  if (typeof Ms == "boolean" && !e)
    return Ms;
  var a = t && typeof t.supports == "function";
  if (!a)
    return !1;
  var r = t.supports("--css-vars", "yes"), o = t.supports("(--css-vars: yes)") && t.supports("color", "#00000000");
  return s = r || o, e || (Ms = s), s;
}
function ul(n, e, t) {
  if (!n)
    return { x: 0, y: 0 };
  var s = e.x, a = e.y, r = s + t.left, o = a + t.top, i, d;
  if (n.type === "touchstart") {
    var c = n;
    i = c.changedTouches[0].pageX - r, d = c.changedTouches[0].pageY - o;
  } else {
    var l = n;
    i = l.pageX - r, d = l.pageY - o;
  }
  return { x: i, y: d };
}
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var wt = (
  /** @class */
  function() {
    function n(e) {
      e === void 0 && (e = {}), this.adapter = e;
    }
    return Object.defineProperty(n, "cssClasses", {
      get: function() {
        return {};
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(n, "strings", {
      get: function() {
        return {};
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(n, "numbers", {
      get: function() {
        return {};
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(n, "defaultAdapter", {
      get: function() {
        return {};
      },
      enumerable: !1,
      configurable: !0
    }), n.prototype.init = function() {
    }, n.prototype.destroy = function() {
    }, n;
  }()
);
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function ml(n) {
  return n === void 0 && (n = window), pl(n) ? { passive: !0 } : !1;
}
function pl(n) {
  n === void 0 && (n = window);
  var e = !1;
  try {
    var t = {
      // This function will be called when the browser
      // attempts to access the passive property.
      get passive() {
        return e = !0, !1;
      }
    }, s = function() {
    };
    n.document.addEventListener("test", s, t), n.document.removeEventListener("test", s, t);
  } catch {
    e = !1;
  }
  return e;
}
const Sd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  applyPassive: ml
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function _l(n, e) {
  if (n.closest)
    return n.closest(e);
  for (var t = n; t; ) {
    if (Ld(t, e))
      return t;
    t = t.parentElement;
  }
  return null;
}
function Ld(n, e) {
  var t = n.matches || n.webkitMatchesSelector || n.msMatchesSelector;
  return t.call(n, e);
}
function Il(n) {
  var e = n;
  if (e.offsetParent !== null)
    return e.scrollWidth;
  var t = e.cloneNode(!0);
  t.style.setProperty("position", "absolute"), t.style.setProperty("transform", "translate(-9999px, -9999px)"), document.documentElement.appendChild(t);
  var s = t.scrollWidth;
  return document.documentElement.removeChild(t), s;
}
const Ls = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  closest: _l,
  estimateScrollWidth: Il,
  matches: Ld
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Dl = {
  // Ripple is a special case where the "root" component is really a "mixin" of sorts,
  // given that it's an 'upgrade' to an existing component. That being said it is the root
  // CSS class that all other CSS classes derive from.
  BG_FOCUSED: "mdc-ripple-upgraded--background-focused",
  FG_ACTIVATION: "mdc-ripple-upgraded--foreground-activation",
  FG_DEACTIVATION: "mdc-ripple-upgraded--foreground-deactivation",
  ROOT: "mdc-ripple-upgraded",
  UNBOUNDED: "mdc-ripple-upgraded--unbounded"
}, bl = {
  VAR_FG_SCALE: "--mdc-ripple-fg-scale",
  VAR_FG_SIZE: "--mdc-ripple-fg-size",
  VAR_FG_TRANSLATE_END: "--mdc-ripple-fg-translate-end",
  VAR_FG_TRANSLATE_START: "--mdc-ripple-fg-translate-start",
  VAR_LEFT: "--mdc-ripple-left",
  VAR_TOP: "--mdc-ripple-top"
}, qr = {
  DEACTIVATION_TIMEOUT_MS: 225,
  FG_DEACTIVATION_MS: 150,
  INITIAL_ORIGIN_SCALE: 0.6,
  PADDING: 10,
  TAP_DELAY_MS: 300
  // Delay between touch and simulated mouse events on touch devices
};
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var zr = [
  "touchstart",
  "pointerdown",
  "mousedown",
  "keydown"
], Xr = [
  "touchend",
  "pointerup",
  "mouseup",
  "contextmenu"
], Rs = [], fl = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.activationAnimationHasEnded = !1, s.activationTimer = 0, s.fgDeactivationRemovalTimer = 0, s.fgScale = "0", s.frame = { width: 0, height: 0 }, s.initialSize = 0, s.layoutFrame = 0, s.maxRadius = 0, s.unboundedCoords = { left: 0, top: 0 }, s.activationState = s.defaultActivationState(), s.activationTimerCallback = function() {
        s.activationAnimationHasEnded = !0, s.runDeactivationUXLogicIfReady();
      }, s.activateHandler = function(a) {
        s.activateImpl(a);
      }, s.deactivateHandler = function() {
        s.deactivateImpl();
      }, s.focusHandler = function() {
        s.handleFocus();
      }, s.blurHandler = function() {
        s.handleBlur();
      }, s.resizeHandler = function() {
        s.layout();
      }, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Dl;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return bl;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return qr;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      get: function() {
        return {
          addClass: function() {
          },
          browserSupportsCssVars: function() {
            return !0;
          },
          computeBoundingRect: function() {
            return { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };
          },
          containsEventTarget: function() {
            return !0;
          },
          deregisterDocumentInteractionHandler: function() {
          },
          deregisterInteractionHandler: function() {
          },
          deregisterResizeHandler: function() {
          },
          getWindowPageOffset: function() {
            return { x: 0, y: 0 };
          },
          isSurfaceActive: function() {
            return !0;
          },
          isSurfaceDisabled: function() {
            return !0;
          },
          isUnbounded: function() {
            return !0;
          },
          registerDocumentInteractionHandler: function() {
          },
          registerInteractionHandler: function() {
          },
          registerResizeHandler: function() {
          },
          removeClass: function() {
          },
          updateCssVariable: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      var t = this, s = this.supportsPressRipple();
      if (this.registerRootHandlers(s), s) {
        var a = e.cssClasses, r = a.ROOT, o = a.UNBOUNDED;
        requestAnimationFrame(function() {
          t.adapter.addClass(r), t.adapter.isUnbounded() && (t.adapter.addClass(o), t.layoutInternal());
        });
      }
    }, e.prototype.destroy = function() {
      var t = this;
      if (this.supportsPressRipple()) {
        this.activationTimer && (clearTimeout(this.activationTimer), this.activationTimer = 0, this.adapter.removeClass(e.cssClasses.FG_ACTIVATION)), this.fgDeactivationRemovalTimer && (clearTimeout(this.fgDeactivationRemovalTimer), this.fgDeactivationRemovalTimer = 0, this.adapter.removeClass(e.cssClasses.FG_DEACTIVATION));
        var s = e.cssClasses, a = s.ROOT, r = s.UNBOUNDED;
        requestAnimationFrame(function() {
          t.adapter.removeClass(a), t.adapter.removeClass(r), t.removeCssVars();
        });
      }
      this.deregisterRootHandlers(), this.deregisterDeactivationHandlers();
    }, e.prototype.activate = function(t) {
      this.activateImpl(t);
    }, e.prototype.deactivate = function() {
      this.deactivateImpl();
    }, e.prototype.layout = function() {
      var t = this;
      this.layoutFrame && cancelAnimationFrame(this.layoutFrame), this.layoutFrame = requestAnimationFrame(function() {
        t.layoutInternal(), t.layoutFrame = 0;
      });
    }, e.prototype.setUnbounded = function(t) {
      var s = e.cssClasses.UNBOUNDED;
      t ? this.adapter.addClass(s) : this.adapter.removeClass(s);
    }, e.prototype.handleFocus = function() {
      var t = this;
      requestAnimationFrame(function() {
        return t.adapter.addClass(e.cssClasses.BG_FOCUSED);
      });
    }, e.prototype.handleBlur = function() {
      var t = this;
      requestAnimationFrame(function() {
        return t.adapter.removeClass(e.cssClasses.BG_FOCUSED);
      });
    }, e.prototype.supportsPressRipple = function() {
      return this.adapter.browserSupportsCssVars();
    }, e.prototype.defaultActivationState = function() {
      return {
        activationEvent: void 0,
        hasDeactivationUXRun: !1,
        isActivated: !1,
        isProgrammatic: !1,
        wasActivatedByPointer: !1,
        wasElementMadeActive: !1
      };
    }, e.prototype.registerRootHandlers = function(t) {
      var s, a;
      if (t) {
        try {
          for (var r = kt(zr), o = r.next(); !o.done; o = r.next()) {
            var i = o.value;
            this.adapter.registerInteractionHandler(i, this.activateHandler);
          }
        } catch (d) {
          s = { error: d };
        } finally {
          try {
            o && !o.done && (a = r.return) && a.call(r);
          } finally {
            if (s)
              throw s.error;
          }
        }
        this.adapter.isUnbounded() && this.adapter.registerResizeHandler(this.resizeHandler);
      }
      this.adapter.registerInteractionHandler("focus", this.focusHandler), this.adapter.registerInteractionHandler("blur", this.blurHandler);
    }, e.prototype.registerDeactivationHandlers = function(t) {
      var s, a;
      if (t.type === "keydown")
        this.adapter.registerInteractionHandler("keyup", this.deactivateHandler);
      else
        try {
          for (var r = kt(Xr), o = r.next(); !o.done; o = r.next()) {
            var i = o.value;
            this.adapter.registerDocumentInteractionHandler(i, this.deactivateHandler);
          }
        } catch (d) {
          s = { error: d };
        } finally {
          try {
            o && !o.done && (a = r.return) && a.call(r);
          } finally {
            if (s)
              throw s.error;
          }
        }
    }, e.prototype.deregisterRootHandlers = function() {
      var t, s;
      try {
        for (var a = kt(zr), r = a.next(); !r.done; r = a.next()) {
          var o = r.value;
          this.adapter.deregisterInteractionHandler(o, this.activateHandler);
        }
      } catch (i) {
        t = { error: i };
      } finally {
        try {
          r && !r.done && (s = a.return) && s.call(a);
        } finally {
          if (t)
            throw t.error;
        }
      }
      this.adapter.deregisterInteractionHandler("focus", this.focusHandler), this.adapter.deregisterInteractionHandler("blur", this.blurHandler), this.adapter.isUnbounded() && this.adapter.deregisterResizeHandler(this.resizeHandler);
    }, e.prototype.deregisterDeactivationHandlers = function() {
      var t, s;
      this.adapter.deregisterInteractionHandler("keyup", this.deactivateHandler);
      try {
        for (var a = kt(Xr), r = a.next(); !r.done; r = a.next()) {
          var o = r.value;
          this.adapter.deregisterDocumentInteractionHandler(o, this.deactivateHandler);
        }
      } catch (i) {
        t = { error: i };
      } finally {
        try {
          r && !r.done && (s = a.return) && s.call(a);
        } finally {
          if (t)
            throw t.error;
        }
      }
    }, e.prototype.removeCssVars = function() {
      var t = this, s = e.strings, a = Object.keys(s);
      a.forEach(function(r) {
        r.indexOf("VAR_") === 0 && t.adapter.updateCssVariable(s[r], null);
      });
    }, e.prototype.activateImpl = function(t) {
      var s = this;
      if (!this.adapter.isSurfaceDisabled()) {
        var a = this.activationState;
        if (!a.isActivated) {
          var r = this.previousActivationEvent, o = r && t !== void 0 && r.type !== t.type;
          if (!o) {
            a.isActivated = !0, a.isProgrammatic = t === void 0, a.activationEvent = t, a.wasActivatedByPointer = a.isProgrammatic ? !1 : t !== void 0 && (t.type === "mousedown" || t.type === "touchstart" || t.type === "pointerdown");
            var i = t !== void 0 && Rs.length > 0 && Rs.some(function(d) {
              return s.adapter.containsEventTarget(d);
            });
            if (i) {
              this.resetActivationState();
              return;
            }
            t !== void 0 && (Rs.push(t.target), this.registerDeactivationHandlers(t)), a.wasElementMadeActive = this.checkElementMadeActive(t), a.wasElementMadeActive && this.animateActivation(), requestAnimationFrame(function() {
              Rs = [], !a.wasElementMadeActive && t !== void 0 && (t.key === " " || t.keyCode === 32) && (a.wasElementMadeActive = s.checkElementMadeActive(t), a.wasElementMadeActive && s.animateActivation()), a.wasElementMadeActive || (s.activationState = s.defaultActivationState());
            });
          }
        }
      }
    }, e.prototype.checkElementMadeActive = function(t) {
      return t !== void 0 && t.type === "keydown" ? this.adapter.isSurfaceActive() : !0;
    }, e.prototype.animateActivation = function() {
      var t = this, s = e.strings, a = s.VAR_FG_TRANSLATE_START, r = s.VAR_FG_TRANSLATE_END, o = e.cssClasses, i = o.FG_DEACTIVATION, d = o.FG_ACTIVATION, c = e.numbers.DEACTIVATION_TIMEOUT_MS;
      this.layoutInternal();
      var l = "", C = "";
      if (!this.adapter.isUnbounded()) {
        var u = this.getFgTranslationCoordinates(), m = u.startPoint, p = u.endPoint;
        l = m.x + "px, " + m.y + "px", C = p.x + "px, " + p.y + "px";
      }
      this.adapter.updateCssVariable(a, l), this.adapter.updateCssVariable(r, C), clearTimeout(this.activationTimer), clearTimeout(this.fgDeactivationRemovalTimer), this.rmBoundedActivationClasses(), this.adapter.removeClass(i), this.adapter.computeBoundingRect(), this.adapter.addClass(d), this.activationTimer = setTimeout(function() {
        t.activationTimerCallback();
      }, c);
    }, e.prototype.getFgTranslationCoordinates = function() {
      var t = this.activationState, s = t.activationEvent, a = t.wasActivatedByPointer, r;
      a ? r = ul(s, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect()) : r = {
        x: this.frame.width / 2,
        y: this.frame.height / 2
      }, r = {
        x: r.x - this.initialSize / 2,
        y: r.y - this.initialSize / 2
      };
      var o = {
        x: this.frame.width / 2 - this.initialSize / 2,
        y: this.frame.height / 2 - this.initialSize / 2
      };
      return { startPoint: r, endPoint: o };
    }, e.prototype.runDeactivationUXLogicIfReady = function() {
      var t = this, s = e.cssClasses.FG_DEACTIVATION, a = this.activationState, r = a.hasDeactivationUXRun, o = a.isActivated, i = r || !o;
      i && this.activationAnimationHasEnded && (this.rmBoundedActivationClasses(), this.adapter.addClass(s), this.fgDeactivationRemovalTimer = setTimeout(function() {
        t.adapter.removeClass(s);
      }, qr.FG_DEACTIVATION_MS));
    }, e.prototype.rmBoundedActivationClasses = function() {
      var t = e.cssClasses.FG_ACTIVATION;
      this.adapter.removeClass(t), this.activationAnimationHasEnded = !1, this.adapter.computeBoundingRect();
    }, e.prototype.resetActivationState = function() {
      var t = this;
      this.previousActivationEvent = this.activationState.activationEvent, this.activationState = this.defaultActivationState(), setTimeout(function() {
        return t.previousActivationEvent = void 0;
      }, e.numbers.TAP_DELAY_MS);
    }, e.prototype.deactivateImpl = function() {
      var t = this, s = this.activationState;
      if (s.isActivated) {
        var a = et({}, s);
        s.isProgrammatic ? (requestAnimationFrame(function() {
          t.animateDeactivation(a);
        }), this.resetActivationState()) : (this.deregisterDeactivationHandlers(), requestAnimationFrame(function() {
          t.activationState.hasDeactivationUXRun = !0, t.animateDeactivation(a), t.resetActivationState();
        }));
      }
    }, e.prototype.animateDeactivation = function(t) {
      var s = t.wasActivatedByPointer, a = t.wasElementMadeActive;
      (s || a) && this.runDeactivationUXLogicIfReady();
    }, e.prototype.layoutInternal = function() {
      var t = this;
      this.frame = this.adapter.computeBoundingRect();
      var s = Math.max(this.frame.height, this.frame.width), a = function() {
        var o = Math.sqrt(Math.pow(t.frame.width, 2) + Math.pow(t.frame.height, 2));
        return o + e.numbers.PADDING;
      };
      this.maxRadius = this.adapter.isUnbounded() ? s : a();
      var r = Math.floor(s * e.numbers.INITIAL_ORIGIN_SCALE);
      this.adapter.isUnbounded() && r % 2 !== 0 ? this.initialSize = r - 1 : this.initialSize = r, this.fgScale = "" + this.maxRadius / this.initialSize, this.updateLayoutCssVars();
    }, e.prototype.updateLayoutCssVars = function() {
      var t = e.strings, s = t.VAR_FG_SIZE, a = t.VAR_LEFT, r = t.VAR_TOP, o = t.VAR_FG_SCALE;
      this.adapter.updateCssVariable(s, this.initialSize + "px"), this.adapter.updateCssVariable(o, this.fgScale), this.adapter.isUnbounded() && (this.unboundedCoords = {
        left: Math.round(this.frame.width / 2 - this.initialSize / 2),
        top: Math.round(this.frame.height / 2 - this.initialSize / 2)
      }, this.adapter.updateCssVariable(a, this.unboundedCoords.left + "px"), this.adapter.updateCssVariable(r, this.unboundedCoords.top + "px"));
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Na = "mdc-dom-focus-sentinel", Al = (
  /** @class */
  function() {
    function n(e, t) {
      t === void 0 && (t = {}), this.root = e, this.options = t, this.elFocusedBeforeTrapFocus = null;
    }
    return n.prototype.trapFocus = function() {
      var e = this.getFocusableElements(this.root);
      if (e.length === 0)
        throw new Error("FocusTrap: Element must have at least one focusable child.");
      this.elFocusedBeforeTrapFocus = document.activeElement instanceof HTMLElement ? document.activeElement : null, this.wrapTabFocus(this.root), this.options.skipInitialFocus || this.focusInitialElement(e, this.options.initialFocusEl);
    }, n.prototype.releaseFocus = function() {
      [].slice.call(this.root.querySelectorAll("." + Na)).forEach(function(e) {
        e.parentElement.removeChild(e);
      }), !this.options.skipRestoreFocus && this.elFocusedBeforeTrapFocus && this.elFocusedBeforeTrapFocus.focus();
    }, n.prototype.wrapTabFocus = function(e) {
      var t = this, s = this.createSentinel(), a = this.createSentinel();
      s.addEventListener("focus", function() {
        var r = t.getFocusableElements(e);
        r.length > 0 && r[r.length - 1].focus();
      }), a.addEventListener("focus", function() {
        var r = t.getFocusableElements(e);
        r.length > 0 && r[0].focus();
      }), e.insertBefore(s, e.children[0]), e.appendChild(a);
    }, n.prototype.focusInitialElement = function(e, t) {
      var s = 0;
      t && (s = Math.max(e.indexOf(t), 0)), e[s].focus();
    }, n.prototype.getFocusableElements = function(e) {
      var t = [].slice.call(e.querySelectorAll("[autofocus], [tabindex], a, input, textarea, select, button"));
      return t.filter(function(s) {
        var a = s.getAttribute("aria-disabled") === "true" || s.getAttribute("disabled") != null || s.getAttribute("hidden") != null || s.getAttribute("aria-hidden") === "true", r = s.tabIndex >= 0 && s.getBoundingClientRect().width > 0 && !s.classList.contains(Na) && !a, o = !1;
        if (r) {
          var i = getComputedStyle(s);
          o = i.display === "none" || i.visibility === "hidden";
        }
        return r && !o;
      });
    }, n.prototype.createSentinel = function() {
      var e = document.createElement("div");
      return e.setAttribute("tabindex", "0"), e.setAttribute("aria-hidden", "true"), e.classList.add(Na), e;
    }, n;
  }()
);
const El = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  FocusTrap: Al
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Xe = {
  UNKNOWN: "Unknown",
  BACKSPACE: "Backspace",
  ENTER: "Enter",
  SPACEBAR: "Spacebar",
  PAGE_UP: "PageUp",
  PAGE_DOWN: "PageDown",
  END: "End",
  HOME: "Home",
  ARROW_LEFT: "ArrowLeft",
  ARROW_UP: "ArrowUp",
  ARROW_RIGHT: "ArrowRight",
  ARROW_DOWN: "ArrowDown",
  DELETE: "Delete",
  ESCAPE: "Escape",
  TAB: "Tab"
}, Bt = /* @__PURE__ */ new Set();
Bt.add(Xe.BACKSPACE);
Bt.add(Xe.ENTER);
Bt.add(Xe.SPACEBAR);
Bt.add(Xe.PAGE_UP);
Bt.add(Xe.PAGE_DOWN);
Bt.add(Xe.END);
Bt.add(Xe.HOME);
Bt.add(Xe.ARROW_LEFT);
Bt.add(Xe.ARROW_UP);
Bt.add(Xe.ARROW_RIGHT);
Bt.add(Xe.ARROW_DOWN);
Bt.add(Xe.DELETE);
Bt.add(Xe.ESCAPE);
Bt.add(Xe.TAB);
var Xt = {
  BACKSPACE: 8,
  ENTER: 13,
  SPACEBAR: 32,
  PAGE_UP: 33,
  PAGE_DOWN: 34,
  END: 35,
  HOME: 36,
  ARROW_LEFT: 37,
  ARROW_UP: 38,
  ARROW_RIGHT: 39,
  ARROW_DOWN: 40,
  DELETE: 46,
  ESCAPE: 27,
  TAB: 9
}, Ut = /* @__PURE__ */ new Map();
Ut.set(Xt.BACKSPACE, Xe.BACKSPACE);
Ut.set(Xt.ENTER, Xe.ENTER);
Ut.set(Xt.SPACEBAR, Xe.SPACEBAR);
Ut.set(Xt.PAGE_UP, Xe.PAGE_UP);
Ut.set(Xt.PAGE_DOWN, Xe.PAGE_DOWN);
Ut.set(Xt.END, Xe.END);
Ut.set(Xt.HOME, Xe.HOME);
Ut.set(Xt.ARROW_LEFT, Xe.ARROW_LEFT);
Ut.set(Xt.ARROW_UP, Xe.ARROW_UP);
Ut.set(Xt.ARROW_RIGHT, Xe.ARROW_RIGHT);
Ut.set(Xt.ARROW_DOWN, Xe.ARROW_DOWN);
Ut.set(Xt.DELETE, Xe.DELETE);
Ut.set(Xt.ESCAPE, Xe.ESCAPE);
Ut.set(Xt.TAB, Xe.TAB);
var yn = /* @__PURE__ */ new Set();
yn.add(Xe.PAGE_UP);
yn.add(Xe.PAGE_DOWN);
yn.add(Xe.END);
yn.add(Xe.HOME);
yn.add(Xe.ARROW_LEFT);
yn.add(Xe.ARROW_UP);
yn.add(Xe.ARROW_RIGHT);
yn.add(Xe.ARROW_DOWN);
function Mt(n) {
  var e = n.key;
  if (Bt.has(e))
    return e;
  var t = Ut.get(n.keyCode);
  return t || Xe.UNKNOWN;
}
const { applyPassive: Fs } = Sd, { matches: Ol } = Ls;
function Yt(n, { ripple: e = !0, surface: t = !1, unbounded: s = !1, disabled: a = !1, color: r, active: o, rippleElement: i, eventTarget: d, activeTarget: c, addClass: l = (p) => n.classList.add(p), removeClass: C = (p) => n.classList.remove(p), addStyle: u = (p, D) => n.style.setProperty(p, D), initPromise: m = Promise.resolve() } = {}) {
  let p, D = Qe("SMUI:addLayoutListener"), _, A = o, b = d, S = c;
  function f() {
    t ? (l("mdc-ripple-surface"), r === "primary" ? (l("smui-ripple-surface--primary"), C("smui-ripple-surface--secondary")) : r === "secondary" ? (C("smui-ripple-surface--primary"), l("smui-ripple-surface--secondary")) : (C("smui-ripple-surface--primary"), C("smui-ripple-surface--secondary"))) : (C("mdc-ripple-surface"), C("smui-ripple-surface--primary"), C("smui-ripple-surface--secondary")), p && A !== o && (A = o, o ? p.activate() : o === !1 && p.deactivate()), e && !p ? (p = new fl({
      addClass: l,
      browserSupportsCssVars: () => Cl(window),
      computeBoundingRect: () => (i || n).getBoundingClientRect(),
      containsEventTarget: (y) => n.contains(y),
      deregisterDocumentInteractionHandler: (y, I) => document.documentElement.removeEventListener(y, I, Fs()),
      deregisterInteractionHandler: (y, I) => (d || n).removeEventListener(y, I, Fs()),
      deregisterResizeHandler: (y) => window.removeEventListener("resize", y),
      getWindowPageOffset: () => ({
        x: window.pageXOffset,
        y: window.pageYOffset
      }),
      isSurfaceActive: () => o ?? Ol(c || n, ":active"),
      isSurfaceDisabled: () => !!a,
      isUnbounded: () => !!s,
      registerDocumentInteractionHandler: (y, I) => document.documentElement.addEventListener(y, I, Fs()),
      registerInteractionHandler: (y, I) => (d || n).addEventListener(y, I, Fs()),
      registerResizeHandler: (y) => window.addEventListener("resize", y),
      removeClass: C,
      updateCssVariable: u
    }), m.then(() => {
      p && (p.init(), p.setUnbounded(s));
    })) : p && !e && m.then(() => {
      p && (p.destroy(), p = void 0);
    }), p && (b !== d || S !== c) && (b = d, S = c, p.destroy(), requestAnimationFrame(() => {
      p && (p.init(), p.setUnbounded(s));
    })), !e && s && l("mdc-ripple-upgraded--unbounded");
  }
  f(), D && (_ = D(E));
  function E() {
    p && p.layout();
  }
  return {
    update(y) {
      ({
        ripple: e,
        surface: t,
        unbounded: s,
        disabled: a,
        color: r,
        active: o,
        rippleElement: i,
        eventTarget: d,
        activeTarget: c,
        addClass: l,
        removeClass: C,
        addStyle: u,
        initPromise: m
      } = Object.assign({ ripple: !0, surface: !1, unbounded: !1, disabled: !1, color: void 0, active: void 0, rippleElement: void 0, eventTarget: void 0, activeTarget: void 0, addClass: (I) => n.classList.add(I), removeClass: (I) => n.classList.remove(I), addStyle: (I, N) => n.style.setProperty(I, N), initPromise: Promise.resolve() }, y)), f();
    },
    destroy() {
      p && (p.destroy(), p = void 0, C("mdc-ripple-surface"), C("smui-ripple-surface--primary"), C("smui-ripple-surface--secondary")), _ && _();
    }
  };
}
function Sl(n) {
  let e;
  const t = (
    /*#slots*/
    n[10].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[12],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r & /*$$scope*/
      4096) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[12],
        e ? ve(
          t,
          /*$$scope*/
          a[12],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[12]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function Ll(n) {
  let e, t, s;
  const a = [
    { tag: (
      /*tag*/
      n[3]
    ) },
    {
      use: [
        /*forwardEvents*/
        n[5],
        .../*use*/
        n[0]
      ]
    },
    {
      class: le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-button__label": (
          /*context*/
          n[6] === "button"
        ),
        "mdc-fab__label": (
          /*context*/
          n[6] === "fab"
        ),
        "mdc-tab__text-label": (
          /*context*/
          n[6] === "tab"
        ),
        "mdc-image-list__label": (
          /*context*/
          n[6] === "image-list"
        ),
        "mdc-snackbar__label": (
          /*context*/
          n[6] === "snackbar"
        ),
        "mdc-banner__text": (
          /*context*/
          n[6] === "banner"
        ),
        "mdc-segmented-button__label": (
          /*context*/
          n[6] === "segmented-button"
        ),
        "mdc-data-table__pagination-rows-per-page-label": (
          /*context*/
          n[6] === "data-table:pagination"
        ),
        "mdc-data-table__header-cell-label": (
          /*context*/
          n[6] === "data-table:sortable-header-cell"
        )
      })
    },
    /*context*/
    n[6] === "snackbar" ? { "aria-atomic": "false" } : {},
    { tabindex: (
      /*tabindex*/
      n[7]
    ) },
    /*$$restProps*/
    n[8]
  ];
  var r = (
    /*component*/
    n[2]
  );
  function o(i, d) {
    let c = {
      $$slots: { default: [Sl] },
      $$scope: { ctx: i }
    };
    for (let l = 0; l < a.length; l += 1)
      c = te(c, a[l]);
    return d !== void 0 && d & /*tag, forwardEvents, use, className, context, tabindex, $$restProps*/
    491 && (c = te(c, Ee(a, [
      d & /*tag*/
      8 && { tag: (
        /*tag*/
        i[3]
      ) },
      d & /*forwardEvents, use*/
      33 && {
        use: [
          /*forwardEvents*/
          i[5],
          .../*use*/
          i[0]
        ]
      },
      d & /*className, context*/
      66 && {
        class: le({
          [
            /*className*/
            i[1]
          ]: !0,
          "mdc-button__label": (
            /*context*/
            i[6] === "button"
          ),
          "mdc-fab__label": (
            /*context*/
            i[6] === "fab"
          ),
          "mdc-tab__text-label": (
            /*context*/
            i[6] === "tab"
          ),
          "mdc-image-list__label": (
            /*context*/
            i[6] === "image-list"
          ),
          "mdc-snackbar__label": (
            /*context*/
            i[6] === "snackbar"
          ),
          "mdc-banner__text": (
            /*context*/
            i[6] === "banner"
          ),
          "mdc-segmented-button__label": (
            /*context*/
            i[6] === "segmented-button"
          ),
          "mdc-data-table__pagination-rows-per-page-label": (
            /*context*/
            i[6] === "data-table:pagination"
          ),
          "mdc-data-table__header-cell-label": (
            /*context*/
            i[6] === "data-table:sortable-header-cell"
          )
        })
      },
      d & /*context*/
      64 && Ne(
        /*context*/
        i[6] === "snackbar" ? { "aria-atomic": "false" } : {}
      ),
      d & /*tabindex*/
      128 && { tabindex: (
        /*tabindex*/
        i[7]
      ) },
      d & /*$$restProps*/
      256 && Ne(
        /*$$restProps*/
        i[8]
      )
    ]))), { props: c };
  }
  return r && (e = Gt(r, o(n)), n[11](e)), {
    c() {
      e && X(e.$$.fragment), t = st();
    },
    m(i, d) {
      e && q(e, i, d), G(i, t, d), s = !0;
    },
    p(i, [d]) {
      if (d & /*component*/
      4 && r !== (r = /*component*/
      i[2])) {
        if (e) {
          he();
          const c = e;
          h(c.$$.fragment, 1, 0, () => {
            z(c, 1);
          }), ye();
        }
        r ? (e = Gt(r, o(i, d)), i[11](e), X(e.$$.fragment), L(e.$$.fragment, 1), q(e, t.parentNode, t)) : e = null;
      } else if (r) {
        const c = d & /*tag, forwardEvents, use, className, context, tabindex, $$restProps*/
        491 ? Ee(a, [
          d & /*tag*/
          8 && { tag: (
            /*tag*/
            i[3]
          ) },
          d & /*forwardEvents, use*/
          33 && {
            use: [
              /*forwardEvents*/
              i[5],
              .../*use*/
              i[0]
            ]
          },
          d & /*className, context*/
          66 && {
            class: le({
              [
                /*className*/
                i[1]
              ]: !0,
              "mdc-button__label": (
                /*context*/
                i[6] === "button"
              ),
              "mdc-fab__label": (
                /*context*/
                i[6] === "fab"
              ),
              "mdc-tab__text-label": (
                /*context*/
                i[6] === "tab"
              ),
              "mdc-image-list__label": (
                /*context*/
                i[6] === "image-list"
              ),
              "mdc-snackbar__label": (
                /*context*/
                i[6] === "snackbar"
              ),
              "mdc-banner__text": (
                /*context*/
                i[6] === "banner"
              ),
              "mdc-segmented-button__label": (
                /*context*/
                i[6] === "segmented-button"
              ),
              "mdc-data-table__pagination-rows-per-page-label": (
                /*context*/
                i[6] === "data-table:pagination"
              ),
              "mdc-data-table__header-cell-label": (
                /*context*/
                i[6] === "data-table:sortable-header-cell"
              )
            })
          },
          d & /*context*/
          64 && Ne(
            /*context*/
            i[6] === "snackbar" ? { "aria-atomic": "false" } : {}
          ),
          d & /*tabindex*/
          128 && { tabindex: (
            /*tabindex*/
            i[7]
          ) },
          d & /*$$restProps*/
          256 && Ne(
            /*$$restProps*/
            i[8]
          )
        ]) : {};
        d & /*$$scope*/
        4096 && (c.$$scope = { dirty: d, ctx: i }), e.$set(c);
      }
    },
    i(i) {
      s || (e && L(e.$$.fragment, i), s = !0);
    },
    o(i) {
      e && h(e.$$.fragment, i), s = !1;
    },
    d(i) {
      i && F(t), n[11](null), e && z(e, i);
    }
  };
}
function gl(n, e, t) {
  const s = ["use", "class", "component", "tag", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  const i = lt(tt());
  let { use: d = [] } = e, { class: c = "" } = e, l, { component: C = tn } = e, { tag: u = C === tn ? "span" : void 0 } = e;
  const m = Qe("SMUI:label:context"), p = Qe("SMUI:label:tabindex");
  function D() {
    return l.getElement();
  }
  function _(A) {
    de[A ? "unshift" : "push"](() => {
      l = A, t(4, l);
    });
  }
  return n.$$set = (A) => {
    e = te(te({}, e), ct(A)), t(8, a = Te(e, s)), "use" in A && t(0, d = A.use), "class" in A && t(1, c = A.class), "component" in A && t(2, C = A.component), "tag" in A && t(3, u = A.tag), "$$scope" in A && t(12, o = A.$$scope);
  }, [
    d,
    c,
    C,
    u,
    l,
    i,
    m,
    p,
    a,
    D,
    r,
    _,
    o
  ];
}
class ur extends me {
  constructor(e) {
    super(), ue(this, e, gl, Ll, Ce, {
      use: 0,
      class: 1,
      component: 2,
      tag: 3,
      getElement: 9
    });
  }
  get getElement() {
    return this.$$.ctx[9];
  }
}
function hl(n) {
  let e = (
    /*tag*/
    n[1]
  ), t, s, a = (
    /*tag*/
    n[1] && Ta(n)
  );
  return {
    c() {
      a && a.c(), t = st();
    },
    m(r, o) {
      a && a.m(r, o), G(r, t, o), s = !0;
    },
    p(r, o) {
      /*tag*/
      r[1] ? e ? Ce(
        e,
        /*tag*/
        r[1]
      ) ? (a.d(1), a = Ta(r), e = /*tag*/
      r[1], a.c(), a.m(t.parentNode, t)) : a.p(r, o) : (a = Ta(r), e = /*tag*/
      r[1], a.c(), a.m(t.parentNode, t)) : e && (a.d(1), a = null, e = /*tag*/
      r[1]);
    },
    i(r) {
      s || (L(a, r), s = !0);
    },
    o(r) {
      h(a, r), s = !1;
    },
    d(r) {
      r && F(t), a && a.d(r);
    }
  };
}
function yl(n) {
  let e = (
    /*tag*/
    n[1]
  ), t, s = (
    /*tag*/
    n[1] && Pa(n)
  );
  return {
    c() {
      s && s.c(), t = st();
    },
    m(a, r) {
      s && s.m(a, r), G(a, t, r);
    },
    p(a, r) {
      /*tag*/
      a[1] ? e ? Ce(
        e,
        /*tag*/
        a[1]
      ) ? (s.d(1), s = Pa(a), e = /*tag*/
      a[1], s.c(), s.m(t.parentNode, t)) : s.p(a, r) : (s = Pa(a), e = /*tag*/
      a[1], s.c(), s.m(t.parentNode, t)) : e && (s.d(1), s = null, e = /*tag*/
      a[1]);
    },
    i: Le,
    o: Le,
    d(a) {
      a && F(t), s && s.d(a);
    }
  };
}
function Nl(n) {
  let e, t, s, a, r;
  const o = (
    /*#slots*/
    n[8].default
  ), i = Pe(
    o,
    n,
    /*$$scope*/
    n[7],
    null
  );
  let d = [
    /*$$restProps*/
    n[5]
  ], c = {};
  for (let l = 0; l < d.length; l += 1)
    c = te(c, d[l]);
  return {
    c() {
      e = Ct("svg"), i && i.c(), Ur(e, c);
    },
    m(l, C) {
      G(l, e, C), i && i.m(e, null), n[9](e), s = !0, a || (r = [
        De(t = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[4].call(null, e)
        )
      ], a = !0);
    },
    p(l, C) {
      i && i.p && (!s || C & /*$$scope*/
      128) && Me(
        i,
        o,
        l,
        /*$$scope*/
        l[7],
        s ? ve(
          o,
          /*$$scope*/
          l[7],
          C,
          null
        ) : Re(
          /*$$scope*/
          l[7]
        ),
        null
      ), Ur(e, c = Ee(d, [C & /*$$restProps*/
      32 && /*$$restProps*/
      l[5]])), t && Fe(t.update) && C & /*use*/
      1 && t.update.call(
        null,
        /*use*/
        l[0]
      );
    },
    i(l) {
      s || (L(i, l), s = !0);
    },
    o(l) {
      h(i, l), s = !1;
    },
    d(l) {
      l && F(e), i && i.d(l), n[9](null), a = !1, ze(r);
    }
  };
}
function Ta(n) {
  let e, t, s, a, r;
  const o = (
    /*#slots*/
    n[8].default
  ), i = Pe(
    o,
    n,
    /*$$scope*/
    n[7],
    null
  );
  let d = [
    /*$$restProps*/
    n[5]
  ], c = {};
  for (let l = 0; l < d.length; l += 1)
    c = te(c, d[l]);
  return {
    c() {
      e = Z(
        /*tag*/
        n[1]
      ), i && i.c(), qs(
        /*tag*/
        n[1]
      )(e, c);
    },
    m(l, C) {
      G(l, e, C), i && i.m(e, null), n[11](e), s = !0, a || (r = [
        De(t = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[4].call(null, e)
        )
      ], a = !0);
    },
    p(l, C) {
      i && i.p && (!s || C & /*$$scope*/
      128) && Me(
        i,
        o,
        l,
        /*$$scope*/
        l[7],
        s ? ve(
          o,
          /*$$scope*/
          l[7],
          C,
          null
        ) : Re(
          /*$$scope*/
          l[7]
        ),
        null
      ), qs(
        /*tag*/
        l[1]
      )(e, c = Ee(d, [C & /*$$restProps*/
      32 && /*$$restProps*/
      l[5]])), t && Fe(t.update) && C & /*use*/
      1 && t.update.call(
        null,
        /*use*/
        l[0]
      );
    },
    i(l) {
      s || (L(i, l), s = !0);
    },
    o(l) {
      h(i, l), s = !1;
    },
    d(l) {
      l && F(e), i && i.d(l), n[11](null), a = !1, ze(r);
    }
  };
}
function Pa(n) {
  let e, t, s, a, r = [
    /*$$restProps*/
    n[5]
  ], o = {};
  for (let i = 0; i < r.length; i += 1)
    o = te(o, r[i]);
  return {
    c() {
      e = Z(
        /*tag*/
        n[1]
      ), qs(
        /*tag*/
        n[1]
      )(e, o);
    },
    m(i, d) {
      G(i, e, d), n[10](e), s || (a = [
        De(t = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[4].call(null, e)
        )
      ], s = !0);
    },
    p(i, d) {
      qs(
        /*tag*/
        i[1]
      )(e, o = Ee(r, [d & /*$$restProps*/
      32 && /*$$restProps*/
      i[5]])), t && Fe(t.update) && d & /*use*/
      1 && t.update.call(
        null,
        /*use*/
        i[0]
      );
    },
    d(i) {
      i && F(e), n[10](null), s = !1, ze(a);
    }
  };
}
function Tl(n) {
  let e, t, s, a;
  const r = [Nl, yl, hl], o = [];
  function i(d, c) {
    return (
      /*tag*/
      d[1] === "svg" ? 0 : (
        /*selfClosing*/
        d[3] ? 1 : 2
      )
    );
  }
  return e = i(n), t = o[e] = r[e](n), {
    c() {
      t.c(), s = st();
    },
    m(d, c) {
      o[e].m(d, c), G(d, s, c), a = !0;
    },
    p(d, [c]) {
      let l = e;
      e = i(d), e === l ? o[e].p(d, c) : (he(), h(o[l], 1, 1, () => {
        o[l] = null;
      }), ye(), t = o[e], t ? t.p(d, c) : (t = o[e] = r[e](d), t.c()), L(t, 1), t.m(s.parentNode, s));
    },
    i(d) {
      a || (L(t), a = !0);
    },
    o(d) {
      h(t), a = !1;
    },
    d(d) {
      d && F(s), o[e].d(d);
    }
  };
}
function Pl(n, e, t) {
  let s;
  const a = ["use", "tag", "getElement"];
  let r = Te(e, a), { $$slots: o = {}, $$scope: i } = e, { use: d = [] } = e, { tag: c } = e;
  const l = lt(tt());
  let C;
  function u() {
    return C;
  }
  function m(_) {
    de[_ ? "unshift" : "push"](() => {
      C = _, t(2, C);
    });
  }
  function p(_) {
    de[_ ? "unshift" : "push"](() => {
      C = _, t(2, C);
    });
  }
  function D(_) {
    de[_ ? "unshift" : "push"](() => {
      C = _, t(2, C);
    });
  }
  return n.$$set = (_) => {
    e = te(te({}, e), ct(_)), t(5, r = Te(e, a)), "use" in _ && t(0, d = _.use), "tag" in _ && t(1, c = _.tag), "$$scope" in _ && t(7, i = _.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty & /*tag*/
    2 && t(3, s = [
      "area",
      "base",
      "br",
      "col",
      "embed",
      "hr",
      "img",
      "input",
      "link",
      "meta",
      "param",
      "source",
      "track",
      "wbr"
    ].indexOf(c) > -1);
  }, [
    d,
    c,
    C,
    s,
    l,
    r,
    u,
    i,
    o,
    m,
    p,
    D
  ];
}
class tn extends me {
  constructor(e) {
    super(), ue(this, e, Pl, Tl, Ce, { use: 0, tag: 1, getElement: 6 });
  }
  get getElement() {
    return this.$$.ctx[6];
  }
}
const Hn = [];
function vl(n, e) {
  return {
    subscribe: Ft(n, e).subscribe
  };
}
function Ft(n, e = Le) {
  let t;
  const s = /* @__PURE__ */ new Set();
  function a(i) {
    if (Ce(n, i) && (n = i, t)) {
      const d = !Hn.length;
      for (const c of s)
        c[1](), Hn.push(c, n);
      if (d) {
        for (let c = 0; c < Hn.length; c += 2)
          Hn[c][0](Hn[c + 1]);
        Hn.length = 0;
      }
    }
  }
  function r(i) {
    a(i(n));
  }
  function o(i, d = Le) {
    const c = [i, d];
    return s.add(c), s.size === 1 && (t = e(a, r) || Le), i(n), () => {
      s.delete(c), s.size === 0 && t && (t(), t = null);
    };
  }
  return { set: a, update: r, subscribe: o };
}
function Zn(n, e, t) {
  const s = !Array.isArray(n), a = s ? [n] : n;
  if (!a.every(Boolean))
    throw new Error("derived() expects stores as input, got a falsy value");
  const r = e.length < 2;
  return vl(t, (o, i) => {
    let d = !1;
    const c = [];
    let l = 0, C = Le;
    const u = () => {
      if (l)
        return;
      C();
      const p = e(s ? c[0] : c, o, i);
      r ? o(p) : C = Fe(p) ? p : Le;
    }, m = a.map(
      (p, D) => ir(
        p,
        (_) => {
          c[D] = _, l &= ~(1 << D), d && u();
        },
        () => {
          l |= 1 << D;
        }
      )
    );
    return d = !0, u(), function() {
      ze(m), C(), d = !1;
    };
  });
}
function Ml(n) {
  let e;
  const t = (
    /*#slots*/
    n[4].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[3],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, [r]) {
      s && s.p && (!e || r & /*$$scope*/
      8) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[3],
        e ? ve(
          t,
          /*$$scope*/
          a[3],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[3]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function Rl(n, e, t) {
  let s, { $$slots: a = {}, $$scope: r } = e, { key: o } = e, { value: i } = e;
  const d = Ft(i);
  return Ye(n, d, (c) => t(5, s = c)), qe(o, d), an(() => {
    d.set(void 0);
  }), n.$$set = (c) => {
    "key" in c && t(1, o = c.key), "value" in c && t(2, i = c.value), "$$scope" in c && t(3, r = c.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty & /*value*/
    4 && Fn(d, s = i, s);
  }, [d, o, i, r, a];
}
class Qs extends me {
  constructor(e) {
    super(), ue(this, e, Rl, Ml, Ce, { key: 1, value: 2 });
  }
}
function Zr(n) {
  let e;
  return {
    c() {
      e = Z("div"), R(e, "class", "mdc-button__touch");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function Fl(n) {
  let e, t, s, a;
  const r = (
    /*#slots*/
    n[28].default
  ), o = Pe(
    r,
    n,
    /*$$scope*/
    n[30],
    null
  );
  let i = (
    /*touch*/
    n[6] && Zr()
  );
  return {
    c() {
      e = Z("div"), t = $(), o && o.c(), i && i.c(), s = st(), R(e, "class", "mdc-button__ripple");
    },
    m(d, c) {
      G(d, e, c), G(d, t, c), o && o.m(d, c), i && i.m(d, c), G(d, s, c), a = !0;
    },
    p(d, c) {
      o && o.p && (!a || c[0] & /*$$scope*/
      1073741824) && Me(
        o,
        r,
        d,
        /*$$scope*/
        d[30],
        a ? ve(
          r,
          /*$$scope*/
          d[30],
          c,
          null
        ) : Re(
          /*$$scope*/
          d[30]
        ),
        null
      ), /*touch*/
      d[6] ? i || (i = Zr(), i.c(), i.m(s.parentNode, s)) : i && (i.d(1), i = null);
    },
    i(d) {
      a || (L(o, d), a = !0);
    },
    o(d) {
      h(o, d), a = !1;
    },
    d(d) {
      d && (F(e), F(t), F(s)), o && o.d(d), i && i.d(d);
    }
  };
}
function Gl(n) {
  let e, t, s;
  const a = [
    { tag: (
      /*tag*/
      n[10]
    ) },
    {
      use: [
        [
          Yt,
          {
            ripple: (
              /*ripple*/
              n[3]
            ),
            unbounded: !1,
            color: (
              /*color*/
              n[4]
            ),
            disabled: !!/*$$restProps*/
            n[23].disabled,
            addClass: (
              /*addClass*/
              n[19]
            ),
            removeClass: (
              /*removeClass*/
              n[20]
            ),
            addStyle: (
              /*addStyle*/
              n[21]
            )
          }
        ],
        /*forwardEvents*/
        n[17],
        .../*use*/
        n[0]
      ]
    },
    {
      class: le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-button": !0,
        "mdc-button--raised": (
          /*variant*/
          n[5] === "raised"
        ),
        "mdc-button--unelevated": (
          /*variant*/
          n[5] === "unelevated"
        ),
        "mdc-button--outlined": (
          /*variant*/
          n[5] === "outlined"
        ),
        "smui-button--color-secondary": (
          /*color*/
          n[4] === "secondary"
        ),
        "mdc-button--touch": (
          /*touch*/
          n[6]
        ),
        "mdc-card__action": (
          /*context*/
          n[18] === "card:action"
        ),
        "mdc-card__action--button": (
          /*context*/
          n[18] === "card:action"
        ),
        "mdc-dialog__button": (
          /*context*/
          n[18] === "dialog:action"
        ),
        "mdc-top-app-bar__navigation-icon": (
          /*context*/
          n[18] === "top-app-bar:navigation"
        ),
        "mdc-top-app-bar__action-item": (
          /*context*/
          n[18] === "top-app-bar:action"
        ),
        "mdc-snackbar__action": (
          /*context*/
          n[18] === "snackbar:actions"
        ),
        "mdc-banner__secondary-action": (
          /*context*/
          n[18] === "banner" && /*secondary*/
          n[8]
        ),
        "mdc-banner__primary-action": (
          /*context*/
          n[18] === "banner" && !/*secondary*/
          n[8]
        ),
        "mdc-tooltip__action": (
          /*context*/
          n[18] === "tooltip:rich-actions"
        ),
        .../*internalClasses*/
        n[12]
      })
    },
    {
      style: Object.entries(
        /*internalStyles*/
        n[13]
      ).map(va).concat([
        /*style*/
        n[2]
      ]).join(" ")
    },
    /*actionProp*/
    n[16],
    /*defaultProp*/
    n[15],
    /*secondaryProp*/
    n[14],
    { href: (
      /*href*/
      n[7]
    ) },
    /*$$restProps*/
    n[23]
  ];
  var r = (
    /*component*/
    n[9]
  );
  function o(i, d) {
    let c = {
      $$slots: { default: [Fl] },
      $$scope: { ctx: i }
    };
    for (let l = 0; l < a.length; l += 1)
      c = te(c, a[l]);
    return d !== void 0 && d[0] & /*tag, ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use, className, variant, touch, context, secondary, internalClasses, internalStyles, style, actionProp, defaultProp, secondaryProp, href*/
    12580351 && (c = te(c, Ee(a, [
      d[0] & /*tag*/
      1024 && { tag: (
        /*tag*/
        i[10]
      ) },
      d[0] & /*ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use*/
      12189721 && {
        use: [
          [
            Yt,
            {
              ripple: (
                /*ripple*/
                i[3]
              ),
              unbounded: !1,
              color: (
                /*color*/
                i[4]
              ),
              disabled: !!/*$$restProps*/
              i[23].disabled,
              addClass: (
                /*addClass*/
                i[19]
              ),
              removeClass: (
                /*removeClass*/
                i[20]
              ),
              addStyle: (
                /*addStyle*/
                i[21]
              )
            }
          ],
          /*forwardEvents*/
          i[17],
          .../*use*/
          i[0]
        ]
      },
      d[0] & /*className, variant, color, touch, context, secondary, internalClasses*/
      266610 && {
        class: le({
          [
            /*className*/
            i[1]
          ]: !0,
          "mdc-button": !0,
          "mdc-button--raised": (
            /*variant*/
            i[5] === "raised"
          ),
          "mdc-button--unelevated": (
            /*variant*/
            i[5] === "unelevated"
          ),
          "mdc-button--outlined": (
            /*variant*/
            i[5] === "outlined"
          ),
          "smui-button--color-secondary": (
            /*color*/
            i[4] === "secondary"
          ),
          "mdc-button--touch": (
            /*touch*/
            i[6]
          ),
          "mdc-card__action": (
            /*context*/
            i[18] === "card:action"
          ),
          "mdc-card__action--button": (
            /*context*/
            i[18] === "card:action"
          ),
          "mdc-dialog__button": (
            /*context*/
            i[18] === "dialog:action"
          ),
          "mdc-top-app-bar__navigation-icon": (
            /*context*/
            i[18] === "top-app-bar:navigation"
          ),
          "mdc-top-app-bar__action-item": (
            /*context*/
            i[18] === "top-app-bar:action"
          ),
          "mdc-snackbar__action": (
            /*context*/
            i[18] === "snackbar:actions"
          ),
          "mdc-banner__secondary-action": (
            /*context*/
            i[18] === "banner" && /*secondary*/
            i[8]
          ),
          "mdc-banner__primary-action": (
            /*context*/
            i[18] === "banner" && !/*secondary*/
            i[8]
          ),
          "mdc-tooltip__action": (
            /*context*/
            i[18] === "tooltip:rich-actions"
          ),
          .../*internalClasses*/
          i[12]
        })
      },
      d[0] & /*internalStyles, style*/
      8196 && {
        style: Object.entries(
          /*internalStyles*/
          i[13]
        ).map(va).concat([
          /*style*/
          i[2]
        ]).join(" ")
      },
      d[0] & /*actionProp*/
      65536 && Ne(
        /*actionProp*/
        i[16]
      ),
      d[0] & /*defaultProp*/
      32768 && Ne(
        /*defaultProp*/
        i[15]
      ),
      d[0] & /*secondaryProp*/
      16384 && Ne(
        /*secondaryProp*/
        i[14]
      ),
      d[0] & /*href*/
      128 && { href: (
        /*href*/
        i[7]
      ) },
      d[0] & /*$$restProps*/
      8388608 && Ne(
        /*$$restProps*/
        i[23]
      )
    ]))), { props: c };
  }
  return r && (e = Gt(r, o(n)), n[29](e), e.$on(
    "click",
    /*handleClick*/
    n[22]
  )), {
    c() {
      e && X(e.$$.fragment), t = st();
    },
    m(i, d) {
      e && q(e, i, d), G(i, t, d), s = !0;
    },
    p(i, d) {
      if (d[0] & /*component*/
      512 && r !== (r = /*component*/
      i[9])) {
        if (e) {
          he();
          const c = e;
          h(c.$$.fragment, 1, 0, () => {
            z(c, 1);
          }), ye();
        }
        r ? (e = Gt(r, o(i, d)), i[29](e), e.$on(
          "click",
          /*handleClick*/
          i[22]
        ), X(e.$$.fragment), L(e.$$.fragment, 1), q(e, t.parentNode, t)) : e = null;
      } else if (r) {
        const c = d[0] & /*tag, ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use, className, variant, touch, context, secondary, internalClasses, internalStyles, style, actionProp, defaultProp, secondaryProp, href*/
        12580351 ? Ee(a, [
          d[0] & /*tag*/
          1024 && { tag: (
            /*tag*/
            i[10]
          ) },
          d[0] & /*ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use*/
          12189721 && {
            use: [
              [
                Yt,
                {
                  ripple: (
                    /*ripple*/
                    i[3]
                  ),
                  unbounded: !1,
                  color: (
                    /*color*/
                    i[4]
                  ),
                  disabled: !!/*$$restProps*/
                  i[23].disabled,
                  addClass: (
                    /*addClass*/
                    i[19]
                  ),
                  removeClass: (
                    /*removeClass*/
                    i[20]
                  ),
                  addStyle: (
                    /*addStyle*/
                    i[21]
                  )
                }
              ],
              /*forwardEvents*/
              i[17],
              .../*use*/
              i[0]
            ]
          },
          d[0] & /*className, variant, color, touch, context, secondary, internalClasses*/
          266610 && {
            class: le({
              [
                /*className*/
                i[1]
              ]: !0,
              "mdc-button": !0,
              "mdc-button--raised": (
                /*variant*/
                i[5] === "raised"
              ),
              "mdc-button--unelevated": (
                /*variant*/
                i[5] === "unelevated"
              ),
              "mdc-button--outlined": (
                /*variant*/
                i[5] === "outlined"
              ),
              "smui-button--color-secondary": (
                /*color*/
                i[4] === "secondary"
              ),
              "mdc-button--touch": (
                /*touch*/
                i[6]
              ),
              "mdc-card__action": (
                /*context*/
                i[18] === "card:action"
              ),
              "mdc-card__action--button": (
                /*context*/
                i[18] === "card:action"
              ),
              "mdc-dialog__button": (
                /*context*/
                i[18] === "dialog:action"
              ),
              "mdc-top-app-bar__navigation-icon": (
                /*context*/
                i[18] === "top-app-bar:navigation"
              ),
              "mdc-top-app-bar__action-item": (
                /*context*/
                i[18] === "top-app-bar:action"
              ),
              "mdc-snackbar__action": (
                /*context*/
                i[18] === "snackbar:actions"
              ),
              "mdc-banner__secondary-action": (
                /*context*/
                i[18] === "banner" && /*secondary*/
                i[8]
              ),
              "mdc-banner__primary-action": (
                /*context*/
                i[18] === "banner" && !/*secondary*/
                i[8]
              ),
              "mdc-tooltip__action": (
                /*context*/
                i[18] === "tooltip:rich-actions"
              ),
              .../*internalClasses*/
              i[12]
            })
          },
          d[0] & /*internalStyles, style*/
          8196 && {
            style: Object.entries(
              /*internalStyles*/
              i[13]
            ).map(va).concat([
              /*style*/
              i[2]
            ]).join(" ")
          },
          d[0] & /*actionProp*/
          65536 && Ne(
            /*actionProp*/
            i[16]
          ),
          d[0] & /*defaultProp*/
          32768 && Ne(
            /*defaultProp*/
            i[15]
          ),
          d[0] & /*secondaryProp*/
          16384 && Ne(
            /*secondaryProp*/
            i[14]
          ),
          d[0] & /*href*/
          128 && { href: (
            /*href*/
            i[7]
          ) },
          d[0] & /*$$restProps*/
          8388608 && Ne(
            /*$$restProps*/
            i[23]
          )
        ]) : {};
        d[0] & /*$$scope, touch*/
        1073741888 && (c.$$scope = { dirty: d, ctx: i }), e.$set(c);
      }
    },
    i(i) {
      s || (e && L(e.$$.fragment, i), s = !0);
    },
    o(i) {
      e && h(e.$$.fragment, i), s = !1;
    },
    d(i) {
      i && F(t), n[29](null), e && z(e, i);
    }
  };
}
const va = ([n, e]) => `${n}: ${e};`;
function Vl(n, e, t) {
  let s, a, r;
  const o = [
    "use",
    "class",
    "style",
    "ripple",
    "color",
    "variant",
    "touch",
    "href",
    "action",
    "defaultAction",
    "secondary",
    "component",
    "tag",
    "getElement"
  ];
  let i = Te(e, o), { $$slots: d = {}, $$scope: c } = e;
  const l = lt(tt());
  let { use: C = [] } = e, { class: u = "" } = e, { style: m = "" } = e, { ripple: p = !0 } = e, { color: D = "primary" } = e, { variant: _ = "text" } = e, { touch: A = !1 } = e, { href: b = void 0 } = e, { action: S = "close" } = e, { defaultAction: f = !1 } = e, { secondary: E = !1 } = e, y, I = {}, N = {}, j = Qe("SMUI:button:context"), { component: v = tn } = e, { tag: O = v === tn ? b == null ? "button" : "a" : void 0 } = e, M = i.disabled;
  qe("SMUI:label:context", "button"), qe("SMUI:icon:context", "button");
  function P(T) {
    I[T] || t(12, I[T] = !0, I);
  }
  function g(T) {
    (!(T in I) || I[T]) && t(12, I[T] = !1, I);
  }
  function W(T, Y) {
    N[T] != Y && (Y === "" || Y == null ? (delete N[T], t(13, N)) : t(13, N[T] = Y, N));
  }
  function B() {
    j === "banner" && Oe(H(), E ? "SMUIBannerButton:secondaryActionClick" : "SMUIBannerButton:primaryActionClick");
  }
  function H() {
    return y.getElement();
  }
  function w(T) {
    de[T ? "unshift" : "push"](() => {
      y = T, t(11, y);
    });
  }
  return n.$$set = (T) => {
    t(31, e = te(te({}, e), ct(T))), t(23, i = Te(e, o)), "use" in T && t(0, C = T.use), "class" in T && t(1, u = T.class), "style" in T && t(2, m = T.style), "ripple" in T && t(3, p = T.ripple), "color" in T && t(4, D = T.color), "variant" in T && t(5, _ = T.variant), "touch" in T && t(6, A = T.touch), "href" in T && t(7, b = T.href), "action" in T && t(24, S = T.action), "defaultAction" in T && t(25, f = T.defaultAction), "secondary" in T && t(8, E = T.secondary), "component" in T && t(9, v = T.component), "tag" in T && t(10, O = T.tag), "$$scope" in T && t(30, c = T.$$scope);
  }, n.$$.update = () => {
    if (t(16, s = j === "dialog:action" && S != null ? { "data-mdc-dialog-action": S } : { action: e.action }), t(15, a = j === "dialog:action" && f ? { "data-mdc-dialog-button-default": "" } : { default: e.default }), t(14, r = j === "banner" ? {} : { secondary: e.secondary }), M !== i.disabled) {
      if (y) {
        const T = H();
        "blur" in T && T.blur();
      }
      t(27, M = i.disabled);
    }
  }, e = ct(e), [
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    b,
    E,
    v,
    O,
    y,
    I,
    N,
    r,
    a,
    s,
    l,
    j,
    P,
    g,
    W,
    B,
    i,
    S,
    f,
    H,
    M,
    d,
    w,
    c
  ];
}
class ss extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      Vl,
      Gl,
      Ce,
      {
        use: 0,
        class: 1,
        style: 2,
        ripple: 3,
        color: 4,
        variant: 5,
        touch: 6,
        href: 7,
        action: 24,
        defaultAction: 25,
        secondary: 8,
        component: 9,
        tag: 10,
        getElement: 26
      },
      null,
      [-1, -1]
    );
  }
  get getElement() {
    return this.$$.ctx[26];
  }
}
function jl(n) {
  let e;
  const t = (
    /*#slots*/
    n[5].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[6],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r & /*$$scope*/
      64) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[6],
        e ? ve(
          t,
          /*$$scope*/
          a[6],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[6]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function kl(n) {
  let e, t;
  return e = new ss({
    props: {
      variant: (
        /*variant*/
        n[2]
      ),
      disabled: (
        /*disabled*/
        n[1]
      ),
      style: (
        /*isAbortAction*/
        n[3] ? "background-color: #ff3e00;" : "background-color: " + /*backgroundColor*/
        n[4]
      ),
      $$slots: { default: [jl] },
      $$scope: { ctx: n }
    }
  }), e.$on("click", function() {
    Fe(
      /*callback*/
      n[0]()
    ) && n[0]().apply(this, arguments);
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      n = s;
      const r = {};
      a & /*variant*/
      4 && (r.variant = /*variant*/
      n[2]), a & /*disabled*/
      2 && (r.disabled = /*disabled*/
      n[1]), a & /*isAbortAction, backgroundColor*/
      24 && (r.style = /*isAbortAction*/
      n[3] ? "background-color: #ff3e00;" : "background-color: " + /*backgroundColor*/
      n[4]), a & /*$$scope*/
      64 && (r.$$scope = { dirty: a, ctx: n }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function wl(n, e, t) {
  let { $$slots: s = {}, $$scope: a } = e, { callback: r = () => {
  } } = e, { disabled: o = !1 } = e, { variant: i = "default" } = e, { isAbortAction: d = !1 } = e, { backgroundColor: c = void 0 } = e;
  return n.$$set = (l) => {
    "callback" in l && t(0, r = l.callback), "disabled" in l && t(1, o = l.disabled), "variant" in l && t(2, i = l.variant), "isAbortAction" in l && t(3, d = l.isAbortAction), "backgroundColor" in l && t(4, c = l.backgroundColor), "$$scope" in l && t(6, a = l.$$scope);
  }, [r, o, i, d, c, s, a];
}
class ia extends me {
  constructor(e) {
    super(), ue(this, e, wl, kl, Ce, {
      callback: 0,
      disabled: 1,
      variant: 2,
      isAbortAction: 3,
      backgroundColor: 4
    });
  }
}
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Gs = {
  ICON_BUTTON_ON: "mdc-icon-button--on",
  ROOT: "mdc-icon-button"
}, mn = {
  ARIA_LABEL: "aria-label",
  ARIA_PRESSED: "aria-pressed",
  DATA_ARIA_LABEL_OFF: "data-aria-label-off",
  DATA_ARIA_LABEL_ON: "data-aria-label-on",
  CHANGE_EVENT: "MDCIconButtonToggle:change"
};
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Bl = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.hasToggledAriaLabel = !1, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Gs;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return mn;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      get: function() {
        return {
          addClass: function() {
          },
          hasClass: function() {
            return !1;
          },
          notifyChange: function() {
          },
          removeClass: function() {
          },
          getAttr: function() {
            return null;
          },
          setAttr: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      var t = this.adapter.getAttr(mn.DATA_ARIA_LABEL_ON), s = this.adapter.getAttr(mn.DATA_ARIA_LABEL_OFF);
      if (t && s) {
        if (this.adapter.getAttr(mn.ARIA_PRESSED) !== null)
          throw new Error("MDCIconButtonToggleFoundation: Button should not set `aria-pressed` if it has a toggled aria label.");
        this.hasToggledAriaLabel = !0;
      } else
        this.adapter.setAttr(mn.ARIA_PRESSED, String(this.isOn()));
    }, e.prototype.handleClick = function() {
      this.toggle(), this.adapter.notifyChange({ isOn: this.isOn() });
    }, e.prototype.isOn = function() {
      return this.adapter.hasClass(Gs.ICON_BUTTON_ON);
    }, e.prototype.toggle = function(t) {
      if (t === void 0 && (t = !this.isOn()), t ? this.adapter.addClass(Gs.ICON_BUTTON_ON) : this.adapter.removeClass(Gs.ICON_BUTTON_ON), this.hasToggledAriaLabel) {
        var s = t ? this.adapter.getAttr(mn.DATA_ARIA_LABEL_ON) : this.adapter.getAttr(mn.DATA_ARIA_LABEL_OFF);
        this.adapter.setAttr(mn.ARIA_LABEL, s || "");
      } else
        this.adapter.setAttr(mn.ARIA_PRESSED, "" + t);
    }, e;
  }(wt)
);
function Yr(n) {
  let e;
  return {
    c() {
      e = Z("div"), R(e, "class", "mdc-icon-button__touch");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function Ul(n) {
  let e, t, s, a;
  const r = (
    /*#slots*/
    n[33].default
  ), o = Pe(
    r,
    n,
    /*$$scope*/
    n[37],
    null
  );
  let i = (
    /*touch*/
    n[8] && Yr()
  );
  return {
    c() {
      e = Z("div"), t = $(), o && o.c(), i && i.c(), s = st(), R(e, "class", "mdc-icon-button__ripple");
    },
    m(d, c) {
      G(d, e, c), G(d, t, c), o && o.m(d, c), i && i.m(d, c), G(d, s, c), a = !0;
    },
    p(d, c) {
      o && o.p && (!a || c[1] & /*$$scope*/
      64) && Me(
        o,
        r,
        d,
        /*$$scope*/
        d[37],
        a ? ve(
          r,
          /*$$scope*/
          d[37],
          c,
          null
        ) : Re(
          /*$$scope*/
          d[37]
        ),
        null
      ), /*touch*/
      d[8] ? i || (i = Yr(), i.c(), i.m(s.parentNode, s)) : i && (i.d(1), i = null);
    },
    i(d) {
      a || (L(o, d), a = !0);
    },
    o(d) {
      h(o, d), a = !1;
    },
    d(d) {
      d && (F(e), F(t), F(s)), o && o.d(d), i && i.d(d);
    }
  };
}
function Hl(n) {
  let e, t, s;
  const a = [
    { tag: (
      /*tag*/
      n[14]
    ) },
    {
      use: [
        [
          Yt,
          {
            ripple: (
              /*ripple*/
              n[4]
            ),
            unbounded: !0,
            color: (
              /*color*/
              n[5]
            ),
            disabled: !!/*$$restProps*/
            n[29].disabled,
            addClass: (
              /*addClass*/
              n[26]
            ),
            removeClass: (
              /*removeClass*/
              n[27]
            ),
            addStyle: (
              /*addStyle*/
              n[28]
            )
          }
        ],
        /*forwardEvents*/
        n[22],
        .../*use*/
        n[1]
      ]
    },
    {
      class: le({
        [
          /*className*/
          n[2]
        ]: !0,
        "mdc-icon-button": !0,
        "mdc-icon-button--on": !/*isUninitializedValue*/
        n[23](
          /*pressed*/
          n[0]
        ) && /*pressed*/
        n[0],
        "mdc-icon-button--touch": (
          /*touch*/
          n[8]
        ),
        "mdc-icon-button--display-flex": (
          /*displayFlex*/
          n[9]
        ),
        "smui-icon-button--size-button": (
          /*size*/
          n[10] === "button"
        ),
        "smui-icon-button--size-mini": (
          /*size*/
          n[10] === "mini"
        ),
        "mdc-icon-button--reduced-size": (
          /*size*/
          n[10] === "mini" || /*size*/
          n[10] === "button"
        ),
        "mdc-card__action": (
          /*context*/
          n[24] === "card:action"
        ),
        "mdc-card__action--icon": (
          /*context*/
          n[24] === "card:action"
        ),
        "mdc-top-app-bar__navigation-icon": (
          /*context*/
          n[24] === "top-app-bar:navigation"
        ),
        "mdc-top-app-bar__action-item": (
          /*context*/
          n[24] === "top-app-bar:action"
        ),
        "mdc-snackbar__dismiss": (
          /*context*/
          n[24] === "snackbar:actions"
        ),
        "mdc-data-table__pagination-button": (
          /*context*/
          n[24] === "data-table:pagination"
        ),
        "mdc-data-table__sort-icon-button": (
          /*context*/
          n[24] === "data-table:sortable-header-cell"
        ),
        "mdc-dialog__close": (
          /*context*/
          (n[24] === "dialog:header" || /*context*/
          n[24] === "dialog:sheet") && /*action*/
          n[12] === "close"
        ),
        .../*internalClasses*/
        n[18]
      })
    },
    {
      style: Object.entries(
        /*internalStyles*/
        n[19]
      ).map(Ma).concat([
        /*style*/
        n[3]
      ]).join(" ")
    },
    {
      "aria-pressed": /*isUninitializedValue*/ n[23](
        /*pressed*/
        n[0]
      ) ? null : (
        /*pressed*/
        n[0] ? "true" : "false"
      )
    },
    {
      "aria-label": (
        /*pressed*/
        n[0] ? (
          /*ariaLabelOn*/
          n[6]
        ) : (
          /*ariaLabelOff*/
          n[7]
        )
      )
    },
    {
      "data-aria-label-on": (
        /*ariaLabelOn*/
        n[6]
      )
    },
    {
      "data-aria-label-off": (
        /*ariaLabelOff*/
        n[7]
      )
    },
    {
      "aria-describedby": (
        /*ariaDescribedby*/
        n[25]
      )
    },
    { href: (
      /*href*/
      n[11]
    ) },
    /*actionProp*/
    n[21],
    /*internalAttrs*/
    n[20],
    /*$$restProps*/
    n[29]
  ];
  var r = (
    /*component*/
    n[13]
  );
  function o(i, d) {
    let c = {
      $$slots: { default: [Ul] },
      $$scope: { ctx: i }
    };
    for (let l = 0; l < a.length; l += 1)
      c = te(c, a[l]);
    return d !== void 0 && d[0] & /*tag, ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use, className, isUninitializedValue, pressed, touch, displayFlex, size, context, action, internalClasses, internalStyles, style, ariaLabelOn, ariaLabelOff, ariaDescribedby, href, actionProp, internalAttrs*/
    1073504255 && (c = te(c, Ee(a, [
      d[0] & /*tag*/
      16384 && { tag: (
        /*tag*/
        i[14]
      ) },
      d[0] & /*ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use*/
      1010827314 && {
        use: [
          [
            Yt,
            {
              ripple: (
                /*ripple*/
                i[4]
              ),
              unbounded: !0,
              color: (
                /*color*/
                i[5]
              ),
              disabled: !!/*$$restProps*/
              i[29].disabled,
              addClass: (
                /*addClass*/
                i[26]
              ),
              removeClass: (
                /*removeClass*/
                i[27]
              ),
              addStyle: (
                /*addStyle*/
                i[28]
              )
            }
          ],
          /*forwardEvents*/
          i[22],
          .../*use*/
          i[1]
        ]
      },
      d[0] & /*className, isUninitializedValue, pressed, touch, displayFlex, size, context, action, internalClasses*/
      25433861 && {
        class: le({
          [
            /*className*/
            i[2]
          ]: !0,
          "mdc-icon-button": !0,
          "mdc-icon-button--on": !/*isUninitializedValue*/
          i[23](
            /*pressed*/
            i[0]
          ) && /*pressed*/
          i[0],
          "mdc-icon-button--touch": (
            /*touch*/
            i[8]
          ),
          "mdc-icon-button--display-flex": (
            /*displayFlex*/
            i[9]
          ),
          "smui-icon-button--size-button": (
            /*size*/
            i[10] === "button"
          ),
          "smui-icon-button--size-mini": (
            /*size*/
            i[10] === "mini"
          ),
          "mdc-icon-button--reduced-size": (
            /*size*/
            i[10] === "mini" || /*size*/
            i[10] === "button"
          ),
          "mdc-card__action": (
            /*context*/
            i[24] === "card:action"
          ),
          "mdc-card__action--icon": (
            /*context*/
            i[24] === "card:action"
          ),
          "mdc-top-app-bar__navigation-icon": (
            /*context*/
            i[24] === "top-app-bar:navigation"
          ),
          "mdc-top-app-bar__action-item": (
            /*context*/
            i[24] === "top-app-bar:action"
          ),
          "mdc-snackbar__dismiss": (
            /*context*/
            i[24] === "snackbar:actions"
          ),
          "mdc-data-table__pagination-button": (
            /*context*/
            i[24] === "data-table:pagination"
          ),
          "mdc-data-table__sort-icon-button": (
            /*context*/
            i[24] === "data-table:sortable-header-cell"
          ),
          "mdc-dialog__close": (
            /*context*/
            (i[24] === "dialog:header" || /*context*/
            i[24] === "dialog:sheet") && /*action*/
            i[12] === "close"
          ),
          .../*internalClasses*/
          i[18]
        })
      },
      d[0] & /*internalStyles, style*/
      524296 && {
        style: Object.entries(
          /*internalStyles*/
          i[19]
        ).map(Ma).concat([
          /*style*/
          i[3]
        ]).join(" ")
      },
      d[0] & /*isUninitializedValue, pressed*/
      8388609 && {
        "aria-pressed": /*isUninitializedValue*/ i[23](
          /*pressed*/
          i[0]
        ) ? null : (
          /*pressed*/
          i[0] ? "true" : "false"
        )
      },
      d[0] & /*pressed, ariaLabelOn, ariaLabelOff*/
      193 && {
        "aria-label": (
          /*pressed*/
          i[0] ? (
            /*ariaLabelOn*/
            i[6]
          ) : (
            /*ariaLabelOff*/
            i[7]
          )
        )
      },
      d[0] & /*ariaLabelOn*/
      64 && {
        "data-aria-label-on": (
          /*ariaLabelOn*/
          i[6]
        )
      },
      d[0] & /*ariaLabelOff*/
      128 && {
        "data-aria-label-off": (
          /*ariaLabelOff*/
          i[7]
        )
      },
      d[0] & /*ariaDescribedby*/
      33554432 && {
        "aria-describedby": (
          /*ariaDescribedby*/
          i[25]
        )
      },
      d[0] & /*href*/
      2048 && { href: (
        /*href*/
        i[11]
      ) },
      d[0] & /*actionProp*/
      2097152 && Ne(
        /*actionProp*/
        i[21]
      ),
      d[0] & /*internalAttrs*/
      1048576 && Ne(
        /*internalAttrs*/
        i[20]
      ),
      d[0] & /*$$restProps*/
      536870912 && Ne(
        /*$$restProps*/
        i[29]
      )
    ]))), { props: c };
  }
  return r && (e = Gt(r, o(n)), n[34](e), e.$on(
    "click",
    /*click_handler*/
    n[35]
  ), e.$on(
    "click",
    /*click_handler_1*/
    n[36]
  )), {
    c() {
      e && X(e.$$.fragment), t = st();
    },
    m(i, d) {
      e && q(e, i, d), G(i, t, d), s = !0;
    },
    p(i, d) {
      if (d[0] & /*component*/
      8192 && r !== (r = /*component*/
      i[13])) {
        if (e) {
          he();
          const c = e;
          h(c.$$.fragment, 1, 0, () => {
            z(c, 1);
          }), ye();
        }
        r ? (e = Gt(r, o(i, d)), i[34](e), e.$on(
          "click",
          /*click_handler*/
          i[35]
        ), e.$on(
          "click",
          /*click_handler_1*/
          i[36]
        ), X(e.$$.fragment), L(e.$$.fragment, 1), q(e, t.parentNode, t)) : e = null;
      } else if (r) {
        const c = d[0] & /*tag, ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use, className, isUninitializedValue, pressed, touch, displayFlex, size, context, action, internalClasses, internalStyles, style, ariaLabelOn, ariaLabelOff, ariaDescribedby, href, actionProp, internalAttrs*/
        1073504255 ? Ee(a, [
          d[0] & /*tag*/
          16384 && { tag: (
            /*tag*/
            i[14]
          ) },
          d[0] & /*ripple, color, $$restProps, addClass, removeClass, addStyle, forwardEvents, use*/
          1010827314 && {
            use: [
              [
                Yt,
                {
                  ripple: (
                    /*ripple*/
                    i[4]
                  ),
                  unbounded: !0,
                  color: (
                    /*color*/
                    i[5]
                  ),
                  disabled: !!/*$$restProps*/
                  i[29].disabled,
                  addClass: (
                    /*addClass*/
                    i[26]
                  ),
                  removeClass: (
                    /*removeClass*/
                    i[27]
                  ),
                  addStyle: (
                    /*addStyle*/
                    i[28]
                  )
                }
              ],
              /*forwardEvents*/
              i[22],
              .../*use*/
              i[1]
            ]
          },
          d[0] & /*className, isUninitializedValue, pressed, touch, displayFlex, size, context, action, internalClasses*/
          25433861 && {
            class: le({
              [
                /*className*/
                i[2]
              ]: !0,
              "mdc-icon-button": !0,
              "mdc-icon-button--on": !/*isUninitializedValue*/
              i[23](
                /*pressed*/
                i[0]
              ) && /*pressed*/
              i[0],
              "mdc-icon-button--touch": (
                /*touch*/
                i[8]
              ),
              "mdc-icon-button--display-flex": (
                /*displayFlex*/
                i[9]
              ),
              "smui-icon-button--size-button": (
                /*size*/
                i[10] === "button"
              ),
              "smui-icon-button--size-mini": (
                /*size*/
                i[10] === "mini"
              ),
              "mdc-icon-button--reduced-size": (
                /*size*/
                i[10] === "mini" || /*size*/
                i[10] === "button"
              ),
              "mdc-card__action": (
                /*context*/
                i[24] === "card:action"
              ),
              "mdc-card__action--icon": (
                /*context*/
                i[24] === "card:action"
              ),
              "mdc-top-app-bar__navigation-icon": (
                /*context*/
                i[24] === "top-app-bar:navigation"
              ),
              "mdc-top-app-bar__action-item": (
                /*context*/
                i[24] === "top-app-bar:action"
              ),
              "mdc-snackbar__dismiss": (
                /*context*/
                i[24] === "snackbar:actions"
              ),
              "mdc-data-table__pagination-button": (
                /*context*/
                i[24] === "data-table:pagination"
              ),
              "mdc-data-table__sort-icon-button": (
                /*context*/
                i[24] === "data-table:sortable-header-cell"
              ),
              "mdc-dialog__close": (
                /*context*/
                (i[24] === "dialog:header" || /*context*/
                i[24] === "dialog:sheet") && /*action*/
                i[12] === "close"
              ),
              .../*internalClasses*/
              i[18]
            })
          },
          d[0] & /*internalStyles, style*/
          524296 && {
            style: Object.entries(
              /*internalStyles*/
              i[19]
            ).map(Ma).concat([
              /*style*/
              i[3]
            ]).join(" ")
          },
          d[0] & /*isUninitializedValue, pressed*/
          8388609 && {
            "aria-pressed": /*isUninitializedValue*/ i[23](
              /*pressed*/
              i[0]
            ) ? null : (
              /*pressed*/
              i[0] ? "true" : "false"
            )
          },
          d[0] & /*pressed, ariaLabelOn, ariaLabelOff*/
          193 && {
            "aria-label": (
              /*pressed*/
              i[0] ? (
                /*ariaLabelOn*/
                i[6]
              ) : (
                /*ariaLabelOff*/
                i[7]
              )
            )
          },
          d[0] & /*ariaLabelOn*/
          64 && {
            "data-aria-label-on": (
              /*ariaLabelOn*/
              i[6]
            )
          },
          d[0] & /*ariaLabelOff*/
          128 && {
            "data-aria-label-off": (
              /*ariaLabelOff*/
              i[7]
            )
          },
          d[0] & /*ariaDescribedby*/
          33554432 && {
            "aria-describedby": (
              /*ariaDescribedby*/
              i[25]
            )
          },
          d[0] & /*href*/
          2048 && { href: (
            /*href*/
            i[11]
          ) },
          d[0] & /*actionProp*/
          2097152 && Ne(
            /*actionProp*/
            i[21]
          ),
          d[0] & /*internalAttrs*/
          1048576 && Ne(
            /*internalAttrs*/
            i[20]
          ),
          d[0] & /*$$restProps*/
          536870912 && Ne(
            /*$$restProps*/
            i[29]
          )
        ]) : {};
        d[0] & /*touch*/
        256 | d[1] & /*$$scope*/
        64 && (c.$$scope = { dirty: d, ctx: i }), e.$set(c);
      }
    },
    i(i) {
      s || (e && L(e.$$.fragment, i), s = !0);
    },
    o(i) {
      e && h(e.$$.fragment, i), s = !1;
    },
    d(i) {
      i && F(t), n[34](null), e && z(e, i);
    }
  };
}
const Ma = ([n, e]) => `${n}: ${e};`;
function Kl(n, e, t) {
  let s;
  const a = [
    "use",
    "class",
    "style",
    "ripple",
    "color",
    "toggle",
    "pressed",
    "ariaLabelOn",
    "ariaLabelOff",
    "touch",
    "displayFlex",
    "size",
    "href",
    "action",
    "component",
    "tag",
    "getElement"
  ];
  let r = Te(e, a), { $$slots: o = {}, $$scope: i } = e;
  const d = lt(tt());
  let c = () => {
  };
  function l(J) {
    return J === c;
  }
  let { use: C = [] } = e, { class: u = "" } = e, { style: m = "" } = e, { ripple: p = !0 } = e, { color: D = void 0 } = e, { toggle: _ = !1 } = e, { pressed: A = c } = e, { ariaLabelOn: b = void 0 } = e, { ariaLabelOff: S = void 0 } = e, { touch: f = !1 } = e, { displayFlex: E = !0 } = e, { size: y = "normal" } = e, { href: I = void 0 } = e, { action: N = void 0 } = e, j, v, O = {}, M = {}, P = {}, g = Qe("SMUI:icon-button:context"), W = Qe("SMUI:icon-button:aria-describedby"), { component: B = tn } = e, { tag: H = B === tn ? I == null ? "button" : "a" : void 0 } = e, w = r.disabled;
  qe("SMUI:icon:context", "icon-button");
  let T = null;
  an(() => {
    v && v.destroy();
  });
  function Y(J) {
    return J in O ? O[J] : Be().classList.contains(J);
  }
  function Ie(J) {
    O[J] || t(18, O[J] = !0, O);
  }
  function Ge(J) {
    (!(J in O) || O[J]) && t(18, O[J] = !1, O);
  }
  function ke(J, se) {
    M[J] != se && (se === "" || se == null ? (delete M[J], t(19, M)) : t(19, M[J] = se, M));
  }
  function ae(J) {
    var se;
    return J in P ? (se = P[J]) !== null && se !== void 0 ? se : null : Be().getAttribute(J);
  }
  function _e(J, se) {
    P[J] !== se && t(20, P[J] = se, P);
  }
  function We(J) {
    t(0, A = J.isOn);
  }
  function Be() {
    return j.getElement();
  }
  function xe(J) {
    de[J ? "unshift" : "push"](() => {
      j = J, t(16, j);
    });
  }
  const it = () => v && v.handleClick(), oe = () => g === "top-app-bar:navigation" && Oe(Be(), "SMUITopAppBarIconButton:nav");
  return n.$$set = (J) => {
    e = te(te({}, e), ct(J)), t(29, r = Te(e, a)), "use" in J && t(1, C = J.use), "class" in J && t(2, u = J.class), "style" in J && t(3, m = J.style), "ripple" in J && t(4, p = J.ripple), "color" in J && t(5, D = J.color), "toggle" in J && t(30, _ = J.toggle), "pressed" in J && t(0, A = J.pressed), "ariaLabelOn" in J && t(6, b = J.ariaLabelOn), "ariaLabelOff" in J && t(7, S = J.ariaLabelOff), "touch" in J && t(8, f = J.touch), "displayFlex" in J && t(9, E = J.displayFlex), "size" in J && t(10, y = J.size), "href" in J && t(11, I = J.href), "action" in J && t(12, N = J.action), "component" in J && t(13, B = J.component), "tag" in J && t(14, H = J.tag), "$$scope" in J && t(37, i = J.$$scope);
  }, n.$$.update = () => {
    if (n.$$.dirty[0] & /*action*/
    4096 && t(21, s = (() => {
      if (g === "data-table:pagination")
        switch (N) {
          case "first-page":
            return { "data-first-page": "true" };
          case "prev-page":
            return { "data-prev-page": "true" };
          case "next-page":
            return { "data-next-page": "true" };
          case "last-page":
            return { "data-last-page": "true" };
          default:
            return { "data-action": "true" };
        }
      else
        return g === "dialog:header" || g === "dialog:sheet" ? { "data-mdc-dialog-action": N } : { action: N };
    })()), w !== r.disabled) {
      if (j) {
        const J = Be();
        "blur" in J && J.blur();
      }
      t(31, w = r.disabled);
    }
    n.$$.dirty[0] & /*element, toggle, instance*/
    1073938432 | n.$$.dirty[1] & /*oldToggle*/
    2 && j && Be() && _ !== T && (_ && !v ? (t(17, v = new Bl({
      addClass: Ie,
      hasClass: Y,
      notifyChange: (J) => {
        We(J), Oe(Be(), "SMUIIconButtonToggle:change", J, void 0, !0);
      },
      removeClass: Ge,
      getAttr: ae,
      setAttr: _e
    })), v.init()) : !_ && v && (v.destroy(), t(17, v = void 0), t(18, O = {}), t(20, P = {})), t(32, T = _)), n.$$.dirty[0] & /*instance, pressed*/
    131073 && v && !l(A) && v.isOn() !== A && v.toggle(A);
  }, [
    A,
    C,
    u,
    m,
    p,
    D,
    b,
    S,
    f,
    E,
    y,
    I,
    N,
    B,
    H,
    Be,
    j,
    v,
    O,
    M,
    P,
    s,
    d,
    l,
    g,
    W,
    Ie,
    Ge,
    ke,
    r,
    _,
    w,
    T,
    o,
    xe,
    it,
    oe,
    i
  ];
}
class mr extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      Kl,
      Hl,
      Ce,
      {
        use: 1,
        class: 2,
        style: 3,
        ripple: 4,
        color: 5,
        toggle: 30,
        pressed: 0,
        ariaLabelOn: 6,
        ariaLabelOff: 7,
        touch: 8,
        displayFlex: 9,
        size: 10,
        href: 11,
        action: 12,
        component: 13,
        tag: 14,
        getElement: 15
      },
      null,
      [-1, -1]
    );
  }
  get getElement() {
    return this.$$.ctx[15];
  }
}
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Wl = {
  LABEL_FLOAT_ABOVE: "mdc-floating-label--float-above",
  LABEL_REQUIRED: "mdc-floating-label--required",
  LABEL_SHAKE: "mdc-floating-label--shake",
  ROOT: "mdc-floating-label"
};
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var ql = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.shakeAnimationEndHandler = function() {
        s.handleShakeAnimationEnd();
      }, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Wl;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      /**
       * See {@link MDCFloatingLabelAdapter} for typing information on parameters and return types.
       */
      get: function() {
        return {
          addClass: function() {
          },
          removeClass: function() {
          },
          getWidth: function() {
            return 0;
          },
          registerInteractionHandler: function() {
          },
          deregisterInteractionHandler: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      this.adapter.registerInteractionHandler("animationend", this.shakeAnimationEndHandler);
    }, e.prototype.destroy = function() {
      this.adapter.deregisterInteractionHandler("animationend", this.shakeAnimationEndHandler);
    }, e.prototype.getWidth = function() {
      return this.adapter.getWidth();
    }, e.prototype.shake = function(t) {
      var s = e.cssClasses.LABEL_SHAKE;
      t ? this.adapter.addClass(s) : this.adapter.removeClass(s);
    }, e.prototype.float = function(t) {
      var s = e.cssClasses, a = s.LABEL_FLOAT_ABOVE, r = s.LABEL_SHAKE;
      t ? this.adapter.addClass(a) : (this.adapter.removeClass(a), this.adapter.removeClass(r));
    }, e.prototype.setRequired = function(t) {
      var s = e.cssClasses.LABEL_REQUIRED;
      t ? this.adapter.addClass(s) : this.adapter.removeClass(s);
    }, e.prototype.handleShakeAnimationEnd = function() {
      var t = e.cssClasses.LABEL_SHAKE;
      this.adapter.removeClass(t);
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Tn = {
  LINE_RIPPLE_ACTIVE: "mdc-line-ripple--active",
  LINE_RIPPLE_DEACTIVATING: "mdc-line-ripple--deactivating"
};
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var zl = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.transitionEndHandler = function(a) {
        s.handleTransitionEnd(a);
      }, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Tn;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      /**
       * See {@link MDCLineRippleAdapter} for typing information on parameters and return types.
       */
      get: function() {
        return {
          addClass: function() {
          },
          removeClass: function() {
          },
          hasClass: function() {
            return !1;
          },
          setStyle: function() {
          },
          registerEventHandler: function() {
          },
          deregisterEventHandler: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      this.adapter.registerEventHandler("transitionend", this.transitionEndHandler);
    }, e.prototype.destroy = function() {
      this.adapter.deregisterEventHandler("transitionend", this.transitionEndHandler);
    }, e.prototype.activate = function() {
      this.adapter.removeClass(Tn.LINE_RIPPLE_DEACTIVATING), this.adapter.addClass(Tn.LINE_RIPPLE_ACTIVE);
    }, e.prototype.setRippleCenter = function(t) {
      this.adapter.setStyle("transform-origin", t + "px center");
    }, e.prototype.deactivate = function() {
      this.adapter.addClass(Tn.LINE_RIPPLE_DEACTIVATING);
    }, e.prototype.handleTransitionEnd = function(t) {
      var s = this.adapter.hasClass(Tn.LINE_RIPPLE_DEACTIVATING);
      t.propertyName === "opacity" && s && (this.adapter.removeClass(Tn.LINE_RIPPLE_ACTIVE), this.adapter.removeClass(Tn.LINE_RIPPLE_DEACTIVATING));
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Xl = {
  NOTCH_ELEMENT_SELECTOR: ".mdc-notched-outline__notch"
}, Qr = {
  // This should stay in sync with $mdc-notched-outline-padding * 2.
  NOTCH_ELEMENT_PADDING: 8
}, Zl = {
  NO_LABEL: "mdc-notched-outline--no-label",
  OUTLINE_NOTCHED: "mdc-notched-outline--notched",
  OUTLINE_UPGRADED: "mdc-notched-outline--upgraded"
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Yl = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      return n.call(this, et(et({}, e.defaultAdapter), t)) || this;
    }
    return Object.defineProperty(e, "strings", {
      get: function() {
        return Xl;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Zl;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return Qr;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      /**
       * See {@link MDCNotchedOutlineAdapter} for typing information on parameters and return types.
       */
      get: function() {
        return {
          addClass: function() {
          },
          removeClass: function() {
          },
          setNotchWidthProperty: function() {
          },
          removeNotchWidthProperty: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.notch = function(t) {
      var s = e.cssClasses.OUTLINE_NOTCHED;
      t > 0 && (t += Qr.NOTCH_ELEMENT_PADDING), this.adapter.setNotchWidthProperty(t), this.adapter.addClass(s);
    }, e.prototype.closeNotch = function() {
      var t = e.cssClasses.OUTLINE_NOTCHED;
      this.adapter.removeClass(t), this.adapter.removeNotchWidthProperty();
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Ra = {
  ARIA_CONTROLS: "aria-controls",
  ARIA_DESCRIBEDBY: "aria-describedby",
  INPUT_SELECTOR: ".mdc-text-field__input",
  LABEL_SELECTOR: ".mdc-floating-label",
  LEADING_ICON_SELECTOR: ".mdc-text-field__icon--leading",
  LINE_RIPPLE_SELECTOR: ".mdc-line-ripple",
  OUTLINE_SELECTOR: ".mdc-notched-outline",
  PREFIX_SELECTOR: ".mdc-text-field__affix--prefix",
  SUFFIX_SELECTOR: ".mdc-text-field__affix--suffix",
  TRAILING_ICON_SELECTOR: ".mdc-text-field__icon--trailing"
}, Ql = {
  DISABLED: "mdc-text-field--disabled",
  FOCUSED: "mdc-text-field--focused",
  HELPER_LINE: "mdc-text-field-helper-line",
  INVALID: "mdc-text-field--invalid",
  LABEL_FLOATING: "mdc-text-field--label-floating",
  NO_LABEL: "mdc-text-field--no-label",
  OUTLINED: "mdc-text-field--outlined",
  ROOT: "mdc-text-field",
  TEXTAREA: "mdc-text-field--textarea",
  WITH_LEADING_ICON: "mdc-text-field--with-leading-icon",
  WITH_TRAILING_ICON: "mdc-text-field--with-trailing-icon",
  WITH_INTERNAL_COUNTER: "mdc-text-field--with-internal-counter"
}, Jr = {
  LABEL_SCALE: 0.75
}, Jl = [
  "pattern",
  "min",
  "max",
  "required",
  "step",
  "minlength",
  "maxlength"
], xl = [
  "color",
  "date",
  "datetime-local",
  "month",
  "range",
  "time",
  "week"
];
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var xr = ["mousedown", "touchstart"], $r = ["click", "keydown"], $l = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t, s) {
      s === void 0 && (s = {});
      var a = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return a.isFocused = !1, a.receivedUserInput = !1, a.valid = !0, a.useNativeValidation = !0, a.validateOnValueChange = !0, a.helperText = s.helperText, a.characterCounter = s.characterCounter, a.leadingIcon = s.leadingIcon, a.trailingIcon = s.trailingIcon, a.inputFocusHandler = function() {
        a.activateFocus();
      }, a.inputBlurHandler = function() {
        a.deactivateFocus();
      }, a.inputInputHandler = function() {
        a.handleInput();
      }, a.setPointerXOffset = function(r) {
        a.setTransformOrigin(r);
      }, a.textFieldInteractionHandler = function() {
        a.handleTextFieldInteraction();
      }, a.validationAttributeChangeHandler = function(r) {
        a.handleValidationAttributeChange(r);
      }, a;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Ql;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return Ra;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return Jr;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "shouldAlwaysFloat", {
      get: function() {
        var t = this.getNativeInput().type;
        return xl.indexOf(t) >= 0;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "shouldFloat", {
      get: function() {
        return this.shouldAlwaysFloat || this.isFocused || !!this.getValue() || this.isBadInput();
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "shouldShake", {
      get: function() {
        return !this.isFocused && !this.isValid() && !!this.getValue();
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      /**
       * See {@link MDCTextFieldAdapter} for typing information on parameters and
       * return types.
       */
      get: function() {
        return {
          addClass: function() {
          },
          removeClass: function() {
          },
          hasClass: function() {
            return !0;
          },
          setInputAttr: function() {
          },
          removeInputAttr: function() {
          },
          registerTextFieldInteractionHandler: function() {
          },
          deregisterTextFieldInteractionHandler: function() {
          },
          registerInputInteractionHandler: function() {
          },
          deregisterInputInteractionHandler: function() {
          },
          registerValidationAttributeChangeHandler: function() {
            return new MutationObserver(function() {
            });
          },
          deregisterValidationAttributeChangeHandler: function() {
          },
          getNativeInput: function() {
            return null;
          },
          isFocused: function() {
            return !1;
          },
          activateLineRipple: function() {
          },
          deactivateLineRipple: function() {
          },
          setLineRippleTransformOrigin: function() {
          },
          shakeLabel: function() {
          },
          floatLabel: function() {
          },
          setLabelRequired: function() {
          },
          hasLabel: function() {
            return !1;
          },
          getLabelWidth: function() {
            return 0;
          },
          hasOutline: function() {
            return !1;
          },
          notchOutline: function() {
          },
          closeOutline: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      var t, s, a, r;
      this.adapter.hasLabel() && this.getNativeInput().required && this.adapter.setLabelRequired(!0), this.adapter.isFocused() ? this.inputFocusHandler() : this.adapter.hasLabel() && this.shouldFloat && (this.notchOutline(!0), this.adapter.floatLabel(!0), this.styleFloating(!0)), this.adapter.registerInputInteractionHandler("focus", this.inputFocusHandler), this.adapter.registerInputInteractionHandler("blur", this.inputBlurHandler), this.adapter.registerInputInteractionHandler("input", this.inputInputHandler);
      try {
        for (var o = kt(xr), i = o.next(); !i.done; i = o.next()) {
          var d = i.value;
          this.adapter.registerInputInteractionHandler(d, this.setPointerXOffset);
        }
      } catch (C) {
        t = { error: C };
      } finally {
        try {
          i && !i.done && (s = o.return) && s.call(o);
        } finally {
          if (t)
            throw t.error;
        }
      }
      try {
        for (var c = kt($r), l = c.next(); !l.done; l = c.next()) {
          var d = l.value;
          this.adapter.registerTextFieldInteractionHandler(d, this.textFieldInteractionHandler);
        }
      } catch (C) {
        a = { error: C };
      } finally {
        try {
          l && !l.done && (r = c.return) && r.call(c);
        } finally {
          if (a)
            throw a.error;
        }
      }
      this.validationObserver = this.adapter.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler), this.setcharacterCounter(this.getValue().length);
    }, e.prototype.destroy = function() {
      var t, s, a, r;
      this.adapter.deregisterInputInteractionHandler("focus", this.inputFocusHandler), this.adapter.deregisterInputInteractionHandler("blur", this.inputBlurHandler), this.adapter.deregisterInputInteractionHandler("input", this.inputInputHandler);
      try {
        for (var o = kt(xr), i = o.next(); !i.done; i = o.next()) {
          var d = i.value;
          this.adapter.deregisterInputInteractionHandler(d, this.setPointerXOffset);
        }
      } catch (C) {
        t = { error: C };
      } finally {
        try {
          i && !i.done && (s = o.return) && s.call(o);
        } finally {
          if (t)
            throw t.error;
        }
      }
      try {
        for (var c = kt($r), l = c.next(); !l.done; l = c.next()) {
          var d = l.value;
          this.adapter.deregisterTextFieldInteractionHandler(d, this.textFieldInteractionHandler);
        }
      } catch (C) {
        a = { error: C };
      } finally {
        try {
          l && !l.done && (r = c.return) && r.call(c);
        } finally {
          if (a)
            throw a.error;
        }
      }
      this.adapter.deregisterValidationAttributeChangeHandler(this.validationObserver);
    }, e.prototype.handleTextFieldInteraction = function() {
      var t = this.adapter.getNativeInput();
      t && t.disabled || (this.receivedUserInput = !0);
    }, e.prototype.handleValidationAttributeChange = function(t) {
      var s = this;
      t.some(function(a) {
        return Jl.indexOf(a) > -1 ? (s.styleValidity(!0), s.adapter.setLabelRequired(s.getNativeInput().required), !0) : !1;
      }), t.indexOf("maxlength") > -1 && this.setcharacterCounter(this.getValue().length);
    }, e.prototype.notchOutline = function(t) {
      if (!(!this.adapter.hasOutline() || !this.adapter.hasLabel()))
        if (t) {
          var s = this.adapter.getLabelWidth() * Jr.LABEL_SCALE;
          this.adapter.notchOutline(s);
        } else
          this.adapter.closeOutline();
    }, e.prototype.activateFocus = function() {
      this.isFocused = !0, this.styleFocused(this.isFocused), this.adapter.activateLineRipple(), this.adapter.hasLabel() && (this.notchOutline(this.shouldFloat), this.adapter.floatLabel(this.shouldFloat), this.styleFloating(this.shouldFloat), this.adapter.shakeLabel(this.shouldShake)), this.helperText && (this.helperText.isPersistent() || !this.helperText.isValidation() || !this.valid) && this.helperText.showToScreenReader();
    }, e.prototype.setTransformOrigin = function(t) {
      if (!(this.isDisabled() || this.adapter.hasOutline())) {
        var s = t.touches, a = s ? s[0] : t, r = a.target.getBoundingClientRect(), o = a.clientX - r.left;
        this.adapter.setLineRippleTransformOrigin(o);
      }
    }, e.prototype.handleInput = function() {
      this.autoCompleteFocus(), this.setcharacterCounter(this.getValue().length);
    }, e.prototype.autoCompleteFocus = function() {
      this.receivedUserInput || this.activateFocus();
    }, e.prototype.deactivateFocus = function() {
      this.isFocused = !1, this.adapter.deactivateLineRipple();
      var t = this.isValid();
      this.styleValidity(t), this.styleFocused(this.isFocused), this.adapter.hasLabel() && (this.notchOutline(this.shouldFloat), this.adapter.floatLabel(this.shouldFloat), this.styleFloating(this.shouldFloat), this.adapter.shakeLabel(this.shouldShake)), this.shouldFloat || (this.receivedUserInput = !1);
    }, e.prototype.getValue = function() {
      return this.getNativeInput().value;
    }, e.prototype.setValue = function(t) {
      if (this.getValue() !== t && (this.getNativeInput().value = t), this.setcharacterCounter(t.length), this.validateOnValueChange) {
        var s = this.isValid();
        this.styleValidity(s);
      }
      this.adapter.hasLabel() && (this.notchOutline(this.shouldFloat), this.adapter.floatLabel(this.shouldFloat), this.styleFloating(this.shouldFloat), this.validateOnValueChange && this.adapter.shakeLabel(this.shouldShake));
    }, e.prototype.isValid = function() {
      return this.useNativeValidation ? this.isNativeInputValid() : this.valid;
    }, e.prototype.setValid = function(t) {
      this.valid = t, this.styleValidity(t);
      var s = !t && !this.isFocused && !!this.getValue();
      this.adapter.hasLabel() && this.adapter.shakeLabel(s);
    }, e.prototype.setValidateOnValueChange = function(t) {
      this.validateOnValueChange = t;
    }, e.prototype.getValidateOnValueChange = function() {
      return this.validateOnValueChange;
    }, e.prototype.setUseNativeValidation = function(t) {
      this.useNativeValidation = t;
    }, e.prototype.isDisabled = function() {
      return this.getNativeInput().disabled;
    }, e.prototype.setDisabled = function(t) {
      this.getNativeInput().disabled = t, this.styleDisabled(t);
    }, e.prototype.setHelperTextContent = function(t) {
      this.helperText && this.helperText.setContent(t);
    }, e.prototype.setLeadingIconAriaLabel = function(t) {
      this.leadingIcon && this.leadingIcon.setAriaLabel(t);
    }, e.prototype.setLeadingIconContent = function(t) {
      this.leadingIcon && this.leadingIcon.setContent(t);
    }, e.prototype.setTrailingIconAriaLabel = function(t) {
      this.trailingIcon && this.trailingIcon.setAriaLabel(t);
    }, e.prototype.setTrailingIconContent = function(t) {
      this.trailingIcon && this.trailingIcon.setContent(t);
    }, e.prototype.setcharacterCounter = function(t) {
      if (this.characterCounter) {
        var s = this.getNativeInput().maxLength;
        if (s === -1)
          throw new Error("MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.");
        this.characterCounter.setCounterValue(t, s);
      }
    }, e.prototype.isBadInput = function() {
      return this.getNativeInput().validity.badInput || !1;
    }, e.prototype.isNativeInputValid = function() {
      return this.getNativeInput().validity.valid;
    }, e.prototype.styleValidity = function(t) {
      var s = e.cssClasses.INVALID;
      if (t ? this.adapter.removeClass(s) : this.adapter.addClass(s), this.helperText) {
        this.helperText.setValidity(t);
        var a = this.helperText.isValidation();
        if (!a)
          return;
        var r = this.helperText.isVisible(), o = this.helperText.getId();
        r && o ? this.adapter.setInputAttr(Ra.ARIA_DESCRIBEDBY, o) : this.adapter.removeInputAttr(Ra.ARIA_DESCRIBEDBY);
      }
    }, e.prototype.styleFocused = function(t) {
      var s = e.cssClasses.FOCUSED;
      t ? this.adapter.addClass(s) : this.adapter.removeClass(s);
    }, e.prototype.styleDisabled = function(t) {
      var s = e.cssClasses, a = s.DISABLED, r = s.INVALID;
      t ? (this.adapter.addClass(a), this.adapter.removeClass(r)) : this.adapter.removeClass(a), this.leadingIcon && this.leadingIcon.setDisabled(t), this.trailingIcon && this.trailingIcon.setDisabled(t);
    }, e.prototype.styleFloating = function(t) {
      var s = e.cssClasses.LABEL_FLOATING;
      t ? this.adapter.addClass(s) : this.adapter.removeClass(s);
    }, e.prototype.getNativeInput = function() {
      var t = this.adapter ? this.adapter.getNativeInput() : null;
      return t || {
        disabled: !1,
        maxLength: -1,
        required: !1,
        type: "input",
        validity: {
          badInput: !1,
          valid: !0
        },
        value: ""
      };
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var ei = {
  ICON_EVENT: "MDCTextField:icon",
  ICON_ROLE: "button"
}, eC = {
  ROOT: "mdc-text-field__icon"
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var ti = ["click", "keydown"], tC = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.savedTabIndex = null, s.interactionHandler = function(a) {
        s.handleInteraction(a);
      }, s;
    }
    return Object.defineProperty(e, "strings", {
      get: function() {
        return ei;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "cssClasses", {
      get: function() {
        return eC;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      /**
       * See {@link MDCTextFieldIconAdapter} for typing information on parameters and return types.
       */
      get: function() {
        return {
          getAttr: function() {
            return null;
          },
          setAttr: function() {
          },
          removeAttr: function() {
          },
          setContent: function() {
          },
          registerInteractionHandler: function() {
          },
          deregisterInteractionHandler: function() {
          },
          notifyIconAction: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      var t, s;
      this.savedTabIndex = this.adapter.getAttr("tabindex");
      try {
        for (var a = kt(ti), r = a.next(); !r.done; r = a.next()) {
          var o = r.value;
          this.adapter.registerInteractionHandler(o, this.interactionHandler);
        }
      } catch (i) {
        t = { error: i };
      } finally {
        try {
          r && !r.done && (s = a.return) && s.call(a);
        } finally {
          if (t)
            throw t.error;
        }
      }
    }, e.prototype.destroy = function() {
      var t, s;
      try {
        for (var a = kt(ti), r = a.next(); !r.done; r = a.next()) {
          var o = r.value;
          this.adapter.deregisterInteractionHandler(o, this.interactionHandler);
        }
      } catch (i) {
        t = { error: i };
      } finally {
        try {
          r && !r.done && (s = a.return) && s.call(a);
        } finally {
          if (t)
            throw t.error;
        }
      }
    }, e.prototype.setDisabled = function(t) {
      this.savedTabIndex && (t ? (this.adapter.setAttr("tabindex", "-1"), this.adapter.removeAttr("role")) : (this.adapter.setAttr("tabindex", this.savedTabIndex), this.adapter.setAttr("role", ei.ICON_ROLE)));
    }, e.prototype.setAriaLabel = function(t) {
      this.adapter.setAttr("aria-label", t);
    }, e.prototype.setContent = function(t) {
      this.adapter.setContent(t);
    }, e.prototype.handleInteraction = function(t) {
      var s = t.key === "Enter" || t.keyCode === 13;
      (t.type === "click" || s) && (t.preventDefault(), this.adapter.notifyIconAction());
    }, e;
  }(wt)
);
function nC(n) {
  let e, t, s, a, r, o, i, d;
  const c = (
    /*#slots*/
    n[22].default
  ), l = Pe(
    c,
    n,
    /*$$scope*/
    n[21],
    null
  );
  let C = [
    {
      class: t = le({
        [
          /*className*/
          n[3]
        ]: !0,
        "mdc-floating-label": !0,
        "mdc-floating-label--float-above": (
          /*floatAbove*/
          n[0]
        ),
        "mdc-floating-label--required": (
          /*required*/
          n[1]
        ),
        .../*internalClasses*/
        n[8]
      })
    },
    {
      style: s = Object.entries(
        /*internalStyles*/
        n[9]
      ).map(si).concat([
        /*style*/
        n[4]
      ]).join(" ")
    },
    {
      for: a = /*forId*/
      n[5] || /*inputProps*/
      (n[11] ? (
        /*inputProps*/
        n[11].id
      ) : void 0)
    },
    /*$$restProps*/
    n[12]
  ], u = {};
  for (let m = 0; m < C.length; m += 1)
    u = te(u, C[m]);
  return {
    c() {
      e = Z("label"), l && l.c(), Ae(e, u);
    },
    m(m, p) {
      G(m, e, p), l && l.m(e, null), n[24](e), o = !0, i || (d = [
        De(r = rt.call(
          null,
          e,
          /*use*/
          n[2]
        )),
        De(
          /*forwardEvents*/
          n[10].call(null, e)
        )
      ], i = !0);
    },
    p(m, p) {
      l && l.p && (!o || p & /*$$scope*/
      2097152) && Me(
        l,
        c,
        m,
        /*$$scope*/
        m[21],
        o ? ve(
          c,
          /*$$scope*/
          m[21],
          p,
          null
        ) : Re(
          /*$$scope*/
          m[21]
        ),
        null
      ), Ae(e, u = Ee(C, [
        (!o || p & /*className, floatAbove, required, internalClasses*/
        267 && t !== (t = le({
          [
            /*className*/
            m[3]
          ]: !0,
          "mdc-floating-label": !0,
          "mdc-floating-label--float-above": (
            /*floatAbove*/
            m[0]
          ),
          "mdc-floating-label--required": (
            /*required*/
            m[1]
          ),
          .../*internalClasses*/
          m[8]
        }))) && { class: t },
        (!o || p & /*internalStyles, style*/
        528 && s !== (s = Object.entries(
          /*internalStyles*/
          m[9]
        ).map(si).concat([
          /*style*/
          m[4]
        ]).join(" "))) && { style: s },
        (!o || p & /*forId*/
        32 && a !== (a = /*forId*/
        m[5] || /*inputProps*/
        (m[11] ? (
          /*inputProps*/
          m[11].id
        ) : void 0))) && { for: a },
        p & /*$$restProps*/
        4096 && /*$$restProps*/
        m[12]
      ])), r && Fe(r.update) && p & /*use*/
      4 && r.update.call(
        null,
        /*use*/
        m[2]
      );
    },
    i(m) {
      o || (L(l, m), o = !0);
    },
    o(m) {
      h(l, m), o = !1;
    },
    d(m) {
      m && F(e), l && l.d(m), n[24](null), i = !1, ze(d);
    }
  };
}
function sC(n) {
  let e, t, s, a, r, o, i;
  const d = (
    /*#slots*/
    n[22].default
  ), c = Pe(
    d,
    n,
    /*$$scope*/
    n[21],
    null
  );
  let l = [
    {
      class: t = le({
        [
          /*className*/
          n[3]
        ]: !0,
        "mdc-floating-label": !0,
        "mdc-floating-label--float-above": (
          /*floatAbove*/
          n[0]
        ),
        "mdc-floating-label--required": (
          /*required*/
          n[1]
        ),
        .../*internalClasses*/
        n[8]
      })
    },
    {
      style: s = Object.entries(
        /*internalStyles*/
        n[9]
      ).map(ni).concat([
        /*style*/
        n[4]
      ]).join(" ")
    },
    /*$$restProps*/
    n[12]
  ], C = {};
  for (let u = 0; u < l.length; u += 1)
    C = te(C, l[u]);
  return {
    c() {
      e = Z("span"), c && c.c(), Ae(e, C);
    },
    m(u, m) {
      G(u, e, m), c && c.m(e, null), n[23](e), r = !0, o || (i = [
        De(a = rt.call(
          null,
          e,
          /*use*/
          n[2]
        )),
        De(
          /*forwardEvents*/
          n[10].call(null, e)
        )
      ], o = !0);
    },
    p(u, m) {
      c && c.p && (!r || m & /*$$scope*/
      2097152) && Me(
        c,
        d,
        u,
        /*$$scope*/
        u[21],
        r ? ve(
          d,
          /*$$scope*/
          u[21],
          m,
          null
        ) : Re(
          /*$$scope*/
          u[21]
        ),
        null
      ), Ae(e, C = Ee(l, [
        (!r || m & /*className, floatAbove, required, internalClasses*/
        267 && t !== (t = le({
          [
            /*className*/
            u[3]
          ]: !0,
          "mdc-floating-label": !0,
          "mdc-floating-label--float-above": (
            /*floatAbove*/
            u[0]
          ),
          "mdc-floating-label--required": (
            /*required*/
            u[1]
          ),
          .../*internalClasses*/
          u[8]
        }))) && { class: t },
        (!r || m & /*internalStyles, style*/
        528 && s !== (s = Object.entries(
          /*internalStyles*/
          u[9]
        ).map(ni).concat([
          /*style*/
          u[4]
        ]).join(" "))) && { style: s },
        m & /*$$restProps*/
        4096 && /*$$restProps*/
        u[12]
      ])), a && Fe(a.update) && m & /*use*/
      4 && a.update.call(
        null,
        /*use*/
        u[2]
      );
    },
    i(u) {
      r || (L(c, u), r = !0);
    },
    o(u) {
      h(c, u), r = !1;
    },
    d(u) {
      u && F(e), c && c.d(u), n[23](null), o = !1, ze(i);
    }
  };
}
function aC(n) {
  let e, t, s, a;
  const r = [sC, nC], o = [];
  function i(d, c) {
    return (
      /*wrapped*/
      d[6] ? 0 : 1
    );
  }
  return e = i(n), t = o[e] = r[e](n), {
    c() {
      t.c(), s = st();
    },
    m(d, c) {
      o[e].m(d, c), G(d, s, c), a = !0;
    },
    p(d, [c]) {
      let l = e;
      e = i(d), e === l ? o[e].p(d, c) : (he(), h(o[l], 1, 1, () => {
        o[l] = null;
      }), ye(), t = o[e], t ? t.p(d, c) : (t = o[e] = r[e](d), t.c()), L(t, 1), t.m(s.parentNode, s));
    },
    i(d) {
      a || (L(t), a = !0);
    },
    o(d) {
      h(t), a = !1;
    },
    d(d) {
      d && F(s), o[e].d(d);
    }
  };
}
const ni = ([n, e]) => `${n}: ${e};`, si = ([n, e]) => `${n}: ${e};`;
function rC(n, e, t) {
  const s = [
    "use",
    "class",
    "style",
    "for",
    "floatAbove",
    "required",
    "wrapped",
    "shake",
    "float",
    "setRequired",
    "getWidth",
    "getElement"
  ];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  var i;
  const d = lt(tt());
  let { use: c = [] } = e, { class: l = "" } = e, { style: C = "" } = e, { for: u = void 0 } = e, { floatAbove: m = !1 } = e, { required: p = !1 } = e, { wrapped: D = !1 } = e, _, A, b = {}, S = {}, f = (i = Qe("SMUI:generic:input:props")) !== null && i !== void 0 ? i : {}, E = m, y = p;
  at(() => {
    t(18, A = new ql({
      addClass: I,
      removeClass: N,
      getWidth: () => {
        var T, Y;
        const Ie = W(), Ge = Ie.cloneNode(!0);
        (T = Ie.parentNode) === null || T === void 0 || T.appendChild(Ge), Ge.classList.add("smui-floating-label--remove-transition"), Ge.classList.add("smui-floating-label--force-size"), Ge.classList.remove("mdc-floating-label--float-above");
        const ke = Ge.scrollWidth;
        return (Y = Ie.parentNode) === null || Y === void 0 || Y.removeChild(Ge), ke;
      },
      registerInteractionHandler: (T, Y) => W().addEventListener(T, Y),
      deregisterInteractionHandler: (T, Y) => W().removeEventListener(T, Y)
    }));
    const w = {
      get element() {
        return W();
      },
      addStyle: j,
      removeStyle: v
    };
    return Oe(_, "SMUIFloatingLabel:mount", w), A.init(), () => {
      Oe(_, "SMUIFloatingLabel:unmount", w), A.destroy();
    };
  });
  function I(w) {
    b[w] || t(8, b[w] = !0, b);
  }
  function N(w) {
    (!(w in b) || b[w]) && t(8, b[w] = !1, b);
  }
  function j(w, T) {
    S[w] != T && (T === "" || T == null ? (delete S[w], t(9, S)) : t(9, S[w] = T, S));
  }
  function v(w) {
    w in S && (delete S[w], t(9, S));
  }
  function O(w) {
    A.shake(w);
  }
  function M(w) {
    t(0, m = w);
  }
  function P(w) {
    t(1, p = w);
  }
  function g() {
    return A.getWidth();
  }
  function W() {
    return _;
  }
  function B(w) {
    de[w ? "unshift" : "push"](() => {
      _ = w, t(7, _);
    });
  }
  function H(w) {
    de[w ? "unshift" : "push"](() => {
      _ = w, t(7, _);
    });
  }
  return n.$$set = (w) => {
    e = te(te({}, e), ct(w)), t(12, a = Te(e, s)), "use" in w && t(2, c = w.use), "class" in w && t(3, l = w.class), "style" in w && t(4, C = w.style), "for" in w && t(5, u = w.for), "floatAbove" in w && t(0, m = w.floatAbove), "required" in w && t(1, p = w.required), "wrapped" in w && t(6, D = w.wrapped), "$$scope" in w && t(21, o = w.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty & /*instance, previousFloatAbove, floatAbove*/
    786433 && A && E !== m && (t(19, E = m), A.float(m)), n.$$.dirty & /*instance, previousRequired, required*/
    1310722 && A && y !== p && (t(20, y = p), A.setRequired(p));
  }, [
    m,
    p,
    c,
    l,
    C,
    u,
    D,
    _,
    b,
    S,
    d,
    f,
    a,
    O,
    M,
    P,
    g,
    W,
    A,
    E,
    y,
    o,
    r,
    B,
    H
  ];
}
class gd extends me {
  constructor(e) {
    super(), ue(this, e, rC, aC, Ce, {
      use: 2,
      class: 3,
      style: 4,
      for: 5,
      floatAbove: 0,
      required: 1,
      wrapped: 6,
      shake: 13,
      float: 14,
      setRequired: 15,
      getWidth: 16,
      getElement: 17
    });
  }
  get shake() {
    return this.$$.ctx[13];
  }
  get float() {
    return this.$$.ctx[14];
  }
  get setRequired() {
    return this.$$.ctx[15];
  }
  get getWidth() {
    return this.$$.ctx[16];
  }
  get getElement() {
    return this.$$.ctx[17];
  }
}
function iC(n) {
  let e, t, s, a, r, o, i = [
    {
      class: t = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-line-ripple": !0,
        "mdc-line-ripple--active": (
          /*active*/
          n[3]
        ),
        .../*internalClasses*/
        n[5]
      })
    },
    {
      style: s = Object.entries(
        /*internalStyles*/
        n[6]
      ).map(ai).concat([
        /*style*/
        n[2]
      ]).join(" ")
    },
    /*$$restProps*/
    n[8]
  ], d = {};
  for (let c = 0; c < i.length; c += 1)
    d = te(d, i[c]);
  return {
    c() {
      e = Z("div"), Ae(e, d);
    },
    m(c, l) {
      G(c, e, l), n[13](e), r || (o = [
        De(a = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[7].call(null, e)
        )
      ], r = !0);
    },
    p(c, [l]) {
      Ae(e, d = Ee(i, [
        l & /*className, active, internalClasses*/
        42 && t !== (t = le({
          [
            /*className*/
            c[1]
          ]: !0,
          "mdc-line-ripple": !0,
          "mdc-line-ripple--active": (
            /*active*/
            c[3]
          ),
          .../*internalClasses*/
          c[5]
        })) && { class: t },
        l & /*internalStyles, style*/
        68 && s !== (s = Object.entries(
          /*internalStyles*/
          c[6]
        ).map(ai).concat([
          /*style*/
          c[2]
        ]).join(" ")) && { style: s },
        l & /*$$restProps*/
        256 && /*$$restProps*/
        c[8]
      ])), a && Fe(a.update) && l & /*use*/
      1 && a.update.call(
        null,
        /*use*/
        c[0]
      );
    },
    i: Le,
    o: Le,
    d(c) {
      c && F(e), n[13](null), r = !1, ze(o);
    }
  };
}
const ai = ([n, e]) => `${n}: ${e};`;
function oC(n, e, t) {
  const s = [
    "use",
    "class",
    "style",
    "active",
    "activate",
    "deactivate",
    "setRippleCenter",
    "getElement"
  ];
  let a = Te(e, s);
  const r = lt(tt());
  let { use: o = [] } = e, { class: i = "" } = e, { style: d = "" } = e, { active: c = !1 } = e, l, C, u = {}, m = {};
  at(() => (C = new zl({
    addClass: D,
    removeClass: _,
    hasClass: p,
    setStyle: A,
    registerEventHandler: (I, N) => E().addEventListener(I, N),
    deregisterEventHandler: (I, N) => E().removeEventListener(I, N)
  }), C.init(), () => {
    C.destroy();
  }));
  function p(I) {
    return I in u ? u[I] : E().classList.contains(I);
  }
  function D(I) {
    u[I] || t(5, u[I] = !0, u);
  }
  function _(I) {
    (!(I in u) || u[I]) && t(5, u[I] = !1, u);
  }
  function A(I, N) {
    m[I] != N && (N === "" || N == null ? (delete m[I], t(6, m)) : t(6, m[I] = N, m));
  }
  function b() {
    C.activate();
  }
  function S() {
    C.deactivate();
  }
  function f(I) {
    C.setRippleCenter(I);
  }
  function E() {
    return l;
  }
  function y(I) {
    de[I ? "unshift" : "push"](() => {
      l = I, t(4, l);
    });
  }
  return n.$$set = (I) => {
    e = te(te({}, e), ct(I)), t(8, a = Te(e, s)), "use" in I && t(0, o = I.use), "class" in I && t(1, i = I.class), "style" in I && t(2, d = I.style), "active" in I && t(3, c = I.active);
  }, [
    o,
    i,
    d,
    c,
    l,
    u,
    m,
    r,
    a,
    b,
    S,
    f,
    E,
    y
  ];
}
class dC extends me {
  constructor(e) {
    super(), ue(this, e, oC, iC, Ce, {
      use: 0,
      class: 1,
      style: 2,
      active: 3,
      activate: 9,
      deactivate: 10,
      setRippleCenter: 11,
      getElement: 12
    });
  }
  get activate() {
    return this.$$.ctx[9];
  }
  get deactivate() {
    return this.$$.ctx[10];
  }
  get setRippleCenter() {
    return this.$$.ctx[11];
  }
  get getElement() {
    return this.$$.ctx[12];
  }
}
function ri(n) {
  let e, t, s;
  const a = (
    /*#slots*/
    n[15].default
  ), r = Pe(
    a,
    n,
    /*$$scope*/
    n[14],
    null
  );
  return {
    c() {
      e = Z("div"), r && r.c(), R(e, "class", "mdc-notched-outline__notch"), R(e, "style", t = Object.entries(
        /*notchStyles*/
        n[7]
      ).map(ii).join(" "));
    },
    m(o, i) {
      G(o, e, i), r && r.m(e, null), s = !0;
    },
    p(o, i) {
      r && r.p && (!s || i & /*$$scope*/
      16384) && Me(
        r,
        a,
        o,
        /*$$scope*/
        o[14],
        s ? ve(
          a,
          /*$$scope*/
          o[14],
          i,
          null
        ) : Re(
          /*$$scope*/
          o[14]
        ),
        null
      ), (!s || i & /*notchStyles*/
      128 && t !== (t = Object.entries(
        /*notchStyles*/
        o[7]
      ).map(ii).join(" "))) && R(e, "style", t);
    },
    i(o) {
      s || (L(r, o), s = !0);
    },
    o(o) {
      h(r, o), s = !1;
    },
    d(o) {
      o && F(e), r && r.d(o);
    }
  };
}
function cC(n) {
  let e, t, s, a, r, o, i, d, c, l, C = !/*noLabel*/
  n[3] && ri(n), u = [
    {
      class: o = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-notched-outline": !0,
        "mdc-notched-outline--notched": (
          /*notched*/
          n[2]
        ),
        "mdc-notched-outline--no-label": (
          /*noLabel*/
          n[3]
        ),
        .../*internalClasses*/
        n[6]
      })
    },
    /*$$restProps*/
    n[10]
  ], m = {};
  for (let p = 0; p < u.length; p += 1)
    m = te(m, u[p]);
  return {
    c() {
      e = Z("div"), t = Z("div"), s = $(), C && C.c(), a = $(), r = Z("div"), R(t, "class", "mdc-notched-outline__leading"), R(r, "class", "mdc-notched-outline__trailing"), Ae(e, m);
    },
    m(p, D) {
      G(p, e, D), U(e, t), U(e, s), C && C.m(e, null), U(e, a), U(e, r), n[16](e), d = !0, c || (l = [
        De(i = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[8].call(null, e)
        ),
        ce(
          e,
          "SMUIFloatingLabel:mount",
          /*handleFloatingLabelMount*/
          n[9]
        ),
        ce(
          e,
          "SMUIFloatingLabel:unmount",
          /*SMUIFloatingLabel_unmount_handler*/
          n[17]
        )
      ], c = !0);
    },
    p(p, [D]) {
      /*noLabel*/
      p[3] ? C && (he(), h(C, 1, 1, () => {
        C = null;
      }), ye()) : C ? (C.p(p, D), D & /*noLabel*/
      8 && L(C, 1)) : (C = ri(p), C.c(), L(C, 1), C.m(e, a)), Ae(e, m = Ee(u, [
        (!d || D & /*className, notched, noLabel, internalClasses*/
        78 && o !== (o = le({
          [
            /*className*/
            p[1]
          ]: !0,
          "mdc-notched-outline": !0,
          "mdc-notched-outline--notched": (
            /*notched*/
            p[2]
          ),
          "mdc-notched-outline--no-label": (
            /*noLabel*/
            p[3]
          ),
          .../*internalClasses*/
          p[6]
        }))) && { class: o },
        D & /*$$restProps*/
        1024 && /*$$restProps*/
        p[10]
      ])), i && Fe(i.update) && D & /*use*/
      1 && i.update.call(
        null,
        /*use*/
        p[0]
      );
    },
    i(p) {
      d || (L(C), d = !0);
    },
    o(p) {
      h(C), d = !1;
    },
    d(p) {
      p && F(e), C && C.d(), n[16](null), c = !1, ze(l);
    }
  };
}
const ii = ([n, e]) => `${n}: ${e};`;
function lC(n, e, t) {
  const s = ["use", "class", "notched", "noLabel", "notch", "closeNotch", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  const i = lt(tt());
  let { use: d = [] } = e, { class: c = "" } = e, { notched: l = !1 } = e, { noLabel: C = !1 } = e, u, m, p, D = {}, _ = {};
  at(() => (m = new Yl({
    addClass: b,
    removeClass: S,
    setNotchWidthProperty: (O) => f("width", O + "px"),
    removeNotchWidthProperty: () => E("width")
  }), m.init(), () => {
    m.destroy();
  }));
  function A(O) {
    t(4, p = O.detail);
  }
  function b(O) {
    D[O] || t(6, D[O] = !0, D);
  }
  function S(O) {
    (!(O in D) || D[O]) && t(6, D[O] = !1, D);
  }
  function f(O, M) {
    _[O] != M && (M === "" || M == null ? (delete _[O], t(7, _)) : t(7, _[O] = M, _));
  }
  function E(O) {
    O in _ && (delete _[O], t(7, _));
  }
  function y(O) {
    m.notch(O);
  }
  function I() {
    m.closeNotch();
  }
  function N() {
    return u;
  }
  function j(O) {
    de[O ? "unshift" : "push"](() => {
      u = O, t(5, u);
    });
  }
  const v = () => t(4, p = void 0);
  return n.$$set = (O) => {
    e = te(te({}, e), ct(O)), t(10, a = Te(e, s)), "use" in O && t(0, d = O.use), "class" in O && t(1, c = O.class), "notched" in O && t(2, l = O.notched), "noLabel" in O && t(3, C = O.noLabel), "$$scope" in O && t(14, o = O.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty & /*floatingLabel*/
    16 && (p ? (p.addStyle("transition-duration", "0s"), b("mdc-notched-outline--upgraded"), requestAnimationFrame(() => {
      p && p.removeStyle("transition-duration");
    })) : S("mdc-notched-outline--upgraded"));
  }, [
    d,
    c,
    l,
    C,
    p,
    u,
    D,
    _,
    i,
    A,
    a,
    y,
    I,
    N,
    o,
    r,
    j,
    v
  ];
}
class CC extends me {
  constructor(e) {
    super(), ue(this, e, lC, cC, Ce, {
      use: 0,
      class: 1,
      notched: 2,
      noLabel: 3,
      notch: 11,
      closeNotch: 12,
      getElement: 13
    });
  }
  get notch() {
    return this.$$.ctx[11];
  }
  get closeNotch() {
    return this.$$.ctx[12];
  }
  get getElement() {
    return this.$$.ctx[13];
  }
}
function uC(n) {
  let e;
  const t = (
    /*#slots*/
    n[11].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[13],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r & /*$$scope*/
      8192) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[13],
        e ? ve(
          t,
          /*$$scope*/
          a[13],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[13]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function mC(n) {
  let e, t, s;
  const a = [
    { tag: (
      /*tag*/
      n[3]
    ) },
    {
      use: [
        /*forwardEvents*/
        n[8],
        .../*use*/
        n[0]
      ]
    },
    {
      class: le({
        [
          /*className*/
          n[1]
        ]: !0,
        [
          /*smuiClass*/
          n[6]
        ]: !0,
        .../*smuiClassMap*/
        n[5]
      })
    },
    /*props*/
    n[7],
    /*$$restProps*/
    n[9]
  ];
  var r = (
    /*component*/
    n[2]
  );
  function o(i, d) {
    let c = {
      $$slots: { default: [uC] },
      $$scope: { ctx: i }
    };
    for (let l = 0; l < a.length; l += 1)
      c = te(c, a[l]);
    return d !== void 0 && d & /*tag, forwardEvents, use, className, smuiClass, smuiClassMap, props, $$restProps*/
    1003 && (c = te(c, Ee(a, [
      d & /*tag*/
      8 && { tag: (
        /*tag*/
        i[3]
      ) },
      d & /*forwardEvents, use*/
      257 && {
        use: [
          /*forwardEvents*/
          i[8],
          .../*use*/
          i[0]
        ]
      },
      d & /*className, smuiClass, smuiClassMap*/
      98 && {
        class: le({
          [
            /*className*/
            i[1]
          ]: !0,
          [
            /*smuiClass*/
            i[6]
          ]: !0,
          .../*smuiClassMap*/
          i[5]
        })
      },
      d & /*props*/
      128 && Ne(
        /*props*/
        i[7]
      ),
      d & /*$$restProps*/
      512 && Ne(
        /*$$restProps*/
        i[9]
      )
    ]))), { props: c };
  }
  return r && (e = Gt(r, o(n)), n[12](e)), {
    c() {
      e && X(e.$$.fragment), t = st();
    },
    m(i, d) {
      e && q(e, i, d), G(i, t, d), s = !0;
    },
    p(i, [d]) {
      if (d & /*component*/
      4 && r !== (r = /*component*/
      i[2])) {
        if (e) {
          he();
          const c = e;
          h(c.$$.fragment, 1, 0, () => {
            z(c, 1);
          }), ye();
        }
        r ? (e = Gt(r, o(i, d)), i[12](e), X(e.$$.fragment), L(e.$$.fragment, 1), q(e, t.parentNode, t)) : e = null;
      } else if (r) {
        const c = d & /*tag, forwardEvents, use, className, smuiClass, smuiClassMap, props, $$restProps*/
        1003 ? Ee(a, [
          d & /*tag*/
          8 && { tag: (
            /*tag*/
            i[3]
          ) },
          d & /*forwardEvents, use*/
          257 && {
            use: [
              /*forwardEvents*/
              i[8],
              .../*use*/
              i[0]
            ]
          },
          d & /*className, smuiClass, smuiClassMap*/
          98 && {
            class: le({
              [
                /*className*/
                i[1]
              ]: !0,
              [
                /*smuiClass*/
                i[6]
              ]: !0,
              .../*smuiClassMap*/
              i[5]
            })
          },
          d & /*props*/
          128 && Ne(
            /*props*/
            i[7]
          ),
          d & /*$$restProps*/
          512 && Ne(
            /*$$restProps*/
            i[9]
          )
        ]) : {};
        d & /*$$scope*/
        8192 && (c.$$scope = { dirty: d, ctx: i }), e.$set(c);
      }
    },
    i(i) {
      s || (e && L(e.$$.fragment, i), s = !0);
    },
    o(i) {
      e && h(e.$$.fragment, i), s = !1;
    },
    d(i) {
      i && F(t), n[12](null), e && z(e, i);
    }
  };
}
const In = {
  component: tn,
  tag: "div",
  class: "",
  classMap: {},
  contexts: {},
  props: {}
};
function pC(n, e, t) {
  const s = ["use", "class", "component", "tag", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e, { use: i = [] } = e, { class: d = "" } = e, c;
  const l = In.class, C = {}, u = [], m = In.contexts, p = In.props;
  let { component: D = In.component } = e, { tag: _ = D === tn ? In.tag : void 0 } = e;
  Object.entries(In.classMap).forEach(([f, E]) => {
    const y = Qe(E);
    y && "subscribe" in y && u.push(y.subscribe((I) => {
      t(5, C[f] = I, C);
    }));
  });
  const A = lt(tt());
  for (let f in m)
    m.hasOwnProperty(f) && qe(f, m[f]);
  an(() => {
    for (const f of u)
      f();
  });
  function b() {
    return c.getElement();
  }
  function S(f) {
    de[f ? "unshift" : "push"](() => {
      c = f, t(4, c);
    });
  }
  return n.$$set = (f) => {
    e = te(te({}, e), ct(f)), t(9, a = Te(e, s)), "use" in f && t(0, i = f.use), "class" in f && t(1, d = f.class), "component" in f && t(2, D = f.component), "tag" in f && t(3, _ = f.tag), "$$scope" in f && t(13, o = f.$$scope);
  }, [
    i,
    d,
    D,
    _,
    c,
    C,
    l,
    p,
    A,
    a,
    b,
    r,
    S,
    o
  ];
}
class _C extends me {
  constructor(e) {
    super(), ue(this, e, pC, mC, Ce, {
      use: 0,
      class: 1,
      component: 2,
      tag: 3,
      getElement: 10
    });
  }
  get getElement() {
    return this.$$.ctx[10];
  }
}
const oi = Object.assign({}, In);
function Pt(n) {
  return new Proxy(_C, {
    construct: function(e, t) {
      return Object.assign(In, oi, n), new e(...t);
    },
    get: function(e, t) {
      return Object.assign(In, oi, n), e[t];
    }
  });
}
const IC = Pt({
  class: "mdc-text-field-helper-line",
  tag: "div"
}), DC = Pt({
  class: "mdc-text-field__affix mdc-text-field__affix--prefix",
  tag: "span"
}), bC = Pt({
  class: "mdc-text-field__affix mdc-text-field__affix--suffix",
  tag: "span"
});
function fC(n) {
  let e, t, s, a, r, o = [
    {
      class: t = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-text-field__input": !0
      })
    },
    { type: (
      /*type*/
      n[2]
    ) },
    { placeholder: (
      /*placeholder*/
      n[3]
    ) },
    /*valueProp*/
    n[4],
    /*internalAttrs*/
    n[6],
    /*$$restProps*/
    n[10]
  ], i = {};
  for (let d = 0; d < o.length; d += 1)
    i = te(i, o[d]);
  return {
    c() {
      e = Z("input"), Ae(e, i);
    },
    m(d, c) {
      G(d, e, c), e.autofocus && e.focus(), n[26](e), a || (r = [
        De(s = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[7].call(null, e)
        ),
        ce(
          e,
          "input",
          /*input_handler*/
          n[27]
        ),
        ce(
          e,
          "change",
          /*changeHandler*/
          n[9]
        ),
        ce(
          e,
          "blur",
          /*blur_handler*/
          n[24]
        ),
        ce(
          e,
          "focus",
          /*focus_handler*/
          n[25]
        )
      ], a = !0);
    },
    p(d, [c]) {
      Ae(e, i = Ee(o, [
        c & /*className*/
        2 && t !== (t = le({
          [
            /*className*/
            d[1]
          ]: !0,
          "mdc-text-field__input": !0
        })) && { class: t },
        c & /*type*/
        4 && { type: (
          /*type*/
          d[2]
        ) },
        c & /*placeholder*/
        8 && { placeholder: (
          /*placeholder*/
          d[3]
        ) },
        c & /*valueProp*/
        16 && /*valueProp*/
        d[4],
        c & /*internalAttrs*/
        64 && /*internalAttrs*/
        d[6],
        c & /*$$restProps*/
        1024 && /*$$restProps*/
        d[10]
      ])), s && Fe(s.update) && c & /*use*/
      1 && s.update.call(
        null,
        /*use*/
        d[0]
      );
    },
    i: Le,
    o: Le,
    d(d) {
      d && F(e), n[26](null), a = !1, ze(r);
    }
  };
}
function AC(n) {
  return n === "" ? Number.NaN : +n;
}
function EC(n, e, t) {
  const s = [
    "use",
    "class",
    "type",
    "placeholder",
    "value",
    "files",
    "dirty",
    "invalid",
    "updateInvalid",
    "emptyValueNull",
    "emptyValueUndefined",
    "getAttr",
    "addAttr",
    "removeAttr",
    "focus",
    "blur",
    "getElement"
  ];
  let a = Te(e, s);
  const r = lt(tt());
  let o = () => {
  };
  function i(T) {
    return T === o;
  }
  let { use: d = [] } = e, { class: c = "" } = e, { type: l = "text" } = e, { placeholder: C = " " } = e, { value: u = o } = e;
  const m = i(u);
  m && (u = "");
  let { files: p = null } = e, { dirty: D = !1 } = e, { invalid: _ = !1 } = e, { updateInvalid: A = !0 } = e, { emptyValueNull: b = u === null } = e;
  m && b && (u = null);
  let { emptyValueUndefined: S = u === void 0 } = e;
  m && S && (u = void 0);
  let f, E = {}, y = {};
  at(() => {
    A && t(14, _ = f.matches(":invalid"));
  });
  function I(T) {
    if (l === "file") {
      t(12, p = T.currentTarget.files);
      return;
    }
    if (T.currentTarget.value === "" && b) {
      t(11, u = null);
      return;
    }
    if (T.currentTarget.value === "" && S) {
      t(11, u = void 0);
      return;
    }
    switch (l) {
      case "number":
      case "range":
        t(11, u = AC(T.currentTarget.value));
        break;
      default:
        t(11, u = T.currentTarget.value);
        break;
    }
  }
  function N(T) {
    (l === "file" || l === "range") && I(T), t(13, D = !0), A && t(14, _ = f.matches(":invalid"));
  }
  function j(T) {
    var Y;
    return T in E ? (Y = E[T]) !== null && Y !== void 0 ? Y : null : g().getAttribute(T);
  }
  function v(T, Y) {
    E[T] !== Y && t(6, E[T] = Y, E);
  }
  function O(T) {
    (!(T in E) || E[T] != null) && t(6, E[T] = void 0, E);
  }
  function M() {
    g().focus();
  }
  function P() {
    g().blur();
  }
  function g() {
    return f;
  }
  function W(T) {
    Cn.call(this, n, T);
  }
  function B(T) {
    Cn.call(this, n, T);
  }
  function H(T) {
    de[T ? "unshift" : "push"](() => {
      f = T, t(5, f);
    });
  }
  const w = (T) => l !== "file" && I(T);
  return n.$$set = (T) => {
    e = te(te({}, e), ct(T)), t(10, a = Te(e, s)), "use" in T && t(0, d = T.use), "class" in T && t(1, c = T.class), "type" in T && t(2, l = T.type), "placeholder" in T && t(3, C = T.placeholder), "value" in T && t(11, u = T.value), "files" in T && t(12, p = T.files), "dirty" in T && t(13, D = T.dirty), "invalid" in T && t(14, _ = T.invalid), "updateInvalid" in T && t(15, A = T.updateInvalid), "emptyValueNull" in T && t(16, b = T.emptyValueNull), "emptyValueUndefined" in T && t(17, S = T.emptyValueUndefined);
  }, n.$$.update = () => {
    n.$$.dirty & /*type, valueProp, value*/
    2068 && (l === "file" ? (delete y.value, t(4, y), t(2, l), t(11, u)) : t(4, y.value = u ?? "", y));
  }, [
    d,
    c,
    l,
    C,
    y,
    f,
    E,
    r,
    I,
    N,
    a,
    u,
    p,
    D,
    _,
    A,
    b,
    S,
    j,
    v,
    O,
    M,
    P,
    g,
    W,
    B,
    H,
    w
  ];
}
class OC extends me {
  constructor(e) {
    super(), ue(this, e, EC, fC, Ce, {
      use: 0,
      class: 1,
      type: 2,
      placeholder: 3,
      value: 11,
      files: 12,
      dirty: 13,
      invalid: 14,
      updateInvalid: 15,
      emptyValueNull: 16,
      emptyValueUndefined: 17,
      getAttr: 18,
      addAttr: 19,
      removeAttr: 20,
      focus: 21,
      blur: 22,
      getElement: 23
    });
  }
  get getAttr() {
    return this.$$.ctx[18];
  }
  get addAttr() {
    return this.$$.ctx[19];
  }
  get removeAttr() {
    return this.$$.ctx[20];
  }
  get focus() {
    return this.$$.ctx[21];
  }
  get blur() {
    return this.$$.ctx[22];
  }
  get getElement() {
    return this.$$.ctx[23];
  }
}
function SC(n) {
  let e, t, s, a, r, o, i = [
    {
      class: t = le({
        [
          /*className*/
          n[2]
        ]: !0,
        "mdc-text-field__input": !0
      })
    },
    {
      style: s = `${/*resizable*/
      n[4] ? "" : "resize: none; "}${/*style*/
      n[3]}`
    },
    /*internalAttrs*/
    n[6],
    /*$$restProps*/
    n[9]
  ], d = {};
  for (let c = 0; c < i.length; c += 1)
    d = te(d, i[c]);
  return {
    c() {
      e = Z("textarea"), Ae(e, d);
    },
    m(c, l) {
      G(c, e, l), e.autofocus && e.focus(), n[21](e), Hr(
        e,
        /*value*/
        n[0]
      ), r || (o = [
        De(a = rt.call(
          null,
          e,
          /*use*/
          n[1]
        )),
        De(
          /*forwardEvents*/
          n[7].call(null, e)
        ),
        ce(
          e,
          "change",
          /*changeHandler*/
          n[8]
        ),
        ce(
          e,
          "blur",
          /*blur_handler*/
          n[19]
        ),
        ce(
          e,
          "focus",
          /*focus_handler*/
          n[20]
        ),
        ce(
          e,
          "input",
          /*textarea_input_handler*/
          n[22]
        )
      ], r = !0);
    },
    p(c, [l]) {
      Ae(e, d = Ee(i, [
        l & /*className*/
        4 && t !== (t = le({
          [
            /*className*/
            c[2]
          ]: !0,
          "mdc-text-field__input": !0
        })) && { class: t },
        l & /*resizable, style*/
        24 && s !== (s = `${/*resizable*/
        c[4] ? "" : "resize: none; "}${/*style*/
        c[3]}`) && { style: s },
        l & /*internalAttrs*/
        64 && /*internalAttrs*/
        c[6],
        l & /*$$restProps*/
        512 && /*$$restProps*/
        c[9]
      ])), a && Fe(a.update) && l & /*use*/
      2 && a.update.call(
        null,
        /*use*/
        c[1]
      ), l & /*value*/
      1 && Hr(
        e,
        /*value*/
        c[0]
      );
    },
    i: Le,
    o: Le,
    d(c) {
      c && F(e), n[21](null), r = !1, ze(o);
    }
  };
}
function LC(n, e, t) {
  const s = [
    "use",
    "class",
    "style",
    "value",
    "dirty",
    "invalid",
    "updateInvalid",
    "resizable",
    "getAttr",
    "addAttr",
    "removeAttr",
    "focus",
    "blur",
    "getElement"
  ];
  let a = Te(e, s);
  const r = lt(tt());
  let { use: o = [] } = e, { class: i = "" } = e, { style: d = "" } = e, { value: c = "" } = e, { dirty: l = !1 } = e, { invalid: C = !1 } = e, { updateInvalid: u = !0 } = e, { resizable: m = !0 } = e, p, D = {};
  at(() => {
    u && t(11, C = p.matches(":invalid"));
  });
  function _() {
    t(10, l = !0), u && t(11, C = p.matches(":invalid"));
  }
  function A(O) {
    var M;
    return O in D ? (M = D[O]) !== null && M !== void 0 ? M : null : y().getAttribute(O);
  }
  function b(O, M) {
    D[O] !== M && t(6, D[O] = M, D);
  }
  function S(O) {
    (!(O in D) || D[O] != null) && t(6, D[O] = void 0, D);
  }
  function f() {
    y().focus();
  }
  function E() {
    y().blur();
  }
  function y() {
    return p;
  }
  function I(O) {
    Cn.call(this, n, O);
  }
  function N(O) {
    Cn.call(this, n, O);
  }
  function j(O) {
    de[O ? "unshift" : "push"](() => {
      p = O, t(5, p);
    });
  }
  function v() {
    c = this.value, t(0, c);
  }
  return n.$$set = (O) => {
    e = te(te({}, e), ct(O)), t(9, a = Te(e, s)), "use" in O && t(1, o = O.use), "class" in O && t(2, i = O.class), "style" in O && t(3, d = O.style), "value" in O && t(0, c = O.value), "dirty" in O && t(10, l = O.dirty), "invalid" in O && t(11, C = O.invalid), "updateInvalid" in O && t(12, u = O.updateInvalid), "resizable" in O && t(4, m = O.resizable);
  }, [
    c,
    o,
    i,
    d,
    m,
    p,
    D,
    r,
    _,
    a,
    l,
    C,
    u,
    A,
    b,
    S,
    f,
    E,
    y,
    I,
    N,
    j,
    v
  ];
}
class gC extends me {
  constructor(e) {
    super(), ue(this, e, LC, SC, Ce, {
      use: 1,
      class: 2,
      style: 3,
      value: 0,
      dirty: 10,
      invalid: 11,
      updateInvalid: 12,
      resizable: 4,
      getAttr: 13,
      addAttr: 14,
      removeAttr: 15,
      focus: 16,
      blur: 17,
      getElement: 18
    });
  }
  get getAttr() {
    return this.$$.ctx[13];
  }
  get addAttr() {
    return this.$$.ctx[14];
  }
  get removeAttr() {
    return this.$$.ctx[15];
  }
  get focus() {
    return this.$$.ctx[16];
  }
  get blur() {
    return this.$$.ctx[17];
  }
  get getElement() {
    return this.$$.ctx[18];
  }
}
const hC = (n) => ({}), di = (n) => ({}), yC = (n) => ({}), ci = (n) => ({}), NC = (n) => ({}), li = (n) => ({}), TC = (n) => ({}), Ci = (n) => ({}), PC = (n) => ({}), ui = (n) => ({}), vC = (n) => ({}), mi = (n) => ({}), MC = (n) => ({}), pi = (n) => ({}), RC = (n) => ({}), _i = (n) => ({}), FC = (n) => ({}), Ii = (n) => ({}), GC = (n) => ({}), Di = (n) => ({}), VC = (n) => ({}), bi = (n) => ({}), jC = (n) => ({}), fi = (n) => ({});
function kC(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m, p;
  const D = (
    /*#slots*/
    n[56].label
  ), _ = Pe(
    D,
    n,
    /*$$scope*/
    n[87],
    ui
  );
  s = new Qs({
    props: {
      key: "SMUI:textfield:icon:leading",
      value: !0,
      $$slots: { default: [BC] },
      $$scope: { ctx: n }
    }
  });
  const A = (
    /*#slots*/
    n[56].default
  ), b = Pe(
    A,
    n,
    /*$$scope*/
    n[87],
    null
  );
  o = new Qs({
    props: {
      key: "SMUI:textfield:icon:leading",
      value: !1,
      $$slots: { default: [UC] },
      $$scope: { ctx: n }
    }
  });
  const S = (
    /*#slots*/
    n[56].ripple
  ), f = Pe(
    S,
    n,
    /*$$scope*/
    n[87],
    ci
  );
  let E = [
    {
      class: d = le({
        [
          /*className*/
          n[9]
        ]: !0,
        "mdc-text-field": !0,
        "mdc-text-field--disabled": (
          /*disabled*/
          n[12]
        ),
        "mdc-text-field--textarea": (
          /*textarea*/
          n[14]
        ),
        "mdc-text-field--filled": (
          /*variant*/
          n[15] === "filled"
        ),
        "mdc-text-field--outlined": (
          /*variant*/
          n[15] === "outlined"
        ),
        "smui-text-field--standard": (
          /*variant*/
          n[15] === "standard" && !/*textarea*/
          n[14]
        ),
        "mdc-text-field--no-label": (
          /*noLabel*/
          n[16] || !/*$$slots*/
          n[47].label
        ),
        "mdc-text-field--with-leading-icon": (
          /*$$slots*/
          n[47].leadingIcon
        ),
        "mdc-text-field--with-trailing-icon": (
          /*$$slots*/
          n[47].trailingIcon
        ),
        "mdc-text-field--invalid": (
          /*invalid*/
          n[1]
        ),
        .../*internalClasses*/
        n[25]
      })
    },
    {
      style: c = Object.entries(
        /*internalStyles*/
        n[26]
      ).map(Pi).concat([
        /*style*/
        n[10]
      ]).join(" ")
    },
    jt(
      /*$$restProps*/
      n[46],
      ["input$", "label$", "ripple$", "outline$", "helperLine$"]
    )
  ], y = {};
  for (let I = 0; I < E.length; I += 1)
    y = te(y, E[I]);
  return {
    c() {
      e = Z("div"), _ && _.c(), t = $(), X(s.$$.fragment), a = $(), b && b.c(), r = $(), X(o.$$.fragment), i = $(), f && f.c(), Ae(e, y);
    },
    m(I, N) {
      G(I, e, N), _ && _.m(e, null), U(e, t), q(s, e, null), U(e, a), b && b.m(e, null), U(e, r), q(o, e, null), U(e, i), f && f.m(e, null), n[82](e), u = !0, m || (p = [
        De(l = Yt.call(null, e, {
          ripple: (
            /*ripple*/
            n[11]
          ),
          unbounded: !1,
          addClass: (
            /*addClass*/
            n[43]
          ),
          removeClass: (
            /*removeClass*/
            n[44]
          ),
          addStyle: (
            /*addStyle*/
            n[45]
          )
        })),
        De(C = rt.call(
          null,
          e,
          /*use*/
          n[8]
        )),
        De(
          /*forwardEvents*/
          n[34].call(null, e)
        ),
        ce(
          e,
          "SMUITextfieldLeadingIcon:mount",
          /*handleLeadingIconMount*/
          n[38]
        ),
        ce(
          e,
          "SMUITextfieldLeadingIcon:unmount",
          /*SMUITextfieldLeadingIcon_unmount_handler_1*/
          n[83]
        ),
        ce(
          e,
          "SMUITextfieldTrailingIcon:mount",
          /*handleTrailingIconMount*/
          n[39]
        ),
        ce(
          e,
          "SMUITextfieldTrailingIcon:unmount",
          /*SMUITextfieldTrailingIcon_unmount_handler_1*/
          n[84]
        )
      ], m = !0);
    },
    p(I, N) {
      _ && _.p && (!u || N[2] & /*$$scope*/
      33554432) && Me(
        _,
        D,
        I,
        /*$$scope*/
        I[87],
        u ? ve(
          D,
          /*$$scope*/
          I[87],
          N,
          PC
        ) : Re(
          /*$$scope*/
          I[87]
        ),
        ui
      );
      const j = {};
      N[2] & /*$$scope*/
      33554432 && (j.$$scope = { dirty: N, ctx: I }), s.$set(j), b && b.p && (!u || N[2] & /*$$scope*/
      33554432) && Me(
        b,
        A,
        I,
        /*$$scope*/
        I[87],
        u ? ve(
          A,
          /*$$scope*/
          I[87],
          N,
          null
        ) : Re(
          /*$$scope*/
          I[87]
        ),
        null
      );
      const v = {};
      N[2] & /*$$scope*/
      33554432 && (v.$$scope = { dirty: N, ctx: I }), o.$set(v), f && f.p && (!u || N[2] & /*$$scope*/
      33554432) && Me(
        f,
        S,
        I,
        /*$$scope*/
        I[87],
        u ? ve(
          S,
          /*$$scope*/
          I[87],
          N,
          yC
        ) : Re(
          /*$$scope*/
          I[87]
        ),
        ci
      ), Ae(e, y = Ee(E, [
        (!u || N[0] & /*className, disabled, textarea, variant, noLabel, invalid, internalClasses*/
        33673730 | N[1] & /*$$slots*/
        65536 && d !== (d = le({
          [
            /*className*/
            I[9]
          ]: !0,
          "mdc-text-field": !0,
          "mdc-text-field--disabled": (
            /*disabled*/
            I[12]
          ),
          "mdc-text-field--textarea": (
            /*textarea*/
            I[14]
          ),
          "mdc-text-field--filled": (
            /*variant*/
            I[15] === "filled"
          ),
          "mdc-text-field--outlined": (
            /*variant*/
            I[15] === "outlined"
          ),
          "smui-text-field--standard": (
            /*variant*/
            I[15] === "standard" && !/*textarea*/
            I[14]
          ),
          "mdc-text-field--no-label": (
            /*noLabel*/
            I[16] || !/*$$slots*/
            I[47].label
          ),
          "mdc-text-field--with-leading-icon": (
            /*$$slots*/
            I[47].leadingIcon
          ),
          "mdc-text-field--with-trailing-icon": (
            /*$$slots*/
            I[47].trailingIcon
          ),
          "mdc-text-field--invalid": (
            /*invalid*/
            I[1]
          ),
          .../*internalClasses*/
          I[25]
        }))) && { class: d },
        (!u || N[0] & /*internalStyles, style*/
        67109888 && c !== (c = Object.entries(
          /*internalStyles*/
          I[26]
        ).map(Pi).concat([
          /*style*/
          I[10]
        ]).join(" "))) && { style: c },
        N[1] & /*$$restProps*/
        32768 && jt(
          /*$$restProps*/
          I[46],
          ["input$", "label$", "ripple$", "outline$", "helperLine$"]
        )
      ])), l && Fe(l.update) && N[0] & /*ripple*/
      2048 && l.update.call(null, {
        ripple: (
          /*ripple*/
          I[11]
        ),
        unbounded: !1,
        addClass: (
          /*addClass*/
          I[43]
        ),
        removeClass: (
          /*removeClass*/
          I[44]
        ),
        addStyle: (
          /*addStyle*/
          I[45]
        )
      }), C && Fe(C.update) && N[0] & /*use*/
      256 && C.update.call(
        null,
        /*use*/
        I[8]
      );
    },
    i(I) {
      u || (L(_, I), L(s.$$.fragment, I), L(b, I), L(o.$$.fragment, I), L(f, I), u = !0);
    },
    o(I) {
      h(_, I), h(s.$$.fragment, I), h(b, I), h(o.$$.fragment, I), h(f, I), u = !1;
    },
    d(I) {
      I && F(e), _ && _.d(I), z(s), b && b.d(I), z(o), f && f.d(I), n[82](null), m = !1, ze(p);
    }
  };
}
function wC(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m, p, D, _, A, b, S = !/*textarea*/
  n[14] && /*variant*/
  n[15] !== "outlined" && Ai(n), f = (
    /*textarea*/
    (n[14] || /*variant*/
    n[15] === "outlined") && Si(n)
  );
  a = new Qs({
    props: {
      key: "SMUI:textfield:icon:leading",
      value: !0,
      $$slots: { default: [qC] },
      $$scope: { ctx: n }
    }
  });
  const E = (
    /*#slots*/
    n[56].default
  ), y = Pe(
    E,
    n,
    /*$$scope*/
    n[87],
    null
  ), I = [XC, zC], N = [];
  function j(P, g) {
    return (
      /*textarea*/
      P[14] && typeof /*value*/
      P[0] == "string" ? 0 : 1
    );
  }
  i = j(n), d = N[i] = I[i](n), l = new Qs({
    props: {
      key: "SMUI:textfield:icon:leading",
      value: !1,
      $$slots: { default: [QC] },
      $$scope: { ctx: n }
    }
  });
  let v = !/*textarea*/
  n[14] && /*variant*/
  n[15] !== "outlined" && /*ripple*/
  n[11] && yi(n), O = [
    {
      class: u = le({
        [
          /*className*/
          n[9]
        ]: !0,
        "mdc-text-field": !0,
        "mdc-text-field--disabled": (
          /*disabled*/
          n[12]
        ),
        "mdc-text-field--textarea": (
          /*textarea*/
          n[14]
        ),
        "mdc-text-field--filled": (
          /*variant*/
          n[15] === "filled"
        ),
        "mdc-text-field--outlined": (
          /*variant*/
          n[15] === "outlined"
        ),
        "smui-text-field--standard": (
          /*variant*/
          n[15] === "standard" && !/*textarea*/
          n[14]
        ),
        "mdc-text-field--no-label": (
          /*noLabel*/
          n[16] || /*label*/
          n[17] == null && !/*$$slots*/
          n[47].label
        ),
        "mdc-text-field--label-floating": (
          /*focused*/
          n[28] || /*value*/
          n[0] != null && /*value*/
          n[0] !== ""
        ),
        "mdc-text-field--with-leading-icon": (
          /*isUninitializedValue*/
          n[35](
            /*withLeadingIcon*/
            n[22]
          ) ? (
            /*$$slots*/
            n[47].leadingIcon
          ) : (
            /*withLeadingIcon*/
            n[22]
          )
        ),
        "mdc-text-field--with-trailing-icon": (
          /*isUninitializedValue*/
          n[35](
            /*withTrailingIcon*/
            n[23]
          ) ? (
            /*$$slots*/
            n[47].trailingIcon
          ) : (
            /*withTrailingIcon*/
            n[23]
          )
        ),
        "mdc-text-field--with-internal-counter": (
          /*textarea*/
          n[14] && /*$$slots*/
          n[47].internalCounter
        ),
        "mdc-text-field--invalid": (
          /*invalid*/
          n[1]
        ),
        .../*internalClasses*/
        n[25]
      })
    },
    {
      style: m = Object.entries(
        /*internalStyles*/
        n[26]
      ).map(Ti).concat([
        /*style*/
        n[10]
      ]).join(" ")
    },
    {
      for: (
        /* suppress a11y warning, since this is wrapped */
        void 0
      )
    },
    jt(
      /*$$restProps*/
      n[46],
      ["input$", "label$", "ripple$", "outline$", "helperLine$"]
    )
  ], M = {};
  for (let P = 0; P < O.length; P += 1)
    M = te(M, O[P]);
  return {
    c() {
      e = Z("label"), S && S.c(), t = $(), f && f.c(), s = $(), X(a.$$.fragment), r = $(), y && y.c(), o = $(), d.c(), c = $(), X(l.$$.fragment), C = $(), v && v.c(), Ae(e, M);
    },
    m(P, g) {
      G(P, e, g), S && S.m(e, null), U(e, t), f && f.m(e, null), U(e, s), q(a, e, null), U(e, r), y && y.m(e, null), U(e, o), N[i].m(e, null), U(e, c), q(l, e, null), U(e, C), v && v.m(e, null), n[78](e), _ = !0, A || (b = [
        De(p = Yt.call(null, e, {
          ripple: !/*textarea*/
          n[14] && /*variant*/
          n[15] === "filled",
          unbounded: !1,
          addClass: (
            /*addClass*/
            n[43]
          ),
          removeClass: (
            /*removeClass*/
            n[44]
          ),
          addStyle: (
            /*addStyle*/
            n[45]
          ),
          eventTarget: (
            /*inputElement*/
            n[33]
          ),
          activeTarget: (
            /*inputElement*/
            n[33]
          ),
          initPromise: (
            /*initPromise*/
            n[37]
          )
        })),
        De(D = rt.call(
          null,
          e,
          /*use*/
          n[8]
        )),
        De(
          /*forwardEvents*/
          n[34].call(null, e)
        ),
        ce(
          e,
          "SMUITextfieldLeadingIcon:mount",
          /*handleLeadingIconMount*/
          n[38]
        ),
        ce(
          e,
          "SMUITextfieldLeadingIcon:unmount",
          /*SMUITextfieldLeadingIcon_unmount_handler*/
          n[79]
        ),
        ce(
          e,
          "SMUITextfieldTrailingIcon:mount",
          /*handleTrailingIconMount*/
          n[39]
        ),
        ce(
          e,
          "SMUITextfieldTrailingIcon:unmount",
          /*SMUITextfieldTrailingIcon_unmount_handler*/
          n[80]
        ),
        ce(
          e,
          "SMUITextfieldCharacterCounter:mount",
          /*handleCharacterCounterMount*/
          n[40]
        ),
        ce(
          e,
          "SMUITextfieldCharacterCounter:unmount",
          /*SMUITextfieldCharacterCounter_unmount_handler*/
          n[81]
        )
      ], A = !0);
    },
    p(P, g) {
      !/*textarea*/
      P[14] && /*variant*/
      P[15] !== "outlined" ? S ? (S.p(P, g), g[0] & /*textarea, variant*/
      49152 && L(S, 1)) : (S = Ai(P), S.c(), L(S, 1), S.m(e, t)) : S && (he(), h(S, 1, 1, () => {
        S = null;
      }), ye()), /*textarea*/
      P[14] || /*variant*/
      P[15] === "outlined" ? f ? (f.p(P, g), g[0] & /*textarea, variant*/
      49152 && L(f, 1)) : (f = Si(P), f.c(), L(f, 1), f.m(e, s)) : f && (he(), h(f, 1, 1, () => {
        f = null;
      }), ye());
      const W = {};
      g[2] & /*$$scope*/
      33554432 && (W.$$scope = { dirty: g, ctx: P }), a.$set(W), y && y.p && (!_ || g[2] & /*$$scope*/
      33554432) && Me(
        y,
        E,
        P,
        /*$$scope*/
        P[87],
        _ ? ve(
          E,
          /*$$scope*/
          P[87],
          g,
          null
        ) : Re(
          /*$$scope*/
          P[87]
        ),
        null
      );
      let B = i;
      i = j(P), i === B ? N[i].p(P, g) : (he(), h(N[B], 1, 1, () => {
        N[B] = null;
      }), ye(), d = N[i], d ? d.p(P, g) : (d = N[i] = I[i](P), d.c()), L(d, 1), d.m(e, c));
      const H = {};
      g[2] & /*$$scope*/
      33554432 && (H.$$scope = { dirty: g, ctx: P }), l.$set(H), !/*textarea*/
      P[14] && /*variant*/
      P[15] !== "outlined" && /*ripple*/
      P[11] ? v ? (v.p(P, g), g[0] & /*textarea, variant, ripple*/
      51200 && L(v, 1)) : (v = yi(P), v.c(), L(v, 1), v.m(e, null)) : v && (he(), h(v, 1, 1, () => {
        v = null;
      }), ye()), Ae(e, M = Ee(O, [
        (!_ || g[0] & /*className, disabled, textarea, variant, noLabel, label, focused, value, withLeadingIcon, withTrailingIcon, invalid, internalClasses*/
        314823171 | g[1] & /*$$slots*/
        65536 && u !== (u = le({
          [
            /*className*/
            P[9]
          ]: !0,
          "mdc-text-field": !0,
          "mdc-text-field--disabled": (
            /*disabled*/
            P[12]
          ),
          "mdc-text-field--textarea": (
            /*textarea*/
            P[14]
          ),
          "mdc-text-field--filled": (
            /*variant*/
            P[15] === "filled"
          ),
          "mdc-text-field--outlined": (
            /*variant*/
            P[15] === "outlined"
          ),
          "smui-text-field--standard": (
            /*variant*/
            P[15] === "standard" && !/*textarea*/
            P[14]
          ),
          "mdc-text-field--no-label": (
            /*noLabel*/
            P[16] || /*label*/
            P[17] == null && !/*$$slots*/
            P[47].label
          ),
          "mdc-text-field--label-floating": (
            /*focused*/
            P[28] || /*value*/
            P[0] != null && /*value*/
            P[0] !== ""
          ),
          "mdc-text-field--with-leading-icon": (
            /*isUninitializedValue*/
            P[35](
              /*withLeadingIcon*/
              P[22]
            ) ? (
              /*$$slots*/
              P[47].leadingIcon
            ) : (
              /*withLeadingIcon*/
              P[22]
            )
          ),
          "mdc-text-field--with-trailing-icon": (
            /*isUninitializedValue*/
            P[35](
              /*withTrailingIcon*/
              P[23]
            ) ? (
              /*$$slots*/
              P[47].trailingIcon
            ) : (
              /*withTrailingIcon*/
              P[23]
            )
          ),
          "mdc-text-field--with-internal-counter": (
            /*textarea*/
            P[14] && /*$$slots*/
            P[47].internalCounter
          ),
          "mdc-text-field--invalid": (
            /*invalid*/
            P[1]
          ),
          .../*internalClasses*/
          P[25]
        }))) && { class: u },
        (!_ || g[0] & /*internalStyles, style*/
        67109888 && m !== (m = Object.entries(
          /*internalStyles*/
          P[26]
        ).map(Ti).concat([
          /*style*/
          P[10]
        ]).join(" "))) && { style: m },
        {
          for: (
            /* suppress a11y warning, since this is wrapped */
            void 0
          )
        },
        g[1] & /*$$restProps*/
        32768 && jt(
          /*$$restProps*/
          P[46],
          ["input$", "label$", "ripple$", "outline$", "helperLine$"]
        )
      ])), p && Fe(p.update) && g[0] & /*textarea, variant*/
      49152 | g[1] & /*inputElement*/
      4 && p.update.call(null, {
        ripple: !/*textarea*/
        P[14] && /*variant*/
        P[15] === "filled",
        unbounded: !1,
        addClass: (
          /*addClass*/
          P[43]
        ),
        removeClass: (
          /*removeClass*/
          P[44]
        ),
        addStyle: (
          /*addStyle*/
          P[45]
        ),
        eventTarget: (
          /*inputElement*/
          P[33]
        ),
        activeTarget: (
          /*inputElement*/
          P[33]
        ),
        initPromise: (
          /*initPromise*/
          P[37]
        )
      }), D && Fe(D.update) && g[0] & /*use*/
      256 && D.update.call(
        null,
        /*use*/
        P[8]
      );
    },
    i(P) {
      _ || (L(S), L(f), L(a.$$.fragment, P), L(y, P), L(d), L(l.$$.fragment, P), L(v), _ = !0);
    },
    o(P) {
      h(S), h(f), h(a.$$.fragment, P), h(y, P), h(d), h(l.$$.fragment, P), h(v), _ = !1;
    },
    d(P) {
      P && F(e), S && S.d(), f && f.d(), z(a), y && y.d(P), N[i].d(), z(l), v && v.d(), n[78](null), A = !1, ze(b);
    }
  };
}
function BC(n) {
  let e;
  const t = (
    /*#slots*/
    n[56].leadingIcon
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[87],
    Ci
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r[2] & /*$$scope*/
      33554432) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[87],
        e ? ve(
          t,
          /*$$scope*/
          a[87],
          r,
          TC
        ) : Re(
          /*$$scope*/
          a[87]
        ),
        Ci
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function UC(n) {
  let e;
  const t = (
    /*#slots*/
    n[56].trailingIcon
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[87],
    li
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r[2] & /*$$scope*/
      33554432) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[87],
        e ? ve(
          t,
          /*$$scope*/
          a[87],
          r,
          NC
        ) : Re(
          /*$$scope*/
          a[87]
        ),
        li
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function Ai(n) {
  let e, t, s, a = (
    /*variant*/
    n[15] === "filled" && Ei()
  ), r = !/*noLabel*/
  n[16] && /*label*/
  (n[17] != null || /*$$slots*/
  n[47].label) && Oi(n);
  return {
    c() {
      a && a.c(), e = $(), r && r.c(), t = st();
    },
    m(o, i) {
      a && a.m(o, i), G(o, e, i), r && r.m(o, i), G(o, t, i), s = !0;
    },
    p(o, i) {
      /*variant*/
      o[15] === "filled" ? a || (a = Ei(), a.c(), a.m(e.parentNode, e)) : a && (a.d(1), a = null), !/*noLabel*/
      o[16] && /*label*/
      (o[17] != null || /*$$slots*/
      o[47].label) ? r ? (r.p(o, i), i[0] & /*noLabel, label*/
      196608 | i[1] & /*$$slots*/
      65536 && L(r, 1)) : (r = Oi(o), r.c(), L(r, 1), r.m(t.parentNode, t)) : r && (he(), h(r, 1, 1, () => {
        r = null;
      }), ye());
    },
    i(o) {
      s || (L(r), s = !0);
    },
    o(o) {
      h(r), s = !1;
    },
    d(o) {
      o && (F(e), F(t)), a && a.d(o), r && r.d(o);
    }
  };
}
function Ei(n) {
  let e;
  return {
    c() {
      e = Z("span"), R(e, "class", "mdc-text-field__ripple");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function Oi(n) {
  let e, t;
  const s = [
    {
      floatAbove: (
        /*focused*/
        n[28] || /*value*/
        n[0] != null && /*value*/
        n[0] !== "" && (typeof /*value*/
        n[0] != "number" || !isNaN(
          /*value*/
          n[0]
        ))
      )
    },
    { required: (
      /*required*/
      n[13]
    ) },
    { wrapped: !0 },
    Je(
      /*$$restProps*/
      n[46],
      "label$"
    )
  ];
  let a = {
    $$slots: { default: [HC] },
    $$scope: { ctx: n }
  };
  for (let r = 0; r < s.length; r += 1)
    a = te(a, s[r]);
  return e = new gd({ props: a }), n[57](e), {
    c() {
      X(e.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), t = !0;
    },
    p(r, o) {
      const i = o[0] & /*focused, value, required*/
      268443649 | o[1] & /*$$restProps*/
      32768 ? Ee(s, [
        o[0] & /*focused, value*/
        268435457 && {
          floatAbove: (
            /*focused*/
            r[28] || /*value*/
            r[0] != null && /*value*/
            r[0] !== "" && (typeof /*value*/
            r[0] != "number" || !isNaN(
              /*value*/
              r[0]
            ))
          )
        },
        o[0] & /*required*/
        8192 && { required: (
          /*required*/
          r[13]
        ) },
        s[2],
        o[1] & /*$$restProps*/
        32768 && Ne(Je(
          /*$$restProps*/
          r[46],
          "label$"
        ))
      ]) : {};
      o[0] & /*label*/
      131072 | o[2] & /*$$scope*/
      33554432 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
    },
    i(r) {
      t || (L(e.$$.fragment, r), t = !0);
    },
    o(r) {
      h(e.$$.fragment, r), t = !1;
    },
    d(r) {
      n[57](null), z(e, r);
    }
  };
}
function HC(n) {
  let e = (
    /*label*/
    (n[17] == null ? "" : (
      /*label*/
      n[17]
    )) + ""
  ), t, s;
  const a = (
    /*#slots*/
    n[56].label
  ), r = Pe(
    a,
    n,
    /*$$scope*/
    n[87],
    fi
  );
  return {
    c() {
      t = Se(e), r && r.c();
    },
    m(o, i) {
      G(o, t, i), r && r.m(o, i), s = !0;
    },
    p(o, i) {
      (!s || i[0] & /*label*/
      131072) && e !== (e = /*label*/
      (o[17] == null ? "" : (
        /*label*/
        o[17]
      )) + "") && je(t, e), r && r.p && (!s || i[2] & /*$$scope*/
      33554432) && Me(
        r,
        a,
        o,
        /*$$scope*/
        o[87],
        s ? ve(
          a,
          /*$$scope*/
          o[87],
          i,
          jC
        ) : Re(
          /*$$scope*/
          o[87]
        ),
        fi
      );
    },
    i(o) {
      s || (L(r, o), s = !0);
    },
    o(o) {
      h(r, o), s = !1;
    },
    d(o) {
      o && F(t), r && r.d(o);
    }
  };
}
function Si(n) {
  let e, t;
  const s = [
    {
      noLabel: (
        /*noLabel*/
        n[16] || /*label*/
        n[17] == null && !/*$$slots*/
        n[47].label
      )
    },
    Je(
      /*$$restProps*/
      n[46],
      "outline$"
    )
  ];
  let a = {
    $$slots: { default: [WC] },
    $$scope: { ctx: n }
  };
  for (let r = 0; r < s.length; r += 1)
    a = te(a, s[r]);
  return e = new CC({ props: a }), n[59](e), {
    c() {
      X(e.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), t = !0;
    },
    p(r, o) {
      const i = o[0] & /*noLabel, label*/
      196608 | o[1] & /*$$slots, $$restProps*/
      98304 ? Ee(s, [
        o[0] & /*noLabel, label*/
        196608 | o[1] & /*$$slots*/
        65536 && {
          noLabel: (
            /*noLabel*/
            r[16] || /*label*/
            r[17] == null && !/*$$slots*/
            r[47].label
          )
        },
        o[1] & /*$$restProps*/
        32768 && Ne(Je(
          /*$$restProps*/
          r[46],
          "outline$"
        ))
      ]) : {};
      o[0] & /*focused, value, required, floatingLabel, label, noLabel*/
      268640289 | o[1] & /*$$restProps, $$slots*/
      98304 | o[2] & /*$$scope*/
      33554432 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
    },
    i(r) {
      t || (L(e.$$.fragment, r), t = !0);
    },
    o(r) {
      h(e.$$.fragment, r), t = !1;
    },
    d(r) {
      n[59](null), z(e, r);
    }
  };
}
function Li(n) {
  let e, t;
  const s = [
    {
      floatAbove: (
        /*focused*/
        n[28] || /*value*/
        n[0] != null && /*value*/
        n[0] !== "" && (typeof /*value*/
        n[0] != "number" || !isNaN(
          /*value*/
          n[0]
        ))
      )
    },
    { required: (
      /*required*/
      n[13]
    ) },
    { wrapped: !0 },
    Je(
      /*$$restProps*/
      n[46],
      "label$"
    )
  ];
  let a = {
    $$slots: { default: [KC] },
    $$scope: { ctx: n }
  };
  for (let r = 0; r < s.length; r += 1)
    a = te(a, s[r]);
  return e = new gd({ props: a }), n[58](e), {
    c() {
      X(e.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), t = !0;
    },
    p(r, o) {
      const i = o[0] & /*focused, value, required*/
      268443649 | o[1] & /*$$restProps*/
      32768 ? Ee(s, [
        o[0] & /*focused, value*/
        268435457 && {
          floatAbove: (
            /*focused*/
            r[28] || /*value*/
            r[0] != null && /*value*/
            r[0] !== "" && (typeof /*value*/
            r[0] != "number" || !isNaN(
              /*value*/
              r[0]
            ))
          )
        },
        o[0] & /*required*/
        8192 && { required: (
          /*required*/
          r[13]
        ) },
        s[2],
        o[1] & /*$$restProps*/
        32768 && Ne(Je(
          /*$$restProps*/
          r[46],
          "label$"
        ))
      ]) : {};
      o[0] & /*label*/
      131072 | o[2] & /*$$scope*/
      33554432 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
    },
    i(r) {
      t || (L(e.$$.fragment, r), t = !0);
    },
    o(r) {
      h(e.$$.fragment, r), t = !1;
    },
    d(r) {
      n[58](null), z(e, r);
    }
  };
}
function KC(n) {
  let e = (
    /*label*/
    (n[17] == null ? "" : (
      /*label*/
      n[17]
    )) + ""
  ), t, s;
  const a = (
    /*#slots*/
    n[56].label
  ), r = Pe(
    a,
    n,
    /*$$scope*/
    n[87],
    bi
  );
  return {
    c() {
      t = Se(e), r && r.c();
    },
    m(o, i) {
      G(o, t, i), r && r.m(o, i), s = !0;
    },
    p(o, i) {
      (!s || i[0] & /*label*/
      131072) && e !== (e = /*label*/
      (o[17] == null ? "" : (
        /*label*/
        o[17]
      )) + "") && je(t, e), r && r.p && (!s || i[2] & /*$$scope*/
      33554432) && Me(
        r,
        a,
        o,
        /*$$scope*/
        o[87],
        s ? ve(
          a,
          /*$$scope*/
          o[87],
          i,
          VC
        ) : Re(
          /*$$scope*/
          o[87]
        ),
        bi
      );
    },
    i(o) {
      s || (L(r, o), s = !0);
    },
    o(o) {
      h(r, o), s = !1;
    },
    d(o) {
      o && F(t), r && r.d(o);
    }
  };
}
function WC(n) {
  let e, t, s = !/*noLabel*/
  n[16] && /*label*/
  (n[17] != null || /*$$slots*/
  n[47].label) && Li(n);
  return {
    c() {
      s && s.c(), e = st();
    },
    m(a, r) {
      s && s.m(a, r), G(a, e, r), t = !0;
    },
    p(a, r) {
      !/*noLabel*/
      a[16] && /*label*/
      (a[17] != null || /*$$slots*/
      a[47].label) ? s ? (s.p(a, r), r[0] & /*noLabel, label*/
      196608 | r[1] & /*$$slots*/
      65536 && L(s, 1)) : (s = Li(a), s.c(), L(s, 1), s.m(e.parentNode, e)) : s && (he(), h(s, 1, 1, () => {
        s = null;
      }), ye());
    },
    i(a) {
      t || (L(s), t = !0);
    },
    o(a) {
      h(s), t = !1;
    },
    d(a) {
      a && F(e), s && s.d(a);
    }
  };
}
function qC(n) {
  let e;
  const t = (
    /*#slots*/
    n[56].leadingIcon
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[87],
    Di
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r[2] & /*$$scope*/
      33554432) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[87],
        e ? ve(
          t,
          /*$$scope*/
          a[87],
          r,
          GC
        ) : Re(
          /*$$scope*/
          a[87]
        ),
        Di
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function zC(n) {
  let e, t, s, a, r, o, i, d, c, l;
  const C = (
    /*#slots*/
    n[56].prefix
  ), u = Pe(
    C,
    n,
    /*$$scope*/
    n[87],
    _i
  );
  let m = (
    /*prefix*/
    n[20] != null && gi(n)
  );
  const p = [
    { type: (
      /*type*/
      n[18]
    ) },
    { disabled: (
      /*disabled*/
      n[12]
    ) },
    { required: (
      /*required*/
      n[13]
    ) },
    { updateInvalid: (
      /*updateInvalid*/
      n[19]
    ) },
    { "aria-controls": (
      /*helperId*/
      n[27]
    ) },
    { "aria-describedby": (
      /*helperId*/
      n[27]
    ) },
    /*noLabel*/
    n[16] && /*label*/
    n[17] != null ? { placeholder: (
      /*label*/
      n[17]
    ) } : {},
    Je(
      /*$$restProps*/
      n[46],
      "input$"
    )
  ];
  function D(I) {
    n[69](I);
  }
  function _(I) {
    n[70](I);
  }
  function A(I) {
    n[71](I);
  }
  function b(I) {
    n[72](I);
  }
  let S = {};
  for (let I = 0; I < p.length; I += 1)
    S = te(S, p[I]);
  /*value*/
  n[0] !== void 0 && (S.value = /*value*/
  n[0]), /*files*/
  n[3] !== void 0 && (S.files = /*files*/
  n[3]), /*dirty*/
  n[4] !== void 0 && (S.dirty = /*dirty*/
  n[4]), /*invalid*/
  n[1] !== void 0 && (S.invalid = /*invalid*/
  n[1]), s = new OC({ props: S }), n[68](s), de.push(() => Ve(s, "value", D)), de.push(() => Ve(s, "files", _)), de.push(() => Ve(s, "dirty", A)), de.push(() => Ve(s, "invalid", b)), s.$on(
    "blur",
    /*blur_handler_2*/
    n[73]
  ), s.$on(
    "focus",
    /*focus_handler_2*/
    n[74]
  ), s.$on(
    "blur",
    /*blur_handler_3*/
    n[75]
  ), s.$on(
    "focus",
    /*focus_handler_3*/
    n[76]
  );
  let f = (
    /*suffix*/
    n[21] != null && hi(n)
  );
  const E = (
    /*#slots*/
    n[56].suffix
  ), y = Pe(
    E,
    n,
    /*$$scope*/
    n[87],
    pi
  );
  return {
    c() {
      u && u.c(), e = $(), m && m.c(), t = $(), X(s.$$.fragment), d = $(), f && f.c(), c = $(), y && y.c();
    },
    m(I, N) {
      u && u.m(I, N), G(I, e, N), m && m.m(I, N), G(I, t, N), q(s, I, N), G(I, d, N), f && f.m(I, N), G(I, c, N), y && y.m(I, N), l = !0;
    },
    p(I, N) {
      u && u.p && (!l || N[2] & /*$$scope*/
      33554432) && Me(
        u,
        C,
        I,
        /*$$scope*/
        I[87],
        l ? ve(
          C,
          /*$$scope*/
          I[87],
          N,
          RC
        ) : Re(
          /*$$scope*/
          I[87]
        ),
        _i
      ), /*prefix*/
      I[20] != null ? m ? (m.p(I, N), N[0] & /*prefix*/
      1048576 && L(m, 1)) : (m = gi(I), m.c(), L(m, 1), m.m(t.parentNode, t)) : m && (he(), h(m, 1, 1, () => {
        m = null;
      }), ye());
      const j = N[0] & /*type, disabled, required, updateInvalid, helperId, noLabel, label*/
      135213056 | N[1] & /*$$restProps*/
      32768 ? Ee(p, [
        N[0] & /*type*/
        262144 && { type: (
          /*type*/
          I[18]
        ) },
        N[0] & /*disabled*/
        4096 && { disabled: (
          /*disabled*/
          I[12]
        ) },
        N[0] & /*required*/
        8192 && { required: (
          /*required*/
          I[13]
        ) },
        N[0] & /*updateInvalid*/
        524288 && { updateInvalid: (
          /*updateInvalid*/
          I[19]
        ) },
        N[0] & /*helperId*/
        134217728 && { "aria-controls": (
          /*helperId*/
          I[27]
        ) },
        N[0] & /*helperId*/
        134217728 && { "aria-describedby": (
          /*helperId*/
          I[27]
        ) },
        N[0] & /*noLabel, label*/
        196608 && Ne(
          /*noLabel*/
          I[16] && /*label*/
          I[17] != null ? { placeholder: (
            /*label*/
            I[17]
          ) } : {}
        ),
        N[1] & /*$$restProps*/
        32768 && Ne(Je(
          /*$$restProps*/
          I[46],
          "input$"
        ))
      ]) : {};
      !a && N[0] & /*value*/
      1 && (a = !0, j.value = /*value*/
      I[0], we(() => a = !1)), !r && N[0] & /*files*/
      8 && (r = !0, j.files = /*files*/
      I[3], we(() => r = !1)), !o && N[0] & /*dirty*/
      16 && (o = !0, j.dirty = /*dirty*/
      I[4], we(() => o = !1)), !i && N[0] & /*invalid*/
      2 && (i = !0, j.invalid = /*invalid*/
      I[1], we(() => i = !1)), s.$set(j), /*suffix*/
      I[21] != null ? f ? (f.p(I, N), N[0] & /*suffix*/
      2097152 && L(f, 1)) : (f = hi(I), f.c(), L(f, 1), f.m(c.parentNode, c)) : f && (he(), h(f, 1, 1, () => {
        f = null;
      }), ye()), y && y.p && (!l || N[2] & /*$$scope*/
      33554432) && Me(
        y,
        E,
        I,
        /*$$scope*/
        I[87],
        l ? ve(
          E,
          /*$$scope*/
          I[87],
          N,
          MC
        ) : Re(
          /*$$scope*/
          I[87]
        ),
        pi
      );
    },
    i(I) {
      l || (L(u, I), L(m), L(s.$$.fragment, I), L(f), L(y, I), l = !0);
    },
    o(I) {
      h(u, I), h(m), h(s.$$.fragment, I), h(f), h(y, I), l = !1;
    },
    d(I) {
      I && (F(e), F(t), F(d), F(c)), u && u.d(I), m && m.d(I), n[68](null), z(s, I), f && f.d(I), y && y.d(I);
    }
  };
}
function XC(n) {
  let e, t, s, a, r, o, i, d;
  const c = [
    { disabled: (
      /*disabled*/
      n[12]
    ) },
    { required: (
      /*required*/
      n[13]
    ) },
    { updateInvalid: (
      /*updateInvalid*/
      n[19]
    ) },
    { "aria-controls": (
      /*helperId*/
      n[27]
    ) },
    { "aria-describedby": (
      /*helperId*/
      n[27]
    ) },
    Je(
      /*$$restProps*/
      n[46],
      "input$"
    )
  ];
  function l(_) {
    n[61](_);
  }
  function C(_) {
    n[62](_);
  }
  function u(_) {
    n[63](_);
  }
  let m = {};
  for (let _ = 0; _ < c.length; _ += 1)
    m = te(m, c[_]);
  /*value*/
  n[0] !== void 0 && (m.value = /*value*/
  n[0]), /*dirty*/
  n[4] !== void 0 && (m.dirty = /*dirty*/
  n[4]), /*invalid*/
  n[1] !== void 0 && (m.invalid = /*invalid*/
  n[1]), t = new gC({ props: m }), n[60](t), de.push(() => Ve(t, "value", l)), de.push(() => Ve(t, "dirty", C)), de.push(() => Ve(t, "invalid", u)), t.$on(
    "blur",
    /*blur_handler*/
    n[64]
  ), t.$on(
    "focus",
    /*focus_handler*/
    n[65]
  ), t.$on(
    "blur",
    /*blur_handler_1*/
    n[66]
  ), t.$on(
    "focus",
    /*focus_handler_1*/
    n[67]
  );
  const p = (
    /*#slots*/
    n[56].internalCounter
  ), D = Pe(
    p,
    n,
    /*$$scope*/
    n[87],
    Ii
  );
  return {
    c() {
      e = Z("span"), X(t.$$.fragment), o = $(), D && D.c(), R(e, "class", i = le({
        "mdc-text-field__resizer": !("input$resizable" in /*$$restProps*/
        n[46]) || /*$$restProps*/
        n[46].input$resizable
      }));
    },
    m(_, A) {
      G(_, e, A), q(t, e, null), U(e, o), D && D.m(e, null), d = !0;
    },
    p(_, A) {
      const b = A[0] & /*disabled, required, updateInvalid, helperId*/
      134754304 | A[1] & /*$$restProps*/
      32768 ? Ee(c, [
        A[0] & /*disabled*/
        4096 && { disabled: (
          /*disabled*/
          _[12]
        ) },
        A[0] & /*required*/
        8192 && { required: (
          /*required*/
          _[13]
        ) },
        A[0] & /*updateInvalid*/
        524288 && { updateInvalid: (
          /*updateInvalid*/
          _[19]
        ) },
        A[0] & /*helperId*/
        134217728 && { "aria-controls": (
          /*helperId*/
          _[27]
        ) },
        A[0] & /*helperId*/
        134217728 && { "aria-describedby": (
          /*helperId*/
          _[27]
        ) },
        A[1] & /*$$restProps*/
        32768 && Ne(Je(
          /*$$restProps*/
          _[46],
          "input$"
        ))
      ]) : {};
      !s && A[0] & /*value*/
      1 && (s = !0, b.value = /*value*/
      _[0], we(() => s = !1)), !a && A[0] & /*dirty*/
      16 && (a = !0, b.dirty = /*dirty*/
      _[4], we(() => a = !1)), !r && A[0] & /*invalid*/
      2 && (r = !0, b.invalid = /*invalid*/
      _[1], we(() => r = !1)), t.$set(b), D && D.p && (!d || A[2] & /*$$scope*/
      33554432) && Me(
        D,
        p,
        _,
        /*$$scope*/
        _[87],
        d ? ve(
          p,
          /*$$scope*/
          _[87],
          A,
          FC
        ) : Re(
          /*$$scope*/
          _[87]
        ),
        Ii
      ), (!d || A[1] & /*$$restProps*/
      32768 && i !== (i = le({
        "mdc-text-field__resizer": !("input$resizable" in /*$$restProps*/
        _[46]) || /*$$restProps*/
        _[46].input$resizable
      }))) && R(e, "class", i);
    },
    i(_) {
      d || (L(t.$$.fragment, _), L(D, _), d = !0);
    },
    o(_) {
      h(t.$$.fragment, _), h(D, _), d = !1;
    },
    d(_) {
      _ && F(e), n[60](null), z(t), D && D.d(_);
    }
  };
}
function gi(n) {
  let e, t;
  return e = new DC({
    props: {
      $$slots: { default: [ZC] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[0] & /*prefix*/
      1048576 | a[2] & /*$$scope*/
      33554432 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function ZC(n) {
  let e;
  return {
    c() {
      e = Se(
        /*prefix*/
        n[20]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s[0] & /*prefix*/
      1048576 && je(
        e,
        /*prefix*/
        t[20]
      );
    },
    d(t) {
      t && F(e);
    }
  };
}
function hi(n) {
  let e, t;
  return e = new bC({
    props: {
      $$slots: { default: [YC] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[0] & /*suffix*/
      2097152 | a[2] & /*$$scope*/
      33554432 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function YC(n) {
  let e;
  return {
    c() {
      e = Se(
        /*suffix*/
        n[21]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s[0] & /*suffix*/
      2097152 && je(
        e,
        /*suffix*/
        t[21]
      );
    },
    d(t) {
      t && F(e);
    }
  };
}
function QC(n) {
  let e;
  const t = (
    /*#slots*/
    n[56].trailingIcon
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[87],
    mi
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r[2] & /*$$scope*/
      33554432) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[87],
        e ? ve(
          t,
          /*$$scope*/
          a[87],
          r,
          vC
        ) : Re(
          /*$$scope*/
          a[87]
        ),
        mi
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function yi(n) {
  let e, t;
  const s = [Je(
    /*$$restProps*/
    n[46],
    "ripple$"
  )];
  let a = {};
  for (let r = 0; r < s.length; r += 1)
    a = te(a, s[r]);
  return e = new dC({ props: a }), n[77](e), {
    c() {
      X(e.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), t = !0;
    },
    p(r, o) {
      const i = o[1] & /*$$restProps*/
      32768 ? Ee(s, [Ne(Je(
        /*$$restProps*/
        r[46],
        "ripple$"
      ))]) : {};
      e.$set(i);
    },
    i(r) {
      t || (L(e.$$.fragment, r), t = !0);
    },
    o(r) {
      h(e.$$.fragment, r), t = !1;
    },
    d(r) {
      n[77](null), z(e, r);
    }
  };
}
function Ni(n) {
  let e, t;
  const s = [Je(
    /*$$restProps*/
    n[46],
    "helperLine$"
  )];
  let a = {
    $$slots: { default: [JC] },
    $$scope: { ctx: n }
  };
  for (let r = 0; r < s.length; r += 1)
    a = te(a, s[r]);
  return e = new IC({ props: a }), e.$on(
    "SMUITextfieldHelperText:id",
    /*handleHelperTextId*/
    n[41]
  ), e.$on(
    "SMUITextfieldHelperText:mount",
    /*handleHelperTextMount*/
    n[42]
  ), e.$on(
    "SMUITextfieldHelperText:unmount",
    /*SMUITextfieldHelperText_unmount_handler*/
    n[85]
  ), e.$on(
    "SMUITextfieldCharacterCounter:mount",
    /*handleCharacterCounterMount*/
    n[40]
  ), e.$on(
    "SMUITextfieldCharacterCounter:unmount",
    /*SMUITextfieldCharacterCounter_unmount_handler_1*/
    n[86]
  ), {
    c() {
      X(e.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), t = !0;
    },
    p(r, o) {
      const i = o[1] & /*$$restProps*/
      32768 ? Ee(s, [Ne(Je(
        /*$$restProps*/
        r[46],
        "helperLine$"
      ))]) : {};
      o[2] & /*$$scope*/
      33554432 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
    },
    i(r) {
      t || (L(e.$$.fragment, r), t = !0);
    },
    o(r) {
      h(e.$$.fragment, r), t = !1;
    },
    d(r) {
      z(e, r);
    }
  };
}
function JC(n) {
  let e;
  const t = (
    /*#slots*/
    n[56].helper
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[87],
    di
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r[2] & /*$$scope*/
      33554432) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[87],
        e ? ve(
          t,
          /*$$scope*/
          a[87],
          r,
          hC
        ) : Re(
          /*$$scope*/
          a[87]
        ),
        di
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function xC(n) {
  let e, t, s, a, r;
  const o = [wC, kC], i = [];
  function d(l, C) {
    return (
      /*valued*/
      l[36] ? 0 : 1
    );
  }
  e = d(n), t = i[e] = o[e](n);
  let c = (
    /*$$slots*/
    n[47].helper && Ni(n)
  );
  return {
    c() {
      t.c(), s = $(), c && c.c(), a = st();
    },
    m(l, C) {
      i[e].m(l, C), G(l, s, C), c && c.m(l, C), G(l, a, C), r = !0;
    },
    p(l, C) {
      t.p(l, C), /*$$slots*/
      l[47].helper ? c ? (c.p(l, C), C[1] & /*$$slots*/
      65536 && L(c, 1)) : (c = Ni(l), c.c(), L(c, 1), c.m(a.parentNode, a)) : c && (he(), h(c, 1, 1, () => {
        c = null;
      }), ye());
    },
    i(l) {
      r || (L(t), L(c), r = !0);
    },
    o(l) {
      h(t), h(c), r = !1;
    },
    d(l) {
      l && (F(s), F(a)), i[e].d(l), c && c.d(l);
    }
  };
}
const Ti = ([n, e]) => `${n}: ${e};`, Pi = ([n, e]) => `${n}: ${e};`;
function $C(n, e, t) {
  let s;
  const a = [
    "use",
    "class",
    "style",
    "ripple",
    "disabled",
    "required",
    "textarea",
    "variant",
    "noLabel",
    "label",
    "type",
    "value",
    "files",
    "invalid",
    "updateInvalid",
    "dirty",
    "prefix",
    "suffix",
    "validateOnValueChange",
    "useNativeValidation",
    "withLeadingIcon",
    "withTrailingIcon",
    "input",
    "floatingLabel",
    "lineRipple",
    "notchedOutline",
    "focus",
    "blur",
    "layout",
    "getElement"
  ];
  let r = Te(e, a), { $$slots: o = {}, $$scope: i } = e;
  const d = cd(o), { applyPassive: c } = Sd, l = lt(tt());
  let C = () => {
  };
  function u(K) {
    return K === C;
  }
  let { use: m = [] } = e, { class: p = "" } = e, { style: D = "" } = e, { ripple: _ = !0 } = e, { disabled: A = !1 } = e, { required: b = !1 } = e, { textarea: S = !1 } = e, { variant: f = S ? "outlined" : "standard" } = e, { noLabel: E = !1 } = e, { label: y = void 0 } = e, { type: I = "text" } = e, { value: N = r.input$emptyValueUndefined ? void 0 : C } = e, { files: j = C } = e;
  const v = !u(N) || !u(j);
  u(N) && (N = void 0), u(j) && (j = null);
  let { invalid: O = C } = e, { updateInvalid: M = u(O) } = e;
  u(O) && (O = !1);
  let { dirty: P = !1 } = e, { prefix: g = void 0 } = e, { suffix: W = void 0 } = e, { validateOnValueChange: B = M } = e, { useNativeValidation: H = M } = e, { withLeadingIcon: w = C } = e, { withTrailingIcon: T = C } = e, { input: Y = void 0 } = e, { floatingLabel: Ie = void 0 } = e, { lineRipple: Ge = void 0 } = e, { notchedOutline: ke = void 0 } = e, ae, _e, We = {}, Be = {}, xe, it = !1, oe = Qe("SMUI:addLayoutListener"), J, se, V = new Promise((K) => se = K), ge, Q, pe, $e, Lt = N;
  oe && (J = oe(ee)), at(() => {
    if (t(54, _e = new $l(
      {
        // getRootAdapterMethods_
        addClass: At,
        removeClass: ne,
        hasClass: Ue,
        registerTextFieldInteractionHandler: (K, bt) => be().addEventListener(K, bt),
        deregisterTextFieldInteractionHandler: (K, bt) => be().removeEventListener(K, bt),
        registerValidationAttributeChangeHandler: (K) => {
          const bt = (La) => La.map((ga) => ga.attributeName).filter((ga) => ga), kr = new MutationObserver((La) => {
            H && K(bt(La));
          }), Fc = { attributes: !0 };
          return Y && kr.observe(Y.getElement(), Fc), kr;
        },
        deregisterValidationAttributeChangeHandler: (K) => {
          K.disconnect();
        },
        // getInputAdapterMethods_
        getNativeInput: () => {
          var K;
          return (K = Y == null ? void 0 : Y.getElement()) !== null && K !== void 0 ? K : null;
        },
        setInputAttr: (K, bt) => {
          Y == null || Y.addAttr(K, bt);
        },
        removeInputAttr: (K) => {
          Y == null || Y.removeAttr(K);
        },
        isFocused: () => document.activeElement === (Y == null ? void 0 : Y.getElement()),
        registerInputInteractionHandler: (K, bt) => {
          Y == null || Y.getElement().addEventListener(K, bt, c());
        },
        deregisterInputInteractionHandler: (K, bt) => {
          Y == null || Y.getElement().removeEventListener(K, bt, c());
        },
        // getLabelAdapterMethods_
        floatLabel: (K) => Ie && Ie.float(K),
        getLabelWidth: () => Ie ? Ie.getWidth() : 0,
        hasLabel: () => !!Ie,
        shakeLabel: (K) => Ie && Ie.shake(K),
        setLabelRequired: (K) => Ie && Ie.setRequired(K),
        // getLineRippleAdapterMethods_
        activateLineRipple: () => Ge && Ge.activate(),
        deactivateLineRipple: () => Ge && Ge.deactivate(),
        setLineRippleTransformOrigin: (K) => Ge && Ge.setRippleCenter(K),
        // getOutlineAdapterMethods_
        closeOutline: () => ke && ke.closeNotch(),
        hasOutline: () => !!ke,
        notchOutline: (K) => ke && ke.notch(K)
      },
      {
        get helperText() {
          return pe;
        },
        get characterCounter() {
          return $e;
        },
        get leadingIcon() {
          return ge;
        },
        get trailingIcon() {
          return Q;
        }
      }
    )), v) {
      if (Y == null)
        throw new Error("SMUI Textfield must be initialized with either a non-undefined initial value or an Input component.");
      _e.init();
    } else
      Qc().then(() => {
        if (Y == null)
          throw new Error("SMUI Textfield must be initialized with either a non-undefined initial value or an Input component.");
        _e.init();
      });
    return se(), () => {
      _e.destroy();
    };
  }), an(() => {
    J && J();
  });
  function Ht(K) {
    t(29, ge = K.detail);
  }
  function k(K) {
    t(30, Q = K.detail);
  }
  function ie(K) {
    t(32, $e = K.detail);
  }
  function Ke(K) {
    t(27, xe = K.detail);
  }
  function re(K) {
    t(31, pe = K.detail);
  }
  function Ue(K) {
    var bt;
    return K in We ? (bt = We[K]) !== null && bt !== void 0 ? bt : null : be().classList.contains(K);
  }
  function At(K) {
    We[K] || t(25, We[K] = !0, We);
  }
  function ne(K) {
    (!(K in We) || We[K]) && t(25, We[K] = !1, We);
  }
  function nt(K, bt) {
    Be[K] != bt && (bt === "" || bt == null ? (delete Be[K], t(26, Be)) : t(26, Be[K] = bt, Be));
  }
  function Dt() {
    Y == null || Y.focus();
  }
  function wn() {
    Y == null || Y.blur();
  }
  function ee() {
    if (_e) {
      const K = _e.shouldFloat;
      _e.notchOutline(K);
    }
  }
  function be() {
    return ae;
  }
  function fe(K) {
    de[K ? "unshift" : "push"](() => {
      Ie = K, t(5, Ie);
    });
  }
  function ot(K) {
    de[K ? "unshift" : "push"](() => {
      Ie = K, t(5, Ie);
    });
  }
  function Bn(K) {
    de[K ? "unshift" : "push"](() => {
      ke = K, t(7, ke);
    });
  }
  function Sa(K) {
    de[K ? "unshift" : "push"](() => {
      Y = K, t(2, Y);
    });
  }
  function dc(K) {
    N = K, t(0, N);
  }
  function cc(K) {
    P = K, t(4, P);
  }
  function lc(K) {
    O = K, t(1, O), t(54, _e), t(19, M);
  }
  const Cc = () => t(28, it = !1), uc = () => t(28, it = !0), mc = (K) => Oe(ae, "blur", K), pc = (K) => Oe(ae, "focus", K);
  function _c(K) {
    de[K ? "unshift" : "push"](() => {
      Y = K, t(2, Y);
    });
  }
  function Ic(K) {
    N = K, t(0, N);
  }
  function Dc(K) {
    j = K, t(3, j);
  }
  function bc(K) {
    P = K, t(4, P);
  }
  function fc(K) {
    O = K, t(1, O), t(54, _e), t(19, M);
  }
  const Ac = () => t(28, it = !1), Ec = () => t(28, it = !0), Oc = (K) => Oe(ae, "blur", K), Sc = (K) => Oe(ae, "focus", K);
  function Lc(K) {
    de[K ? "unshift" : "push"](() => {
      Ge = K, t(6, Ge);
    });
  }
  function gc(K) {
    de[K ? "unshift" : "push"](() => {
      ae = K, t(24, ae);
    });
  }
  const hc = () => t(29, ge = void 0), yc = () => t(30, Q = void 0), Nc = () => t(32, $e = void 0);
  function Tc(K) {
    de[K ? "unshift" : "push"](() => {
      ae = K, t(24, ae);
    });
  }
  const Pc = () => t(29, ge = void 0), vc = () => t(30, Q = void 0), Mc = () => {
    t(27, xe = void 0), t(31, pe = void 0);
  }, Rc = () => t(32, $e = void 0);
  return n.$$set = (K) => {
    e = te(te({}, e), ct(K)), t(46, r = Te(e, a)), "use" in K && t(8, m = K.use), "class" in K && t(9, p = K.class), "style" in K && t(10, D = K.style), "ripple" in K && t(11, _ = K.ripple), "disabled" in K && t(12, A = K.disabled), "required" in K && t(13, b = K.required), "textarea" in K && t(14, S = K.textarea), "variant" in K && t(15, f = K.variant), "noLabel" in K && t(16, E = K.noLabel), "label" in K && t(17, y = K.label), "type" in K && t(18, I = K.type), "value" in K && t(0, N = K.value), "files" in K && t(3, j = K.files), "invalid" in K && t(1, O = K.invalid), "updateInvalid" in K && t(19, M = K.updateInvalid), "dirty" in K && t(4, P = K.dirty), "prefix" in K && t(20, g = K.prefix), "suffix" in K && t(21, W = K.suffix), "validateOnValueChange" in K && t(48, B = K.validateOnValueChange), "useNativeValidation" in K && t(49, H = K.useNativeValidation), "withLeadingIcon" in K && t(22, w = K.withLeadingIcon), "withTrailingIcon" in K && t(23, T = K.withTrailingIcon), "input" in K && t(2, Y = K.input), "floatingLabel" in K && t(5, Ie = K.floatingLabel), "lineRipple" in K && t(6, Ge = K.lineRipple), "notchedOutline" in K && t(7, ke = K.notchedOutline), "$$scope" in K && t(87, i = K.$$scope);
  }, n.$$.update = () => {
    if (n.$$.dirty[0] & /*input*/
    4 && t(33, s = Y && Y.getElement()), n.$$.dirty[0] & /*invalid, updateInvalid*/
    524290 | n.$$.dirty[1] & /*instance*/
    8388608 && _e && _e.isValid() !== !O && (M ? t(1, O = !_e.isValid()) : _e.setValid(!O)), n.$$.dirty[1] & /*instance, validateOnValueChange*/
    8519680 && _e && _e.getValidateOnValueChange() !== B && _e.setValidateOnValueChange(u(B) ? !1 : B), n.$$.dirty[1] & /*instance, useNativeValidation*/
    8650752 && _e && _e.setUseNativeValidation(u(H) ? !0 : H), n.$$.dirty[0] & /*disabled*/
    4096 | n.$$.dirty[1] & /*instance*/
    8388608 && _e && _e.setDisabled(A), n.$$.dirty[0] & /*value*/
    1 | n.$$.dirty[1] & /*instance, previousValue*/
    25165824 && _e && v && Lt !== N) {
      t(55, Lt = N);
      const K = `${N}`;
      _e.getValue() !== K && _e.setValue(K);
    }
  }, [
    N,
    O,
    Y,
    j,
    P,
    Ie,
    Ge,
    ke,
    m,
    p,
    D,
    _,
    A,
    b,
    S,
    f,
    E,
    y,
    I,
    M,
    g,
    W,
    w,
    T,
    ae,
    We,
    Be,
    xe,
    it,
    ge,
    Q,
    pe,
    $e,
    s,
    l,
    u,
    v,
    V,
    Ht,
    k,
    ie,
    Ke,
    re,
    At,
    ne,
    nt,
    r,
    d,
    B,
    H,
    Dt,
    wn,
    ee,
    be,
    _e,
    Lt,
    o,
    fe,
    ot,
    Bn,
    Sa,
    dc,
    cc,
    lc,
    Cc,
    uc,
    mc,
    pc,
    _c,
    Ic,
    Dc,
    bc,
    fc,
    Ac,
    Ec,
    Oc,
    Sc,
    Lc,
    gc,
    hc,
    yc,
    Nc,
    Tc,
    Pc,
    vc,
    Mc,
    Rc,
    i
  ];
}
class oa extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      $C,
      xC,
      Ce,
      {
        use: 8,
        class: 9,
        style: 10,
        ripple: 11,
        disabled: 12,
        required: 13,
        textarea: 14,
        variant: 15,
        noLabel: 16,
        label: 17,
        type: 18,
        value: 0,
        files: 3,
        invalid: 1,
        updateInvalid: 19,
        dirty: 4,
        prefix: 20,
        suffix: 21,
        validateOnValueChange: 48,
        useNativeValidation: 49,
        withLeadingIcon: 22,
        withTrailingIcon: 23,
        input: 2,
        floatingLabel: 5,
        lineRipple: 6,
        notchedOutline: 7,
        focus: 50,
        blur: 51,
        layout: 52,
        getElement: 53
      },
      null,
      [-1, -1, -1, -1]
    );
  }
  get focus() {
    return this.$$.ctx[50];
  }
  get blur() {
    return this.$$.ctx[51];
  }
  get layout() {
    return this.$$.ctx[52];
  }
  get getElement() {
    return this.$$.ctx[53];
  }
}
function eu(n) {
  let e;
  return {
    c() {
      e = Se(
        /*content*/
        n[7]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s & /*content*/
      128 && je(
        e,
        /*content*/
        t[7]
      );
    },
    i: Le,
    o: Le,
    d(t) {
      t && F(e);
    }
  };
}
function tu(n) {
  let e;
  const t = (
    /*#slots*/
    n[15].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[14],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r & /*$$scope*/
      16384) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[14],
        e ? ve(
          t,
          /*$$scope*/
          a[14],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[14]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function nu(n) {
  let e, t, s, a, r, o, i, d, c, l;
  const C = [tu, eu], u = [];
  function m(_, A) {
    return (
      /*content*/
      _[7] == null ? 0 : 1
    );
  }
  t = m(n), s = u[t] = C[t](n);
  let p = [
    {
      class: a = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-text-field__icon": !0,
        "mdc-text-field__icon--leading": (
          /*leading*/
          n[11]
        ),
        "mdc-text-field__icon--trailing": !/*leading*/
        n[11]
      })
    },
    {
      "aria-hidden": r = /*tabindex*/
      n[3] === -1 ? "true" : "false"
    },
    {
      "aria-disabled": o = /*role*/
      n[2] === "button" ? (
        /*disabled*/
        n[4] ? "true" : "false"
      ) : void 0
    },
    /*roleProps*/
    n[8],
    /*internalAttrs*/
    n[6],
    /*$$restProps*/
    n[12]
  ], D = {};
  for (let _ = 0; _ < p.length; _ += 1)
    D = te(D, p[_]);
  return {
    c() {
      e = Z("i"), s.c(), Ae(e, D);
    },
    m(_, A) {
      G(_, e, A), u[t].m(e, null), n[16](e), d = !0, c || (l = [
        De(i = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[9].call(null, e)
        )
      ], c = !0);
    },
    p(_, [A]) {
      let b = t;
      t = m(_), t === b ? u[t].p(_, A) : (he(), h(u[b], 1, 1, () => {
        u[b] = null;
      }), ye(), s = u[t], s ? s.p(_, A) : (s = u[t] = C[t](_), s.c()), L(s, 1), s.m(e, null)), Ae(e, D = Ee(p, [
        (!d || A & /*className*/
        2 && a !== (a = le({
          [
            /*className*/
            _[1]
          ]: !0,
          "mdc-text-field__icon": !0,
          "mdc-text-field__icon--leading": (
            /*leading*/
            _[11]
          ),
          "mdc-text-field__icon--trailing": !/*leading*/
          _[11]
        }))) && { class: a },
        (!d || A & /*tabindex*/
        8 && r !== (r = /*tabindex*/
        _[3] === -1 ? "true" : "false")) && { "aria-hidden": r },
        (!d || A & /*role, disabled*/
        20 && o !== (o = /*role*/
        _[2] === "button" ? (
          /*disabled*/
          _[4] ? "true" : "false"
        ) : void 0)) && { "aria-disabled": o },
        A & /*roleProps*/
        256 && /*roleProps*/
        _[8],
        A & /*internalAttrs*/
        64 && /*internalAttrs*/
        _[6],
        A & /*$$restProps*/
        4096 && /*$$restProps*/
        _[12]
      ])), i && Fe(i.update) && A & /*use*/
      1 && i.update.call(
        null,
        /*use*/
        _[0]
      );
    },
    i(_) {
      d || (L(s), d = !0);
    },
    o(_) {
      h(s), d = !1;
    },
    d(_) {
      _ && F(e), u[t].d(), n[16](null), c = !1, ze(l);
    }
  };
}
function su(n, e, t) {
  let s;
  const a = ["use", "class", "role", "tabindex", "disabled", "getElement"];
  let r = Te(e, a), o, { $$slots: i = {}, $$scope: d } = e;
  const c = lt(tt());
  let { use: l = [] } = e, { class: C = "" } = e, { role: u = void 0 } = e, { tabindex: m = u === "button" ? 0 : -1 } = e, { disabled: p = !1 } = e, D, _, A = {};
  const b = Qe("SMUI:textfield:icon:leading");
  Ye(n, b, (v) => t(18, o = v));
  const S = o;
  let f;
  at(() => (_ = new tC({
    getAttr: E,
    setAttr: y,
    removeAttr: I,
    setContent: (v) => {
      t(7, f = v);
    },
    registerInteractionHandler: (v, O) => N().addEventListener(v, O),
    deregisterInteractionHandler: (v, O) => N().removeEventListener(v, O),
    notifyIconAction: () => Oe(N(), "SMUITextField:icon", void 0, void 0, !0)
  }), Oe(
    N(),
    S ? "SMUITextfieldLeadingIcon:mount" : "SMUITextfieldTrailingIcon:mount",
    _
  ), _.init(), () => {
    Oe(
      N(),
      S ? "SMUITextfieldLeadingIcon:unmount" : "SMUITextfieldTrailingIcon:unmount",
      _
    ), _.destroy();
  }));
  function E(v) {
    var O;
    return v in A ? (O = A[v]) !== null && O !== void 0 ? O : null : N().getAttribute(v);
  }
  function y(v, O) {
    A[v] !== O && t(6, A[v] = O, A);
  }
  function I(v) {
    (!(v in A) || A[v] != null) && t(6, A[v] = void 0, A);
  }
  function N() {
    return D;
  }
  function j(v) {
    de[v ? "unshift" : "push"](() => {
      D = v, t(5, D);
    });
  }
  return n.$$set = (v) => {
    e = te(te({}, e), ct(v)), t(12, r = Te(e, a)), "use" in v && t(0, l = v.use), "class" in v && t(1, C = v.class), "role" in v && t(2, u = v.role), "tabindex" in v && t(3, m = v.tabindex), "disabled" in v && t(4, p = v.disabled), "$$scope" in v && t(14, d = v.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty & /*role, tabindex*/
    12 && t(8, s = { role: u, tabindex: m });
  }, [
    l,
    C,
    u,
    m,
    p,
    D,
    A,
    f,
    s,
    c,
    b,
    S,
    r,
    N,
    d,
    i,
    j
  ];
}
class au extends me {
  constructor(e) {
    super(), ue(this, e, su, nu, Ce, {
      use: 0,
      class: 1,
      role: 2,
      tabindex: 3,
      disabled: 4,
      getElement: 13
    });
  }
  get getElement() {
    return this.$$.ctx[13];
  }
}
function ru(n) {
  let e, t, s;
  function a(o) {
    n[7](o);
  }
  let r = {
    label: (
      /*label*/
      n[2]
    ),
    placeholder: (
      /*placeholder*/
      n[1]
    ),
    style: "width: 100%",
    variant: (
      /*variant*/
      n[4]
    )
  };
  return (
    /*value*/
    n[0] !== void 0 && (r.value = /*value*/
    n[0]), e = new oa({ props: r }), de.push(() => Ve(e, "value", a)), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, i) {
        const d = {};
        i & /*label*/
        4 && (d.label = /*label*/
        o[2]), i & /*placeholder*/
        2 && (d.placeholder = /*placeholder*/
        o[1]), i & /*variant*/
        16 && (d.variant = /*variant*/
        o[4]), !t && i & /*value*/
        1 && (t = !0, d.value = /*value*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function iu(n) {
  let e, t, s;
  function a(o) {
    n[6](o);
  }
  let r = {
    label: (
      /*label*/
      n[2]
    ),
    placeholder: (
      /*placeholder*/
      n[1]
    ),
    style: `width: 100%; ${/*styles*/
    n[5]}`,
    variant: (
      /*variant*/
      n[4]
    ),
    $$slots: { leadingIcon: [du] },
    $$scope: { ctx: n }
  };
  return (
    /*value*/
    n[0] !== void 0 && (r.value = /*value*/
    n[0]), e = new oa({ props: r }), de.push(() => Ve(e, "value", a)), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, i) {
        const d = {};
        i & /*label*/
        4 && (d.label = /*label*/
        o[2]), i & /*placeholder*/
        2 && (d.placeholder = /*placeholder*/
        o[1]), i & /*styles*/
        32 && (d.style = `width: 100%; ${/*styles*/
        o[5]}`), i & /*variant*/
        16 && (d.variant = /*variant*/
        o[4]), i & /*$$scope, icon*/
        264 && (d.$$scope = { dirty: i, ctx: o }), !t && i & /*value*/
        1 && (t = !0, d.value = /*value*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function ou(n) {
  let e;
  return {
    c() {
      e = Se(
        /*icon*/
        n[3]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s & /*icon*/
      8 && je(
        e,
        /*icon*/
        t[3]
      );
    },
    d(t) {
      t && F(e);
    }
  };
}
function du(n) {
  let e, t;
  return e = new au({
    props: {
      class: "material-icons",
      slot: "leadingIcon",
      $$slots: { default: [ou] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, icon*/
      264 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function cu(n) {
  let e, t, s, a;
  const r = [iu, ru], o = [];
  function i(d, c) {
    return (
      /*icon*/
      d[3] ? 0 : 1
    );
  }
  return e = i(n), t = o[e] = r[e](n), {
    c() {
      t.c(), s = st();
    },
    m(d, c) {
      o[e].m(d, c), G(d, s, c), a = !0;
    },
    p(d, [c]) {
      let l = e;
      e = i(d), e === l ? o[e].p(d, c) : (he(), h(o[l], 1, 1, () => {
        o[l] = null;
      }), ye(), t = o[e], t ? t.p(d, c) : (t = o[e] = r[e](d), t.c()), L(t, 1), t.m(s.parentNode, s));
    },
    i(d) {
      a || (L(t), a = !0);
    },
    o(d) {
      h(t), a = !1;
    },
    d(d) {
      d && F(s), o[e].d(d);
    }
  };
}
function lu(n, e, t) {
  let { placeholder: s = "" } = e, { label: a = "" } = e, { icon: r = "" } = e, { value: o = "" } = e, { variant: i = "standard" } = e, { styles: d = "" } = e;
  function c(C) {
    o = C, t(0, o);
  }
  function l(C) {
    o = C, t(0, o);
  }
  return n.$$set = (C) => {
    "placeholder" in C && t(1, s = C.placeholder), "label" in C && t(2, a = C.label), "icon" in C && t(3, r = C.icon), "value" in C && t(0, o = C.value), "variant" in C && t(4, i = C.variant), "styles" in C && t(5, d = C.styles);
  }, [
    o,
    s,
    a,
    r,
    i,
    d,
    c,
    l
  ];
}
class pr extends me {
  constructor(e) {
    super(), ue(this, e, lu, cu, Ce, {
      placeholder: 1,
      label: 2,
      icon: 3,
      value: 0,
      variant: 4,
      styles: 5
    });
  }
}
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Cu = {
  ANCHOR: "mdc-menu-surface--anchor",
  ANIMATING_CLOSED: "mdc-menu-surface--animating-closed",
  ANIMATING_OPEN: "mdc-menu-surface--animating-open",
  FIXED: "mdc-menu-surface--fixed",
  IS_OPEN_BELOW: "mdc-menu-surface--is-open-below",
  OPEN: "mdc-menu-surface--open",
  ROOT: "mdc-menu-surface"
}, uu = {
  CLOSED_EVENT: "MDCMenuSurface:closed",
  CLOSING_EVENT: "MDCMenuSurface:closing",
  OPENED_EVENT: "MDCMenuSurface:opened",
  OPENING_EVENT: "MDCMenuSurface:opening",
  FOCUSABLE_ELEMENTS: [
    "button:not(:disabled)",
    '[href]:not([aria-disabled="true"])',
    "input:not(:disabled)",
    "select:not(:disabled)",
    "textarea:not(:disabled)",
    '[tabindex]:not([tabindex="-1"]):not([aria-disabled="true"])'
  ].join(", ")
}, os = {
  /** Total duration of menu-surface open animation. */
  TRANSITION_OPEN_DURATION: 120,
  /** Total duration of menu-surface close animation. */
  TRANSITION_CLOSE_DURATION: 75,
  /**
   * Margin left to the edge of the viewport when menu-surface is at maximum
   * possible height. Also used as a viewport margin.
   */
  MARGIN_TO_EDGE: 32,
  /**
   * Ratio of anchor width to menu-surface width for switching from corner
   * positioning to center positioning.
   */
  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,
  /**
   * Amount of time to wait before restoring focus when closing the menu
   * surface. This is important because if a touch event triggered the menu
   * close, and the subsequent mouse event occurs after focus is restored, then
   * the restored focus would be lost.
   */
  TOUCH_EVENT_WAIT_MS: 30
}, _t;
(function(n) {
  n[n.BOTTOM = 1] = "BOTTOM", n[n.CENTER = 2] = "CENTER", n[n.RIGHT = 4] = "RIGHT", n[n.FLIP_RTL = 8] = "FLIP_RTL";
})(_t || (_t = {}));
var xn;
(function(n) {
  n[n.TOP_LEFT = 0] = "TOP_LEFT", n[n.TOP_RIGHT = 4] = "TOP_RIGHT", n[n.BOTTOM_LEFT = 1] = "BOTTOM_LEFT", n[n.BOTTOM_RIGHT = 5] = "BOTTOM_RIGHT", n[n.TOP_START = 8] = "TOP_START", n[n.TOP_END = 12] = "TOP_END", n[n.BOTTOM_START = 9] = "BOTTOM_START", n[n.BOTTOM_END = 13] = "BOTTOM_END";
})(xn || (xn = {}));
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var bn, pn, Ze = {
  LIST_ITEM_ACTIVATED_CLASS: "mdc-list-item--activated",
  LIST_ITEM_CLASS: "mdc-list-item",
  LIST_ITEM_DISABLED_CLASS: "mdc-list-item--disabled",
  LIST_ITEM_SELECTED_CLASS: "mdc-list-item--selected",
  LIST_ITEM_TEXT_CLASS: "mdc-list-item__text",
  LIST_ITEM_PRIMARY_TEXT_CLASS: "mdc-list-item__primary-text",
  ROOT: "mdc-list"
};
bn = {}, bn["" + Ze.LIST_ITEM_ACTIVATED_CLASS] = "mdc-list-item--activated", bn["" + Ze.LIST_ITEM_CLASS] = "mdc-list-item", bn["" + Ze.LIST_ITEM_DISABLED_CLASS] = "mdc-list-item--disabled", bn["" + Ze.LIST_ITEM_SELECTED_CLASS] = "mdc-list-item--selected", bn["" + Ze.LIST_ITEM_PRIMARY_TEXT_CLASS] = "mdc-list-item__primary-text", bn["" + Ze.ROOT] = "mdc-list";
var Kn = (pn = {}, pn["" + Ze.LIST_ITEM_ACTIVATED_CLASS] = "mdc-deprecated-list-item--activated", pn["" + Ze.LIST_ITEM_CLASS] = "mdc-deprecated-list-item", pn["" + Ze.LIST_ITEM_DISABLED_CLASS] = "mdc-deprecated-list-item--disabled", pn["" + Ze.LIST_ITEM_SELECTED_CLASS] = "mdc-deprecated-list-item--selected", pn["" + Ze.LIST_ITEM_TEXT_CLASS] = "mdc-deprecated-list-item__text", pn["" + Ze.LIST_ITEM_PRIMARY_TEXT_CLASS] = "mdc-deprecated-list-item__primary-text", pn["" + Ze.ROOT] = "mdc-deprecated-list", pn), fn = {
  ACTION_EVENT: "MDCList:action",
  SELECTION_CHANGE_EVENT: "MDCList:selectionChange",
  ARIA_CHECKED: "aria-checked",
  ARIA_CHECKED_CHECKBOX_SELECTOR: '[role="checkbox"][aria-checked="true"]',
  ARIA_CHECKED_RADIO_SELECTOR: '[role="radio"][aria-checked="true"]',
  ARIA_CURRENT: "aria-current",
  ARIA_DISABLED: "aria-disabled",
  ARIA_ORIENTATION: "aria-orientation",
  ARIA_ORIENTATION_HORIZONTAL: "horizontal",
  ARIA_ROLE_CHECKBOX_SELECTOR: '[role="checkbox"]',
  ARIA_SELECTED: "aria-selected",
  ARIA_INTERACTIVE_ROLES_SELECTOR: '[role="listbox"], [role="menu"]',
  ARIA_MULTI_SELECTABLE_SELECTOR: '[aria-multiselectable="true"]',
  CHECKBOX_RADIO_SELECTOR: 'input[type="checkbox"], input[type="radio"]',
  CHECKBOX_SELECTOR: 'input[type="checkbox"]',
  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `
    .` + Ze.LIST_ITEM_CLASS + ` button:not(:disabled),
    .` + Ze.LIST_ITEM_CLASS + ` a,
    .` + Kn[Ze.LIST_ITEM_CLASS] + ` button:not(:disabled),
    .` + Kn[Ze.LIST_ITEM_CLASS] + ` a
  `,
  DEPRECATED_SELECTOR: ".mdc-deprecated-list",
  FOCUSABLE_CHILD_ELEMENTS: `
    .` + Ze.LIST_ITEM_CLASS + ` button:not(:disabled),
    .` + Ze.LIST_ITEM_CLASS + ` a,
    .` + Ze.LIST_ITEM_CLASS + ` input[type="radio"]:not(:disabled),
    .` + Ze.LIST_ITEM_CLASS + ` input[type="checkbox"]:not(:disabled),
    .` + Kn[Ze.LIST_ITEM_CLASS] + ` button:not(:disabled),
    .` + Kn[Ze.LIST_ITEM_CLASS] + ` a,
    .` + Kn[Ze.LIST_ITEM_CLASS] + ` input[type="radio"]:not(:disabled),
    .` + Kn[Ze.LIST_ITEM_CLASS] + ` input[type="checkbox"]:not(:disabled)
  `,
  RADIO_SELECTOR: 'input[type="radio"]',
  SELECTED_ITEM_SELECTOR: '[aria-selected="true"], [aria-current="true"]'
}, pt = {
  UNSET_INDEX: -1,
  TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS: 300
};
/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var mu = ["input", "button", "textarea", "select"], xt = function(n) {
  var e = n.target;
  if (e) {
    var t = ("" + e.tagName).toLowerCase();
    mu.indexOf(t) === -1 && n.preventDefault();
  }
};
/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function pu() {
  var n = {
    bufferClearTimeout: 0,
    currentFirstChar: "",
    sortedIndexCursor: 0,
    typeaheadBuffer: ""
  };
  return n;
}
function _u(n, e) {
  for (var t = /* @__PURE__ */ new Map(), s = 0; s < n; s++) {
    var a = e(s).trim();
    if (a) {
      var r = a[0].toLowerCase();
      t.has(r) || t.set(r, []), t.get(r).push({ text: a.toLowerCase(), index: s });
    }
  }
  return t.forEach(function(o) {
    o.sort(function(i, d) {
      return i.index - d.index;
    });
  }), t;
}
function Ka(n, e) {
  var t = n.nextChar, s = n.focusItemAtIndex, a = n.sortedIndexByFirstChar, r = n.focusedItemIndex, o = n.skipFocus, i = n.isItemAtIndexDisabled;
  clearTimeout(e.bufferClearTimeout), e.bufferClearTimeout = setTimeout(function() {
    yd(e);
  }, pt.TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS), e.typeaheadBuffer = e.typeaheadBuffer + t;
  var d;
  return e.typeaheadBuffer.length === 1 ? d = Iu(a, r, i, e) : d = Du(a, i, e), d !== -1 && !o && s(d), d;
}
function Iu(n, e, t, s) {
  var a = s.typeaheadBuffer[0], r = n.get(a);
  if (!r)
    return -1;
  if (a === s.currentFirstChar && r[s.sortedIndexCursor].index === e) {
    s.sortedIndexCursor = (s.sortedIndexCursor + 1) % r.length;
    var o = r[s.sortedIndexCursor].index;
    if (!t(o))
      return o;
  }
  s.currentFirstChar = a;
  var i = -1, d;
  for (d = 0; d < r.length; d++)
    if (!t(r[d].index)) {
      i = d;
      break;
    }
  for (; d < r.length; d++)
    if (r[d].index > e && !t(r[d].index)) {
      i = d;
      break;
    }
  return i !== -1 ? (s.sortedIndexCursor = i, r[s.sortedIndexCursor].index) : -1;
}
function Du(n, e, t) {
  var s = t.typeaheadBuffer[0], a = n.get(s);
  if (!a)
    return -1;
  var r = a[t.sortedIndexCursor];
  if (r.text.lastIndexOf(t.typeaheadBuffer, 0) === 0 && !e(r.index))
    return r.index;
  for (var o = (t.sortedIndexCursor + 1) % a.length, i = -1; o !== t.sortedIndexCursor; ) {
    var d = a[o], c = d.text.lastIndexOf(t.typeaheadBuffer, 0) === 0, l = !e(d.index);
    if (c && l) {
      i = o;
      break;
    }
    o = (o + 1) % a.length;
  }
  return i !== -1 ? (t.sortedIndexCursor = i, a[t.sortedIndexCursor].index) : -1;
}
function hd(n) {
  return n.typeaheadBuffer.length > 0;
}
function yd(n) {
  n.typeaheadBuffer = "";
}
function vi(n, e) {
  var t = n.event, s = n.isTargetListItem, a = n.focusedItemIndex, r = n.focusItemAtIndex, o = n.sortedIndexByFirstChar, i = n.isItemAtIndexDisabled, d = Mt(t) === "ArrowLeft", c = Mt(t) === "ArrowUp", l = Mt(t) === "ArrowRight", C = Mt(t) === "ArrowDown", u = Mt(t) === "Home", m = Mt(t) === "End", p = Mt(t) === "Enter", D = Mt(t) === "Spacebar";
  if (t.altKey || t.ctrlKey || t.metaKey || d || c || l || C || u || m || p)
    return -1;
  var _ = !D && t.key.length === 1;
  if (_) {
    xt(t);
    var A = {
      focusItemAtIndex: r,
      focusedItemIndex: a,
      nextChar: t.key.toLowerCase(),
      sortedIndexByFirstChar: o,
      skipFocus: !1,
      isItemAtIndexDisabled: i
    };
    return Ka(A, e);
  }
  if (!D)
    return -1;
  s && xt(t);
  var b = s && hd(e);
  if (b) {
    var A = {
      focusItemAtIndex: r,
      focusedItemIndex: a,
      nextChar: " ",
      sortedIndexByFirstChar: o,
      skipFocus: !1,
      isItemAtIndexDisabled: i
    };
    return Ka(A, e);
  }
  return -1;
}
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function bu(n) {
  return n instanceof Array;
}
var fu = ["Alt", "Control", "Meta", "Shift"];
function Mi(n) {
  var e = new Set(n ? fu.filter(function(t) {
    return n.getModifierState(t);
  }) : []);
  return function(t) {
    return t.every(function(s) {
      return e.has(s);
    }) && t.length === e.size;
  };
}
var Au = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.wrapFocus = !1, s.isVertical = !0, s.isSingleSelectionList = !1, s.areDisabledItemsFocusable = !0, s.selectedIndex = pt.UNSET_INDEX, s.focusedItemIndex = pt.UNSET_INDEX, s.useActivatedClass = !1, s.useSelectedAttr = !1, s.ariaCurrentAttrValue = null, s.isCheckboxList = !1, s.isRadioList = !1, s.lastSelectedIndex = null, s.hasTypeahead = !1, s.typeaheadState = pu(), s.sortedIndexByFirstChar = /* @__PURE__ */ new Map(), s;
    }
    return Object.defineProperty(e, "strings", {
      get: function() {
        return fn;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Ze;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return pt;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      get: function() {
        return {
          addClassForElementIndex: function() {
          },
          focusItemAtIndex: function() {
          },
          getAttributeForElementIndex: function() {
            return null;
          },
          getFocusedElementIndex: function() {
            return 0;
          },
          getListItemCount: function() {
            return 0;
          },
          hasCheckboxAtIndex: function() {
            return !1;
          },
          hasRadioAtIndex: function() {
            return !1;
          },
          isCheckboxCheckedAtIndex: function() {
            return !1;
          },
          isFocusInsideList: function() {
            return !1;
          },
          isRootFocused: function() {
            return !1;
          },
          listItemAtIndexHasClass: function() {
            return !1;
          },
          notifyAction: function() {
          },
          notifySelectionChange: function() {
          },
          removeClassForElementIndex: function() {
          },
          setAttributeForElementIndex: function() {
          },
          setCheckedCheckboxOrRadioAtIndex: function() {
          },
          setTabIndexForListItemChildren: function() {
          },
          getPrimaryTextAtIndex: function() {
            return "";
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.layout = function() {
      this.adapter.getListItemCount() !== 0 && (this.adapter.hasCheckboxAtIndex(0) ? this.isCheckboxList = !0 : this.adapter.hasRadioAtIndex(0) ? this.isRadioList = !0 : this.maybeInitializeSingleSelection(), this.hasTypeahead && (this.sortedIndexByFirstChar = this.typeaheadInitSortedIndex()));
    }, e.prototype.getFocusedItemIndex = function() {
      return this.focusedItemIndex;
    }, e.prototype.setWrapFocus = function(t) {
      this.wrapFocus = t;
    }, e.prototype.setVerticalOrientation = function(t) {
      this.isVertical = t;
    }, e.prototype.setSingleSelection = function(t) {
      this.isSingleSelectionList = t, t && (this.maybeInitializeSingleSelection(), this.selectedIndex = this.getSelectedIndexFromDOM());
    }, e.prototype.setDisabledItemsFocusable = function(t) {
      this.areDisabledItemsFocusable = t;
    }, e.prototype.maybeInitializeSingleSelection = function() {
      var t = this.getSelectedIndexFromDOM();
      if (t !== pt.UNSET_INDEX) {
        var s = this.adapter.listItemAtIndexHasClass(t, Ze.LIST_ITEM_ACTIVATED_CLASS);
        s && this.setUseActivatedClass(!0), this.isSingleSelectionList = !0, this.selectedIndex = t;
      }
    }, e.prototype.getSelectedIndexFromDOM = function() {
      for (var t = pt.UNSET_INDEX, s = this.adapter.getListItemCount(), a = 0; a < s; a++) {
        var r = this.adapter.listItemAtIndexHasClass(a, Ze.LIST_ITEM_SELECTED_CLASS), o = this.adapter.listItemAtIndexHasClass(a, Ze.LIST_ITEM_ACTIVATED_CLASS);
        if (r || o) {
          t = a;
          break;
        }
      }
      return t;
    }, e.prototype.setHasTypeahead = function(t) {
      this.hasTypeahead = t, t && (this.sortedIndexByFirstChar = this.typeaheadInitSortedIndex());
    }, e.prototype.isTypeaheadInProgress = function() {
      return this.hasTypeahead && hd(this.typeaheadState);
    }, e.prototype.setUseActivatedClass = function(t) {
      this.useActivatedClass = t;
    }, e.prototype.setUseSelectedAttribute = function(t) {
      this.useSelectedAttr = t;
    }, e.prototype.getSelectedIndex = function() {
      return this.selectedIndex;
    }, e.prototype.setSelectedIndex = function(t, s) {
      s === void 0 && (s = {}), this.isIndexValid(t) && (this.isCheckboxList ? this.setCheckboxAtIndex(t, s) : this.isRadioList ? this.setRadioAtIndex(t, s) : this.setSingleSelectionAtIndex(t, s));
    }, e.prototype.handleFocusIn = function(t) {
      t >= 0 && (this.focusedItemIndex = t, this.adapter.setAttributeForElementIndex(t, "tabindex", "0"), this.adapter.setTabIndexForListItemChildren(t, "0"));
    }, e.prototype.handleFocusOut = function(t) {
      var s = this;
      t >= 0 && (this.adapter.setAttributeForElementIndex(t, "tabindex", "-1"), this.adapter.setTabIndexForListItemChildren(t, "-1")), setTimeout(function() {
        s.adapter.isFocusInsideList() || s.setTabindexToFirstSelectedOrFocusedItem();
      }, 0);
    }, e.prototype.isIndexDisabled = function(t) {
      return this.adapter.listItemAtIndexHasClass(t, Ze.LIST_ITEM_DISABLED_CLASS);
    }, e.prototype.handleKeydown = function(t, s, a) {
      var r = this, o, i = Mt(t) === "ArrowLeft", d = Mt(t) === "ArrowUp", c = Mt(t) === "ArrowRight", l = Mt(t) === "ArrowDown", C = Mt(t) === "Home", u = Mt(t) === "End", m = Mt(t) === "Enter", p = Mt(t) === "Spacebar", D = this.isVertical && l || !this.isVertical && c, _ = this.isVertical && d || !this.isVertical && i, A = t.key === "A" || t.key === "a", b = Mi(t);
      if (this.adapter.isRootFocused()) {
        if ((_ || u) && b([]))
          t.preventDefault(), this.focusLastElement();
        else if ((D || C) && b([]))
          t.preventDefault(), this.focusFirstElement();
        else if (_ && b(["Shift"]) && this.isCheckboxList) {
          t.preventDefault();
          var S = this.focusLastElement();
          S !== -1 && this.setSelectedIndexOnAction(S, !1);
        } else if (D && b(["Shift"]) && this.isCheckboxList) {
          t.preventDefault();
          var S = this.focusFirstElement();
          S !== -1 && this.setSelectedIndexOnAction(S, !1);
        }
        if (this.hasTypeahead) {
          var f = {
            event: t,
            focusItemAtIndex: function(I) {
              r.focusItemAtIndex(I);
            },
            focusedItemIndex: -1,
            isTargetListItem: s,
            sortedIndexByFirstChar: this.sortedIndexByFirstChar,
            isItemAtIndexDisabled: function(I) {
              return r.isIndexDisabled(I);
            }
          };
          vi(f, this.typeaheadState);
        }
        return;
      }
      var E = this.adapter.getFocusedElementIndex();
      if (!(E === -1 && (E = a, E < 0))) {
        if (D && b([]))
          xt(t), this.focusNextElement(E);
        else if (_ && b([]))
          xt(t), this.focusPrevElement(E);
        else if (D && b(["Shift"]) && this.isCheckboxList) {
          xt(t);
          var S = this.focusNextElement(E);
          S !== -1 && this.setSelectedIndexOnAction(S, !1);
        } else if (_ && b(["Shift"]) && this.isCheckboxList) {
          xt(t);
          var S = this.focusPrevElement(E);
          S !== -1 && this.setSelectedIndexOnAction(S, !1);
        } else if (C && b([]))
          xt(t), this.focusFirstElement();
        else if (u && b([]))
          xt(t), this.focusLastElement();
        else if (C && b(["Control", "Shift"]) && this.isCheckboxList) {
          if (xt(t), this.isIndexDisabled(E))
            return;
          this.focusFirstElement(), this.toggleCheckboxRange(0, E, E);
        } else if (u && b(["Control", "Shift"]) && this.isCheckboxList) {
          if (xt(t), this.isIndexDisabled(E))
            return;
          this.focusLastElement(), this.toggleCheckboxRange(E, this.adapter.getListItemCount() - 1, E);
        } else if (A && b(["Control"]) && this.isCheckboxList)
          t.preventDefault(), this.checkboxListToggleAll(this.selectedIndex === pt.UNSET_INDEX ? [] : this.selectedIndex, !0);
        else if ((m || p) && b([])) {
          if (s) {
            var y = t.target;
            if (y && y.tagName === "A" && m || (xt(t), this.isIndexDisabled(E)))
              return;
            this.isTypeaheadInProgress() || (this.isSelectableList() && this.setSelectedIndexOnAction(E, !1), this.adapter.notifyAction(E));
          }
        } else if ((m || p) && b(["Shift"]) && this.isCheckboxList) {
          var y = t.target;
          if (y && y.tagName === "A" && m || (xt(t), this.isIndexDisabled(E)))
            return;
          this.isTypeaheadInProgress() || (this.toggleCheckboxRange((o = this.lastSelectedIndex) !== null && o !== void 0 ? o : E, E, E), this.adapter.notifyAction(E));
        }
        if (this.hasTypeahead) {
          var f = {
            event: t,
            focusItemAtIndex: function(N) {
              r.focusItemAtIndex(N);
            },
            focusedItemIndex: this.focusedItemIndex,
            isTargetListItem: s,
            sortedIndexByFirstChar: this.sortedIndexByFirstChar,
            isItemAtIndexDisabled: function(N) {
              return r.isIndexDisabled(N);
            }
          };
          vi(f, this.typeaheadState);
        }
      }
    }, e.prototype.handleClick = function(t, s, a) {
      var r, o = Mi(a);
      t !== pt.UNSET_INDEX && (this.isIndexDisabled(t) || (o([]) ? (this.isSelectableList() && this.setSelectedIndexOnAction(t, s), this.adapter.notifyAction(t)) : this.isCheckboxList && o(["Shift"]) && (this.toggleCheckboxRange((r = this.lastSelectedIndex) !== null && r !== void 0 ? r : t, t, t), this.adapter.notifyAction(t))));
    }, e.prototype.focusNextElement = function(t) {
      var s = this.adapter.getListItemCount(), a = t, r = null;
      do {
        if (a++, a >= s)
          if (this.wrapFocus)
            a = 0;
          else
            return t;
        if (a === r)
          return -1;
        r = r ?? a;
      } while (!this.areDisabledItemsFocusable && this.isIndexDisabled(a));
      return this.focusItemAtIndex(a), a;
    }, e.prototype.focusPrevElement = function(t) {
      var s = this.adapter.getListItemCount(), a = t, r = null;
      do {
        if (a--, a < 0)
          if (this.wrapFocus)
            a = s - 1;
          else
            return t;
        if (a === r)
          return -1;
        r = r ?? a;
      } while (!this.areDisabledItemsFocusable && this.isIndexDisabled(a));
      return this.focusItemAtIndex(a), a;
    }, e.prototype.focusFirstElement = function() {
      return this.focusNextElement(-1);
    }, e.prototype.focusLastElement = function() {
      return this.focusPrevElement(this.adapter.getListItemCount());
    }, e.prototype.focusInitialElement = function() {
      var t = this.getFirstSelectedOrFocusedItemIndex();
      return this.focusItemAtIndex(t), t;
    }, e.prototype.setEnabled = function(t, s) {
      this.isIndexValid(t, !1) && (s ? (this.adapter.removeClassForElementIndex(t, Ze.LIST_ITEM_DISABLED_CLASS), this.adapter.setAttributeForElementIndex(t, fn.ARIA_DISABLED, "false")) : (this.adapter.addClassForElementIndex(t, Ze.LIST_ITEM_DISABLED_CLASS), this.adapter.setAttributeForElementIndex(t, fn.ARIA_DISABLED, "true")));
    }, e.prototype.setSingleSelectionAtIndex = function(t, s) {
      if (s === void 0 && (s = {}), !(this.selectedIndex === t && !s.forceUpdate)) {
        var a = Ze.LIST_ITEM_SELECTED_CLASS;
        this.useActivatedClass && (a = Ze.LIST_ITEM_ACTIVATED_CLASS), this.selectedIndex !== pt.UNSET_INDEX && this.adapter.removeClassForElementIndex(this.selectedIndex, a), this.setAriaForSingleSelectionAtIndex(t), this.setTabindexAtIndex(t), t !== pt.UNSET_INDEX && this.adapter.addClassForElementIndex(t, a), this.selectedIndex = t, s.isUserInteraction && !s.forceUpdate && this.adapter.notifySelectionChange([t]);
      }
    }, e.prototype.setAriaForSingleSelectionAtIndex = function(t) {
      this.selectedIndex === pt.UNSET_INDEX && (this.ariaCurrentAttrValue = this.adapter.getAttributeForElementIndex(t, fn.ARIA_CURRENT));
      var s = this.ariaCurrentAttrValue !== null, a = s ? fn.ARIA_CURRENT : fn.ARIA_SELECTED;
      if (this.selectedIndex !== pt.UNSET_INDEX && this.adapter.setAttributeForElementIndex(this.selectedIndex, a, "false"), t !== pt.UNSET_INDEX) {
        var r = s ? this.ariaCurrentAttrValue : "true";
        this.adapter.setAttributeForElementIndex(t, a, r);
      }
    }, e.prototype.getSelectionAttribute = function() {
      return this.useSelectedAttr ? fn.ARIA_SELECTED : fn.ARIA_CHECKED;
    }, e.prototype.setRadioAtIndex = function(t, s) {
      s === void 0 && (s = {});
      var a = this.getSelectionAttribute();
      this.adapter.setCheckedCheckboxOrRadioAtIndex(t, !0), !(this.selectedIndex === t && !s.forceUpdate) && (this.selectedIndex !== pt.UNSET_INDEX && this.adapter.setAttributeForElementIndex(this.selectedIndex, a, "false"), this.adapter.setAttributeForElementIndex(t, a, "true"), this.selectedIndex = t, s.isUserInteraction && !s.forceUpdate && this.adapter.notifySelectionChange([t]));
    }, e.prototype.setCheckboxAtIndex = function(t, s) {
      s === void 0 && (s = {});
      for (var a = this.selectedIndex, r = s.isUserInteraction ? new Set(a === pt.UNSET_INDEX ? [] : a) : null, o = this.getSelectionAttribute(), i = [], d = 0; d < this.adapter.getListItemCount(); d++) {
        var c = r == null ? void 0 : r.has(d), l = t.indexOf(d) >= 0;
        l !== c && i.push(d), this.adapter.setCheckedCheckboxOrRadioAtIndex(d, l), this.adapter.setAttributeForElementIndex(d, o, l ? "true" : "false");
      }
      this.selectedIndex = t, s.isUserInteraction && i.length && this.adapter.notifySelectionChange(i);
    }, e.prototype.toggleCheckboxRange = function(t, s, a) {
      this.lastSelectedIndex = a;
      for (var r = new Set(this.selectedIndex === pt.UNSET_INDEX ? [] : this.selectedIndex), o = !(r != null && r.has(a)), i = Ha([t, s].sort(), 2), d = i[0], c = i[1], l = this.getSelectionAttribute(), C = [], u = d; u <= c; u++)
        if (!this.isIndexDisabled(u)) {
          var m = r.has(u);
          o !== m && (C.push(u), this.adapter.setCheckedCheckboxOrRadioAtIndex(u, o), this.adapter.setAttributeForElementIndex(u, l, "" + o), o ? r.add(u) : r.delete(u));
        }
      C.length && (this.selectedIndex = Od([], Ha(r)), this.adapter.notifySelectionChange(C));
    }, e.prototype.setTabindexAtIndex = function(t) {
      this.focusedItemIndex === pt.UNSET_INDEX && t !== 0 ? this.adapter.setAttributeForElementIndex(0, "tabindex", "-1") : this.focusedItemIndex >= 0 && this.focusedItemIndex !== t && this.adapter.setAttributeForElementIndex(this.focusedItemIndex, "tabindex", "-1"), !(this.selectedIndex instanceof Array) && this.selectedIndex !== t && this.adapter.setAttributeForElementIndex(this.selectedIndex, "tabindex", "-1"), t !== pt.UNSET_INDEX && this.adapter.setAttributeForElementIndex(t, "tabindex", "0");
    }, e.prototype.isSelectableList = function() {
      return this.isSingleSelectionList || this.isCheckboxList || this.isRadioList;
    }, e.prototype.setTabindexToFirstSelectedOrFocusedItem = function() {
      var t = this.getFirstSelectedOrFocusedItemIndex();
      this.setTabindexAtIndex(t);
    }, e.prototype.getFirstSelectedOrFocusedItemIndex = function() {
      return this.isSelectableList() ? typeof this.selectedIndex == "number" && this.selectedIndex !== pt.UNSET_INDEX ? this.selectedIndex : bu(this.selectedIndex) && this.selectedIndex.length > 0 ? this.selectedIndex.reduce(function(t, s) {
        return Math.min(t, s);
      }) : 0 : Math.max(this.focusedItemIndex, 0);
    }, e.prototype.isIndexValid = function(t, s) {
      var a = this;
      if (s === void 0 && (s = !0), t instanceof Array) {
        if (!this.isCheckboxList && s)
          throw new Error("MDCListFoundation: Array of index is only supported for checkbox based list");
        return t.length === 0 ? !0 : t.some(function(r) {
          return a.isIndexInRange(r);
        });
      } else if (typeof t == "number") {
        if (this.isCheckboxList && s)
          throw new Error("MDCListFoundation: Expected array of index for checkbox based list but got number: " + t);
        return this.isIndexInRange(t) || this.isSingleSelectionList && t === pt.UNSET_INDEX;
      } else
        return !1;
    }, e.prototype.isIndexInRange = function(t) {
      var s = this.adapter.getListItemCount();
      return t >= 0 && t < s;
    }, e.prototype.setSelectedIndexOnAction = function(t, s) {
      this.lastSelectedIndex = t, this.isCheckboxList ? (this.toggleCheckboxAtIndex(t, s), this.adapter.notifySelectionChange([t])) : this.setSelectedIndex(t, { isUserInteraction: !0 });
    }, e.prototype.toggleCheckboxAtIndex = function(t, s) {
      var a = this.getSelectionAttribute(), r = this.adapter.isCheckboxCheckedAtIndex(t), o;
      s ? o = r : (o = !r, this.adapter.setCheckedCheckboxOrRadioAtIndex(t, o)), this.adapter.setAttributeForElementIndex(t, a, o ? "true" : "false");
      var i = this.selectedIndex === pt.UNSET_INDEX ? [] : this.selectedIndex.slice();
      o ? i.push(t) : i = i.filter(function(d) {
        return d !== t;
      }), this.selectedIndex = i;
    }, e.prototype.focusItemAtIndex = function(t) {
      this.adapter.focusItemAtIndex(t), this.focusedItemIndex = t;
    }, e.prototype.checkboxListToggleAll = function(t, s) {
      var a = this.adapter.getListItemCount();
      if (t.length === a)
        this.setCheckboxAtIndex([], { isUserInteraction: s });
      else {
        for (var r = [], o = 0; o < a; o++)
          (!this.isIndexDisabled(o) || t.indexOf(o) > -1) && r.push(o);
        this.setCheckboxAtIndex(r, { isUserInteraction: s });
      }
    }, e.prototype.typeaheadMatchItem = function(t, s, a) {
      var r = this;
      a === void 0 && (a = !1);
      var o = {
        focusItemAtIndex: function(i) {
          r.focusItemAtIndex(i);
        },
        focusedItemIndex: s || this.focusedItemIndex,
        nextChar: t,
        sortedIndexByFirstChar: this.sortedIndexByFirstChar,
        skipFocus: a,
        isItemAtIndexDisabled: function(i) {
          return r.isIndexDisabled(i);
        }
      };
      return Ka(o, this.typeaheadState);
    }, e.prototype.typeaheadInitSortedIndex = function() {
      return _u(this.adapter.getListItemCount(), this.adapter.getPrimaryTextAtIndex);
    }, e.prototype.clearTypeaheadBuffer = function() {
      yd(this.typeaheadState);
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Nd = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.isSurfaceOpen = !1, s.isQuickOpen = !1, s.isHoistedElement = !1, s.isFixedPosition = !1, s.isHorizontallyCenteredOnViewport = !1, s.maxHeight = 0, s.openBottomBias = 0, s.openAnimationEndTimerId = 0, s.closeAnimationEndTimerId = 0, s.animationRequestId = 0, s.anchorCorner = xn.TOP_START, s.originCorner = xn.TOP_START, s.anchorMargin = { top: 0, right: 0, bottom: 0, left: 0 }, s.position = { x: 0, y: 0 }, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Cu;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return uu;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return os;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "Corner", {
      get: function() {
        return xn;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      /**
       * @see {@link MDCMenuSurfaceAdapter} for typing information on parameters and return types.
       */
      get: function() {
        return {
          addClass: function() {
          },
          removeClass: function() {
          },
          hasClass: function() {
            return !1;
          },
          hasAnchor: function() {
            return !1;
          },
          isElementInContainer: function() {
            return !1;
          },
          isFocused: function() {
            return !1;
          },
          isRtl: function() {
            return !1;
          },
          getInnerDimensions: function() {
            return { height: 0, width: 0 };
          },
          getAnchorDimensions: function() {
            return null;
          },
          getWindowDimensions: function() {
            return { height: 0, width: 0 };
          },
          getBodyDimensions: function() {
            return { height: 0, width: 0 };
          },
          getWindowScroll: function() {
            return { x: 0, y: 0 };
          },
          setPosition: function() {
          },
          setMaxHeight: function() {
          },
          setTransformOrigin: function() {
          },
          saveFocus: function() {
          },
          restoreFocus: function() {
          },
          notifyClose: function() {
          },
          notifyClosing: function() {
          },
          notifyOpen: function() {
          },
          notifyOpening: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      var t = e.cssClasses, s = t.ROOT, a = t.OPEN;
      if (!this.adapter.hasClass(s))
        throw new Error(s + " class required in root element.");
      this.adapter.hasClass(a) && (this.isSurfaceOpen = !0);
    }, e.prototype.destroy = function() {
      clearTimeout(this.openAnimationEndTimerId), clearTimeout(this.closeAnimationEndTimerId), cancelAnimationFrame(this.animationRequestId);
    }, e.prototype.setAnchorCorner = function(t) {
      this.anchorCorner = t;
    }, e.prototype.flipCornerHorizontally = function() {
      this.originCorner = this.originCorner ^ _t.RIGHT;
    }, e.prototype.setAnchorMargin = function(t) {
      this.anchorMargin.top = t.top || 0, this.anchorMargin.right = t.right || 0, this.anchorMargin.bottom = t.bottom || 0, this.anchorMargin.left = t.left || 0;
    }, e.prototype.setIsHoisted = function(t) {
      this.isHoistedElement = t;
    }, e.prototype.setFixedPosition = function(t) {
      this.isFixedPosition = t;
    }, e.prototype.isFixed = function() {
      return this.isFixedPosition;
    }, e.prototype.setAbsolutePosition = function(t, s) {
      this.position.x = this.isFinite(t) ? t : 0, this.position.y = this.isFinite(s) ? s : 0;
    }, e.prototype.setIsHorizontallyCenteredOnViewport = function(t) {
      this.isHorizontallyCenteredOnViewport = t;
    }, e.prototype.setQuickOpen = function(t) {
      this.isQuickOpen = t;
    }, e.prototype.setMaxHeight = function(t) {
      this.maxHeight = t;
    }, e.prototype.setOpenBottomBias = function(t) {
      this.openBottomBias = t;
    }, e.prototype.isOpen = function() {
      return this.isSurfaceOpen;
    }, e.prototype.open = function() {
      var t = this;
      this.isSurfaceOpen || (this.adapter.notifyOpening(), this.adapter.saveFocus(), this.isQuickOpen ? (this.isSurfaceOpen = !0, this.adapter.addClass(e.cssClasses.OPEN), this.dimensions = this.adapter.getInnerDimensions(), this.autoposition(), this.adapter.notifyOpen()) : (this.adapter.addClass(e.cssClasses.ANIMATING_OPEN), this.animationRequestId = requestAnimationFrame(function() {
        t.dimensions = t.adapter.getInnerDimensions(), t.autoposition(), t.adapter.addClass(e.cssClasses.OPEN), t.openAnimationEndTimerId = setTimeout(function() {
          t.openAnimationEndTimerId = 0, t.adapter.removeClass(e.cssClasses.ANIMATING_OPEN), t.adapter.notifyOpen();
        }, os.TRANSITION_OPEN_DURATION);
      }), this.isSurfaceOpen = !0));
    }, e.prototype.close = function(t) {
      var s = this;
      if (t === void 0 && (t = !1), !!this.isSurfaceOpen) {
        if (this.adapter.notifyClosing(), this.isQuickOpen) {
          this.isSurfaceOpen = !1, t || this.maybeRestoreFocus(), this.adapter.removeClass(e.cssClasses.OPEN), this.adapter.removeClass(e.cssClasses.IS_OPEN_BELOW), this.adapter.notifyClose();
          return;
        }
        this.adapter.addClass(e.cssClasses.ANIMATING_CLOSED), requestAnimationFrame(function() {
          s.adapter.removeClass(e.cssClasses.OPEN), s.adapter.removeClass(e.cssClasses.IS_OPEN_BELOW), s.closeAnimationEndTimerId = setTimeout(function() {
            s.closeAnimationEndTimerId = 0, s.adapter.removeClass(e.cssClasses.ANIMATING_CLOSED), s.adapter.notifyClose();
          }, os.TRANSITION_CLOSE_DURATION);
        }), this.isSurfaceOpen = !1, t || this.maybeRestoreFocus();
      }
    }, e.prototype.handleBodyClick = function(t) {
      var s = t.target;
      this.adapter.isElementInContainer(s) || this.close();
    }, e.prototype.handleKeydown = function(t) {
      var s = t.keyCode, a = t.key, r = a === "Escape" || s === 27;
      r && this.close();
    }, e.prototype.autoposition = function() {
      var t;
      this.measurements = this.getAutoLayoutmeasurements();
      var s = this.getoriginCorner(), a = this.getMenuSurfaceMaxHeight(s), r = this.hasBit(s, _t.BOTTOM) ? "bottom" : "top", o = this.hasBit(s, _t.RIGHT) ? "right" : "left", i = this.getHorizontalOriginOffset(s), d = this.getVerticalOriginOffset(s), c = this.measurements, l = c.anchorSize, C = c.surfaceSize, u = (t = {}, t[o] = i, t[r] = d, t);
      l.width / C.width > os.ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO && (o = "center"), (this.isHoistedElement || this.isFixedPosition) && this.adjustPositionForHoistedElement(u), this.adapter.setTransformOrigin(o + " " + r), this.adapter.setPosition(u), this.adapter.setMaxHeight(a ? a + "px" : ""), this.hasBit(s, _t.BOTTOM) || this.adapter.addClass(e.cssClasses.IS_OPEN_BELOW);
    }, e.prototype.getAutoLayoutmeasurements = function() {
      var t = this.adapter.getAnchorDimensions(), s = this.adapter.getBodyDimensions(), a = this.adapter.getWindowDimensions(), r = this.adapter.getWindowScroll();
      return t || (t = {
        top: this.position.y,
        right: this.position.x,
        bottom: this.position.y,
        left: this.position.x,
        width: 0,
        height: 0
      }), {
        anchorSize: t,
        bodySize: s,
        surfaceSize: this.dimensions,
        viewportDistance: {
          // tslint:disable:object-literal-sort-keys Positional properties are more readable when they're grouped together
          top: t.top,
          right: a.width - t.right,
          bottom: a.height - t.bottom,
          left: t.left
          // tslint:enable:object-literal-sort-keys
        },
        viewportSize: a,
        windowScroll: r
      };
    }, e.prototype.getoriginCorner = function() {
      var t = this.originCorner, s = this.measurements, a = s.viewportDistance, r = s.anchorSize, o = s.surfaceSize, i = e.numbers.MARGIN_TO_EDGE, d = this.hasBit(this.anchorCorner, _t.BOTTOM), c, l;
      d ? (c = a.top - i + this.anchorMargin.bottom, l = a.bottom - i - this.anchorMargin.bottom) : (c = a.top - i + this.anchorMargin.top, l = a.bottom - i + r.height - this.anchorMargin.top);
      var C = l - o.height > 0;
      !C && c > l + this.openBottomBias && (t = this.setBit(t, _t.BOTTOM));
      var u = this.adapter.isRtl(), m = this.hasBit(this.anchorCorner, _t.FLIP_RTL), p = this.hasBit(this.anchorCorner, _t.RIGHT) || this.hasBit(t, _t.RIGHT), D = !1;
      u && m ? D = !p : D = p;
      var _, A;
      D ? (_ = a.left + r.width + this.anchorMargin.right, A = a.right - this.anchorMargin.right) : (_ = a.left + this.anchorMargin.left, A = a.right + r.width - this.anchorMargin.left);
      var b = _ - o.width > 0, S = A - o.width > 0, f = this.hasBit(t, _t.FLIP_RTL) && this.hasBit(t, _t.RIGHT);
      return S && f && u || !b && f ? t = this.unsetBit(t, _t.RIGHT) : (b && D && u || b && !D && p || !S && _ >= A) && (t = this.setBit(t, _t.RIGHT)), t;
    }, e.prototype.getMenuSurfaceMaxHeight = function(t) {
      if (this.maxHeight > 0)
        return this.maxHeight;
      var s = this.measurements.viewportDistance, a = 0, r = this.hasBit(t, _t.BOTTOM), o = this.hasBit(this.anchorCorner, _t.BOTTOM), i = e.numbers.MARGIN_TO_EDGE;
      return r ? (a = s.top + this.anchorMargin.top - i, o || (a += this.measurements.anchorSize.height)) : (a = s.bottom - this.anchorMargin.bottom + this.measurements.anchorSize.height - i, o && (a -= this.measurements.anchorSize.height)), a;
    }, e.prototype.getHorizontalOriginOffset = function(t) {
      var s = this.measurements.anchorSize, a = this.hasBit(t, _t.RIGHT), r = this.hasBit(this.anchorCorner, _t.RIGHT);
      if (a) {
        var o = r ? s.width - this.anchorMargin.left : this.anchorMargin.right;
        return this.isHoistedElement || this.isFixedPosition ? o - (this.measurements.viewportSize.width - this.measurements.bodySize.width) : o;
      }
      return r ? s.width - this.anchorMargin.right : this.anchorMargin.left;
    }, e.prototype.getVerticalOriginOffset = function(t) {
      var s = this.measurements.anchorSize, a = this.hasBit(t, _t.BOTTOM), r = this.hasBit(this.anchorCorner, _t.BOTTOM), o = 0;
      return a ? o = r ? s.height - this.anchorMargin.top : -this.anchorMargin.bottom : o = r ? s.height + this.anchorMargin.bottom : this.anchorMargin.top, o;
    }, e.prototype.adjustPositionForHoistedElement = function(t) {
      var s, a, r = this.measurements, o = r.windowScroll, i = r.viewportDistance, d = r.surfaceSize, c = r.viewportSize, l = Object.keys(t);
      try {
        for (var C = kt(l), u = C.next(); !u.done; u = C.next()) {
          var m = u.value, p = t[m] || 0;
          if (this.isHorizontallyCenteredOnViewport && (m === "left" || m === "right")) {
            t[m] = (c.width - d.width) / 2;
            continue;
          }
          p += i[m], this.isFixedPosition || (m === "top" ? p += o.y : m === "bottom" ? p -= o.y : m === "left" ? p += o.x : p -= o.x), t[m] = p;
        }
      } catch (D) {
        s = { error: D };
      } finally {
        try {
          u && !u.done && (a = C.return) && a.call(C);
        } finally {
          if (s)
            throw s.error;
        }
      }
    }, e.prototype.maybeRestoreFocus = function() {
      var t = this, s = this.adapter.isFocused(), a = this.adapter.getOwnerDocument ? this.adapter.getOwnerDocument() : document, r = a.activeElement && this.adapter.isElementInContainer(a.activeElement);
      (s || r) && setTimeout(function() {
        t.adapter.restoreFocus();
      }, os.TOUCH_EVENT_WAIT_MS);
    }, e.prototype.hasBit = function(t, s) {
      return !!(t & s);
    }, e.prototype.setBit = function(t, s) {
      return t | s;
    }, e.prototype.unsetBit = function(t, s) {
      return t ^ s;
    }, e.prototype.isFinite = function(t) {
      return typeof t == "number" && isFinite(t);
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var $n = {
  MENU_SELECTED_LIST_ITEM: "mdc-menu-item--selected",
  MENU_SELECTION_GROUP: "mdc-menu__selection-group",
  ROOT: "mdc-menu"
}, Wn = {
  ARIA_CHECKED_ATTR: "aria-checked",
  ARIA_DISABLED_ATTR: "aria-disabled",
  CHECKBOX_SELECTOR: 'input[type="checkbox"]',
  LIST_SELECTOR: ".mdc-list,.mdc-deprecated-list",
  SELECTED_EVENT: "MDCMenu:selected",
  SKIP_RESTORE_FOCUS: "data-menu-item-skip-restore-focus"
}, Eu = {
  FOCUS_ROOT_INDEX: -1
}, Yn;
(function(n) {
  n[n.NONE = 0] = "NONE", n[n.LIST_ROOT = 1] = "LIST_ROOT", n[n.FIRST_ITEM = 2] = "FIRST_ITEM", n[n.LAST_ITEM = 3] = "LAST_ITEM";
})(Yn || (Yn = {}));
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Ou = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.closeAnimationEndTimerId = 0, s.defaultFocusState = Yn.LIST_ROOT, s.selectedIndex = -1, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return $n;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return Wn;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return Eu;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      /**
       * @see {@link MDCMenuAdapter} for typing information on parameters and return types.
       */
      get: function() {
        return {
          addClassToElementAtIndex: function() {
          },
          removeClassFromElementAtIndex: function() {
          },
          addAttributeToElementAtIndex: function() {
          },
          removeAttributeFromElementAtIndex: function() {
          },
          getAttributeFromElementAtIndex: function() {
            return null;
          },
          elementContainsClass: function() {
            return !1;
          },
          closeSurface: function() {
          },
          getElementIndex: function() {
            return -1;
          },
          notifySelected: function() {
          },
          getMenuItemCount: function() {
            return 0;
          },
          focusItemAtIndex: function() {
          },
          focusListRoot: function() {
          },
          getSelectedSiblingOfItemAtIndex: function() {
            return -1;
          },
          isSelectableItemAtIndex: function() {
            return !1;
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.destroy = function() {
      this.closeAnimationEndTimerId && clearTimeout(this.closeAnimationEndTimerId), this.adapter.closeSurface();
    }, e.prototype.handleKeydown = function(t) {
      var s = t.key, a = t.keyCode, r = s === "Tab" || a === 9;
      r && this.adapter.closeSurface(
        /** skipRestoreFocus */
        !0
      );
    }, e.prototype.handleItemAction = function(t) {
      var s = this, a = this.adapter.getElementIndex(t);
      if (!(a < 0)) {
        this.adapter.notifySelected({ index: a });
        var r = this.adapter.getAttributeFromElementAtIndex(a, Wn.SKIP_RESTORE_FOCUS) === "true";
        this.adapter.closeSurface(r), this.closeAnimationEndTimerId = setTimeout(function() {
          var o = s.adapter.getElementIndex(t);
          o >= 0 && s.adapter.isSelectableItemAtIndex(o) && s.setSelectedIndex(o);
        }, Nd.numbers.TRANSITION_CLOSE_DURATION);
      }
    }, e.prototype.handleMenuSurfaceOpened = function() {
      switch (this.defaultFocusState) {
        case Yn.FIRST_ITEM:
          this.adapter.focusItemAtIndex(0);
          break;
        case Yn.LAST_ITEM:
          this.adapter.focusItemAtIndex(this.adapter.getMenuItemCount() - 1);
          break;
        case Yn.NONE:
          break;
        default:
          this.adapter.focusListRoot();
          break;
      }
    }, e.prototype.setDefaultFocusState = function(t) {
      this.defaultFocusState = t;
    }, e.prototype.getSelectedIndex = function() {
      return this.selectedIndex;
    }, e.prototype.setSelectedIndex = function(t) {
      if (this.validatedIndex(t), !this.adapter.isSelectableItemAtIndex(t))
        throw new Error("MDCMenuFoundation: No selection group at specified index.");
      var s = this.adapter.getSelectedSiblingOfItemAtIndex(t);
      s >= 0 && (this.adapter.removeAttributeFromElementAtIndex(s, Wn.ARIA_CHECKED_ATTR), this.adapter.removeClassFromElementAtIndex(s, $n.MENU_SELECTED_LIST_ITEM)), this.adapter.addClassToElementAtIndex(t, $n.MENU_SELECTED_LIST_ITEM), this.adapter.addAttributeToElementAtIndex(t, Wn.ARIA_CHECKED_ATTR, "true"), this.selectedIndex = t;
    }, e.prototype.setEnabled = function(t, s) {
      this.validatedIndex(t), s ? (this.adapter.removeClassFromElementAtIndex(t, Ze.LIST_ITEM_DISABLED_CLASS), this.adapter.addAttributeToElementAtIndex(t, Wn.ARIA_DISABLED_ATTR, "false")) : (this.adapter.addClassToElementAtIndex(t, Ze.LIST_ITEM_DISABLED_CLASS), this.adapter.addAttributeToElementAtIndex(t, Wn.ARIA_DISABLED_ATTR, "true"));
    }, e.prototype.validatedIndex = function(t) {
      var s = this.adapter.getMenuItemCount(), a = t >= 0 && t < s;
      if (!a)
        throw new Error("MDCMenuFoundation: No list item at specified index.");
    }, e;
  }(wt)
);
const { document: Su } = ud;
function Lu(n) {
  let e, t, s, a, r, o, i, d;
  const c = (
    /*#slots*/
    n[34].default
  ), l = Pe(
    c,
    n,
    /*$$scope*/
    n[33],
    null
  );
  let C = [
    {
      class: s = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-menu-surface": !0,
        "mdc-menu-surface--fixed": (
          /*fixed*/
          n[4]
        ),
        "mdc-menu-surface--open": (
          /*isStatic*/
          n[3]
        ),
        "smui-menu-surface--static": (
          /*isStatic*/
          n[3]
        ),
        "mdc-menu-surface--fullwidth": (
          /*fullWidth*/
          n[5]
        ),
        .../*internalClasses*/
        n[8]
      })
    },
    {
      style: a = Object.entries(
        /*internalStyles*/
        n[9]
      ).map(Ri).concat([
        /*style*/
        n[2]
      ]).join(" ")
    },
    { role: "dialog" },
    /*$$restProps*/
    n[12]
  ], u = {};
  for (let m = 0; m < C.length; m += 1)
    u = te(u, C[m]);
  return {
    c() {
      e = $(), t = Z("div"), l && l.c(), Ae(t, u);
    },
    m(m, p) {
      G(m, e, p), G(m, t, p), l && l.m(t, null), n[35](t), o = !0, i || (d = [
        ce(
          Su.body,
          "click",
          /*handleBodyClick*/
          n[11],
          !0
        ),
        De(r = rt.call(
          null,
          t,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[10].call(null, t)
        ),
        ce(t, "keydown", function() {
          Fe(
            /*instance*/
            n[7] && /*instance*/
            n[7].handleKeydown.bind(
              /*instance*/
              n[7]
            )
          ) && /*instance*/
          (n[7] && /*instance*/
          n[7].handleKeydown.bind(
            /*instance*/
            n[7]
          )).apply(this, arguments);
        })
      ], i = !0);
    },
    p(m, p) {
      n = m, l && l.p && (!o || p[1] & /*$$scope*/
      4) && Me(
        l,
        c,
        n,
        /*$$scope*/
        n[33],
        o ? ve(
          c,
          /*$$scope*/
          n[33],
          p,
          null
        ) : Re(
          /*$$scope*/
          n[33]
        ),
        null
      ), Ae(t, u = Ee(C, [
        (!o || p[0] & /*className, fixed, isStatic, fullWidth, internalClasses*/
        314 && s !== (s = le({
          [
            /*className*/
            n[1]
          ]: !0,
          "mdc-menu-surface": !0,
          "mdc-menu-surface--fixed": (
            /*fixed*/
            n[4]
          ),
          "mdc-menu-surface--open": (
            /*isStatic*/
            n[3]
          ),
          "smui-menu-surface--static": (
            /*isStatic*/
            n[3]
          ),
          "mdc-menu-surface--fullwidth": (
            /*fullWidth*/
            n[5]
          ),
          .../*internalClasses*/
          n[8]
        }))) && { class: s },
        (!o || p[0] & /*internalStyles, style*/
        516 && a !== (a = Object.entries(
          /*internalStyles*/
          n[9]
        ).map(Ri).concat([
          /*style*/
          n[2]
        ]).join(" "))) && { style: a },
        { role: "dialog" },
        p[0] & /*$$restProps*/
        4096 && /*$$restProps*/
        n[12]
      ])), r && Fe(r.update) && p[0] & /*use*/
      1 && r.update.call(
        null,
        /*use*/
        n[0]
      );
    },
    i(m) {
      o || (L(l, m), o = !0);
    },
    o(m) {
      h(l, m), o = !1;
    },
    d(m) {
      m && (F(e), F(t)), l && l.d(m), n[35](null), i = !1, ze(d);
    }
  };
}
const Ri = ([n, e]) => `${n}: ${e};`;
function gu(n, e, t) {
  const s = [
    "use",
    "class",
    "style",
    "static",
    "anchor",
    "fixed",
    "open",
    "managed",
    "fullWidth",
    "quickOpen",
    "anchorElement",
    "anchorCorner",
    "anchorMargin",
    "maxHeight",
    "horizontallyCenteredOnViewport",
    "openBottomBias",
    "neverRestoreFocus",
    "isOpen",
    "setOpen",
    "setAbsolutePosition",
    "setIsHoisted",
    "isFixed",
    "getElement"
  ];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  var i, d, c;
  const l = lt(tt());
  let { use: C = [] } = e, { class: u = "" } = e, { style: m = "" } = e, { static: p = !1 } = e, { anchor: D = !0 } = e, { fixed: _ = !1 } = e, { open: A = p } = e, { managed: b = !1 } = e, { fullWidth: S = !1 } = e, { quickOpen: f = !1 } = e, { anchorElement: E = void 0 } = e, { anchorCorner: y = void 0 } = e, { anchorMargin: I = { top: 0, right: 0, bottom: 0, left: 0 } } = e, { maxHeight: N = 0 } = e, { horizontallyCenteredOnViewport: j = !1 } = e, { openBottomBias: v = 0 } = e, { neverRestoreFocus: O = !1 } = e, M, P, g = {}, W = {}, B;
  qe("SMUI:list:role", "menu"), qe("SMUI:list:item:role", "menuitem");
  const H = xn;
  at(() => (t(7, P = new Nd({
    addClass: T,
    removeClass: Y,
    hasClass: w,
    hasAnchor: () => !!E,
    notifyClose: () => {
      b || t(13, A = p), A || Oe(M, "SMUIMenuSurface:closed", void 0, void 0, !0);
    },
    notifyClosing: () => {
      b || t(13, A = p), A || Oe(M, "SMUIMenuSurface:closing", void 0, void 0, !0);
    },
    notifyOpen: () => {
      b || t(13, A = !0), A && Oe(M, "SMUIMenuSurface:opened", void 0, void 0, !0);
    },
    notifyOpening: () => {
      A || Oe(M, "SMUIMenuSurface:opening", void 0, void 0, !0);
    },
    isElementInContainer: (J) => M.contains(J),
    isRtl: () => getComputedStyle(M).getPropertyValue("direction") === "rtl",
    setTransformOrigin: (J) => {
      t(9, W["transform-origin"] = J, W);
    },
    isFocused: () => document.activeElement === M,
    saveFocus: () => {
      var J;
      B = (J = document.activeElement) !== null && J !== void 0 ? J : void 0;
    },
    restoreFocus: () => {
      !O && (!M || M.contains(document.activeElement)) && B && document.contains(B) && "focus" in B && B.focus();
    },
    getInnerDimensions: () => ({
      width: M.offsetWidth,
      height: M.offsetHeight
    }),
    getAnchorDimensions: () => E ? E.getBoundingClientRect() : null,
    getWindowDimensions: () => ({
      width: window.innerWidth,
      height: window.innerHeight
    }),
    getBodyDimensions: () => ({
      width: document.body.clientWidth,
      height: document.body.clientHeight
    }),
    getWindowScroll: () => ({
      x: window.pageXOffset,
      y: window.pageYOffset
    }),
    setPosition: (J) => {
      t(9, W.left = "left" in J ? `${J.left}px` : "", W), t(9, W.right = "right" in J ? `${J.right}px` : "", W), t(9, W.top = "top" in J ? `${J.top}px` : "", W), t(9, W.bottom = "bottom" in J ? `${J.bottom}px` : "", W);
    },
    setMaxHeight: (J) => {
      t(9, W["max-height"] = J, W);
    }
  })), Oe(M, "SMUIMenuSurface:mount", {
    get open() {
      return A;
    },
    set open(J) {
      t(13, A = J);
    },
    closeProgrammatic: Ie
  }), P.init(), () => {
    var J;
    const se = P.isHoistedElement;
    P.destroy(), se && ((J = M.parentNode) === null || J === void 0 || J.removeChild(M));
  })), an(() => {
    var oe;
    D && M && ((oe = M.parentElement) === null || oe === void 0 || oe.classList.remove("mdc-menu-surface--anchor"));
  });
  function w(oe) {
    return oe in g ? g[oe] : xe().classList.contains(oe);
  }
  function T(oe) {
    g[oe] || t(8, g[oe] = !0, g);
  }
  function Y(oe) {
    (!(oe in g) || g[oe]) && t(8, g[oe] = !1, g);
  }
  function Ie(oe) {
    P.close(oe), t(13, A = !1);
  }
  function Ge(oe) {
    P && A && !b && P.handleBodyClick(oe);
  }
  function ke() {
    return A;
  }
  function ae(oe) {
    t(13, A = oe);
  }
  function _e(oe, J) {
    return P.setAbsolutePosition(oe, J);
  }
  function We(oe) {
    return P.setIsHoisted(oe);
  }
  function Be() {
    return P.isFixed();
  }
  function xe() {
    return M;
  }
  function it(oe) {
    de[oe ? "unshift" : "push"](() => {
      M = oe, t(6, M);
    });
  }
  return n.$$set = (oe) => {
    e = te(te({}, e), ct(oe)), t(12, a = Te(e, s)), "use" in oe && t(0, C = oe.use), "class" in oe && t(1, u = oe.class), "style" in oe && t(2, m = oe.style), "static" in oe && t(3, p = oe.static), "anchor" in oe && t(15, D = oe.anchor), "fixed" in oe && t(4, _ = oe.fixed), "open" in oe && t(13, A = oe.open), "managed" in oe && t(16, b = oe.managed), "fullWidth" in oe && t(5, S = oe.fullWidth), "quickOpen" in oe && t(17, f = oe.quickOpen), "anchorElement" in oe && t(14, E = oe.anchorElement), "anchorCorner" in oe && t(18, y = oe.anchorCorner), "anchorMargin" in oe && t(19, I = oe.anchorMargin), "maxHeight" in oe && t(20, N = oe.maxHeight), "horizontallyCenteredOnViewport" in oe && t(21, j = oe.horizontallyCenteredOnViewport), "openBottomBias" in oe && t(22, v = oe.openBottomBias), "neverRestoreFocus" in oe && t(23, O = oe.neverRestoreFocus), "$$scope" in oe && t(33, o = oe.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*element, anchor, _a*/
    1073774656 | n.$$.dirty[1] & /*_b, _c*/
    3 && M && D && !(!(t(30, i = M.parentElement) === null || i === void 0) && i.classList.contains("mdc-menu-surface--anchor")) && (t(31, d = M.parentElement) === null || d === void 0 || d.classList.add("mdc-menu-surface--anchor"), t(14, E = t(32, c = M.parentElement) !== null && c !== void 0 ? c : void 0)), n.$$.dirty[0] & /*instance, open*/
    8320 && P && P.isOpen() !== A && (A ? P.open() : P.close()), n.$$.dirty[0] & /*instance, quickOpen*/
    131200 && P && P.setQuickOpen(f), n.$$.dirty[0] & /*instance, fixed*/
    144 && P && P.setFixedPosition(_), n.$$.dirty[0] & /*instance, maxHeight*/
    1048704 && P && P.setMaxHeight(N), n.$$.dirty[0] & /*instance, horizontallyCenteredOnViewport*/
    2097280 && P && P.setIsHorizontallyCenteredOnViewport(j), n.$$.dirty[0] & /*instance, anchorCorner*/
    262272 && P && y != null && (typeof y == "string" ? P.setAnchorCorner(H[y]) : P.setAnchorCorner(y)), n.$$.dirty[0] & /*instance, anchorMargin*/
    524416 && P && P.setAnchorMargin(I), n.$$.dirty[0] & /*instance, openBottomBias*/
    4194432 && P && P.setOpenBottomBias(v);
  }, [
    C,
    u,
    m,
    p,
    _,
    S,
    M,
    P,
    g,
    W,
    l,
    Ge,
    a,
    A,
    E,
    D,
    b,
    f,
    y,
    I,
    N,
    j,
    v,
    O,
    ke,
    ae,
    _e,
    We,
    Be,
    xe,
    i,
    d,
    c,
    o,
    r,
    it
  ];
}
class hu extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      gu,
      Lu,
      Ce,
      {
        use: 0,
        class: 1,
        style: 2,
        static: 3,
        anchor: 15,
        fixed: 4,
        open: 13,
        managed: 16,
        fullWidth: 5,
        quickOpen: 17,
        anchorElement: 14,
        anchorCorner: 18,
        anchorMargin: 19,
        maxHeight: 20,
        horizontallyCenteredOnViewport: 21,
        openBottomBias: 22,
        neverRestoreFocus: 23,
        isOpen: 24,
        setOpen: 25,
        setAbsolutePosition: 26,
        setIsHoisted: 27,
        isFixed: 28,
        getElement: 29
      },
      null,
      [-1, -1]
    );
  }
  get isOpen() {
    return this.$$.ctx[24];
  }
  get setOpen() {
    return this.$$.ctx[25];
  }
  get setAbsolutePosition() {
    return this.$$.ctx[26];
  }
  get setIsHoisted() {
    return this.$$.ctx[27];
  }
  get isFixed() {
    return this.$$.ctx[28];
  }
  get getElement() {
    return this.$$.ctx[29];
  }
}
function yu(n, { addClass: e = (s) => n.classList.add(s), removeClass: t = (s) => n.classList.remove(s) } = {}) {
  return e("mdc-menu-surface--anchor"), {
    destroy() {
      t("mdc-menu-surface--anchor");
    }
  };
}
function Nu(n) {
  let e;
  const t = (
    /*#slots*/
    n[17].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[22],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r & /*$$scope*/
      4194304) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[22],
        e ? ve(
          t,
          /*$$scope*/
          a[22],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[22]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function Tu(n) {
  let e, t, s;
  const a = [
    { use: (
      /*usePass*/
      n[5]
    ) },
    {
      class: le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-menu": !0
      })
    },
    /*$$restProps*/
    n[9]
  ];
  function r(i) {
    n[19](i);
  }
  let o = {
    $$slots: { default: [Nu] },
    $$scope: { ctx: n }
  };
  for (let i = 0; i < a.length; i += 1)
    o = te(o, a[i]);
  return (
    /*open*/
    n[0] !== void 0 && (o.open = /*open*/
    n[0]), e = new hu({ props: o }), n[18](e), de.push(() => Ve(e, "open", r)), e.$on(
      "SMUIMenuSurface:mount",
      /*handleMenuSurfaceAccessor*/
      n[7]
    ), e.$on(
      "SMUIList:mount",
      /*handleListAccessor*/
      n[8]
    ), e.$on(
      "SMUIMenuSurface:opened",
      /*SMUIMenuSurface_opened_handler*/
      n[20]
    ), e.$on(
      "keydown",
      /*handleKeydown*/
      n[6]
    ), e.$on(
      "SMUIList:action",
      /*SMUIList_action_handler*/
      n[21]
    ), {
      c() {
        X(e.$$.fragment);
      },
      m(i, d) {
        q(e, i, d), s = !0;
      },
      p(i, [d]) {
        const c = d & /*usePass, className, $$restProps*/
        546 ? Ee(a, [
          d & /*usePass*/
          32 && { use: (
            /*usePass*/
            i[5]
          ) },
          d & /*className*/
          2 && {
            class: le({
              [
                /*className*/
                i[1]
              ]: !0,
              "mdc-menu": !0
            })
          },
          d & /*$$restProps*/
          512 && Ne(
            /*$$restProps*/
            i[9]
          )
        ]) : {};
        d & /*$$scope*/
        4194304 && (c.$$scope = { dirty: d, ctx: i }), !t && d & /*open*/
        1 && (t = !0, c.open = /*open*/
        i[0], we(() => t = !1)), e.$set(c);
      },
      i(i) {
        s || (L(e.$$.fragment, i), s = !0);
      },
      o(i) {
        h(e.$$.fragment, i), s = !1;
      },
      d(i) {
        n[18](null), z(e, i);
      }
    }
  );
}
function Pu(n, e, t) {
  let s;
  const a = [
    "use",
    "class",
    "open",
    "isOpen",
    "setOpen",
    "setDefaultFocusState",
    "getSelectedIndex",
    "getMenuSurface",
    "getElement"
  ];
  let r = Te(e, a), { $$slots: o = {}, $$scope: i } = e;
  const { closest: d } = Ls, c = lt(tt());
  let { use: l = [] } = e, { class: C = "" } = e, { open: u = !1 } = e, m, p, D, _;
  at(() => (t(3, p = new Ou({
    addClassToElementAtIndex: (g, W) => {
      _.addClassForElementIndex(g, W);
    },
    removeClassFromElementAtIndex: (g, W) => {
      _.removeClassForElementIndex(g, W);
    },
    addAttributeToElementAtIndex: (g, W, B) => {
      _.setAttributeForElementIndex(g, W, B);
    },
    removeAttributeFromElementAtIndex: (g, W) => {
      _.removeAttributeForElementIndex(g, W);
    },
    getAttributeFromElementAtIndex: (g, W) => _.getAttributeFromElementIndex(g, W),
    elementContainsClass: (g, W) => g.classList.contains(W),
    closeSurface: (g) => {
      D.closeProgrammatic(g), Oe(j(), "SMUIMenu:closedProgrammatically");
    },
    getElementIndex: (g) => _.getOrderedList().map((W) => W.element).indexOf(g),
    notifySelected: (g) => Oe(
      j(),
      "SMUIMenu:selected",
      {
        index: g.index,
        item: _.getOrderedList()[g.index].element
      },
      void 0,
      !0
    ),
    getMenuItemCount: () => _.items.length,
    focusItemAtIndex: (g) => _.focusItemAtIndex(g),
    focusListRoot: () => "focus" in _.element && _.element.focus(),
    isSelectableItemAtIndex: (g) => !!d(_.getOrderedList()[g].element, `.${$n.MENU_SELECTION_GROUP}`),
    getSelectedSiblingOfItemAtIndex: (g) => {
      const W = _.getOrderedList(), B = d(W[g].element, `.${$n.MENU_SELECTION_GROUP}`), H = B == null ? void 0 : B.querySelector(`.${$n.MENU_SELECTED_LIST_ITEM}`);
      return H ? W.map((w) => w.element).indexOf(H) : -1;
    }
  })), Oe(j(), "SMUIMenu:mount", p), p.init(), () => {
    p.destroy();
  }));
  function A(g) {
    p && p.handleKeydown(g);
  }
  function b(g) {
    D || (D = g.detail);
  }
  function S(g) {
    _ || t(4, _ = g.detail);
  }
  function f() {
    return u;
  }
  function E(g) {
    t(0, u = g);
  }
  function y(g) {
    p.setDefaultFocusState(g);
  }
  function I() {
    return p.getSelectedIndex();
  }
  function N() {
    return m;
  }
  function j() {
    return m.getElement();
  }
  function v(g) {
    de[g ? "unshift" : "push"](() => {
      m = g, t(2, m);
    });
  }
  function O(g) {
    u = g, t(0, u);
  }
  const M = () => p && p.handleMenuSurfaceOpened(), P = (g) => p && p.handleItemAction(_.getOrderedList()[g.detail.index].element);
  return n.$$set = (g) => {
    e = te(te({}, e), ct(g)), t(9, r = Te(e, a)), "use" in g && t(10, l = g.use), "class" in g && t(1, C = g.class), "open" in g && t(0, u = g.open), "$$scope" in g && t(22, i = g.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty & /*use*/
    1024 && t(5, s = [c, ...l]);
  }, [
    u,
    C,
    m,
    p,
    _,
    s,
    A,
    b,
    S,
    r,
    l,
    f,
    E,
    y,
    I,
    N,
    j,
    o,
    v,
    O,
    M,
    P,
    i
  ];
}
class vu extends me {
  constructor(e) {
    super(), ue(this, e, Pu, Tu, Ce, {
      use: 10,
      class: 1,
      open: 0,
      isOpen: 11,
      setOpen: 12,
      setDefaultFocusState: 13,
      getSelectedIndex: 14,
      getMenuSurface: 15,
      getElement: 16
    });
  }
  get isOpen() {
    return this.$$.ctx[11];
  }
  get setOpen() {
    return this.$$.ctx[12];
  }
  get setDefaultFocusState() {
    return this.$$.ctx[13];
  }
  get getSelectedIndex() {
    return this.$$.ctx[14];
  }
  get getMenuSurface() {
    return this.$$.ctx[15];
  }
  get getElement() {
    return this.$$.ctx[16];
  }
}
function Mu(n) {
  let e;
  const t = (
    /*#slots*/
    n[42].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[44],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r[1] & /*$$scope*/
      8192) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[44],
        e ? ve(
          t,
          /*$$scope*/
          a[44],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[44]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function Ru(n) {
  let e, t, s;
  const a = [
    { tag: (
      /*tag*/
      n[13]
    ) },
    {
      use: [
        /*forwardEvents*/
        n[16],
        .../*use*/
        n[0]
      ]
    },
    {
      class: le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-deprecated-list": !0,
        "mdc-deprecated-list--non-interactive": (
          /*nonInteractive*/
          n[2]
        ),
        "mdc-deprecated-list--dense": (
          /*dense*/
          n[3]
        ),
        "mdc-deprecated-list--textual-list": (
          /*textualList*/
          n[4]
        ),
        "mdc-deprecated-list--avatar-list": (
          /*avatarList*/
          n[5] || /*selectionDialog*/
          n[17]
        ),
        "mdc-deprecated-list--icon-list": (
          /*iconList*/
          n[6]
        ),
        "mdc-deprecated-list--image-list": (
          /*imageList*/
          n[7]
        ),
        "mdc-deprecated-list--thumbnail-list": (
          /*thumbnailList*/
          n[8]
        ),
        "mdc-deprecated-list--video-list": (
          /*videoList*/
          n[9]
        ),
        "mdc-deprecated-list--two-line": (
          /*twoLine*/
          n[10]
        ),
        "smui-list--three-line": (
          /*threeLine*/
          n[11] && !/*twoLine*/
          n[10]
        )
      })
    },
    { role: (
      /*role*/
      n[15]
    ) },
    /*$$restProps*/
    n[25]
  ];
  var r = (
    /*component*/
    n[12]
  );
  function o(i, d) {
    let c = {
      $$slots: { default: [Mu] },
      $$scope: { ctx: i }
    };
    for (let l = 0; l < a.length; l += 1)
      c = te(c, a[l]);
    return d !== void 0 && d[0] & /*tag, forwardEvents, use, className, nonInteractive, dense, textualList, avatarList, selectionDialog, iconList, imageList, thumbnailList, videoList, twoLine, threeLine, role, $$restProps*/
    33796095 && (c = te(c, Ee(a, [
      d[0] & /*tag*/
      8192 && { tag: (
        /*tag*/
        i[13]
      ) },
      d[0] & /*forwardEvents, use*/
      65537 && {
        use: [
          /*forwardEvents*/
          i[16],
          .../*use*/
          i[0]
        ]
      },
      d[0] & /*className, nonInteractive, dense, textualList, avatarList, selectionDialog, iconList, imageList, thumbnailList, videoList, twoLine, threeLine*/
      135166 && {
        class: le({
          [
            /*className*/
            i[1]
          ]: !0,
          "mdc-deprecated-list": !0,
          "mdc-deprecated-list--non-interactive": (
            /*nonInteractive*/
            i[2]
          ),
          "mdc-deprecated-list--dense": (
            /*dense*/
            i[3]
          ),
          "mdc-deprecated-list--textual-list": (
            /*textualList*/
            i[4]
          ),
          "mdc-deprecated-list--avatar-list": (
            /*avatarList*/
            i[5] || /*selectionDialog*/
            i[17]
          ),
          "mdc-deprecated-list--icon-list": (
            /*iconList*/
            i[6]
          ),
          "mdc-deprecated-list--image-list": (
            /*imageList*/
            i[7]
          ),
          "mdc-deprecated-list--thumbnail-list": (
            /*thumbnailList*/
            i[8]
          ),
          "mdc-deprecated-list--video-list": (
            /*videoList*/
            i[9]
          ),
          "mdc-deprecated-list--two-line": (
            /*twoLine*/
            i[10]
          ),
          "smui-list--three-line": (
            /*threeLine*/
            i[11] && !/*twoLine*/
            i[10]
          )
        })
      },
      d[0] & /*role*/
      32768 && { role: (
        /*role*/
        i[15]
      ) },
      d[0] & /*$$restProps*/
      33554432 && Ne(
        /*$$restProps*/
        i[25]
      )
    ]))), { props: c };
  }
  return r && (e = Gt(r, o(n)), n[43](e), e.$on(
    "keydown",
    /*handleKeydown*/
    n[20]
  ), e.$on(
    "focusin",
    /*handleFocusin*/
    n[21]
  ), e.$on(
    "focusout",
    /*handleFocusout*/
    n[22]
  ), e.$on(
    "click",
    /*handleClick*/
    n[23]
  ), e.$on(
    "SMUIListItem:mount",
    /*handleItemMount*/
    n[18]
  ), e.$on(
    "SMUIListItem:unmount",
    /*handleItemUnmount*/
    n[19]
  ), e.$on(
    "SMUI:action",
    /*handleAction*/
    n[24]
  )), {
    c() {
      e && X(e.$$.fragment), t = st();
    },
    m(i, d) {
      e && q(e, i, d), G(i, t, d), s = !0;
    },
    p(i, d) {
      if (d[0] & /*component*/
      4096 && r !== (r = /*component*/
      i[12])) {
        if (e) {
          he();
          const c = e;
          h(c.$$.fragment, 1, 0, () => {
            z(c, 1);
          }), ye();
        }
        r ? (e = Gt(r, o(i, d)), i[43](e), e.$on(
          "keydown",
          /*handleKeydown*/
          i[20]
        ), e.$on(
          "focusin",
          /*handleFocusin*/
          i[21]
        ), e.$on(
          "focusout",
          /*handleFocusout*/
          i[22]
        ), e.$on(
          "click",
          /*handleClick*/
          i[23]
        ), e.$on(
          "SMUIListItem:mount",
          /*handleItemMount*/
          i[18]
        ), e.$on(
          "SMUIListItem:unmount",
          /*handleItemUnmount*/
          i[19]
        ), e.$on(
          "SMUI:action",
          /*handleAction*/
          i[24]
        ), X(e.$$.fragment), L(e.$$.fragment, 1), q(e, t.parentNode, t)) : e = null;
      } else if (r) {
        const c = d[0] & /*tag, forwardEvents, use, className, nonInteractive, dense, textualList, avatarList, selectionDialog, iconList, imageList, thumbnailList, videoList, twoLine, threeLine, role, $$restProps*/
        33796095 ? Ee(a, [
          d[0] & /*tag*/
          8192 && { tag: (
            /*tag*/
            i[13]
          ) },
          d[0] & /*forwardEvents, use*/
          65537 && {
            use: [
              /*forwardEvents*/
              i[16],
              .../*use*/
              i[0]
            ]
          },
          d[0] & /*className, nonInteractive, dense, textualList, avatarList, selectionDialog, iconList, imageList, thumbnailList, videoList, twoLine, threeLine*/
          135166 && {
            class: le({
              [
                /*className*/
                i[1]
              ]: !0,
              "mdc-deprecated-list": !0,
              "mdc-deprecated-list--non-interactive": (
                /*nonInteractive*/
                i[2]
              ),
              "mdc-deprecated-list--dense": (
                /*dense*/
                i[3]
              ),
              "mdc-deprecated-list--textual-list": (
                /*textualList*/
                i[4]
              ),
              "mdc-deprecated-list--avatar-list": (
                /*avatarList*/
                i[5] || /*selectionDialog*/
                i[17]
              ),
              "mdc-deprecated-list--icon-list": (
                /*iconList*/
                i[6]
              ),
              "mdc-deprecated-list--image-list": (
                /*imageList*/
                i[7]
              ),
              "mdc-deprecated-list--thumbnail-list": (
                /*thumbnailList*/
                i[8]
              ),
              "mdc-deprecated-list--video-list": (
                /*videoList*/
                i[9]
              ),
              "mdc-deprecated-list--two-line": (
                /*twoLine*/
                i[10]
              ),
              "smui-list--three-line": (
                /*threeLine*/
                i[11] && !/*twoLine*/
                i[10]
              )
            })
          },
          d[0] & /*role*/
          32768 && { role: (
            /*role*/
            i[15]
          ) },
          d[0] & /*$$restProps*/
          33554432 && Ne(
            /*$$restProps*/
            i[25]
          )
        ]) : {};
        d[1] & /*$$scope*/
        8192 && (c.$$scope = { dirty: d, ctx: i }), e.$set(c);
      }
    },
    i(i) {
      s || (e && L(e.$$.fragment, i), s = !0);
    },
    o(i) {
      e && h(e.$$.fragment, i), s = !1;
    },
    d(i) {
      i && F(t), n[43](null), e && z(e, i);
    }
  };
}
function Fu(n, e, t) {
  const s = [
    "use",
    "class",
    "nonInteractive",
    "dense",
    "textualList",
    "avatarList",
    "iconList",
    "imageList",
    "thumbnailList",
    "videoList",
    "twoLine",
    "threeLine",
    "vertical",
    "wrapFocus",
    "singleSelection",
    "disabledItemsFocusable",
    "selectedIndex",
    "radioList",
    "checkList",
    "hasTypeahead",
    "component",
    "tag",
    "layout",
    "setEnabled",
    "getTypeaheadInProgress",
    "getSelectedIndex",
    "getFocusedItemIndex",
    "focusItemAtIndex",
    "getElement"
  ];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  var i;
  const { closest: d, matches: c } = Ls, l = lt(tt());
  let { use: C = [] } = e, { class: u = "" } = e, { nonInteractive: m = !1 } = e, { dense: p = !1 } = e, { textualList: D = !1 } = e, { avatarList: _ = !1 } = e, { iconList: A = !1 } = e, { imageList: b = !1 } = e, { thumbnailList: S = !1 } = e, { videoList: f = !1 } = e, { twoLine: E = !1 } = e, { threeLine: y = !1 } = e, { vertical: I = !0 } = e, { wrapFocus: N = (i = Qe("SMUI:list:wrapFocus")) !== null && i !== void 0 ? i : !1 } = e, { singleSelection: j = !1 } = e, { disabledItemsFocusable: v = !1 } = e, { selectedIndex: O = -1 } = e, { radioList: M = !1 } = e, { checkList: P = !1 } = e, { hasTypeahead: g = !1 } = e, W, B, H = [], w = Qe("SMUI:list:role"), T = Qe("SMUI:list:nav");
  const Y = /* @__PURE__ */ new WeakMap();
  let Ie = Qe("SMUI:dialog:selection"), Ge = Qe("SMUI:addLayoutListener"), ke, { component: ae = tn } = e, { tag: _e = ae === tn ? T ? "nav" : "ul" : void 0 } = e;
  qe("SMUI:list:nonInteractive", m), qe("SMUI:separator:context", "list"), w || (j ? (w = "listbox", qe("SMUI:list:item:role", "option")) : M ? (w = "radiogroup", qe("SMUI:list:item:role", "radio")) : P ? (w = "group", qe("SMUI:list:item:role", "checkbox")) : (w = "list", qe("SMUI:list:item:role", void 0))), Ge && (ke = Ge(Ke)), at(() => {
    t(41, B = new Au({
      addClassForElementIndex: Q,
      focusItemAtIndex: nt,
      getAttributeForElementIndex: (be, fe) => {
        var ot, Bn;
        return (Bn = (ot = V()[be]) === null || ot === void 0 ? void 0 : ot.getAttr(fe)) !== null && Bn !== void 0 ? Bn : null;
      },
      getFocusedElementIndex: () => document.activeElement ? V().map((be) => be.element).indexOf(document.activeElement) : -1,
      getListItemCount: () => H.length,
      getPrimaryTextAtIndex: k,
      hasCheckboxAtIndex: (be) => {
        var fe, ot;
        return (ot = (fe = V()[be]) === null || fe === void 0 ? void 0 : fe.hasCheckbox) !== null && ot !== void 0 ? ot : !1;
      },
      hasRadioAtIndex: (be) => {
        var fe, ot;
        return (ot = (fe = V()[be]) === null || fe === void 0 ? void 0 : fe.hasRadio) !== null && ot !== void 0 ? ot : !1;
      },
      isCheckboxCheckedAtIndex: (be) => {
        var fe;
        const ot = V()[be];
        return (fe = (ot == null ? void 0 : ot.hasCheckbox) && ot.checked) !== null && fe !== void 0 ? fe : !1;
      },
      isFocusInsideList: () => W != null && Dt() !== document.activeElement && Dt().contains(document.activeElement),
      isRootFocused: () => W != null && document.activeElement === Dt(),
      listItemAtIndexHasClass: ge,
      notifyAction: (be) => {
        t(26, O = be), W != null && Oe(Dt(), "SMUIList:action", { index: be }, void 0, !0);
      },
      notifySelectionChange: (be) => {
        W != null && Oe(Dt(), "SMUIList:selectionChange", { changedIndices: be });
      },
      removeClassForElementIndex: pe,
      setAttributeForElementIndex: $e,
      setCheckedCheckboxOrRadioAtIndex: (be, fe) => {
        V()[be].checked = fe;
      },
      setTabIndexForListItemChildren: (be, fe) => {
        const ot = V()[be];
        Array.prototype.forEach.call(ot.element.querySelectorAll("button:not(:disabled), a"), (Sa) => {
          Sa.setAttribute("tabindex", fe);
        });
      }
    }));
    const ee = {
      get element() {
        return Dt();
      },
      get items() {
        return H;
      },
      get typeaheadInProgress() {
        return B.isTypeaheadInProgress();
      },
      typeaheadMatchItem(be, fe) {
        return B.typeaheadMatchItem(
          be,
          fe,
          /** skipFocus */
          !0
        );
      },
      getOrderedList: V,
      focusItemAtIndex: nt,
      addClassForElementIndex: Q,
      removeClassForElementIndex: pe,
      setAttributeForElementIndex: $e,
      removeAttributeForElementIndex: Lt,
      getAttributeFromElementIndex: Ht,
      getPrimaryTextAtIndex: k
    };
    return Oe(Dt(), "SMUIList:mount", ee), B.init(), B.layout(), () => {
      B.destroy();
    };
  }), an(() => {
    ke && ke();
  });
  function We(ee) {
    H.push(ee.detail), Y.set(ee.detail.element, ee.detail), j && ee.detail.selected && t(26, O = ie(ee.detail.element)), ee.stopPropagation();
  }
  function Be(ee) {
    var be;
    const fe = (be = ee.detail && H.indexOf(ee.detail)) !== null && be !== void 0 ? be : -1;
    fe !== -1 && (H.splice(fe, 1), H = H, Y.delete(ee.detail.element)), ee.stopPropagation();
  }
  function xe(ee) {
    B && ee.target && B.handleKeydown(ee, ee.target.classList.contains("mdc-deprecated-list-item"), ie(ee.target));
  }
  function it(ee) {
    B && ee.target && B.handleFocusIn(ie(ee.target));
  }
  function oe(ee) {
    B && ee.target && B.handleFocusOut(ie(ee.target));
  }
  function J(ee) {
    B && ee.target && B.handleClick(ie(ee.target), !c(ee.target, 'input[type="checkbox"], input[type="radio"]'), ee);
  }
  function se(ee) {
    if (M || P) {
      const be = ie(ee.target);
      if (be !== -1) {
        const fe = V()[be];
        fe && (M && !fe.checked || P) && (c(ee.detail.target, 'input[type="checkbox"], input[type="radio"]') || (fe.checked = !fe.checked), fe.activateRipple(), window.requestAnimationFrame(() => {
          fe.deactivateRipple();
        }));
      }
    }
  }
  function V() {
    return W == null ? [] : [...Dt().children].map((ee) => Y.get(ee)).filter((ee) => ee && ee._smui_list_item_accessor);
  }
  function ge(ee, be) {
    var fe;
    const ot = V()[ee];
    return (fe = ot && ot.hasClass(be)) !== null && fe !== void 0 ? fe : !1;
  }
  function Q(ee, be) {
    const fe = V()[ee];
    fe && fe.addClass(be);
  }
  function pe(ee, be) {
    const fe = V()[ee];
    fe && fe.removeClass(be);
  }
  function $e(ee, be, fe) {
    const ot = V()[ee];
    ot && ot.addAttr(be, fe);
  }
  function Lt(ee, be) {
    const fe = V()[ee];
    fe && fe.removeAttr(be);
  }
  function Ht(ee, be) {
    const fe = V()[ee];
    return fe ? fe.getAttr(be) : null;
  }
  function k(ee) {
    var be;
    const fe = V()[ee];
    return (be = fe && fe.getPrimaryText()) !== null && be !== void 0 ? be : "";
  }
  function ie(ee) {
    const be = d(ee, ".mdc-deprecated-list-item, .mdc-deprecated-list");
    return be && c(be, ".mdc-deprecated-list-item") ? V().map((fe) => fe == null ? void 0 : fe.element).indexOf(be) : -1;
  }
  function Ke() {
    return B.layout();
  }
  function re(ee, be) {
    return B.setEnabled(ee, be);
  }
  function Ue() {
    return B.isTypeaheadInProgress();
  }
  function At() {
    return B.getSelectedIndex();
  }
  function ne() {
    return B.getFocusedItemIndex();
  }
  function nt(ee) {
    const be = V()[ee];
    be && "focus" in be.element && be.element.focus();
  }
  function Dt() {
    return W.getElement();
  }
  function wn(ee) {
    de[ee ? "unshift" : "push"](() => {
      W = ee, t(14, W);
    });
  }
  return n.$$set = (ee) => {
    e = te(te({}, e), ct(ee)), t(25, a = Te(e, s)), "use" in ee && t(0, C = ee.use), "class" in ee && t(1, u = ee.class), "nonInteractive" in ee && t(2, m = ee.nonInteractive), "dense" in ee && t(3, p = ee.dense), "textualList" in ee && t(4, D = ee.textualList), "avatarList" in ee && t(5, _ = ee.avatarList), "iconList" in ee && t(6, A = ee.iconList), "imageList" in ee && t(7, b = ee.imageList), "thumbnailList" in ee && t(8, S = ee.thumbnailList), "videoList" in ee && t(9, f = ee.videoList), "twoLine" in ee && t(10, E = ee.twoLine), "threeLine" in ee && t(11, y = ee.threeLine), "vertical" in ee && t(27, I = ee.vertical), "wrapFocus" in ee && t(28, N = ee.wrapFocus), "singleSelection" in ee && t(29, j = ee.singleSelection), "disabledItemsFocusable" in ee && t(30, v = ee.disabledItemsFocusable), "selectedIndex" in ee && t(26, O = ee.selectedIndex), "radioList" in ee && t(31, M = ee.radioList), "checkList" in ee && t(32, P = ee.checkList), "hasTypeahead" in ee && t(33, g = ee.hasTypeahead), "component" in ee && t(12, ae = ee.component), "tag" in ee && t(13, _e = ee.tag), "$$scope" in ee && t(44, o = ee.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*vertical*/
    134217728 | n.$$.dirty[1] & /*instance*/
    1024 && B && B.setVerticalOrientation(I), n.$$.dirty[0] & /*wrapFocus*/
    268435456 | n.$$.dirty[1] & /*instance*/
    1024 && B && B.setWrapFocus(N), n.$$.dirty[1] & /*instance, hasTypeahead*/
    1028 && B && B.setHasTypeahead(g), n.$$.dirty[0] & /*singleSelection*/
    536870912 | n.$$.dirty[1] & /*instance*/
    1024 && B && B.setSingleSelection(j), n.$$.dirty[0] & /*disabledItemsFocusable*/
    1073741824 | n.$$.dirty[1] & /*instance*/
    1024 && B && B.setDisabledItemsFocusable(v), n.$$.dirty[0] & /*singleSelection, selectedIndex*/
    603979776 | n.$$.dirty[1] & /*instance*/
    1024 && B && j && At() !== O && B.setSelectedIndex(O);
  }, [
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    b,
    S,
    f,
    E,
    y,
    ae,
    _e,
    W,
    w,
    l,
    Ie,
    We,
    Be,
    xe,
    it,
    oe,
    J,
    se,
    a,
    O,
    I,
    N,
    j,
    v,
    M,
    P,
    g,
    Ke,
    re,
    Ue,
    At,
    ne,
    nt,
    Dt,
    B,
    r,
    wn,
    o
  ];
}
class Gu extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      Fu,
      Ru,
      Ce,
      {
        use: 0,
        class: 1,
        nonInteractive: 2,
        dense: 3,
        textualList: 4,
        avatarList: 5,
        iconList: 6,
        imageList: 7,
        thumbnailList: 8,
        videoList: 9,
        twoLine: 10,
        threeLine: 11,
        vertical: 27,
        wrapFocus: 28,
        singleSelection: 29,
        disabledItemsFocusable: 30,
        selectedIndex: 26,
        radioList: 31,
        checkList: 32,
        hasTypeahead: 33,
        component: 12,
        tag: 13,
        layout: 34,
        setEnabled: 35,
        getTypeaheadInProgress: 36,
        getSelectedIndex: 37,
        getFocusedItemIndex: 38,
        focusItemAtIndex: 39,
        getElement: 40
      },
      null,
      [-1, -1]
    );
  }
  get layout() {
    return this.$$.ctx[34];
  }
  get setEnabled() {
    return this.$$.ctx[35];
  }
  get getTypeaheadInProgress() {
    return this.$$.ctx[36];
  }
  get getSelectedIndex() {
    return this.$$.ctx[37];
  }
  get getFocusedItemIndex() {
    return this.$$.ctx[38];
  }
  get focusItemAtIndex() {
    return this.$$.ctx[39];
  }
  get getElement() {
    return this.$$.ctx[40];
  }
}
function Fi(n) {
  let e;
  return {
    c() {
      e = Z("span"), R(e, "class", "mdc-deprecated-list-item__ripple");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function Vu(n) {
  let e, t, s = (
    /*ripple*/
    n[7] && Fi()
  );
  const a = (
    /*#slots*/
    n[34].default
  ), r = Pe(
    a,
    n,
    /*$$scope*/
    n[37],
    null
  );
  return {
    c() {
      s && s.c(), e = st(), r && r.c();
    },
    m(o, i) {
      s && s.m(o, i), G(o, e, i), r && r.m(o, i), t = !0;
    },
    p(o, i) {
      /*ripple*/
      o[7] ? s || (s = Fi(), s.c(), s.m(e.parentNode, e)) : s && (s.d(1), s = null), r && r.p && (!t || i[1] & /*$$scope*/
      64) && Me(
        r,
        a,
        o,
        /*$$scope*/
        o[37],
        t ? ve(
          a,
          /*$$scope*/
          o[37],
          i,
          null
        ) : Re(
          /*$$scope*/
          o[37]
        ),
        null
      );
    },
    i(o) {
      t || (L(r, o), t = !0);
    },
    o(o) {
      h(r, o), t = !1;
    },
    d(o) {
      o && F(e), s && s.d(o), r && r.d(o);
    }
  };
}
function ju(n) {
  let e, t, s;
  const a = [
    { tag: (
      /*tag*/
      n[14]
    ) },
    {
      use: [
        .../*nonInteractive*/
        n[6] ? [] : [
          [
            Yt,
            {
              ripple: !/*input*/
              n[16],
              unbounded: !1,
              color: (
                /*activated*/
                (n[1] || /*selected*/
                n[0]) && /*color*/
                n[5] == null ? "primary" : (
                  /*color*/
                  n[5]
                )
              ),
              disabled: (
                /*disabled*/
                n[10]
              ),
              addClass: (
                /*addClass*/
                n[24]
              ),
              removeClass: (
                /*removeClass*/
                n[25]
              ),
              addStyle: (
                /*addStyle*/
                n[26]
              )
            }
          ]
        ],
        /*forwardEvents*/
        n[22],
        .../*use*/
        n[2]
      ]
    },
    {
      class: le({
        [
          /*className*/
          n[3]
        ]: !0,
        "mdc-deprecated-list-item": !/*wrapper*/
        n[8],
        "mdc-deprecated-list-item__wrapper": (
          /*wrapper*/
          n[8]
        ),
        "mdc-deprecated-list-item--activated": (
          /*activated*/
          n[1]
        ),
        "mdc-deprecated-list-item--selected": (
          /*selected*/
          n[0]
        ),
        "mdc-deprecated-list-item--disabled": (
          /*disabled*/
          n[10]
        ),
        "mdc-menu-item--selected": !/*nav*/
        n[23] && /*role*/
        n[9] === "menuitem" && /*selected*/
        n[0],
        "smui-menu-item--non-interactive": (
          /*nonInteractive*/
          n[6]
        ),
        .../*internalClasses*/
        n[18]
      })
    },
    {
      style: Object.entries(
        /*internalStyles*/
        n[19]
      ).map(Fa).concat([
        /*style*/
        n[4]
      ]).join(" ")
    },
    /*nav*/
    n[23] && /*activated*/
    n[1] ? { "aria-current": "page" } : {},
    !/*nav*/
    n[23] || /*wrapper*/
    n[8] ? { role: (
      /*role*/
      n[9]
    ) } : {},
    !/*nav*/
    n[23] && /*role*/
    n[9] === "option" ? {
      "aria-selected": (
        /*selected*/
        n[0] ? "true" : "false"
      )
    } : {},
    !/*nav*/
    n[23] && /*role*/
    (n[9] === "radio" || /*role*/
    n[9] === "checkbox") ? {
      "aria-checked": (
        /*input*/
        n[16] && /*input*/
        n[16].checked ? "true" : "false"
      )
    } : {},
    /*nav*/
    n[23] ? {} : {
      "aria-disabled": (
        /*disabled*/
        n[10] ? "true" : "false"
      )
    },
    {
      "data-menu-item-skip-restore-focus": (
        /*skipRestoreFocus*/
        n[11] || void 0
      )
    },
    { tabindex: (
      /*tabindex*/
      n[21]
    ) },
    { href: (
      /*href*/
      n[12]
    ) },
    /*internalAttrs*/
    n[20],
    /*$$restProps*/
    n[29]
  ];
  var r = (
    /*component*/
    n[13]
  );
  function o(i, d) {
    let c = {
      $$slots: { default: [Vu] },
      $$scope: { ctx: i }
    };
    for (let l = 0; l < a.length; l += 1)
      c = te(c, a[l]);
    return d !== void 0 && d[0] & /*tag, nonInteractive, input, activated, selected, color, disabled, addClass, removeClass, addStyle, forwardEvents, use, className, wrapper, nav, role, internalClasses, internalStyles, style, skipRestoreFocus, tabindex, href, internalAttrs, $$restProps*/
    670916479 && (c = te(c, Ee(a, [
      d[0] & /*tag*/
      16384 && { tag: (
        /*tag*/
        i[14]
      ) },
      d[0] & /*nonInteractive, input, activated, selected, color, disabled, addClass, removeClass, addStyle, forwardEvents, use*/
      121701479 && {
        use: [
          .../*nonInteractive*/
          i[6] ? [] : [
            [
              Yt,
              {
                ripple: !/*input*/
                i[16],
                unbounded: !1,
                color: (
                  /*activated*/
                  (i[1] || /*selected*/
                  i[0]) && /*color*/
                  i[5] == null ? "primary" : (
                    /*color*/
                    i[5]
                  )
                ),
                disabled: (
                  /*disabled*/
                  i[10]
                ),
                addClass: (
                  /*addClass*/
                  i[24]
                ),
                removeClass: (
                  /*removeClass*/
                  i[25]
                ),
                addStyle: (
                  /*addStyle*/
                  i[26]
                )
              }
            ]
          ],
          /*forwardEvents*/
          i[22],
          .../*use*/
          i[2]
        ]
      },
      d[0] & /*className, wrapper, activated, selected, disabled, nav, role, nonInteractive, internalClasses*/
      8652619 && {
        class: le({
          [
            /*className*/
            i[3]
          ]: !0,
          "mdc-deprecated-list-item": !/*wrapper*/
          i[8],
          "mdc-deprecated-list-item__wrapper": (
            /*wrapper*/
            i[8]
          ),
          "mdc-deprecated-list-item--activated": (
            /*activated*/
            i[1]
          ),
          "mdc-deprecated-list-item--selected": (
            /*selected*/
            i[0]
          ),
          "mdc-deprecated-list-item--disabled": (
            /*disabled*/
            i[10]
          ),
          "mdc-menu-item--selected": !/*nav*/
          i[23] && /*role*/
          i[9] === "menuitem" && /*selected*/
          i[0],
          "smui-menu-item--non-interactive": (
            /*nonInteractive*/
            i[6]
          ),
          .../*internalClasses*/
          i[18]
        })
      },
      d[0] & /*internalStyles, style*/
      524304 && {
        style: Object.entries(
          /*internalStyles*/
          i[19]
        ).map(Fa).concat([
          /*style*/
          i[4]
        ]).join(" ")
      },
      d[0] & /*nav, activated*/
      8388610 && Ne(
        /*nav*/
        i[23] && /*activated*/
        i[1] ? { "aria-current": "page" } : {}
      ),
      d[0] & /*nav, wrapper, role*/
      8389376 && Ne(!/*nav*/
      i[23] || /*wrapper*/
      i[8] ? { role: (
        /*role*/
        i[9]
      ) } : {}),
      d[0] & /*nav, role, selected*/
      8389121 && Ne(!/*nav*/
      i[23] && /*role*/
      i[9] === "option" ? {
        "aria-selected": (
          /*selected*/
          i[0] ? "true" : "false"
        )
      } : {}),
      d[0] & /*nav, role, input*/
      8454656 && Ne(!/*nav*/
      i[23] && /*role*/
      (i[9] === "radio" || /*role*/
      i[9] === "checkbox") ? {
        "aria-checked": (
          /*input*/
          i[16] && /*input*/
          i[16].checked ? "true" : "false"
        )
      } : {}),
      d[0] & /*nav, disabled*/
      8389632 && Ne(/*nav*/
      i[23] ? {} : {
        "aria-disabled": (
          /*disabled*/
          i[10] ? "true" : "false"
        )
      }),
      d[0] & /*skipRestoreFocus*/
      2048 && {
        "data-menu-item-skip-restore-focus": (
          /*skipRestoreFocus*/
          i[11] || void 0
        )
      },
      d[0] & /*tabindex*/
      2097152 && { tabindex: (
        /*tabindex*/
        i[21]
      ) },
      d[0] & /*href*/
      4096 && { href: (
        /*href*/
        i[12]
      ) },
      d[0] & /*internalAttrs*/
      1048576 && Ne(
        /*internalAttrs*/
        i[20]
      ),
      d[0] & /*$$restProps*/
      536870912 && Ne(
        /*$$restProps*/
        i[29]
      )
    ]))), { props: c };
  }
  return r && (e = Gt(r, o(n)), n[35](e), e.$on(
    "click",
    /*action*/
    n[15]
  ), e.$on(
    "keydown",
    /*handleKeydown*/
    n[27]
  ), e.$on(
    "SMUIGenericInput:mount",
    /*handleInputMount*/
    n[28]
  ), e.$on(
    "SMUIGenericInput:unmount",
    /*SMUIGenericInput_unmount_handler*/
    n[36]
  )), {
    c() {
      e && X(e.$$.fragment), t = st();
    },
    m(i, d) {
      e && q(e, i, d), G(i, t, d), s = !0;
    },
    p(i, d) {
      if (d[0] & /*component*/
      8192 && r !== (r = /*component*/
      i[13])) {
        if (e) {
          he();
          const c = e;
          h(c.$$.fragment, 1, 0, () => {
            z(c, 1);
          }), ye();
        }
        r ? (e = Gt(r, o(i, d)), i[35](e), e.$on(
          "click",
          /*action*/
          i[15]
        ), e.$on(
          "keydown",
          /*handleKeydown*/
          i[27]
        ), e.$on(
          "SMUIGenericInput:mount",
          /*handleInputMount*/
          i[28]
        ), e.$on(
          "SMUIGenericInput:unmount",
          /*SMUIGenericInput_unmount_handler*/
          i[36]
        ), X(e.$$.fragment), L(e.$$.fragment, 1), q(e, t.parentNode, t)) : e = null;
      } else if (r) {
        const c = d[0] & /*tag, nonInteractive, input, activated, selected, color, disabled, addClass, removeClass, addStyle, forwardEvents, use, className, wrapper, nav, role, internalClasses, internalStyles, style, skipRestoreFocus, tabindex, href, internalAttrs, $$restProps*/
        670916479 ? Ee(a, [
          d[0] & /*tag*/
          16384 && { tag: (
            /*tag*/
            i[14]
          ) },
          d[0] & /*nonInteractive, input, activated, selected, color, disabled, addClass, removeClass, addStyle, forwardEvents, use*/
          121701479 && {
            use: [
              .../*nonInteractive*/
              i[6] ? [] : [
                [
                  Yt,
                  {
                    ripple: !/*input*/
                    i[16],
                    unbounded: !1,
                    color: (
                      /*activated*/
                      (i[1] || /*selected*/
                      i[0]) && /*color*/
                      i[5] == null ? "primary" : (
                        /*color*/
                        i[5]
                      )
                    ),
                    disabled: (
                      /*disabled*/
                      i[10]
                    ),
                    addClass: (
                      /*addClass*/
                      i[24]
                    ),
                    removeClass: (
                      /*removeClass*/
                      i[25]
                    ),
                    addStyle: (
                      /*addStyle*/
                      i[26]
                    )
                  }
                ]
              ],
              /*forwardEvents*/
              i[22],
              .../*use*/
              i[2]
            ]
          },
          d[0] & /*className, wrapper, activated, selected, disabled, nav, role, nonInteractive, internalClasses*/
          8652619 && {
            class: le({
              [
                /*className*/
                i[3]
              ]: !0,
              "mdc-deprecated-list-item": !/*wrapper*/
              i[8],
              "mdc-deprecated-list-item__wrapper": (
                /*wrapper*/
                i[8]
              ),
              "mdc-deprecated-list-item--activated": (
                /*activated*/
                i[1]
              ),
              "mdc-deprecated-list-item--selected": (
                /*selected*/
                i[0]
              ),
              "mdc-deprecated-list-item--disabled": (
                /*disabled*/
                i[10]
              ),
              "mdc-menu-item--selected": !/*nav*/
              i[23] && /*role*/
              i[9] === "menuitem" && /*selected*/
              i[0],
              "smui-menu-item--non-interactive": (
                /*nonInteractive*/
                i[6]
              ),
              .../*internalClasses*/
              i[18]
            })
          },
          d[0] & /*internalStyles, style*/
          524304 && {
            style: Object.entries(
              /*internalStyles*/
              i[19]
            ).map(Fa).concat([
              /*style*/
              i[4]
            ]).join(" ")
          },
          d[0] & /*nav, activated*/
          8388610 && Ne(
            /*nav*/
            i[23] && /*activated*/
            i[1] ? { "aria-current": "page" } : {}
          ),
          d[0] & /*nav, wrapper, role*/
          8389376 && Ne(!/*nav*/
          i[23] || /*wrapper*/
          i[8] ? { role: (
            /*role*/
            i[9]
          ) } : {}),
          d[0] & /*nav, role, selected*/
          8389121 && Ne(!/*nav*/
          i[23] && /*role*/
          i[9] === "option" ? {
            "aria-selected": (
              /*selected*/
              i[0] ? "true" : "false"
            )
          } : {}),
          d[0] & /*nav, role, input*/
          8454656 && Ne(!/*nav*/
          i[23] && /*role*/
          (i[9] === "radio" || /*role*/
          i[9] === "checkbox") ? {
            "aria-checked": (
              /*input*/
              i[16] && /*input*/
              i[16].checked ? "true" : "false"
            )
          } : {}),
          d[0] & /*nav, disabled*/
          8389632 && Ne(/*nav*/
          i[23] ? {} : {
            "aria-disabled": (
              /*disabled*/
              i[10] ? "true" : "false"
            )
          }),
          d[0] & /*skipRestoreFocus*/
          2048 && {
            "data-menu-item-skip-restore-focus": (
              /*skipRestoreFocus*/
              i[11] || void 0
            )
          },
          d[0] & /*tabindex*/
          2097152 && { tabindex: (
            /*tabindex*/
            i[21]
          ) },
          d[0] & /*href*/
          4096 && { href: (
            /*href*/
            i[12]
          ) },
          d[0] & /*internalAttrs*/
          1048576 && Ne(
            /*internalAttrs*/
            i[20]
          ),
          d[0] & /*$$restProps*/
          536870912 && Ne(
            /*$$restProps*/
            i[29]
          )
        ]) : {};
        d[0] & /*ripple*/
        128 | d[1] & /*$$scope*/
        64 && (c.$$scope = { dirty: d, ctx: i }), e.$set(c);
      }
    },
    i(i) {
      s || (e && L(e.$$.fragment, i), s = !0);
    },
    o(i) {
      e && h(e.$$.fragment, i), s = !1;
    },
    d(i) {
      i && F(t), n[35](null), e && z(e, i);
    }
  };
}
let ku = 0;
const Fa = ([n, e]) => `${n}: ${e};`;
function wu(n, e, t) {
  let s;
  const a = [
    "use",
    "class",
    "style",
    "color",
    "nonInteractive",
    "ripple",
    "wrapper",
    "activated",
    "role",
    "selected",
    "disabled",
    "skipRestoreFocus",
    "tabindex",
    "inputId",
    "href",
    "component",
    "tag",
    "action",
    "getPrimaryText",
    "getElement"
  ];
  let r = Te(e, a), { $$slots: o = {}, $$scope: i } = e;
  var d;
  const c = lt(tt());
  let l = () => {
  };
  function C(Q) {
    return Q === l;
  }
  let { use: u = [] } = e, { class: m = "" } = e, { style: p = "" } = e, { color: D = void 0 } = e, { nonInteractive: _ = (d = Qe("SMUI:list:nonInteractive")) !== null && d !== void 0 ? d : !1 } = e;
  qe("SMUI:list:nonInteractive", void 0);
  let { ripple: A = !_ } = e, { wrapper: b = !1 } = e, { activated: S = !1 } = e, { role: f = b ? "presentation" : Qe("SMUI:list:item:role") } = e;
  qe("SMUI:list:item:role", void 0);
  let { selected: E = !1 } = e, { disabled: y = !1 } = e, { skipRestoreFocus: I = !1 } = e, { tabindex: N = l } = e, { inputId: j = "SMUI-form-field-list-" + ku++ } = e, { href: v = void 0 } = e, O, M = {}, P = {}, g = {}, W, B, H = Qe("SMUI:list:item:nav"), { component: w = tn } = e, { tag: T = w === tn ? H ? v ? "a" : "span" : "li" : void 0 } = e;
  qe("SMUI:generic:input:props", { id: j }), qe("SMUI:separator:context", void 0), at(() => {
    if (!E && !_) {
      let pe = !0, $e = O.getElement();
      for (; $e.previousSibling; )
        if ($e = $e.previousSibling, $e.nodeType === 1 && $e.classList.contains("mdc-deprecated-list-item") && !$e.classList.contains("mdc-deprecated-list-item--disabled")) {
          pe = !1;
          break;
        }
      pe && (B = window.requestAnimationFrame(() => Be($e)));
    }
    const Q = {
      _smui_list_item_accessor: !0,
      get element() {
        return se();
      },
      get selected() {
        return E;
      },
      set selected(pe) {
        t(0, E = pe);
      },
      hasClass: Y,
      addClass: Ie,
      removeClass: Ge,
      getAttr: ae,
      addAttr: _e,
      removeAttr: We,
      getPrimaryText: J,
      // For inputs within item.
      get checked() {
        var pe;
        return (pe = W && W.checked) !== null && pe !== void 0 ? pe : !1;
      },
      set checked(pe) {
        W && t(16, W.checked = !!pe, W);
      },
      get hasCheckbox() {
        return !!(W && "_smui_checkbox_accessor" in W);
      },
      get hasRadio() {
        return !!(W && "_smui_radio_accessor" in W);
      },
      activateRipple() {
        W && W.activateRipple();
      },
      deactivateRipple() {
        W && W.deactivateRipple();
      },
      // For select options.
      getValue() {
        return r.value;
      },
      // For autocomplete
      action: oe,
      get tabindex() {
        return s;
      },
      set tabindex(pe) {
        t(30, N = pe);
      },
      get disabled() {
        return y;
      },
      get activated() {
        return S;
      },
      set activated(pe) {
        t(1, S = pe);
      }
    };
    return Oe(se(), "SMUIListItem:mount", Q), () => {
      Oe(se(), "SMUIListItem:unmount", Q);
    };
  }), an(() => {
    B && window.cancelAnimationFrame(B);
  });
  function Y(Q) {
    return Q in M ? M[Q] : se().classList.contains(Q);
  }
  function Ie(Q) {
    M[Q] || t(18, M[Q] = !0, M);
  }
  function Ge(Q) {
    (!(Q in M) || M[Q]) && t(18, M[Q] = !1, M);
  }
  function ke(Q, pe) {
    P[Q] != pe && (pe === "" || pe == null ? (delete P[Q], t(19, P)) : t(19, P[Q] = pe, P));
  }
  function ae(Q) {
    var pe;
    return Q in g ? (pe = g[Q]) !== null && pe !== void 0 ? pe : null : se().getAttribute(Q);
  }
  function _e(Q, pe) {
    g[Q] !== pe && t(20, g[Q] = pe, g);
  }
  function We(Q) {
    (!(Q in g) || g[Q] != null) && t(20, g[Q] = void 0, g);
  }
  function Be(Q) {
    let pe = !0;
    for (; Q.nextElementSibling; )
      if (Q = Q.nextElementSibling, Q.nodeType === 1 && Q.classList.contains("mdc-deprecated-list-item")) {
        const $e = Q.attributes.getNamedItem("tabindex");
        if ($e && $e.value === "0") {
          pe = !1;
          break;
        }
      }
    pe && t(21, s = 0);
  }
  function xe(Q) {
    const pe = Q.key === "Enter", $e = Q.key === "Space";
    (pe || $e) && oe(Q);
  }
  function it(Q) {
    ("_smui_checkbox_accessor" in Q.detail || "_smui_radio_accessor" in Q.detail) && t(16, W = Q.detail);
  }
  function oe(Q) {
    y || Oe(se(), "SMUI:action", Q);
  }
  function J() {
    var Q, pe, $e;
    const Lt = se(), Ht = Lt.querySelector(".mdc-deprecated-list-item__primary-text");
    if (Ht)
      return (Q = Ht.textContent) !== null && Q !== void 0 ? Q : "";
    const k = Lt.querySelector(".mdc-deprecated-list-item__text");
    return k ? (pe = k.textContent) !== null && pe !== void 0 ? pe : "" : ($e = Lt.textContent) !== null && $e !== void 0 ? $e : "";
  }
  function se() {
    return O.getElement();
  }
  function V(Q) {
    de[Q ? "unshift" : "push"](() => {
      O = Q, t(17, O);
    });
  }
  const ge = () => t(16, W = void 0);
  return n.$$set = (Q) => {
    e = te(te({}, e), ct(Q)), t(29, r = Te(e, a)), "use" in Q && t(2, u = Q.use), "class" in Q && t(3, m = Q.class), "style" in Q && t(4, p = Q.style), "color" in Q && t(5, D = Q.color), "nonInteractive" in Q && t(6, _ = Q.nonInteractive), "ripple" in Q && t(7, A = Q.ripple), "wrapper" in Q && t(8, b = Q.wrapper), "activated" in Q && t(1, S = Q.activated), "role" in Q && t(9, f = Q.role), "selected" in Q && t(0, E = Q.selected), "disabled" in Q && t(10, y = Q.disabled), "skipRestoreFocus" in Q && t(11, I = Q.skipRestoreFocus), "tabindex" in Q && t(30, N = Q.tabindex), "inputId" in Q && t(31, j = Q.inputId), "href" in Q && t(12, v = Q.href), "component" in Q && t(13, w = Q.component), "tag" in Q && t(14, T = Q.tag), "$$scope" in Q && t(37, i = Q.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*tabindexProp, nonInteractive, disabled, selected, input*/
    1073808449 && t(21, s = C(N) ? !_ && !y && (E || W && W.checked) ? 0 : -1 : N);
  }, [
    E,
    S,
    u,
    m,
    p,
    D,
    _,
    A,
    b,
    f,
    y,
    I,
    v,
    w,
    T,
    oe,
    W,
    O,
    M,
    P,
    g,
    s,
    c,
    H,
    Ie,
    Ge,
    ke,
    xe,
    it,
    r,
    N,
    j,
    J,
    se,
    o,
    V,
    ge,
    i
  ];
}
class da extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      wu,
      ju,
      Ce,
      {
        use: 2,
        class: 3,
        style: 4,
        color: 5,
        nonInteractive: 6,
        ripple: 7,
        wrapper: 8,
        activated: 1,
        role: 9,
        selected: 0,
        disabled: 10,
        skipRestoreFocus: 11,
        tabindex: 30,
        inputId: 31,
        href: 12,
        component: 13,
        tag: 14,
        action: 15,
        getPrimaryText: 32,
        getElement: 33
      },
      null,
      [-1, -1]
    );
  }
  get action() {
    return this.$$.ctx[15];
  }
  get getPrimaryText() {
    return this.$$.ctx[32];
  }
  get getElement() {
    return this.$$.ctx[33];
  }
}
const ca = Pt({
  class: "mdc-deprecated-list-item__text",
  tag: "span"
});
Pt({
  class: "mdc-deprecated-list-item__primary-text",
  tag: "span"
});
Pt({
  class: "mdc-deprecated-list-item__secondary-text",
  tag: "span"
});
function Bu(n) {
  let e, t, s, a, r, o;
  const i = (
    /*#slots*/
    n[8].default
  ), d = Pe(
    i,
    n,
    /*$$scope*/
    n[7],
    null
  );
  let c = [
    {
      class: t = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-deprecated-list-item__graphic": !0,
        "mdc-menu__selection-group-icon": (
          /*menuSelectionGroup*/
          n[4]
        )
      })
    },
    /*$$restProps*/
    n[5]
  ], l = {};
  for (let C = 0; C < c.length; C += 1)
    l = te(l, c[C]);
  return {
    c() {
      e = Z("span"), d && d.c(), Ae(e, l);
    },
    m(C, u) {
      G(C, e, u), d && d.m(e, null), n[9](e), a = !0, r || (o = [
        De(s = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[3].call(null, e)
        )
      ], r = !0);
    },
    p(C, [u]) {
      d && d.p && (!a || u & /*$$scope*/
      128) && Me(
        d,
        i,
        C,
        /*$$scope*/
        C[7],
        a ? ve(
          i,
          /*$$scope*/
          C[7],
          u,
          null
        ) : Re(
          /*$$scope*/
          C[7]
        ),
        null
      ), Ae(e, l = Ee(c, [
        (!a || u & /*className*/
        2 && t !== (t = le({
          [
            /*className*/
            C[1]
          ]: !0,
          "mdc-deprecated-list-item__graphic": !0,
          "mdc-menu__selection-group-icon": (
            /*menuSelectionGroup*/
            C[4]
          )
        }))) && { class: t },
        u & /*$$restProps*/
        32 && /*$$restProps*/
        C[5]
      ])), s && Fe(s.update) && u & /*use*/
      1 && s.update.call(
        null,
        /*use*/
        C[0]
      );
    },
    i(C) {
      a || (L(d, C), a = !0);
    },
    o(C) {
      h(d, C), a = !1;
    },
    d(C) {
      C && F(e), d && d.d(C), n[9](null), r = !1, ze(o);
    }
  };
}
function Uu(n, e, t) {
  const s = ["use", "class", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  const i = lt(tt());
  let { use: d = [] } = e, { class: c = "" } = e, l, C = Qe("SMUI:list:graphic:menu-selection-group");
  function u() {
    return l;
  }
  function m(p) {
    de[p ? "unshift" : "push"](() => {
      l = p, t(2, l);
    });
  }
  return n.$$set = (p) => {
    e = te(te({}, e), ct(p)), t(5, a = Te(e, s)), "use" in p && t(0, d = p.use), "class" in p && t(1, c = p.class), "$$scope" in p && t(7, o = p.$$scope);
  }, [
    d,
    c,
    l,
    i,
    C,
    a,
    u,
    o,
    r,
    m
  ];
}
class Hu extends me {
  constructor(e) {
    super(), ue(this, e, Uu, Bu, Ce, { use: 0, class: 1, getElement: 6 });
  }
  get getElement() {
    return this.$$.ctx[6];
  }
}
Pt({
  class: "mdc-deprecated-list-item__meta",
  tag: "span"
});
Pt({
  class: "mdc-deprecated-list-group",
  tag: "div"
});
Pt({
  class: "mdc-deprecated-list-group__subheader",
  tag: "h3"
});
Pt({
  class: "mdc-menu__selection-group-icon",
  component: Hu
});
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function Ku(n) {
  return n ? n.scrollHeight > n.offsetHeight : !1;
}
function Wu(n) {
  return n ? n.scrollTop === 0 : !1;
}
function qu(n) {
  return n ? Math.ceil(n.scrollHeight - n.scrollTop) === n.clientHeight : !1;
}
function zu(n) {
  var e = /* @__PURE__ */ new Set();
  return [].forEach.call(n, function(t) {
    return e.add(t.offsetTop);
  }), e.size > 1;
}
/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Xu = (
  /** @class */
  function() {
    function n() {
      this.rafIDs = /* @__PURE__ */ new Map();
    }
    return n.prototype.request = function(e, t) {
      var s = this;
      this.cancel(e);
      var a = requestAnimationFrame(function(r) {
        s.rafIDs.delete(e), t(r);
      });
      this.rafIDs.set(e, a);
    }, n.prototype.cancel = function(e) {
      var t = this.rafIDs.get(e);
      t && (cancelAnimationFrame(t), this.rafIDs.delete(e));
    }, n.prototype.cancelAll = function() {
      var e = this;
      this.rafIDs.forEach(function(t, s) {
        e.cancel(s);
      });
    }, n.prototype.getQueue = function() {
      var e = [];
      return this.rafIDs.forEach(function(t, s) {
        e.push(s);
      }), e;
    }, n;
  }()
);
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var dt = {
  CLOSING: "mdc-dialog--closing",
  OPEN: "mdc-dialog--open",
  OPENING: "mdc-dialog--opening",
  SCROLLABLE: "mdc-dialog--scrollable",
  SCROLL_LOCK: "mdc-dialog-scroll-lock",
  STACKED: "mdc-dialog--stacked",
  FULLSCREEN: "mdc-dialog--fullscreen",
  // Class for showing a scroll divider on full-screen dialog header element.
  // Should only be displayed on scrollable content, when the dialog content is
  // scrolled "underneath" the header.
  SCROLL_DIVIDER_HEADER: "mdc-dialog-scroll-divider-header",
  // Class for showing a scroll divider on a full-screen dialog footer element.
  // Should only be displayed on scrolalble content, when the dialog content is
  // obscured "underneath" the footer.
  SCROLL_DIVIDER_FOOTER: "mdc-dialog-scroll-divider-footer",
  // The "surface scrim" is a scrim covering only the surface of a dialog. This
  // is used in situations where a confirmation dialog is shown over an already
  // opened full-screen dialog. On larger screen-sizes, the full-screen dialog
  // is sized as a modal and so in these situations we display a "surface scrim"
  // to prevent a "double scrim" (where the scrim from the secondary
  // confirmation dialog would overlap with the scrim from the full-screen
  // dialog).
  SURFACE_SCRIM_SHOWN: "mdc-dialog__surface-scrim--shown",
  // "Showing" animating class for the surface-scrim.
  SURFACE_SCRIM_SHOWING: "mdc-dialog__surface-scrim--showing",
  // "Hiding" animating class for the surface-scrim.
  SURFACE_SCRIM_HIDING: "mdc-dialog__surface-scrim--hiding",
  // Class to hide a dialog's scrim (used in conjunction with a surface-scrim).
  // Note that we only hide the original scrim rather than removing it entirely
  // to prevent interactions with the content behind this scrim, and to capture
  // scrim clicks.
  SCRIM_HIDDEN: "mdc-dialog__scrim--hidden"
}, ds = {
  ACTION_ATTRIBUTE: "data-mdc-dialog-action",
  BUTTON_DEFAULT_ATTRIBUTE: "data-mdc-dialog-button-default",
  BUTTON_SELECTOR: ".mdc-dialog__button",
  CLOSED_EVENT: "MDCDialog:closed",
  CLOSE_ACTION: "close",
  CLOSING_EVENT: "MDCDialog:closing",
  CONTAINER_SELECTOR: ".mdc-dialog__container",
  CONTENT_SELECTOR: ".mdc-dialog__content",
  DESTROY_ACTION: "destroy",
  INITIAL_FOCUS_ATTRIBUTE: "data-mdc-dialog-initial-focus",
  OPENED_EVENT: "MDCDialog:opened",
  OPENING_EVENT: "MDCDialog:opening",
  SCRIM_SELECTOR: ".mdc-dialog__scrim",
  SUPPRESS_DEFAULT_PRESS_SELECTOR: [
    "textarea",
    ".mdc-menu .mdc-list-item",
    ".mdc-menu .mdc-deprecated-list-item"
  ].join(", "),
  SURFACE_SELECTOR: ".mdc-dialog__surface"
}, Ga = {
  DIALOG_ANIMATION_CLOSE_TIME_MS: 75,
  DIALOG_ANIMATION_OPEN_TIME_MS: 150
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Js;
(function(n) {
  n.POLL_SCROLL_POS = "poll_scroll_position", n.POLL_LAYOUT_CHANGE = "poll_layout_change";
})(Js || (Js = {}));
var Zu = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.dialogOpen = !1, s.isFullscreen = !1, s.animationFrame = 0, s.animationTimer = 0, s.escapeKeyAction = ds.CLOSE_ACTION, s.scrimClickAction = ds.CLOSE_ACTION, s.autoStackButtons = !0, s.areButtonsStacked = !1, s.suppressDefaultPressSelector = ds.SUPPRESS_DEFAULT_PRESS_SELECTOR, s.animFrame = new Xu(), s.contentScrollHandler = function() {
        s.handleScrollEvent();
      }, s.windowResizeHandler = function() {
        s.layout();
      }, s.windowOrientationChangeHandler = function() {
        s.layout();
      }, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return dt;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return ds;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return Ga;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      get: function() {
        return {
          addBodyClass: function() {
          },
          addClass: function() {
          },
          areButtonsStacked: function() {
            return !1;
          },
          clickDefaultButton: function() {
          },
          eventTargetMatches: function() {
            return !1;
          },
          getActionFromEvent: function() {
            return "";
          },
          getInitialFocusEl: function() {
            return null;
          },
          hasClass: function() {
            return !1;
          },
          isContentScrollable: function() {
            return !1;
          },
          notifyClosed: function() {
          },
          notifyClosing: function() {
          },
          notifyOpened: function() {
          },
          notifyOpening: function() {
          },
          releaseFocus: function() {
          },
          removeBodyClass: function() {
          },
          removeClass: function() {
          },
          reverseButtons: function() {
          },
          trapFocus: function() {
          },
          registerContentEventHandler: function() {
          },
          deregisterContentEventHandler: function() {
          },
          isScrollableContentAtTop: function() {
            return !1;
          },
          isScrollableContentAtBottom: function() {
            return !1;
          },
          registerWindowEventHandler: function() {
          },
          deregisterWindowEventHandler: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      this.adapter.hasClass(dt.STACKED) && this.setAutoStackButtons(!1), this.isFullscreen = this.adapter.hasClass(dt.FULLSCREEN);
    }, e.prototype.destroy = function() {
      this.animationTimer && (clearTimeout(this.animationTimer), this.handleAnimationTimerEnd()), this.isFullscreen && this.adapter.deregisterContentEventHandler("scroll", this.contentScrollHandler), this.animFrame.cancelAll(), this.adapter.deregisterWindowEventHandler("resize", this.windowResizeHandler), this.adapter.deregisterWindowEventHandler("orientationchange", this.windowOrientationChangeHandler);
    }, e.prototype.open = function(t) {
      var s = this;
      this.dialogOpen = !0, this.adapter.notifyOpening(), this.adapter.addClass(dt.OPENING), this.isFullscreen && this.adapter.registerContentEventHandler("scroll", this.contentScrollHandler), t && t.isAboveFullscreenDialog && this.adapter.addClass(dt.SCRIM_HIDDEN), this.adapter.registerWindowEventHandler("resize", this.windowResizeHandler), this.adapter.registerWindowEventHandler("orientationchange", this.windowOrientationChangeHandler), this.runNextAnimationFrame(function() {
        s.adapter.addClass(dt.OPEN), s.adapter.addBodyClass(dt.SCROLL_LOCK), s.layout(), s.animationTimer = setTimeout(function() {
          s.handleAnimationTimerEnd(), s.adapter.trapFocus(s.adapter.getInitialFocusEl()), s.adapter.notifyOpened();
        }, Ga.DIALOG_ANIMATION_OPEN_TIME_MS);
      });
    }, e.prototype.close = function(t) {
      var s = this;
      t === void 0 && (t = ""), this.dialogOpen && (this.dialogOpen = !1, this.adapter.notifyClosing(t), this.adapter.addClass(dt.CLOSING), this.adapter.removeClass(dt.OPEN), this.adapter.removeBodyClass(dt.SCROLL_LOCK), this.isFullscreen && this.adapter.deregisterContentEventHandler("scroll", this.contentScrollHandler), this.adapter.deregisterWindowEventHandler("resize", this.windowResizeHandler), this.adapter.deregisterWindowEventHandler("orientationchange", this.windowOrientationChangeHandler), cancelAnimationFrame(this.animationFrame), this.animationFrame = 0, clearTimeout(this.animationTimer), this.animationTimer = setTimeout(function() {
        s.adapter.releaseFocus(), s.handleAnimationTimerEnd(), s.adapter.notifyClosed(t);
      }, Ga.DIALOG_ANIMATION_CLOSE_TIME_MS));
    }, e.prototype.showSurfaceScrim = function() {
      var t = this;
      this.adapter.addClass(dt.SURFACE_SCRIM_SHOWING), this.runNextAnimationFrame(function() {
        t.adapter.addClass(dt.SURFACE_SCRIM_SHOWN);
      });
    }, e.prototype.hideSurfaceScrim = function() {
      this.adapter.removeClass(dt.SURFACE_SCRIM_SHOWN), this.adapter.addClass(dt.SURFACE_SCRIM_HIDING);
    }, e.prototype.handleSurfaceScrimTransitionEnd = function() {
      this.adapter.removeClass(dt.SURFACE_SCRIM_HIDING), this.adapter.removeClass(dt.SURFACE_SCRIM_SHOWING);
    }, e.prototype.isOpen = function() {
      return this.dialogOpen;
    }, e.prototype.getEscapeKeyAction = function() {
      return this.escapeKeyAction;
    }, e.prototype.setEscapeKeyAction = function(t) {
      this.escapeKeyAction = t;
    }, e.prototype.getScrimClickAction = function() {
      return this.scrimClickAction;
    }, e.prototype.setScrimClickAction = function(t) {
      this.scrimClickAction = t;
    }, e.prototype.getAutoStackButtons = function() {
      return this.autoStackButtons;
    }, e.prototype.setAutoStackButtons = function(t) {
      this.autoStackButtons = t;
    }, e.prototype.getSuppressDefaultPressSelector = function() {
      return this.suppressDefaultPressSelector;
    }, e.prototype.setSuppressDefaultPressSelector = function(t) {
      this.suppressDefaultPressSelector = t;
    }, e.prototype.layout = function() {
      var t = this;
      this.animFrame.request(Js.POLL_LAYOUT_CHANGE, function() {
        t.layoutInternal();
      });
    }, e.prototype.handleClick = function(t) {
      var s = this.adapter.eventTargetMatches(t.target, ds.SCRIM_SELECTOR);
      if (s && this.scrimClickAction !== "")
        this.close(this.scrimClickAction);
      else {
        var a = this.adapter.getActionFromEvent(t);
        a && this.close(a);
      }
    }, e.prototype.handleKeydown = function(t) {
      var s = t.key === "Enter" || t.keyCode === 13;
      if (s) {
        var a = this.adapter.getActionFromEvent(t);
        if (!a) {
          var r = t.composedPath ? t.composedPath()[0] : t.target, o = this.suppressDefaultPressSelector ? !this.adapter.eventTargetMatches(r, this.suppressDefaultPressSelector) : !0;
          s && o && this.adapter.clickDefaultButton();
        }
      }
    }, e.prototype.handleDocumentKeydown = function(t) {
      var s = t.key === "Escape" || t.keyCode === 27;
      s && this.escapeKeyAction !== "" && this.close(this.escapeKeyAction);
    }, e.prototype.handleScrollEvent = function() {
      var t = this;
      this.animFrame.request(Js.POLL_SCROLL_POS, function() {
        t.toggleScrollDividerHeader(), t.toggleScrollDividerFooter();
      });
    }, e.prototype.layoutInternal = function() {
      this.autoStackButtons && this.detectStackedButtons(), this.toggleScrollableClasses();
    }, e.prototype.handleAnimationTimerEnd = function() {
      this.animationTimer = 0, this.adapter.removeClass(dt.OPENING), this.adapter.removeClass(dt.CLOSING);
    }, e.prototype.runNextAnimationFrame = function(t) {
      var s = this;
      cancelAnimationFrame(this.animationFrame), this.animationFrame = requestAnimationFrame(function() {
        s.animationFrame = 0, clearTimeout(s.animationTimer), s.animationTimer = setTimeout(t, 0);
      });
    }, e.prototype.detectStackedButtons = function() {
      this.adapter.removeClass(dt.STACKED);
      var t = this.adapter.areButtonsStacked();
      t && this.adapter.addClass(dt.STACKED), t !== this.areButtonsStacked && (this.adapter.reverseButtons(), this.areButtonsStacked = t);
    }, e.prototype.toggleScrollableClasses = function() {
      this.adapter.removeClass(dt.SCROLLABLE), this.adapter.isContentScrollable() && (this.adapter.addClass(dt.SCROLLABLE), this.isFullscreen && (this.toggleScrollDividerHeader(), this.toggleScrollDividerFooter()));
    }, e.prototype.toggleScrollDividerHeader = function() {
      this.adapter.isScrollableContentAtTop() ? this.adapter.hasClass(dt.SCROLL_DIVIDER_HEADER) && this.adapter.removeClass(dt.SCROLL_DIVIDER_HEADER) : this.adapter.addClass(dt.SCROLL_DIVIDER_HEADER);
    }, e.prototype.toggleScrollDividerFooter = function() {
      this.adapter.isScrollableContentAtBottom() ? this.adapter.hasClass(dt.SCROLL_DIVIDER_FOOTER) && this.adapter.removeClass(dt.SCROLL_DIVIDER_FOOTER) : this.adapter.addClass(dt.SCROLL_DIVIDER_FOOTER);
    }, e;
  }(wt)
);
const { document: Yu, window: Gi } = ud, Qu = (n) => ({}), Vi = (n) => ({});
function ji(n) {
  let e, t, s;
  return {
    c() {
      e = Z("div"), R(e, "class", "mdc-dialog__surface-scrim");
    },
    m(a, r) {
      G(a, e, r), t || (s = ce(
        e,
        "transitionend",
        /*transitionend_handler*/
        n[32]
      ), t = !0);
    },
    p: Le,
    d(a) {
      a && F(e), t = !1, s();
    }
  };
}
function Ju(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m, p, D;
  const _ = (
    /*#slots*/
    n[29].default
  ), A = Pe(
    _,
    n,
    /*$$scope*/
    n[28],
    null
  );
  let b = (
    /*fullscreen*/
    n[5] && ji(n)
  ), S = [
    {
      class: o = le({
        [
          /*surface$class*/
          n[9]
        ]: !0,
        "mdc-dialog__surface": !0
      })
    },
    { role: "alertdialog" },
    { "aria-modal": "true" },
    Je(
      /*$$restProps*/
      n[19],
      "surface$"
    )
  ], f = {};
  for (let O = 0; O < S.length; O += 1)
    f = te(f, S[O]);
  let E = [
    {
      class: i = le({
        [
          /*container$class*/
          n[8]
        ]: !0,
        "mdc-dialog__container": !0
      })
    },
    Je(
      /*$$restProps*/
      n[19],
      "container$"
    )
  ], y = {};
  for (let O = 0; O < E.length; O += 1)
    y = te(y, E[O]);
  let I = [
    {
      class: l = le({
        [
          /*className*/
          n[2]
        ]: !0,
        "mdc-dialog": !0,
        "mdc-dialog--stacked": !/*autoStackButtons*/
        n[4],
        "mdc-dialog--fullscreen": (
          /*fullscreen*/
          n[5]
        ),
        "mdc-dialog--sheet": (
          /*sheet*/
          n[6]
        ),
        "mdc-dialog--no-content-padding": (
          /*noContentPadding*/
          n[7]
        ),
        "smui-dialog--selection": (
          /*selection*/
          n[3]
        ),
        .../*internalClasses*/
        n[12]
      })
    },
    { role: "alertdialog" },
    { "aria-modal": "true" },
    jt(
      /*$$restProps*/
      n[19],
      ["container$", "surface$"]
    )
  ], N = {};
  for (let O = 0; O < I.length; O += 1)
    N = te(N, I[O]);
  const j = (
    /*#slots*/
    n[29].over
  ), v = Pe(
    j,
    n,
    /*$$scope*/
    n[28],
    Vi
  );
  return {
    c() {
      e = $(), t = Z("div"), s = Z("div"), a = Z("div"), A && A.c(), r = $(), b && b.c(), d = $(), c = Z("div"), u = $(), v && v.c(), Ae(a, f), Ae(s, y), R(c, "class", "mdc-dialog__scrim"), Ae(t, N);
    },
    m(O, M) {
      G(O, e, M), G(O, t, M), U(t, s), U(s, a), A && A.m(a, null), U(a, r), b && b.m(a, null), U(t, d), U(t, c), n[33](t), G(O, u, M), v && v.m(O, M), m = !0, p || (D = [
        ce(
          Gi,
          "resize",
          /*resize_handler*/
          n[30]
        ),
        ce(
          Gi,
          "orientationchange",
          /*orientationchange_handler*/
          n[31]
        ),
        ce(Yu.body, "keydown", function() {
          Fe(
            /*instance*/
            n[10] && /*instance*/
            n[10].handleDocumentKeydown.bind(
              /*instance*/
              n[10]
            )
          ) && /*instance*/
          (n[10] && /*instance*/
          n[10].handleDocumentKeydown.bind(
            /*instance*/
            n[10]
          )).apply(this, arguments);
        }),
        De(C = rt.call(
          null,
          t,
          /*use*/
          n[1]
        )),
        De(
          /*forwardEvents*/
          n[13].call(null, t)
        ),
        ce(
          t,
          "SMUIDialog:opening",
          /*handleDialogOpening*/
          n[16]
        ),
        ce(
          t,
          "SMUIDialog:opened",
          /*handleDialogOpened*/
          n[17]
        ),
        ce(
          t,
          "SMUIDialog:closed",
          /*handleDialogClosed*/
          n[18]
        ),
        ce(t, "click", function() {
          Fe(
            /*instance*/
            n[10] && /*instance*/
            n[10].handleClick.bind(
              /*instance*/
              n[10]
            )
          ) && /*instance*/
          (n[10] && /*instance*/
          n[10].handleClick.bind(
            /*instance*/
            n[10]
          )).apply(this, arguments);
        }),
        ce(t, "keydown", function() {
          Fe(
            /*instance*/
            n[10] && /*instance*/
            n[10].handleKeydown.bind(
              /*instance*/
              n[10]
            )
          ) && /*instance*/
          (n[10] && /*instance*/
          n[10].handleKeydown.bind(
            /*instance*/
            n[10]
          )).apply(this, arguments);
        })
      ], p = !0);
    },
    p(O, M) {
      n = O, A && A.p && (!m || M[0] & /*$$scope*/
      268435456) && Me(
        A,
        _,
        n,
        /*$$scope*/
        n[28],
        m ? ve(
          _,
          /*$$scope*/
          n[28],
          M,
          null
        ) : Re(
          /*$$scope*/
          n[28]
        ),
        null
      ), /*fullscreen*/
      n[5] ? b ? b.p(n, M) : (b = ji(n), b.c(), b.m(a, null)) : b && (b.d(1), b = null), Ae(a, f = Ee(S, [
        (!m || M[0] & /*surface$class*/
        512 && o !== (o = le({
          [
            /*surface$class*/
            n[9]
          ]: !0,
          "mdc-dialog__surface": !0
        }))) && { class: o },
        { role: "alertdialog" },
        { "aria-modal": "true" },
        M[0] & /*$$restProps*/
        524288 && Je(
          /*$$restProps*/
          n[19],
          "surface$"
        )
      ])), Ae(s, y = Ee(E, [
        (!m || M[0] & /*container$class*/
        256 && i !== (i = le({
          [
            /*container$class*/
            n[8]
          ]: !0,
          "mdc-dialog__container": !0
        }))) && { class: i },
        M[0] & /*$$restProps*/
        524288 && Je(
          /*$$restProps*/
          n[19],
          "container$"
        )
      ])), Ae(t, N = Ee(I, [
        (!m || M[0] & /*className, autoStackButtons, fullscreen, sheet, noContentPadding, selection, internalClasses*/
        4348 && l !== (l = le({
          [
            /*className*/
            n[2]
          ]: !0,
          "mdc-dialog": !0,
          "mdc-dialog--stacked": !/*autoStackButtons*/
          n[4],
          "mdc-dialog--fullscreen": (
            /*fullscreen*/
            n[5]
          ),
          "mdc-dialog--sheet": (
            /*sheet*/
            n[6]
          ),
          "mdc-dialog--no-content-padding": (
            /*noContentPadding*/
            n[7]
          ),
          "smui-dialog--selection": (
            /*selection*/
            n[3]
          ),
          .../*internalClasses*/
          n[12]
        }))) && { class: l },
        { role: "alertdialog" },
        { "aria-modal": "true" },
        M[0] & /*$$restProps*/
        524288 && jt(
          /*$$restProps*/
          n[19],
          ["container$", "surface$"]
        )
      ])), C && Fe(C.update) && M[0] & /*use*/
      2 && C.update.call(
        null,
        /*use*/
        n[1]
      ), v && v.p && (!m || M[0] & /*$$scope*/
      268435456) && Me(
        v,
        j,
        n,
        /*$$scope*/
        n[28],
        m ? ve(
          j,
          /*$$scope*/
          n[28],
          M,
          Qu
        ) : Re(
          /*$$scope*/
          n[28]
        ),
        Vi
      );
    },
    i(O) {
      m || (L(A, O), L(v, O), m = !0);
    },
    o(O) {
      h(A, O), h(v, O), m = !1;
    },
    d(O) {
      O && (F(e), F(t), F(u)), A && A.d(O), b && b.d(), n[33](null), v && v.d(O), p = !1, ze(D);
    }
  };
}
function xu(n, e, t) {
  const s = [
    "use",
    "class",
    "open",
    "selection",
    "escapeKeyAction",
    "scrimClickAction",
    "autoStackButtons",
    "fullscreen",
    "sheet",
    "noContentPadding",
    "container$class",
    "surface$class",
    "isOpen",
    "setOpen",
    "layout",
    "getElement"
  ];
  let a = Te(e, s), r, o, { $$slots: i = {}, $$scope: d } = e;
  var c;
  const { FocusTrap: l } = El, { closest: C, matches: u } = Ls, m = lt(tt());
  let { use: p = [] } = e, { class: D = "" } = e, { open: _ = !1 } = e, { selection: A = !1 } = e, { escapeKeyAction: b = "close" } = e, { scrimClickAction: S = "close" } = e, { autoStackButtons: f = !0 } = e, { fullscreen: E = !1 } = e, { sheet: y = !1 } = e, { noContentPadding: I = !1 } = e, { container$class: N = "" } = e, { surface$class: j = "" } = e, v, O, M = {}, P, g = Ft(!1);
  Ye(n, g, (k) => t(37, o = k));
  let W = Qe("SMUI:dialog:aboveFullscreen"), B = (c = Qe("SMUI:dialog:aboveFullscreenShown")) !== null && c !== void 0 ? c : Ft(!1);
  Ye(n, B, (k) => t(27, r = k));
  let H = Qe("SMUI:addLayoutListener"), w, T = [], Y = (k) => (T.push(k), () => {
    const ie = T.indexOf(k);
    ie >= 0 && T.splice(ie, 1);
  });
  qe("SMUI:dialog:actions:reversed", g), qe("SMUI:addLayoutListener", Y), qe("SMUI:dialog:selection", A), qe("SMUI:dialog:aboveFullscreen", W || E), qe("SMUI:dialog:aboveFullscreenShown", B), y && qe("SMUI:icon-button:context", "dialog:sheet"), H && (w = H(ge));
  let Ie = r;
  at(() => {
    var k;
    return P = new l(
      v,
      {
        initialFocusEl: (k = xe()) !== null && k !== void 0 ? k : void 0
      }
    ), t(10, O = new Zu({
      addBodyClass: (ie) => document.body.classList.add(ie),
      addClass: ke,
      areButtonsStacked: () => zu(_e()),
      clickDefaultButton: () => {
        const ie = We();
        ie && ie.click();
      },
      eventTargetMatches: (ie, Ke) => ie ? u(ie, Ke) : !1,
      getActionFromEvent: (ie) => {
        if (!ie.target)
          return "";
        const Ke = C(ie.target, "[data-mdc-dialog-action]");
        return Ke && Ke.getAttribute("data-mdc-dialog-action");
      },
      getInitialFocusEl: xe,
      hasClass: Ge,
      isContentScrollable: () => Ku(Be()),
      notifyClosed: (ie) => {
        t(0, _ = !1), Oe(Q(), "SMUIDialog:closed", ie ? { action: ie } : {}, void 0, !0);
      },
      notifyClosing: (ie) => Oe(Q(), "SMUIDialog:closing", ie ? { action: ie } : {}, void 0, !0),
      notifyOpened: () => Oe(Q(), "SMUIDialog:opened", {}, void 0, !0),
      notifyOpening: () => Oe(Q(), "SMUIDialog:opening", {}, void 0, !0),
      releaseFocus: () => P.releaseFocus(),
      removeBodyClass: (ie) => document.body.classList.remove(ie),
      removeClass: ae,
      reverseButtons: () => {
        Fn(g, o = !0, o);
      },
      trapFocus: () => P.trapFocus(),
      registerContentEventHandler: (ie, Ke) => {
        const re = Be();
        re instanceof HTMLElement && re.addEventListener(ie, Ke);
      },
      deregisterContentEventHandler: (ie, Ke) => {
        const re = Be();
        re instanceof HTMLElement && re.removeEventListener(ie, Ke);
      },
      isScrollableContentAtTop: () => Wu(Be()),
      isScrollableContentAtBottom: () => qu(Be()),
      registerWindowEventHandler: (ie, Ke) => {
        window.addEventListener(ie, Ke);
      },
      deregisterWindowEventHandler: (ie, Ke) => {
        window.removeEventListener(ie, Ke);
      }
    })), O.init(), () => {
      O.destroy();
    };
  }), an(() => {
    w && w();
  });
  function Ge(k) {
    return k in M ? M[k] : Q().classList.contains(k);
  }
  function ke(k) {
    M[k] || t(12, M[k] = !0, M);
  }
  function ae(k) {
    (!(k in M) || M[k]) && t(12, M[k] = !1, M);
  }
  function _e() {
    return [].slice.call(v.querySelectorAll(".mdc-dialog__button"));
  }
  function We() {
    return v.querySelector("[data-mdc-dialog-button-default]");
  }
  function Be() {
    return v.querySelector(".mdc-dialog__content");
  }
  function xe() {
    return v.querySelector("[data-mdc-dialog-initial-focus]");
  }
  function it() {
    W && Fn(B, r = !0, r), requestAnimationFrame(() => {
      T.forEach((k) => k());
    });
  }
  function oe() {
    T.forEach((k) => k());
  }
  function J() {
    W && Fn(B, r = !1, r);
  }
  function se() {
    return _;
  }
  function V(k) {
    t(0, _ = k);
  }
  function ge() {
    return O.layout();
  }
  function Q() {
    return v;
  }
  const pe = () => _ && O && O.layout(), $e = () => _ && O && O.layout(), Lt = () => O && O.handleSurfaceScrimTransitionEnd();
  function Ht(k) {
    de[k ? "unshift" : "push"](() => {
      v = k, t(11, v);
    });
  }
  return n.$$set = (k) => {
    e = te(te({}, e), ct(k)), t(19, a = Te(e, s)), "use" in k && t(1, p = k.use), "class" in k && t(2, D = k.class), "open" in k && t(0, _ = k.open), "selection" in k && t(3, A = k.selection), "escapeKeyAction" in k && t(20, b = k.escapeKeyAction), "scrimClickAction" in k && t(21, S = k.scrimClickAction), "autoStackButtons" in k && t(4, f = k.autoStackButtons), "fullscreen" in k && t(5, E = k.fullscreen), "sheet" in k && t(6, y = k.sheet), "noContentPadding" in k && t(7, I = k.noContentPadding), "container$class" in k && t(8, N = k.container$class), "surface$class" in k && t(9, j = k.surface$class), "$$scope" in k && t(28, d = k.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*instance, escapeKeyAction*/
    1049600 && O && O.getEscapeKeyAction() !== b && O.setEscapeKeyAction(b), n.$$.dirty[0] & /*instance, scrimClickAction*/
    2098176 && O && O.getScrimClickAction() !== S && O.setScrimClickAction(S), n.$$.dirty[0] & /*instance, autoStackButtons*/
    1040 && O && O.getAutoStackButtons() !== f && O.setAutoStackButtons(f), n.$$.dirty[0] & /*autoStackButtons*/
    16 && (f || Fn(g, o = !0, o)), n.$$.dirty[0] & /*instance, open*/
    1025 && O && O.isOpen() !== _ && (_ ? O.open({
      isAboveFullscreenDialog: !!W
    }) : O.close()), n.$$.dirty[0] & /*fullscreen, instance, previousAboveFullscreenShown, $aboveFullscreenShown*/
    201327648 && E && O && Ie !== r && (t(26, Ie = r), r ? O.showSurfaceScrim() : O.hideSurfaceScrim());
  }, [
    _,
    p,
    D,
    A,
    f,
    E,
    y,
    I,
    N,
    j,
    O,
    v,
    M,
    m,
    g,
    B,
    it,
    oe,
    J,
    a,
    b,
    S,
    se,
    V,
    ge,
    Q,
    Ie,
    r,
    d,
    i,
    pe,
    $e,
    Lt,
    Ht
  ];
}
class $u extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      xu,
      Ju,
      Ce,
      {
        use: 1,
        class: 2,
        open: 0,
        selection: 3,
        escapeKeyAction: 20,
        scrimClickAction: 21,
        autoStackButtons: 4,
        fullscreen: 5,
        sheet: 6,
        noContentPadding: 7,
        container$class: 8,
        surface$class: 9,
        isOpen: 22,
        setOpen: 23,
        layout: 24,
        getElement: 25
      },
      null,
      [-1, -1]
    );
  }
  get isOpen() {
    return this.$$.ctx[22];
  }
  get setOpen() {
    return this.$$.ctx[23];
  }
  get layout() {
    return this.$$.ctx[24];
  }
  get getElement() {
    return this.$$.ctx[25];
  }
}
const em = Pt({
  class: "mdc-dialog__header",
  tag: "div",
  contexts: {
    "SMUI:icon-button:context": "dialog:header"
  }
});
Pt({
  class: "mdc-dialog__title",
  tag: "h2"
});
const Td = Pt({
  class: "mdc-dialog__content",
  tag: "div"
}), tm = Pt({
  class: "mdc-dialog__actions",
  tag: "div",
  classMap: {
    "smui-dialog__actions--reversed": "SMUI:dialog:actions:reversed"
  },
  contexts: {
    "SMUI:button:context": "dialog:action"
  }
}), _r = Ft({
  component: null,
  props: {},
  isOpen: !1
});
function ki(n) {
  let e, t, s, a;
  const r = [
    /*dialogData*/
    n[0].props
  ];
  function o(c) {
    n[2](c);
  }
  var i = (
    /*dialogData*/
    n[0].component
  );
  function d(c, l) {
    let C = {};
    for (let u = 0; u < r.length; u += 1)
      C = te(C, r[u]);
    return l !== void 0 && l & /*dialogData*/
    1 && (C = te(C, Ee(r, [Ne(
      /*dialogData*/
      c[0].props
    )]))), /*isOpen*/
    c[1] !== void 0 && (C.open = /*isOpen*/
    c[1]), { props: C };
  }
  return i && (e = Gt(i, d(n)), de.push(() => Ve(e, "open", o))), {
    c() {
      e && X(e.$$.fragment), s = st();
    },
    m(c, l) {
      e && q(e, c, l), G(c, s, l), a = !0;
    },
    p(c, l) {
      if (l & /*dialogData*/
      1 && i !== (i = /*dialogData*/
      c[0].component)) {
        if (e) {
          he();
          const C = e;
          h(C.$$.fragment, 1, 0, () => {
            z(C, 1);
          }), ye();
        }
        i ? (e = Gt(i, d(c, l)), de.push(() => Ve(e, "open", o)), X(e.$$.fragment), L(e.$$.fragment, 1), q(e, s.parentNode, s)) : e = null;
      } else if (i) {
        const C = l & /*dialogData*/
        1 ? Ee(r, [Ne(
          /*dialogData*/
          c[0].props
        )]) : {};
        !t && l & /*isOpen*/
        2 && (t = !0, C.open = /*isOpen*/
        c[1], we(() => t = !1)), e.$set(C);
      }
    },
    i(c) {
      a || (e && L(e.$$.fragment, c), a = !0);
    },
    o(c) {
      e && h(e.$$.fragment, c), a = !1;
    },
    d(c) {
      c && F(s), e && z(e, c);
    }
  };
}
function nm(n) {
  let e, t, s = (
    /*dialogData*/
    n[0].isOpen && /*dialogData*/
    n[0].component && ki(n)
  );
  return {
    c() {
      s && s.c(), e = st();
    },
    m(a, r) {
      s && s.m(a, r), G(a, e, r), t = !0;
    },
    p(a, [r]) {
      /*dialogData*/
      a[0].isOpen && /*dialogData*/
      a[0].component ? s ? (s.p(a, r), r & /*dialogData*/
      1 && L(s, 1)) : (s = ki(a), s.c(), L(s, 1), s.m(e.parentNode, e)) : s && (he(), h(s, 1, 1, () => {
        s = null;
      }), ye());
    },
    i(a) {
      t || (L(s), t = !0);
    },
    o(a) {
      h(s), t = !1;
    },
    d(a) {
      a && F(e), s && s.d(a);
    }
  };
}
function sm(n, e, t) {
  let s, a = !1;
  const r = _r.subscribe((i) => {
    t(0, s = i), t(1, a = i.isOpen);
  });
  at(() => () => r());
  function o(i) {
    a = i, t(1, a);
  }
  return [s, a, o];
}
class am extends me {
  constructor(e) {
    super(), ue(this, e, sm, nm, Ce, {});
  }
}
function kn(n, e = {}) {
  return new Promise((t) => {
    _r.set({
      component: n,
      props: e,
      isOpen: !0,
      resolve: t
    });
  });
}
function un(n, e) {
  _r.update((t) => {
    var s;
    return (s = t.resolve) == null || s.call(t, { type: n, data: e }), { component: null, props: {}, isOpen: !1 };
  });
}
function rm(n) {
  let e, t;
  return {
    c() {
      e = Z("div"), t = Se(
        /*message*/
        n[2]
      ), R(e, "class", "oscd-confirm-dialog__content svelte-jz1b5o");
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*message*/
      4 && je(
        t,
        /*message*/
        s[2]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function im(n) {
  let e, t;
  return e = new Td({
    props: {
      slot: "content",
      $$slots: { default: [rm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, message*/
      4100 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function om(n) {
  let e, t, s;
  function a(o) {
    n[8](o);
  }
  let r = {
    title: (
      /*title*/
      n[1]
    ),
    confirmActionText: (
      /*confirmActionText*/
      n[3]
    ),
    cancelActionText: (
      /*cancelActionText*/
      n[4]
    ),
    color: (
      /*color*/
      n[5]
    ),
    width: "100%",
    maxWidth: "500px",
    height: "auto",
    maxHeight: "auto",
    $$slots: { content: [im] },
    $$scope: { ctx: n }
  };
  return (
    /*open*/
    n[0] !== void 0 && (r.open = /*open*/
    n[0]), e = new Ir({ props: r }), de.push(() => Ve(e, "open", a)), e.$on(
      "confirm",
      /*confirm_handler*/
      n[9]
    ), e.$on(
      "cancel",
      /*cancel_handler*/
      n[10]
    ), e.$on(
      "close",
      /*close_handler*/
      n[11]
    ), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, [i]) {
        const d = {};
        i & /*title*/
        2 && (d.title = /*title*/
        o[1]), i & /*confirmActionText*/
        8 && (d.confirmActionText = /*confirmActionText*/
        o[3]), i & /*cancelActionText*/
        16 && (d.cancelActionText = /*cancelActionText*/
        o[4]), i & /*color*/
        32 && (d.color = /*color*/
        o[5]), i & /*$$scope, message*/
        4100 && (d.$$scope = { dirty: i, ctx: o }), !t && i & /*open*/
        1 && (t = !0, d.open = /*open*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function dm(n, e, t) {
  let { open: s = !1 } = e, { title: a = "" } = e, { message: r = "" } = e, { confirmActionText: o = "OK" } = e, { cancelActionText: i = "Cancel" } = e, { color: d = "var(--mdc-theme-primary, #ff3e00)" } = e;
  function c() {
    un("confirm");
  }
  function l() {
    un("cancel");
  }
  function C(D) {
    s = D, t(0, s);
  }
  const u = () => c(), m = () => l(), p = () => un("close");
  return n.$$set = (D) => {
    "open" in D && t(0, s = D.open), "title" in D && t(1, a = D.title), "message" in D && t(2, r = D.message), "confirmActionText" in D && t(3, o = D.confirmActionText), "cancelActionText" in D && t(4, i = D.cancelActionText), "color" in D && t(5, d = D.color);
  }, [
    s,
    a,
    r,
    o,
    i,
    d,
    c,
    l,
    C,
    u,
    m,
    p
  ];
}
class Pd extends me {
  constructor(e) {
    super(), ue(this, e, dm, om, Ce, {
      open: 0,
      title: 1,
      message: 2,
      confirmActionText: 3,
      cancelActionText: 4,
      color: 5
    });
  }
}
const cm = (n) => ({}), wi = (n) => ({});
function Bi(n) {
  let e, t;
  return e = new gn({
    props: {
      onClick: (
        /*func*/
        n[14]
      ),
      tooltip: "Close",
      tooltipSide: "left",
      type: "close",
      fillColor: "white"
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*open*/
      1 && (r.onClick = /*func*/
      s[14]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function lm(n) {
  let e, t, s, a, r, o, i = (
    /*showCloseButton*/
    n[10] && Bi(n)
  );
  return {
    c() {
      e = Z("div"), t = Z("h4"), s = Se(
        /*title*/
        n[1]
      ), a = $(), i && i.c(), R(t, "class", "svelte-1b219cd"), R(e, "class", "dialog__title svelte-1b219cd"), R(e, "style", r = `background-color: ${/*color*/
      n[9]};`);
    },
    m(d, c) {
      G(d, e, c), U(e, t), U(t, s), U(e, a), i && i.m(e, null), o = !0;
    },
    p(d, c) {
      (!o || c & /*title*/
      2) && je(
        s,
        /*title*/
        d[1]
      ), /*showCloseButton*/
      d[10] ? i ? (i.p(d, c), c & /*showCloseButton*/
      1024 && L(i, 1)) : (i = Bi(d), i.c(), L(i, 1), i.m(e, null)) : i && (he(), h(i, 1, 1, () => {
        i = null;
      }), ye()), (!o || c & /*color*/
      512 && r !== (r = `background-color: ${/*color*/
      d[9]};`)) && R(e, "style", r);
    },
    i(d) {
      o || (L(i), o = !0);
    },
    o(d) {
      h(i), o = !1;
    },
    d(d) {
      d && F(e), i && i.d();
    }
  };
}
function Cm(n) {
  let e;
  const t = (
    /*#slots*/
    n[13].content
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[17],
    wi
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r & /*$$scope*/
      131072) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[17],
        e ? ve(
          t,
          /*$$scope*/
          a[17],
          r,
          cm
        ) : Re(
          /*$$scope*/
          a[17]
        ),
        wi
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function Ui(n) {
  let e, t;
  return e = new ss({
    props: {
      action: "cancel",
      color: "secondary",
      tabindex: "1",
      $$slots: { default: [um] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, cancelActionText*/
      131080 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function um(n) {
  let e;
  return {
    c() {
      e = Se(
        /*cancelActionText*/
        n[3]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s & /*cancelActionText*/
      8 && je(
        e,
        /*cancelActionText*/
        t[3]
      );
    },
    d(t) {
      t && F(e);
    }
  };
}
function mm(n) {
  let e;
  return {
    c() {
      e = Se(
        /*confirmActionText*/
        n[2]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s & /*confirmActionText*/
      4 && je(
        e,
        /*confirmActionText*/
        t[2]
      );
    },
    d(t) {
      t && F(e);
    }
  };
}
function pm(n) {
  let e, t, s, a = (
    /*cancelActionText*/
    n[3] && Ui(n)
  );
  return t = new ss({
    props: {
      color: "primary",
      action: "confirm",
      disabled: (
        /*confirmDisabled*/
        n[8]
      ),
      style: (
        /*confirmDisabled*/
        n[8] ? "" : `background-color: ${/*color*/
        n[9]}; color: white;`
      ),
      tabindex: "0",
      $$slots: { default: [mm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      a && a.c(), e = $(), X(t.$$.fragment);
    },
    m(r, o) {
      a && a.m(r, o), G(r, e, o), q(t, r, o), s = !0;
    },
    p(r, o) {
      /*cancelActionText*/
      r[3] ? a ? (a.p(r, o), o & /*cancelActionText*/
      8 && L(a, 1)) : (a = Ui(r), a.c(), L(a, 1), a.m(e.parentNode, e)) : a && (he(), h(a, 1, 1, () => {
        a = null;
      }), ye());
      const i = {};
      o & /*confirmDisabled*/
      256 && (i.disabled = /*confirmDisabled*/
      r[8]), o & /*confirmDisabled, color*/
      768 && (i.style = /*confirmDisabled*/
      r[8] ? "" : `background-color: ${/*color*/
      r[9]}; color: white;`), o & /*$$scope, confirmActionText*/
      131076 && (i.$$scope = { dirty: o, ctx: r }), t.$set(i);
    },
    i(r) {
      s || (L(a), L(t.$$.fragment, r), s = !0);
    },
    o(r) {
      h(a), h(t.$$.fragment, r), s = !1;
    },
    d(r) {
      r && F(e), a && a.d(r), z(t, r);
    }
  };
}
function _m(n) {
  let e, t, s, a, r, o, i;
  return e = new em({
    props: {
      $$slots: { default: [lm] },
      $$scope: { ctx: n }
    }
  }), s = new Td({
    props: {
      id: "dialog__content",
      $$slots: { default: [Cm] },
      $$scope: { ctx: n }
    }
  }), o = new tm({
    props: {
      class: "oscd-dialog__actions",
      $$slots: { default: [pm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment), a = $(), r = Z("div"), X(o.$$.fragment), R(r, "class", "dialog__actions svelte-1b219cd");
    },
    m(d, c) {
      q(e, d, c), G(d, t, c), q(s, d, c), G(d, a, c), G(d, r, c), q(o, r, null), i = !0;
    },
    p(d, c) {
      const l = {};
      c & /*$$scope, color, open, showCloseButton, title*/
      132611 && (l.$$scope = { dirty: c, ctx: d }), e.$set(l);
      const C = {};
      c & /*$$scope*/
      131072 && (C.$$scope = { dirty: c, ctx: d }), s.$set(C);
      const u = {};
      c & /*$$scope, confirmDisabled, color, confirmActionText, cancelActionText*/
      131852 && (u.$$scope = { dirty: c, ctx: d }), o.$set(u);
    },
    i(d) {
      i || (L(e.$$.fragment, d), L(s.$$.fragment, d), L(o.$$.fragment, d), i = !0);
    },
    o(d) {
      h(e.$$.fragment, d), h(s.$$.fragment, d), h(o.$$.fragment, d), i = !1;
    },
    d(d) {
      d && (F(t), F(a), F(r)), z(e, d), z(s, d), z(o);
    }
  };
}
function Im(n) {
  let e, t, s;
  function a(o) {
    n[15](o);
  }
  let r = {
    "aria-labelledby": "large-scroll-title",
    "aria-describedby": "large-scroll-content",
    surface$style: `width: ${/*width*/
    n[4]}; max-width: ${/*maxWidth*/
    n[5]}; height: ${/*height*/
    n[6]}; max-height: ${/*maxHeight*/
    n[7]};`,
    $$slots: { default: [_m] },
    $$scope: { ctx: n }
  };
  return (
    /*open*/
    n[0] !== void 0 && (r.open = /*open*/
    n[0]), e = new $u({ props: r }), de.push(() => Ve(e, "open", a)), e.$on(
      "SMUIDialog:closed",
      /*SMUIDialog_closed_handler*/
      n[16]
    ), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, [i]) {
        const d = {};
        i & /*width, maxWidth, height, maxHeight*/
        240 && (d.surface$style = `width: ${/*width*/
        o[4]}; max-width: ${/*maxWidth*/
        o[5]}; height: ${/*height*/
        o[6]}; max-height: ${/*maxHeight*/
        o[7]};`), i & /*$$scope, confirmDisabled, color, confirmActionText, cancelActionText, open, showCloseButton, title*/
        132879 && (d.$$scope = { dirty: i, ctx: o }), !t && i & /*open*/
        1 && (t = !0, d.open = /*open*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function Dm(n, e, t) {
  let { $$slots: s = {}, $$scope: a } = e, { open: r = !1 } = e, { title: o = "" } = e, { confirmActionText: i = "Confirm" } = e, { cancelActionText: d = "Cancel" } = e, { width: c = "80vw" } = e, { maxWidth: l = "85vw" } = e, { height: C = "85vh" } = e, { maxHeight: u = "85vh" } = e, { confirmDisabled: m = !1 } = e, { color: p = "var(--mdc-theme-primary, #ff3e00)" } = e, { showCloseButton: D = !0 } = e;
  const _ = Qt();
  function A(E) {
    E.detail.action === "cancel" ? _("cancel") : E.detail.action === "confirm" ? _("confirm") : (E.detail.action, _("close"));
  }
  const b = () => {
    t(0, r = !1), _("close");
  };
  function S(E) {
    r = E, t(0, r);
  }
  const f = (E) => A(E);
  return n.$$set = (E) => {
    "open" in E && t(0, r = E.open), "title" in E && t(1, o = E.title), "confirmActionText" in E && t(2, i = E.confirmActionText), "cancelActionText" in E && t(3, d = E.cancelActionText), "width" in E && t(4, c = E.width), "maxWidth" in E && t(5, l = E.maxWidth), "height" in E && t(6, C = E.height), "maxHeight" in E && t(7, u = E.maxHeight), "confirmDisabled" in E && t(8, m = E.confirmDisabled), "color" in E && t(9, p = E.color), "showCloseButton" in E && t(10, D = E.showCloseButton), "$$scope" in E && t(17, a = E.$$scope);
  }, [
    r,
    o,
    i,
    d,
    c,
    l,
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    s,
    b,
    S,
    f,
    a
  ];
}
class Ir extends me {
  constructor(e) {
    super(), ue(this, e, Dm, Im, Ce, {
      open: 0,
      title: 1,
      confirmActionText: 2,
      cancelActionText: 3,
      width: 4,
      maxWidth: 5,
      height: 6,
      maxHeight: 7,
      confirmDisabled: 8,
      color: 9,
      showCloseButton: 10
    });
  }
}
Pt({
  class: "smui-paper__content",
  tag: "div"
});
Pt({
  class: "smui-paper__title",
  tag: "h5"
});
Pt({
  class: "smui-paper__subtitle",
  tag: "h6"
});
function bm(n) {
  let e, t;
  const s = (
    /*#slots*/
    n[1].default
  ), a = Pe(
    s,
    n,
    /*$$scope*/
    n[0],
    null
  );
  return {
    c() {
      e = Z("span"), a && a.c(), R(e, "class", "oscd-icon");
    },
    m(r, o) {
      G(r, e, o), a && a.m(e, null), t = !0;
    },
    p(r, [o]) {
      a && a.p && (!t || o & /*$$scope*/
      1) && Me(
        a,
        s,
        r,
        /*$$scope*/
        r[0],
        t ? ve(
          s,
          /*$$scope*/
          r[0],
          o,
          null
        ) : Re(
          /*$$scope*/
          r[0]
        ),
        null
      );
    },
    i(r) {
      t || (L(a, r), t = !0);
    },
    o(r) {
      h(a, r), t = !1;
    },
    d(r) {
      r && F(e), a && a.d(r);
    }
  };
}
function fm(n, e, t) {
  let { $$slots: s = {}, $$scope: a } = e;
  return n.$$set = (r) => {
    "$$scope" in r && t(0, a = r.$$scope);
  }, [a, s];
}
class Nn extends me {
  constructor(e) {
    super(), ue(this, e, fm, bm, Ce, {});
  }
}
function Am(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      ), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(e, "viewBox", "0 -960 960 960");
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        s[0]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function Em(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [Am] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, svgStyles*/
      3 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Om(n, e, t) {
  let { svgStyles: s = "" } = e;
  return n.$$set = (a) => {
    "svgStyles" in a && t(0, s = a.svgStyles);
  }, [s];
}
class Sm extends me {
  constructor(e) {
    super(), ue(this, e, Om, Em, Ce, { svgStyles: 0 });
  }
}
function Lm(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      ), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(e, "viewBox", "0 -960 960 960");
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        s[0]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function gm(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [Lm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, svgStyles*/
      3 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function hm(n, e, t) {
  let { svgStyles: s = "" } = e;
  return n.$$set = (a) => {
    "svgStyles" in a && t(0, s = a.svgStyles);
  }, [s];
}
class ym extends me {
  constructor(e) {
    super(), ue(this, e, hm, gm, Ce, { svgStyles: 0 });
  }
}
function Nm(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z"), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(e, "viewBox", "0 -960 960 960"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      );
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        s[0]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function Tm(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [Nm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, svgStyles*/
      3 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Pm(n, e, t) {
  let { svgStyles: s = "" } = e;
  return n.$$set = (a) => {
    "svgStyles" in a && t(0, s = a.svgStyles);
  }, [s];
}
class vm extends me {
  constructor(e) {
    super(), ue(this, e, Pm, Tm, Ce, { svgStyles: 0 });
  }
}
function Mm(n) {
  let e, t, s;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), s = Ct("path"), R(t, "d", "M0 0h24v24H0z"), R(t, "fill", "none"), R(s, "d", "M16 8h-2v3h-3v2h3v3h2v-3h3v-2h-3zM2 12c0-2.79 1.64-5.2 4.01-6.32V3.52C2.52 4.76 0 8.09 0 12s2.52 7.24 6.01 8.48v-2.16C3.64 17.2 2 14.79 2 12zm13-9c-4.96 0-9 4.04-9 9s4.04 9 9 9 9-4.04 9-9-4.04-9-9-9zm0 16c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7z"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      ), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(e, "height", "24"), R(e, "viewBox", "0 0 24 24"), R(e, "width", "24");
    },
    m(a, r) {
      G(a, e, r), U(e, t), U(e, s);
    },
    p(a, r) {
      r & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        a[0]
      );
    },
    d(a) {
      a && F(e);
    }
  };
}
function Rm(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [Mm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, svgStyles*/
      3 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Fm(n, e, t) {
  let { svgStyles: s = "" } = e;
  return n.$$set = (a) => {
    "svgStyles" in a && t(0, s = a.svgStyles);
  }, [s];
}
class Gm extends me {
  constructor(e) {
    super(), ue(this, e, Fm, Rm, Ce, { svgStyles: 0 });
  }
}
function Vm(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "m40-120 440-760 440 760H40Zm138-80h604L480-720 178-200Zm302-40q17 0 28.5-11.5T520-280q0-17-11.5-28.5T480-320q-17 0-28.5 11.5T440-280q0 17 11.5 28.5T480-240Zm-40-120h80v-200h-80v200Zm40-100Z"), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(
        e,
        "height",
        /*size*/
        n[0]
      ), R(e, "viewBox", "0 -960 960 960"), R(
        e,
        "width",
        /*size*/
        n[0]
      ), R(
        e,
        "fill",
        /*fill*/
        n[1]
      );
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, [a]) {
      a & /*size*/
      1 && R(
        e,
        "height",
        /*size*/
        s[0]
      ), a & /*size*/
      1 && R(
        e,
        "width",
        /*size*/
        s[0]
      ), a & /*fill*/
      2 && R(
        e,
        "fill",
        /*fill*/
        s[1]
      );
    },
    i: Le,
    o: Le,
    d(s) {
      s && F(e);
    }
  };
}
function jm(n, e, t) {
  let { size: s = "24px" } = e, { fill: a = "#004552" } = e;
  return n.$$set = (r) => {
    "size" in r && t(0, s = r.size), "fill" in r && t(1, a = r.fill);
  }, [s, a];
}
class km extends me {
  constructor(e) {
    super(), ue(this, e, jm, Vm, Ce, { size: 0, fill: 1 });
  }
}
function wm(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "m176-120-56-56 301-302-181-45 198-123-17-234 179 151 216-88-87 217 151 178-234-16-124 198-45-181-301 301Zm24-520-80-80 80-80 80 80-80 80Zm355 197 48-79 93 7-60-71 35-86-86 35-71-59 7 92-79 49 90 22 23 90Zm165 323-80-80 80-80 80 80-80 80ZM569-570Z"), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(e, "height", "24px"), R(e, "viewBox", "0 -960 960 960"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      );
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        s[0]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function Bm(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [wm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, svgStyles*/
      3 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Um(n, e, t) {
  let { svgStyles: s = "" } = e;
  return n.$$set = (a) => {
    "svgStyles" in a && t(0, s = a.svgStyles);
  }, [s];
}
class Hm extends me {
  constructor(e) {
    super(), ue(this, e, Um, Bm, Ce, { svgStyles: 0 });
  }
}
function Km(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "m770-302-60-62q40-11 65-42.5t25-73.5q0-50-35-85t-85-35H520v-80h160q83 0 141.5 58.5T880-480q0 57-29.5 105T770-302ZM634-440l-80-80h86v80h-6ZM792-56 56-792l56-56 736 736-56 56ZM440-280H280q-83 0-141.5-58.5T80-480q0-69 42-123t108-71l74 74h-24q-50 0-85 35t-35 85q0 50 35 85t85 35h160v80ZM320-440v-80h65l79 80H320Z"), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(e, "height", "24px"), R(e, "viewBox", "0 -960 960 960"), R(e, "width", "24px"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      );
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        s[0]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function Wm(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [Km] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, svgStyles*/
      3 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function qm(n, e, t) {
  let { svgStyles: s = "" } = e;
  return n.$$set = (a) => {
    "svgStyles" in a && t(0, s = a.svgStyles);
  }, [s];
}
class zm extends me {
  constructor(e) {
    super(), ue(this, e, qm, Wm, Ce, { svgStyles: 0 });
  }
}
function Xm(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "M240-80q-33 0-56.5-23.5T160-160v-400q0-33 23.5-56.5T240-640h40v-80q0-83 58.5-141.5T480-920q83 0 141.5 58.5T680-720v80h40q33 0 56.5 23.5T800-560v400q0 33-23.5 56.5T720-80H240Zm0-80h480v-400H240v400Zm240-120q33 0 56.5-23.5T560-360q0-33-23.5-56.5T480-440q-33 0-56.5 23.5T400-360q0 33 23.5 56.5T480-280ZM360-640h240v-80q0-50-35-85t-85-35q-50 0-85 35t-35 85v80ZM240-160v-400 400Z"), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(
        e,
        "width",
        /*width*/
        n[1]
      ), R(
        e,
        "height",
        /*height*/
        n[2]
      ), R(e, "viewBox", "0 -960 960 960"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      );
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*width*/
      2 && R(
        e,
        "width",
        /*width*/
        s[1]
      ), a & /*height*/
      4 && R(
        e,
        "height",
        /*height*/
        s[2]
      ), a & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        s[0]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function Zm(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [Xm] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, width, height, svgStyles*/
      15 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Ym(n, e, t) {
  let { svgStyles: s = "" } = e, { width: a = "24px" } = e, { height: r = "24px" } = e;
  return n.$$set = (o) => {
    "svgStyles" in o && t(0, s = o.svgStyles), "width" in o && t(1, a = o.width), "height" in o && t(2, r = o.height);
  }, [s, a, r];
}
class Qm extends me {
  constructor(e) {
    super(), ue(this, e, Ym, Zm, Ce, { svgStyles: 0, width: 1, height: 2 });
  }
}
function Jm(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "m216-160-56-56 464-464H360v-80h400v400h-80v-264L216-160Z"), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(
        e,
        "height",
        /*size*/
        n[0]
      ), R(e, "viewBox", "0 -960 960 960"), R(
        e,
        "width",
        /*size*/
        n[0]
      ), R(
        e,
        "fill",
        /*fill*/
        n[1]
      );
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, [a]) {
      a & /*size*/
      1 && R(
        e,
        "height",
        /*size*/
        s[0]
      ), a & /*size*/
      1 && R(
        e,
        "width",
        /*size*/
        s[0]
      ), a & /*fill*/
      2 && R(
        e,
        "fill",
        /*fill*/
        s[1]
      );
    },
    i: Le,
    o: Le,
    d(s) {
      s && F(e);
    }
  };
}
function xm(n, e, t) {
  let { size: s = "24px" } = e, { fill: a = "#004552" } = e;
  return n.$$set = (r) => {
    "size" in r && t(0, s = r.size), "fill" in r && t(1, a = r.fill);
  }, [s, a];
}
class $m extends me {
  constructor(e) {
    super(), ue(this, e, xm, Jm, Ce, { size: 0, fill: 1 });
  }
}
function ep(n) {
  let e, t;
  return {
    c() {
      e = Ct("svg"), t = Ct("path"), R(t, "d", "m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z"), R(e, "xmlns", "http://www.w3.org/2000/svg"), R(e, "height", "24px"), R(e, "viewBox", "0 -960 960 960"), R(e, "width", "24px"), R(
        e,
        "style",
        /*svgStyles*/
        n[0]
      );
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*svgStyles*/
      1 && R(
        e,
        "style",
        /*svgStyles*/
        s[0]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function tp(n) {
  let e, t;
  return e = new Nn({
    props: {
      $$slots: { default: [ep] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*$$scope, svgStyles*/
      3 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function np(n, e, t) {
  let { svgStyles: s = "" } = e;
  return n.$$set = (a) => {
    "svgStyles" in a && t(0, s = a.svgStyles);
  }, [s];
}
class sp extends me {
  constructor(e) {
    super(), ue(this, e, np, tp, Ce, { svgStyles: 0 });
  }
}
const ht = [];
for (let n = 0; n < 256; ++n)
  ht.push((n + 256).toString(16).slice(1));
function ap(n, e = 0) {
  return (ht[n[e + 0]] + ht[n[e + 1]] + ht[n[e + 2]] + ht[n[e + 3]] + "-" + ht[n[e + 4]] + ht[n[e + 5]] + "-" + ht[n[e + 6]] + ht[n[e + 7]] + "-" + ht[n[e + 8]] + ht[n[e + 9]] + "-" + ht[n[e + 10]] + ht[n[e + 11]] + ht[n[e + 12]] + ht[n[e + 13]] + ht[n[e + 14]] + ht[n[e + 15]]).toLowerCase();
}
let Va;
const rp = new Uint8Array(16);
function ip() {
  if (!Va) {
    if (typeof crypto > "u" || !crypto.getRandomValues)
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    Va = crypto.getRandomValues.bind(crypto);
  }
  return Va(rp);
}
const op = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), Hi = { randomUUID: op };
function dp(n, e, t) {
  var a;
  if (Hi.randomUUID && !n)
    return Hi.randomUUID();
  n = n || {};
  const s = n.random ?? ((a = n.rng) == null ? void 0 : a.call(n)) ?? ip();
  if (s.length < 16)
    throw new Error("Random bytes length must be >= 16");
  return s[6] = s[6] & 15 | 64, s[8] = s[8] & 63 | 128, ap(s);
}
function cp(n) {
  let e, t, s, a, r;
  const o = (
    /*#slots*/
    n[14].default
  ), i = Pe(
    o,
    n,
    /*$$scope*/
    n[13],
    null
  );
  return {
    c() {
      e = Z("span"), i && i.c(), R(e, "tabindex", "0"), R(e, "aria-describedby", t = /*content*/
      n[0] ? (
        /*id*/
        n[2]
      ) : void 0);
    },
    m(d, c) {
      G(d, e, c), i && i.m(e, null), n[15](e), s = !0, a || (r = [
        ce(
          e,
          "mouseenter",
          /*handleMouseEnter*/
          n[3]
        ),
        ce(
          e,
          "mouseleave",
          /*handleMouseLeave*/
          n[4]
        )
      ], a = !0);
    },
    p(d, [c]) {
      i && i.p && (!s || c & /*$$scope*/
      8192) && Me(
        i,
        o,
        d,
        /*$$scope*/
        d[13],
        s ? ve(
          o,
          /*$$scope*/
          d[13],
          c,
          null
        ) : Re(
          /*$$scope*/
          d[13]
        ),
        null
      ), (!s || c & /*content*/
      1 && t !== (t = /*content*/
      d[0] ? (
        /*id*/
        d[2]
      ) : void 0)) && R(e, "aria-describedby", t);
    },
    i(d) {
      s || (L(i, d), s = !0);
    },
    o(d) {
      h(i, d), s = !1;
    },
    d(d) {
      d && F(e), i && i.d(d), n[15](null), a = !1, ze(r);
    }
  };
}
function lp(n, e, t) {
  let { $$slots: s = {}, $$scope: a } = e, { content: r = "" } = e, { side: o = "top" } = e, { hoverDelay: i = 0 } = e, { transitionDuration: d = 80 } = e;
  const c = `tt-${Math.random().toString(36).slice(2)}`;
  let l = null, C = null, u = null, m = null, p = !1, D = null;
  function _() {
    r && (i > 0 ? t(12, D = setTimeout(() => t(11, p = !0), i)) : t(11, p = !0));
  }
  function A() {
    D && clearTimeout(D), t(11, p = !1);
  }
  function b() {
    if (!C || !m || !l)
      return;
    const f = l.getBoundingClientRect(), E = m.getBoundingClientRect();
    let y = 0, I = 0;
    const N = 8;
    switch (o) {
      case "top":
        y = f.top - E.height - N, I = f.left + f.width / 2 - E.width / 2;
        break;
      case "bottom":
        y = f.bottom + N, I = f.left + f.width / 2 - E.width / 2;
        break;
      case "left":
        y = f.top + f.height / 2 - E.height / 2, I = f.left - E.width - N;
        break;
      case "right":
        y = f.top + f.height / 2 - E.height / 2, I = f.right + N;
        break;
    }
    t(8, C.style.top = `${y + window.scrollY}px`, C), t(8, C.style.left = `${I + window.scrollX}px`, C);
  }
  function S(f) {
    de[f ? "unshift" : "push"](() => {
      l = f, t(1, l);
    });
  }
  return n.$$set = (f) => {
    "content" in f && t(0, r = f.content), "side" in f && t(5, o = f.side), "hoverDelay" in f && t(6, i = f.hoverDelay), "transitionDuration" in f && t(7, d = f.transitionDuration), "$$scope" in f && t(13, a = f.$$scope);
  }, n.$$.update = () => {
    if (n.$$.dirty & /*show, content, tooltipEl, transitionDuration, shadow, side, bubbleEl, hoverTimeout*/
    8097 && p && r) {
      if (!C) {
        t(8, C = document.createElement("div")), t(8, C.style.position = "absolute", C), t(8, C.style.zIndex = "9999", C), t(8, C.style.pointerEvents = "none", C), t(8, C.style.opacity = "0", C), t(8, C.style.transition = `opacity ${d}ms ease`, C), t(8, C.id = c, C), C.setAttribute("role", "tooltip"), document.body.appendChild(C), t(9, u = C.attachShadow({ mode: "open" }));
        const f = document.createElement("style");
        f.textContent = `
        .bubble {
          --pad-y: 6px;
          --pad-x: 10px;
          --radius: 4px;
          background: #000;
          color: #fff;
          font-size: 0.85rem;
          line-height: 1.2;
          padding: var(--pad-y) var(--pad-x);
          border-radius: var(--radius);
          white-space: nowrap;
          box-shadow: 0 4px 14px rgba(0,0,0,.25);
          pointer-events: none;
          position: relative;
          transition: none;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
          Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
        }
        .bubble::after {
          content: "";
          position: absolute;
          background: #000;
          width: 8px;
          height: 8px;
          transform: rotate(45deg);
        }
        .bubble.top::after {
          left: 50%;
          bottom: -4px;
          transform: translateX(-50%) rotate(45deg);
        }
        .bubble.bottom::after {
          left: 50%;
          top: -4px;
          transform: translateX(-50%) rotate(45deg);
        }
        .bubble.left::after {
          top: 50%;
          right: -4px;
          transform: translateY(-50%) rotate(45deg);
        }
        .bubble.right::after {
          top: 50%;
          left: -4px;
          transform: translateY(-50%) rotate(45deg);
        }
      `, u.appendChild(f), t(10, m = document.createElement("div")), t(10, m.className = `bubble ${o}`, m), t(10, m.innerHTML = r, m), u.appendChild(m);
        const E = new MutationObserver(() => {
          p && b();
        });
        E.observe(document.body, { childList: !0, subtree: !0 }), an(() => {
          E.disconnect(), C && C.parentNode && C.parentNode.removeChild(C), t(8, C = null), t(10, m = null), t(9, u = null), D && clearTimeout(D);
        });
      }
      t(8, C.style.opacity = "1", C), b();
    }
    n.$$.dirty & /*show, tooltipEl, transitionDuration*/
    2432 && !p && C && (t(8, C.style.opacity = "0", C), setTimeout(
      () => {
        C && C.parentNode && C.parentNode.removeChild(C), t(8, C = null), t(10, m = null), t(9, u = null);
      },
      d
    )), n.$$.dirty & /*bubbleEl, side, content*/
    1057 && m && (t(10, m.className = `bubble ${o}`, m), t(10, m.innerHTML = r, m));
  }, [
    r,
    l,
    c,
    _,
    A,
    o,
    i,
    d,
    C,
    u,
    m,
    p,
    D,
    a,
    s,
    S
  ];
}
class la extends me {
  constructor(e) {
    super(), ue(this, e, lp, cp, Ce, {
      content: 0,
      side: 5,
      hoverDelay: 6,
      transitionDuration: 7
    });
  }
}
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var cs = {
  ANIM_CHECKED_INDETERMINATE: "mdc-checkbox--anim-checked-indeterminate",
  ANIM_CHECKED_UNCHECKED: "mdc-checkbox--anim-checked-unchecked",
  ANIM_INDETERMINATE_CHECKED: "mdc-checkbox--anim-indeterminate-checked",
  ANIM_INDETERMINATE_UNCHECKED: "mdc-checkbox--anim-indeterminate-unchecked",
  ANIM_UNCHECKED_CHECKED: "mdc-checkbox--anim-unchecked-checked",
  ANIM_UNCHECKED_INDETERMINATE: "mdc-checkbox--anim-unchecked-indeterminate",
  BACKGROUND: "mdc-checkbox__background",
  CHECKED: "mdc-checkbox--checked",
  CHECKMARK: "mdc-checkbox__checkmark",
  CHECKMARK_PATH: "mdc-checkbox__checkmark-path",
  DISABLED: "mdc-checkbox--disabled",
  INDETERMINATE: "mdc-checkbox--indeterminate",
  MIXEDMARK: "mdc-checkbox__mixedmark",
  NATIVE_CONTROL: "mdc-checkbox__native-control",
  ROOT: "mdc-checkbox",
  SELECTED: "mdc-checkbox--selected",
  UPGRADED: "mdc-checkbox--upgraded"
}, Jt = {
  ARIA_CHECKED_ATTR: "aria-checked",
  ARIA_CHECKED_INDETERMINATE_VALUE: "mixed",
  DATA_INDETERMINATE_ATTR: "data-indeterminate",
  NATIVE_CONTROL_SELECTOR: ".mdc-checkbox__native-control",
  TRANSITION_STATE_CHECKED: "checked",
  TRANSITION_STATE_INDETERMINATE: "indeterminate",
  TRANSITION_STATE_INIT: "init",
  TRANSITION_STATE_UNCHECKED: "unchecked"
}, Ki = {
  ANIM_END_LATCH_MS: 250
};
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Cp = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.currentCheckState = Jt.TRANSITION_STATE_INIT, s.currentAnimationClass = "", s.animEndLatchTimer = 0, s.enableAnimationEndHandler = !1, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return cs;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return Jt;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "numbers", {
      get: function() {
        return Ki;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      get: function() {
        return {
          addClass: function() {
          },
          forceLayout: function() {
          },
          hasNativeControl: function() {
            return !1;
          },
          isAttachedToDOM: function() {
            return !1;
          },
          isChecked: function() {
            return !1;
          },
          isIndeterminate: function() {
            return !1;
          },
          removeClass: function() {
          },
          removeNativeControlAttr: function() {
          },
          setNativeControlAttr: function() {
          },
          setNativeControlDisabled: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      this.currentCheckState = this.determineCheckState(), this.updateAriaChecked(), this.adapter.addClass(cs.UPGRADED);
    }, e.prototype.destroy = function() {
      clearTimeout(this.animEndLatchTimer);
    }, e.prototype.setDisabled = function(t) {
      this.adapter.setNativeControlDisabled(t), t ? this.adapter.addClass(cs.DISABLED) : this.adapter.removeClass(cs.DISABLED);
    }, e.prototype.handleAnimationEnd = function() {
      var t = this;
      this.enableAnimationEndHandler && (clearTimeout(this.animEndLatchTimer), this.animEndLatchTimer = setTimeout(function() {
        t.adapter.removeClass(t.currentAnimationClass), t.enableAnimationEndHandler = !1;
      }, Ki.ANIM_END_LATCH_MS));
    }, e.prototype.handleChange = function() {
      this.transitionCheckState();
    }, e.prototype.transitionCheckState = function() {
      if (this.adapter.hasNativeControl()) {
        var t = this.currentCheckState, s = this.determineCheckState();
        if (t !== s) {
          this.updateAriaChecked();
          var a = Jt.TRANSITION_STATE_UNCHECKED, r = cs.SELECTED;
          s === a ? this.adapter.removeClass(r) : this.adapter.addClass(r), this.currentAnimationClass.length > 0 && (clearTimeout(this.animEndLatchTimer), this.adapter.forceLayout(), this.adapter.removeClass(this.currentAnimationClass)), this.currentAnimationClass = this.getTransitionAnimationClass(t, s), this.currentCheckState = s, this.adapter.isAttachedToDOM() && this.currentAnimationClass.length > 0 && (this.adapter.addClass(this.currentAnimationClass), this.enableAnimationEndHandler = !0);
        }
      }
    }, e.prototype.determineCheckState = function() {
      var t = Jt.TRANSITION_STATE_INDETERMINATE, s = Jt.TRANSITION_STATE_CHECKED, a = Jt.TRANSITION_STATE_UNCHECKED;
      return this.adapter.isIndeterminate() ? t : this.adapter.isChecked() ? s : a;
    }, e.prototype.getTransitionAnimationClass = function(t, s) {
      var a = Jt.TRANSITION_STATE_INIT, r = Jt.TRANSITION_STATE_CHECKED, o = Jt.TRANSITION_STATE_UNCHECKED, i = e.cssClasses, d = i.ANIM_UNCHECKED_CHECKED, c = i.ANIM_UNCHECKED_INDETERMINATE, l = i.ANIM_CHECKED_UNCHECKED, C = i.ANIM_CHECKED_INDETERMINATE, u = i.ANIM_INDETERMINATE_CHECKED, m = i.ANIM_INDETERMINATE_UNCHECKED;
      switch (t) {
        case a:
          return s === o ? "" : s === r ? u : m;
        case o:
          return s === r ? d : c;
        case r:
          return s === o ? l : C;
        default:
          return s === r ? u : m;
      }
    }, e.prototype.updateAriaChecked = function() {
      this.adapter.isIndeterminate() ? this.adapter.setNativeControlAttr(Jt.ARIA_CHECKED_ATTR, Jt.ARIA_CHECKED_INDETERMINATE_VALUE) : this.adapter.removeNativeControlAttr(Jt.ARIA_CHECKED_ATTR);
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var _n = {
  HEADER_CELL_SORTED: "mdc-data-table__header-cell--sorted",
  HEADER_CELL_SORTED_DESCENDING: "mdc-data-table__header-cell--sorted-descending",
  IN_PROGRESS: "mdc-data-table--in-progress",
  ROW_SELECTED: "mdc-data-table__row--selected"
}, Wi = {
  ARIA_SELECTED: "aria-selected",
  ARIA_SORT: "aria-sort"
}, Pn = {
  ARIA_SELECTED: Wi.ARIA_SELECTED,
  ARIA_SORT: Wi.ARIA_SORT
}, Zt;
(function(n) {
  n.ASCENDING = "ascending", n.DESCENDING = "descending", n.NONE = "none", n.OTHER = "other";
})(Zt || (Zt = {}));
/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var up = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      return n.call(this, et(et({}, e.defaultAdapter), t)) || this;
    }
    return Object.defineProperty(e, "defaultAdapter", {
      get: function() {
        return {
          addClass: function() {
          },
          addClassAtRowIndex: function() {
          },
          getAttributeByHeaderCellIndex: function() {
            return "";
          },
          getHeaderCellCount: function() {
            return 0;
          },
          getHeaderCellElements: function() {
            return [];
          },
          getRowCount: function() {
            return 0;
          },
          getRowElements: function() {
            return [];
          },
          getRowIdAtIndex: function() {
            return "";
          },
          getRowIndexByChildElement: function() {
            return 0;
          },
          getSelectedRowCount: function() {
            return 0;
          },
          getTableContainerHeight: function() {
            return 0;
          },
          getTableHeaderHeight: function() {
            return 0;
          },
          isCheckboxAtRowIndexChecked: function() {
            return !1;
          },
          isHeaderRowCheckboxChecked: function() {
            return !1;
          },
          isRowsSelectable: function() {
            return !1;
          },
          notifyRowSelectionChanged: function() {
          },
          notifySelectedAll: function() {
          },
          notifySortAction: function() {
          },
          notifyUnselectedAll: function() {
          },
          notifyRowClick: function() {
          },
          registerHeaderRowCheckbox: function() {
          },
          registerRowCheckboxes: function() {
          },
          removeClass: function() {
          },
          removeClassAtRowIndex: function() {
          },
          removeClassNameByHeaderCellIndex: function() {
          },
          setAttributeAtRowIndex: function() {
          },
          setAttributeByHeaderCellIndex: function() {
          },
          setClassNameByHeaderCellIndex: function() {
          },
          setHeaderRowCheckboxChecked: function() {
          },
          setHeaderRowCheckboxIndeterminate: function() {
          },
          setProgressIndicatorStyles: function() {
          },
          setRowCheckboxCheckedAtIndex: function() {
          },
          setSortStatusLabelByHeaderCellIndex: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.layout = function() {
      this.adapter.isRowsSelectable() && (this.adapter.registerHeaderRowCheckbox(), this.adapter.registerRowCheckboxes(), this.setHeaderRowCheckboxState());
    }, e.prototype.layoutAsync = function() {
      return He(this, void 0, void 0, function() {
        return al(this, function(t) {
          switch (t.label) {
            case 0:
              return this.adapter.isRowsSelectable() ? [4, this.adapter.registerHeaderRowCheckbox()] : [3, 3];
            case 1:
              return t.sent(), [4, this.adapter.registerRowCheckboxes()];
            case 2:
              t.sent(), this.setHeaderRowCheckboxState(), t.label = 3;
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.getRows = function() {
      return this.adapter.getRowElements();
    }, e.prototype.getHeaderCells = function() {
      return this.adapter.getHeaderCellElements();
    }, e.prototype.setSelectedRowIds = function(t) {
      for (var s = 0; s < this.adapter.getRowCount(); s++) {
        var a = this.adapter.getRowIdAtIndex(s), r = !1;
        a && t.indexOf(a) >= 0 && (r = !0), this.adapter.setRowCheckboxCheckedAtIndex(s, r), this.selectRowAtIndex(s, r);
      }
      this.setHeaderRowCheckboxState();
    }, e.prototype.getRowIds = function() {
      for (var t = [], s = 0; s < this.adapter.getRowCount(); s++)
        t.push(this.adapter.getRowIdAtIndex(s));
      return t;
    }, e.prototype.getSelectedRowIds = function() {
      for (var t = [], s = 0; s < this.adapter.getRowCount(); s++)
        this.adapter.isCheckboxAtRowIndexChecked(s) && t.push(this.adapter.getRowIdAtIndex(s));
      return t;
    }, e.prototype.handleHeaderRowCheckboxChange = function() {
      for (var t = this.adapter.isHeaderRowCheckboxChecked(), s = 0; s < this.adapter.getRowCount(); s++)
        this.adapter.setRowCheckboxCheckedAtIndex(s, t), this.selectRowAtIndex(s, t);
      t ? this.adapter.notifySelectedAll() : this.adapter.notifyUnselectedAll();
    }, e.prototype.handleRowCheckboxChange = function(t) {
      var s = this.adapter.getRowIndexByChildElement(t.target);
      if (s !== -1) {
        var a = this.adapter.isCheckboxAtRowIndexChecked(s);
        this.selectRowAtIndex(s, a), this.setHeaderRowCheckboxState();
        var r = this.adapter.getRowIdAtIndex(s);
        this.adapter.notifyRowSelectionChanged({ rowId: r, rowIndex: s, selected: a });
      }
    }, e.prototype.handleSortAction = function(t) {
      for (var s = t.columnId, a = t.columnIndex, r = t.headerCell, o = 0; o < this.adapter.getHeaderCellCount(); o++)
        o !== a && (this.adapter.removeClassNameByHeaderCellIndex(o, _n.HEADER_CELL_SORTED), this.adapter.removeClassNameByHeaderCellIndex(o, _n.HEADER_CELL_SORTED_DESCENDING), this.adapter.setAttributeByHeaderCellIndex(o, Pn.ARIA_SORT, Zt.NONE), this.adapter.setSortStatusLabelByHeaderCellIndex(o, Zt.NONE));
      this.adapter.setClassNameByHeaderCellIndex(a, _n.HEADER_CELL_SORTED);
      var i = this.adapter.getAttributeByHeaderCellIndex(a, Pn.ARIA_SORT), d = Zt.NONE;
      i === Zt.ASCENDING ? (this.adapter.setClassNameByHeaderCellIndex(a, _n.HEADER_CELL_SORTED_DESCENDING), this.adapter.setAttributeByHeaderCellIndex(a, Pn.ARIA_SORT, Zt.DESCENDING), d = Zt.DESCENDING) : i === Zt.DESCENDING ? (this.adapter.removeClassNameByHeaderCellIndex(a, _n.HEADER_CELL_SORTED_DESCENDING), this.adapter.setAttributeByHeaderCellIndex(a, Pn.ARIA_SORT, Zt.ASCENDING), d = Zt.ASCENDING) : (this.adapter.setAttributeByHeaderCellIndex(a, Pn.ARIA_SORT, Zt.ASCENDING), d = Zt.ASCENDING), this.adapter.setSortStatusLabelByHeaderCellIndex(a, d), this.adapter.notifySortAction({
        columnId: s,
        columnIndex: a,
        headerCell: r,
        sortValue: d
      });
    }, e.prototype.handleRowClick = function(t) {
      var s = t.rowId, a = t.row;
      this.adapter.notifyRowClick({
        rowId: s,
        row: a
      });
    }, e.prototype.showProgress = function() {
      var t = this.adapter.getTableHeaderHeight(), s = this.adapter.getTableContainerHeight() - t, a = t;
      this.adapter.setProgressIndicatorStyles({
        height: s + "px",
        top: a + "px"
      }), this.adapter.addClass(_n.IN_PROGRESS);
    }, e.prototype.hideProgress = function() {
      this.adapter.removeClass(_n.IN_PROGRESS);
    }, e.prototype.setHeaderRowCheckboxState = function() {
      this.adapter.getSelectedRowCount() === 0 ? (this.adapter.setHeaderRowCheckboxChecked(!1), this.adapter.setHeaderRowCheckboxIndeterminate(!1)) : this.adapter.getSelectedRowCount() === this.adapter.getRowCount() ? (this.adapter.setHeaderRowCheckboxChecked(!0), this.adapter.setHeaderRowCheckboxIndeterminate(!1)) : (this.adapter.setHeaderRowCheckboxIndeterminate(!0), this.adapter.setHeaderRowCheckboxChecked(!1));
    }, e.prototype.selectRowAtIndex = function(t, s) {
      s ? (this.adapter.addClassAtRowIndex(t, _n.ROW_SELECTED), this.adapter.setAttributeAtRowIndex(t, Pn.ARIA_SELECTED, "true")) : (this.adapter.removeClassAtRowIndex(t, _n.ROW_SELECTED), this.adapter.setAttributeAtRowIndex(t, Pn.ARIA_SELECTED, "false"));
    }, e;
  }(wt)
);
const mp = (n) => ({}), qi = (n) => ({}), pp = (n) => ({}), zi = (n) => ({});
function Xi(n) {
  let e, t, s, a, r;
  const o = (
    /*#slots*/
    n[36].progress
  ), i = Pe(
    o,
    n,
    /*$$scope*/
    n[35],
    zi
  );
  return {
    c() {
      e = Z("div"), t = Z("div"), s = $(), i && i.c(), R(t, "class", "mdc-data-table__scrim"), R(e, "class", "mdc-data-table__progress-indicator"), R(e, "style", a = Object.entries(
        /*progressIndicatorStyles*/
        n[13]
      ).map(Zi).join(" "));
    },
    m(d, c) {
      G(d, e, c), U(e, t), U(e, s), i && i.m(e, null), r = !0;
    },
    p(d, c) {
      i && i.p && (!r || c[1] & /*$$scope*/
      16) && Me(
        i,
        o,
        d,
        /*$$scope*/
        d[35],
        r ? ve(
          o,
          /*$$scope*/
          d[35],
          c,
          pp
        ) : Re(
          /*$$scope*/
          d[35]
        ),
        zi
      ), (!r || c[0] & /*progressIndicatorStyles*/
      8192 && a !== (a = Object.entries(
        /*progressIndicatorStyles*/
        d[13]
      ).map(Zi).join(" "))) && R(e, "style", a);
    },
    i(d) {
      r || (L(i, d), r = !0);
    },
    o(d) {
      h(i, d), r = !1;
    },
    d(d) {
      d && F(e), i && i.d(d);
    }
  };
}
function _p(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m, p;
  const D = (
    /*#slots*/
    n[36].default
  ), _ = Pe(
    D,
    n,
    /*$$scope*/
    n[35],
    null
  );
  let A = [
    {
      class: a = le({
        [
          /*table$class*/
          n[6]
        ]: !0,
        "mdc-data-table__table": !0
      })
    },
    Je(
      /*$$restProps*/
      n[25],
      "table$"
    )
  ], b = {};
  for (let v = 0; v < A.length; v += 1)
    b = te(b, A[v]);
  let S = [
    {
      class: o = le({
        [
          /*container$class*/
          n[4]
        ]: !0,
        "mdc-data-table__table-container": !0
      })
    },
    Je(
      /*$$restProps*/
      n[25],
      "container$"
    )
  ], f = {};
  for (let v = 0; v < S.length; v += 1)
    f = te(f, S[v]);
  let E = (
    /*$$slots*/
    n[24].progress && Xi(n)
  );
  const y = (
    /*#slots*/
    n[36].paginate
  ), I = Pe(
    y,
    n,
    /*$$scope*/
    n[35],
    qi
  );
  let N = [
    {
      class: l = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-data-table": !0,
        "mdc-data-table--sticky-header": (
          /*stickyHeader*/
          n[2]
        ),
        .../*internalClasses*/
        n[12]
      })
    },
    jt(
      /*$$restProps*/
      n[25],
      ["container$", "table$"]
    )
  ], j = {};
  for (let v = 0; v < N.length; v += 1)
    j = te(j, N[v]);
  return {
    c() {
      e = Z("div"), t = Z("div"), s = Z("table"), _ && _.c(), d = $(), E && E.c(), c = $(), I && I.c(), Ae(s, b), Ae(t, f), Ae(e, j);
    },
    m(v, O) {
      G(v, e, O), U(e, t), U(t, s), _ && _.m(s, null), n[37](t), U(e, d), E && E.m(e, null), U(e, c), I && I.m(e, null), n[38](e), u = !0, m || (p = [
        De(r = rt.call(
          null,
          s,
          /*table$use*/
          n[5]
        )),
        De(i = rt.call(
          null,
          t,
          /*container$use*/
          n[3]
        )),
        De(C = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[15].call(null, e)
        ),
        ce(
          e,
          "SMUICheckbox:mount",
          /*SMUICheckbox_mount_handler*/
          n[39]
        ),
        ce(
          e,
          "SMUIDataTableHeader:mount",
          /*handleHeaderMount*/
          n[19]
        ),
        ce(
          e,
          "SMUIDataTableHeader:unmount",
          /*SMUIDataTableHeader_unmount_handler*/
          n[40]
        ),
        ce(
          e,
          "SMUIDataTableBody:mount",
          /*handleBodyMount*/
          n[20]
        ),
        ce(
          e,
          "SMUIDataTableBody:unmount",
          /*SMUIDataTableBody_unmount_handler*/
          n[41]
        ),
        ce(
          e,
          "SMUIDataTableHeaderCheckbox:change",
          /*SMUIDataTableHeaderCheckbox_change_handler*/
          n[42]
        ),
        ce(
          e,
          "SMUIDataTableHeader:click",
          /*handleHeaderRowClick*/
          n[22]
        ),
        ce(
          e,
          "SMUIDataTableRow:click",
          /*handleRowClick*/
          n[23]
        ),
        ce(
          e,
          "SMUIDataTableBodyCheckbox:change",
          /*handleBodyCheckboxChange*/
          n[21]
        )
      ], m = !0);
    },
    p(v, O) {
      _ && _.p && (!u || O[1] & /*$$scope*/
      16) && Me(
        _,
        D,
        v,
        /*$$scope*/
        v[35],
        u ? ve(
          D,
          /*$$scope*/
          v[35],
          O,
          null
        ) : Re(
          /*$$scope*/
          v[35]
        ),
        null
      ), Ae(s, b = Ee(A, [
        (!u || O[0] & /*table$class*/
        64 && a !== (a = le({
          [
            /*table$class*/
            v[6]
          ]: !0,
          "mdc-data-table__table": !0
        }))) && { class: a },
        O[0] & /*$$restProps*/
        33554432 && Je(
          /*$$restProps*/
          v[25],
          "table$"
        )
      ])), r && Fe(r.update) && O[0] & /*table$use*/
      32 && r.update.call(
        null,
        /*table$use*/
        v[5]
      ), Ae(t, f = Ee(S, [
        (!u || O[0] & /*container$class*/
        16 && o !== (o = le({
          [
            /*container$class*/
            v[4]
          ]: !0,
          "mdc-data-table__table-container": !0
        }))) && { class: o },
        O[0] & /*$$restProps*/
        33554432 && Je(
          /*$$restProps*/
          v[25],
          "container$"
        )
      ])), i && Fe(i.update) && O[0] & /*container$use*/
      8 && i.update.call(
        null,
        /*container$use*/
        v[3]
      ), /*$$slots*/
      v[24].progress ? E ? (E.p(v, O), O[0] & /*$$slots*/
      16777216 && L(E, 1)) : (E = Xi(v), E.c(), L(E, 1), E.m(e, c)) : E && (he(), h(E, 1, 1, () => {
        E = null;
      }), ye()), I && I.p && (!u || O[1] & /*$$scope*/
      16) && Me(
        I,
        y,
        v,
        /*$$scope*/
        v[35],
        u ? ve(
          y,
          /*$$scope*/
          v[35],
          O,
          mp
        ) : Re(
          /*$$scope*/
          v[35]
        ),
        qi
      ), Ae(e, j = Ee(N, [
        (!u || O[0] & /*className, stickyHeader, internalClasses*/
        4102 && l !== (l = le({
          [
            /*className*/
            v[1]
          ]: !0,
          "mdc-data-table": !0,
          "mdc-data-table--sticky-header": (
            /*stickyHeader*/
            v[2]
          ),
          .../*internalClasses*/
          v[12]
        }))) && { class: l },
        O[0] & /*$$restProps*/
        33554432 && jt(
          /*$$restProps*/
          v[25],
          ["container$", "table$"]
        )
      ])), C && Fe(C.update) && O[0] & /*use*/
      1 && C.update.call(
        null,
        /*use*/
        v[0]
      );
    },
    i(v) {
      u || (L(_, v), L(E), L(I, v), u = !0);
    },
    o(v) {
      h(_, v), h(E), h(I, v), u = !1;
    },
    d(v) {
      v && F(e), _ && _.d(v), n[37](null), E && E.d(), I && I.d(v), n[38](null), m = !1, ze(p);
    }
  };
}
const Zi = ([n, e]) => `${n}: ${e};`;
function Ip(n, e, t) {
  const s = [
    "use",
    "class",
    "stickyHeader",
    "sortable",
    "sort",
    "sortDirection",
    "sortAscendingAriaLabel",
    "sortDescendingAriaLabel",
    "container$use",
    "container$class",
    "table$use",
    "table$class",
    "layout",
    "getElement"
  ];
  let a = Te(e, s), r, o, i, { $$slots: d = {}, $$scope: c } = e;
  const l = cd(d), { closest: C } = Ls, u = lt(tt());
  let { use: m = [] } = e, { class: p = "" } = e, { stickyHeader: D = !1 } = e, { sortable: _ = !1 } = e, { sort: A = null } = e, { sortDirection: b = "ascending" } = e, { sortAscendingAriaLabel: S = "sorted, ascending" } = e, { sortDescendingAriaLabel: f = "sorted, descending" } = e, { container$use: E = [] } = e, { container$class: y = "" } = e, { table$use: I = [] } = e, { table$class: N = "" } = e, j, v, O, M, P, g = {}, W = { height: "auto", top: "initial" }, B = Qe("SMUI:addLayoutListener"), H, w = !1, T = Ft(!1);
  Ye(n, T, (k) => t(34, r = k));
  let Y = Ft(A);
  Ye(n, Y, (k) => t(45, i = k));
  let Ie = Ft(b);
  Ye(n, Ie, (k) => t(44, o = k)), qe("SMUI:checkbox:context", "data-table"), qe("SMUI:linear-progress:context", "data-table"), qe("SMUI:linear-progress:closed", T), qe("SMUI:data-table:sortable", _), qe("SMUI:data-table:sort", Y), qe("SMUI:data-table:sortDirection", Ie), qe("SMUI:data-table:sortAscendingAriaLabel", S), qe("SMUI:data-table:sortDescendingAriaLabel", f), B && (H = B(se));
  let Ge;
  at(() => (t(7, v = new up({
    addClass: We,
    removeClass: Be,
    getHeaderCellElements: () => {
      var k;
      return (k = M == null ? void 0 : M.cells.map((ie) => ie.element)) !== null && k !== void 0 ? k : [];
    },
    getHeaderCellCount: () => {
      var k;
      return (k = M == null ? void 0 : M.cells.length) !== null && k !== void 0 ? k : 0;
    },
    getAttributeByHeaderCellIndex: (k, ie) => {
      var Ke;
      return (Ke = M == null ? void 0 : M.orderedCells[k].getAttr(ie)) !== null && Ke !== void 0 ? Ke : null;
    },
    setAttributeByHeaderCellIndex: (k, ie, Ke) => {
      M == null || M.orderedCells[k].addAttr(ie, Ke);
    },
    setClassNameByHeaderCellIndex: (k, ie) => {
      M == null || M.orderedCells[k].addClass(ie);
    },
    removeClassNameByHeaderCellIndex: (k, ie) => {
      M == null || M.orderedCells[k].removeClass(ie);
    },
    notifySortAction: (k) => {
      t(26, A = k.columnId), t(27, b = k.sortValue), Oe(V(), "SMUIDataTable:sorted", k, void 0, !0);
    },
    getTableContainerHeight: () => O.getBoundingClientRect().height,
    getTableHeaderHeight: () => {
      const k = V().querySelector(".mdc-data-table__header-row");
      if (!k)
        throw new Error("MDCDataTable: Table header element not found.");
      return k.getBoundingClientRect().height;
    },
    setProgressIndicatorStyles: (k) => {
      t(13, W = k);
    },
    addClassAtRowIndex: (k, ie) => {
      P == null || P.orderedRows[k].addClass(ie);
    },
    getRowCount: () => {
      var k;
      return (k = P == null ? void 0 : P.rows.length) !== null && k !== void 0 ? k : 0;
    },
    getRowElements: () => {
      var k;
      return (k = P == null ? void 0 : P.rows.map((ie) => ie.element)) !== null && k !== void 0 ? k : [];
    },
    getRowIdAtIndex: (k) => {
      var ie;
      return (ie = P == null ? void 0 : P.orderedRows[k].rowId) !== null && ie !== void 0 ? ie : null;
    },
    getRowIndexByChildElement: (k) => {
      var ie;
      return (ie = P == null ? void 0 : P.orderedRows.map((Ke) => Ke.element).indexOf(C(k, ".mdc-data-table__row"))) !== null && ie !== void 0 ? ie : -1;
    },
    getSelectedRowCount: () => {
      var k;
      return (k = P == null ? void 0 : P.rows.filter((ie) => ie.selected).length) !== null && k !== void 0 ? k : 0;
    },
    isCheckboxAtRowIndexChecked: (k) => {
      const ie = P == null ? void 0 : P.orderedRows[k].checkbox;
      return ie ? ie.checked : !1;
    },
    isHeaderRowCheckboxChecked: () => {
      const k = M == null ? void 0 : M.checkbox;
      return k ? k.checked : !1;
    },
    isRowsSelectable: () => !!V().querySelector(".mdc-data-table__row-checkbox") || !!V().querySelector(".mdc-data-table__header-row-checkbox"),
    notifyRowSelectionChanged: (k) => {
      const ie = P == null ? void 0 : P.orderedRows[k.rowIndex];
      ie && Oe(
        V(),
        "SMUIDataTable:rowSelectionChanged",
        {
          row: ie.element,
          rowId: ie.rowId,
          rowIndex: k.rowIndex,
          selected: k.selected
        },
        void 0,
        !0
      );
    },
    notifySelectedAll: () => {
      xe(!1), Oe(V(), "SMUIDataTable:selectedAll", void 0, void 0, !0);
    },
    notifyUnselectedAll: () => {
      xe(!1), Oe(V(), "SMUIDataTable:unselectedAll", void 0, void 0, !0);
    },
    notifyRowClick: (k) => {
      Oe(V(), "SMUIDataTable:rowClick", k, void 0, !0);
    },
    registerHeaderRowCheckbox: () => {
    },
    // Handled automatically.
    registerRowCheckboxes: () => {
    },
    // Handled automatically.
    removeClassAtRowIndex: (k, ie) => {
      P == null || P.orderedRows[k].removeClass(ie);
    },
    setAttributeAtRowIndex: (k, ie, Ke) => {
      P == null || P.orderedRows[k].addAttr(ie, Ke);
    },
    setHeaderRowCheckboxChecked: (k) => {
      const ie = M == null ? void 0 : M.checkbox;
      ie && (ie.checked = k);
    },
    setHeaderRowCheckboxIndeterminate: xe,
    setRowCheckboxCheckedAtIndex: (k, ie) => {
      const Ke = P == null ? void 0 : P.orderedRows[k].checkbox;
      Ke && (Ke.checked = ie);
    },
    setSortStatusLabelByHeaderCellIndex: (k, ie) => {
    }
    // Handled automatically.
  })), v.init(), v.layout(), t(14, w = !0), () => {
    v.destroy();
  })), an(() => {
    H && H();
  });
  function ke(k) {
    t(10, M = k.detail);
  }
  function ae(k) {
    t(11, P = k.detail);
  }
  function _e(k) {
    v && v.handleRowCheckboxChange(k);
  }
  function We(k) {
    g[k] || t(12, g[k] = !0, g);
  }
  function Be(k) {
    (!(k in g) || g[k]) && t(12, g[k] = !1, g);
  }
  function xe(k) {
    const ie = M == null ? void 0 : M.checkbox;
    ie && (ie.indeterminate = k);
  }
  function it(k) {
    if (!v || !k.detail.target)
      return;
    const ie = C(k.detail.target, ".mdc-data-table__header-cell--with-sort");
    ie && J(ie);
  }
  function oe(k) {
    if (!v || !k.detail.target)
      return;
    const ie = C(k.detail.target, ".mdc-data-table__row");
    ie && v && v.handleRowClick({ rowId: k.detail.rowId, row: ie });
  }
  function J(k) {
    var ie, Ke;
    const re = (ie = M == null ? void 0 : M.orderedCells) !== null && ie !== void 0 ? ie : [], Ue = re.map((ne) => ne.element).indexOf(k);
    if (Ue === -1)
      return;
    const At = (Ke = re[Ue].columnId) !== null && Ke !== void 0 ? Ke : null;
    v.handleSortAction({ columnId: At, columnIndex: Ue, headerCell: k });
  }
  function se() {
    return v.layout();
  }
  function V() {
    return j;
  }
  function ge(k) {
    de[k ? "unshift" : "push"](() => {
      O = k, t(9, O);
    });
  }
  function Q(k) {
    de[k ? "unshift" : "push"](() => {
      j = k, t(8, j);
    });
  }
  const pe = () => v && w && v.layout(), $e = () => t(10, M = void 0), Lt = () => t(11, P = void 0), Ht = () => v && v.handleHeaderRowCheckboxChange();
  return n.$$set = (k) => {
    e = te(te({}, e), ct(k)), t(25, a = Te(e, s)), "use" in k && t(0, m = k.use), "class" in k && t(1, p = k.class), "stickyHeader" in k && t(2, D = k.stickyHeader), "sortable" in k && t(28, _ = k.sortable), "sort" in k && t(26, A = k.sort), "sortDirection" in k && t(27, b = k.sortDirection), "sortAscendingAriaLabel" in k && t(29, S = k.sortAscendingAriaLabel), "sortDescendingAriaLabel" in k && t(30, f = k.sortDescendingAriaLabel), "container$use" in k && t(3, E = k.container$use), "container$class" in k && t(4, y = k.container$class), "table$use" in k && t(5, I = k.table$use), "table$class" in k && t(6, N = k.table$class), "$$scope" in k && t(35, c = k.$$scope);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*sort*/
    67108864 && Fn(Y, i = A, i), n.$$.dirty[0] & /*sortDirection*/
    134217728 && Fn(Ie, o = b, o), n.$$.dirty[0] & /*instance*/
    128 | n.$$.dirty[1] & /*previousProgressClosed, $progressClosed*/
    12 && l.progress && v && Ge !== r && (t(33, Ge = r), r ? v.hideProgress() : v.showProgress());
  }, [
    m,
    p,
    D,
    E,
    y,
    I,
    N,
    v,
    j,
    O,
    M,
    P,
    g,
    W,
    w,
    u,
    T,
    Y,
    Ie,
    ke,
    ae,
    _e,
    it,
    oe,
    l,
    a,
    A,
    b,
    _,
    S,
    f,
    se,
    V,
    Ge,
    r,
    c,
    d,
    ge,
    Q,
    pe,
    $e,
    Lt,
    Ht
  ];
}
class vd extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      Ip,
      _p,
      Ce,
      {
        use: 0,
        class: 1,
        stickyHeader: 2,
        sortable: 28,
        sort: 26,
        sortDirection: 27,
        sortAscendingAriaLabel: 29,
        sortDescendingAriaLabel: 30,
        container$use: 3,
        container$class: 4,
        table$use: 5,
        table$class: 6,
        layout: 31,
        getElement: 32
      },
      null,
      [-1, -1]
    );
  }
  get layout() {
    return this.$$.ctx[31];
  }
  get getElement() {
    return this.$$.ctx[32];
  }
}
function Dp(n) {
  let e, t, s, a, r;
  const o = (
    /*#slots*/
    n[10].default
  ), i = Pe(
    o,
    n,
    /*$$scope*/
    n[9],
    null
  );
  let d = [
    /*$$restProps*/
    n[7]
  ], c = {};
  for (let l = 0; l < d.length; l += 1)
    c = te(c, d[l]);
  return {
    c() {
      e = Z("thead"), i && i.c(), Ae(e, c);
    },
    m(l, C) {
      G(l, e, C), i && i.m(e, null), n[11](e), s = !0, a || (r = [
        De(t = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[3].call(null, e)
        ),
        ce(
          e,
          "SMUICheckbox:mount",
          /*handleCheckboxMount*/
          n[4]
        ),
        ce(
          e,
          "SMUICheckbox:unmount",
          /*SMUICheckbox_unmount_handler*/
          n[12]
        ),
        ce(
          e,
          "SMUIDataTableCell:mount",
          /*handleCellMount*/
          n[5]
        ),
        ce(
          e,
          "SMUIDataTableCell:unmount",
          /*handleCellUnmount*/
          n[6]
        )
      ], a = !0);
    },
    p(l, [C]) {
      i && i.p && (!s || C & /*$$scope*/
      512) && Me(
        i,
        o,
        l,
        /*$$scope*/
        l[9],
        s ? ve(
          o,
          /*$$scope*/
          l[9],
          C,
          null
        ) : Re(
          /*$$scope*/
          l[9]
        ),
        null
      ), Ae(e, c = Ee(d, [C & /*$$restProps*/
      128 && /*$$restProps*/
      l[7]])), t && Fe(t.update) && C & /*use*/
      1 && t.update.call(
        null,
        /*use*/
        l[0]
      );
    },
    i(l) {
      s || (L(i, l), s = !0);
    },
    o(l) {
      h(i, l), s = !1;
    },
    d(l) {
      l && F(e), i && i.d(l), n[11](null), a = !1, ze(r);
    }
  };
}
function bp(n, e, t) {
  const s = ["use", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  const i = lt(tt());
  let { use: d = [] } = e, c, l, C = [];
  const u = /* @__PURE__ */ new WeakMap();
  qe("SMUI:data-table:row:header", !0), at(() => {
    const f = {
      get cells() {
        return C;
      },
      get orderedCells() {
        return _();
      },
      get checkbox() {
        return l;
      }
    };
    return Oe(A(), "SMUIDataTableHeader:mount", f), () => {
      Oe(A(), "SMUIDataTableHeader:unmount", f);
    };
  });
  function m(f) {
    t(2, l = f.detail);
  }
  function p(f) {
    C.push(f.detail), u.set(f.detail.element, f.detail), f.stopPropagation();
  }
  function D(f) {
    const E = C.indexOf(f.detail);
    E !== -1 && (C.splice(E, 1), C = C), u.delete(f.detail.element), f.stopPropagation();
  }
  function _() {
    return [...A().querySelectorAll(".mdc-data-table__header-cell")].map((f) => u.get(f)).filter((f) => f && f._smui_data_table_header_cell_accessor);
  }
  function A() {
    return c;
  }
  function b(f) {
    de[f ? "unshift" : "push"](() => {
      c = f, t(1, c);
    });
  }
  const S = () => t(2, l = void 0);
  return n.$$set = (f) => {
    e = te(te({}, e), ct(f)), t(7, a = Te(e, s)), "use" in f && t(0, d = f.use), "$$scope" in f && t(9, o = f.$$scope);
  }, [
    d,
    c,
    l,
    i,
    m,
    p,
    D,
    a,
    A,
    o,
    r,
    b,
    S
  ];
}
class Md extends me {
  constructor(e) {
    super(), ue(this, e, bp, Dp, Ce, { use: 0, getElement: 8 });
  }
  get getElement() {
    return this.$$.ctx[8];
  }
}
function fp(n) {
  let e, t, s, a, r, o;
  const i = (
    /*#slots*/
    n[9].default
  ), d = Pe(
    i,
    n,
    /*$$scope*/
    n[8],
    null
  );
  let c = [
    {
      class: t = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-data-table__content": !0
      })
    },
    /*$$restProps*/
    n[6]
  ], l = {};
  for (let C = 0; C < c.length; C += 1)
    l = te(l, c[C]);
  return {
    c() {
      e = Z("tbody"), d && d.c(), Ae(e, l);
    },
    m(C, u) {
      G(C, e, u), d && d.m(e, null), n[10](e), a = !0, r || (o = [
        De(s = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[3].call(null, e)
        ),
        ce(
          e,
          "SMUIDataTableRow:mount",
          /*handleRowMount*/
          n[4]
        ),
        ce(
          e,
          "SMUIDataTableRow:unmount",
          /*handleRowUnmount*/
          n[5]
        )
      ], r = !0);
    },
    p(C, [u]) {
      d && d.p && (!a || u & /*$$scope*/
      256) && Me(
        d,
        i,
        C,
        /*$$scope*/
        C[8],
        a ? ve(
          i,
          /*$$scope*/
          C[8],
          u,
          null
        ) : Re(
          /*$$scope*/
          C[8]
        ),
        null
      ), Ae(e, l = Ee(c, [
        (!a || u & /*className*/
        2 && t !== (t = le({
          [
            /*className*/
            C[1]
          ]: !0,
          "mdc-data-table__content": !0
        }))) && { class: t },
        u & /*$$restProps*/
        64 && /*$$restProps*/
        C[6]
      ])), s && Fe(s.update) && u & /*use*/
      1 && s.update.call(
        null,
        /*use*/
        C[0]
      );
    },
    i(C) {
      a || (L(d, C), a = !0);
    },
    o(C) {
      h(d, C), a = !1;
    },
    d(C) {
      C && F(e), d && d.d(C), n[10](null), r = !1, ze(o);
    }
  };
}
function Ap(n, e, t) {
  const s = ["use", "class", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  const i = lt(tt());
  let { use: d = [] } = e, { class: c = "" } = e, l, C = [];
  const u = /* @__PURE__ */ new WeakMap();
  qe("SMUI:data-table:row:header", !1), at(() => {
    const b = {
      get rows() {
        return C;
      },
      get orderedRows() {
        return D();
      }
    };
    return Oe(_(), "SMUIDataTableBody:mount", b), () => {
      Oe(_(), "SMUIDataTableBody:unmount", b);
    };
  });
  function m(b) {
    C.push(b.detail), u.set(b.detail.element, b.detail), b.stopPropagation();
  }
  function p(b) {
    const S = C.indexOf(b.detail);
    S !== -1 && (C.splice(S, 1), C = C), u.delete(b.detail.element), b.stopPropagation();
  }
  function D() {
    return [..._().querySelectorAll(".mdc-data-table__row")].map((b) => u.get(b)).filter((b) => b && b._smui_data_table_row_accessor);
  }
  function _() {
    return l;
  }
  function A(b) {
    de[b ? "unshift" : "push"](() => {
      l = b, t(2, l);
    });
  }
  return n.$$set = (b) => {
    e = te(te({}, e), ct(b)), t(6, a = Te(e, s)), "use" in b && t(0, d = b.use), "class" in b && t(1, c = b.class), "$$scope" in b && t(8, o = b.$$scope);
  }, [
    d,
    c,
    l,
    i,
    m,
    p,
    a,
    _,
    o,
    r,
    A
  ];
}
class Rd extends me {
  constructor(e) {
    super(), ue(this, e, Ap, fp, Ce, { use: 0, class: 1, getElement: 7 });
  }
  get getElement() {
    return this.$$.ctx[7];
  }
}
function Ep(n) {
  let e, t, s, a, r, o, i;
  const d = (
    /*#slots*/
    n[15].default
  ), c = Pe(
    d,
    n,
    /*$$scope*/
    n[14],
    null
  );
  let l = [
    {
      class: t = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-data-table__header-row": (
          /*header*/
          n[7]
        ),
        "mdc-data-table__row": !/*header*/
        n[7],
        "mdc-data-table__row--selected": !/*header*/
        n[7] && /*checkbox*/
        n[3] && /*checkbox*/
        n[3].checked,
        .../*internalClasses*/
        n[4]
      })
    },
    {
      "aria-selected": s = /*checkbox*/
      n[3] ? (
        /*checkbox*/
        n[3].checked ? "true" : "false"
      ) : void 0
    },
    /*internalAttrs*/
    n[5],
    /*$$restProps*/
    n[11]
  ], C = {};
  for (let u = 0; u < l.length; u += 1)
    C = te(C, l[u]);
  return {
    c() {
      e = Z("tr"), c && c.c(), Ae(e, C);
    },
    m(u, m) {
      G(u, e, m), c && c.m(e, null), n[16](e), r = !0, o || (i = [
        De(a = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[6].call(null, e)
        ),
        ce(
          e,
          "click",
          /*click_handler*/
          n[17]
        ),
        ce(
          e,
          "SMUICheckbox:mount",
          /*handleCheckboxMount*/
          n[8]
        ),
        ce(
          e,
          "SMUICheckbox:unmount",
          /*SMUICheckbox_unmount_handler*/
          n[18]
        )
      ], o = !0);
    },
    p(u, [m]) {
      c && c.p && (!r || m & /*$$scope*/
      16384) && Me(
        c,
        d,
        u,
        /*$$scope*/
        u[14],
        r ? ve(
          d,
          /*$$scope*/
          u[14],
          m,
          null
        ) : Re(
          /*$$scope*/
          u[14]
        ),
        null
      ), Ae(e, C = Ee(l, [
        (!r || m & /*className, checkbox, internalClasses*/
        26 && t !== (t = le({
          [
            /*className*/
            u[1]
          ]: !0,
          "mdc-data-table__header-row": (
            /*header*/
            u[7]
          ),
          "mdc-data-table__row": !/*header*/
          u[7],
          "mdc-data-table__row--selected": !/*header*/
          u[7] && /*checkbox*/
          u[3] && /*checkbox*/
          u[3].checked,
          .../*internalClasses*/
          u[4]
        }))) && { class: t },
        (!r || m & /*checkbox*/
        8 && s !== (s = /*checkbox*/
        u[3] ? (
          /*checkbox*/
          u[3].checked ? "true" : "false"
        ) : void 0)) && { "aria-selected": s },
        m & /*internalAttrs*/
        32 && /*internalAttrs*/
        u[5],
        m & /*$$restProps*/
        2048 && /*$$restProps*/
        u[11]
      ])), a && Fe(a.update) && m & /*use*/
      1 && a.update.call(
        null,
        /*use*/
        u[0]
      );
    },
    i(u) {
      r || (L(c, u), r = !0);
    },
    o(u) {
      h(c, u), r = !1;
    },
    d(u) {
      u && F(e), c && c.d(u), n[16](null), o = !1, ze(i);
    }
  };
}
let Op = 0;
function Sp(n, e, t) {
  const s = ["use", "class", "rowId", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  const i = lt(tt());
  let { use: d = [] } = e, { class: c = "" } = e, { rowId: l = "SMUI-data-table-row-" + Op++ } = e, C, u, m = {}, p = {}, D = Qe("SMUI:data-table:row:header");
  at(() => {
    const O = D ? {
      _smui_data_table_row_accessor: !1,
      get element() {
        return I();
      },
      get checkbox() {
        return u;
      },
      get rowId() {
      },
      get selected() {
        var M;
        return (M = u && u.checked) !== null && M !== void 0 ? M : !1;
      },
      addClass: A,
      removeClass: b,
      getAttr: S,
      addAttr: f
    } : {
      _smui_data_table_row_accessor: !0,
      get element() {
        return I();
      },
      get checkbox() {
        return u;
      },
      get rowId() {
        return l;
      },
      get selected() {
        var M;
        return (M = u && u.checked) !== null && M !== void 0 ? M : !1;
      },
      addClass: A,
      removeClass: b,
      getAttr: S,
      addAttr: f
    };
    return Oe(I(), "SMUIDataTableRow:mount", O), () => {
      Oe(I(), "SMUIDataTableRow:unmount", O);
    };
  });
  function _(O) {
    t(3, u = O.detail);
  }
  function A(O) {
    m[O] || t(4, m[O] = !0, m);
  }
  function b(O) {
    (!(O in m) || m[O]) && t(4, m[O] = !1, m);
  }
  function S(O) {
    var M;
    return O in p ? (M = p[O]) !== null && M !== void 0 ? M : null : I().getAttribute(O);
  }
  function f(O, M) {
    p[O] !== M && t(5, p[O] = M, p);
  }
  function E(O) {
    Oe(I(), "SMUIDataTableHeader:click", O);
  }
  function y(O) {
    Oe(I(), "SMUIDataTableRow:click", { rowId: l, target: O.target });
  }
  function I() {
    return C;
  }
  function N(O) {
    de[O ? "unshift" : "push"](() => {
      C = O, t(2, C);
    });
  }
  const j = (O) => D ? E(O) : y(O), v = () => t(3, u = void 0);
  return n.$$set = (O) => {
    e = te(te({}, e), ct(O)), t(11, a = Te(e, s)), "use" in O && t(0, d = O.use), "class" in O && t(1, c = O.class), "rowId" in O && t(12, l = O.rowId), "$$scope" in O && t(14, o = O.$$scope);
  }, [
    d,
    c,
    C,
    u,
    m,
    p,
    i,
    D,
    _,
    E,
    y,
    a,
    l,
    I,
    o,
    r,
    N,
    j,
    v
  ];
}
class Ca extends me {
  constructor(e) {
    super(), ue(this, e, Sp, Ep, Ce, {
      use: 0,
      class: 1,
      rowId: 12,
      getElement: 13
    });
  }
  get getElement() {
    return this.$$.ctx[13];
  }
}
function Lp(n) {
  let e, t, s, a, r, o;
  const i = (
    /*#slots*/
    n[22].default
  ), d = Pe(
    i,
    n,
    /*$$scope*/
    n[21],
    null
  );
  let c = [
    {
      class: t = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-data-table__cell": !0,
        "mdc-data-table__cell--numeric": (
          /*numeric*/
          n[2]
        ),
        "mdc-data-table__cell--checkbox": (
          /*checkbox*/
          n[3]
        ),
        .../*internalClasses*/
        n[7]
      })
    },
    /*internalAttrs*/
    n[8],
    /*$$restProps*/
    n[19]
  ], l = {};
  for (let C = 0; C < c.length; C += 1)
    l = te(l, c[C]);
  return {
    c() {
      e = Z("td"), d && d.c(), Ae(e, l);
    },
    m(C, u) {
      G(C, e, u), d && d.m(e, null), n[25](e), a = !0, r || (o = [
        De(s = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[11].call(null, e)
        ),
        ce(
          e,
          "change",
          /*change_handler_1*/
          n[26]
        )
      ], r = !0);
    },
    p(C, u) {
      d && d.p && (!a || u & /*$$scope*/
      2097152) && Me(
        d,
        i,
        C,
        /*$$scope*/
        C[21],
        a ? ve(
          i,
          /*$$scope*/
          C[21],
          u,
          null
        ) : Re(
          /*$$scope*/
          C[21]
        ),
        null
      ), Ae(e, l = Ee(c, [
        (!a || u & /*className, numeric, checkbox, internalClasses*/
        142 && t !== (t = le({
          [
            /*className*/
            C[1]
          ]: !0,
          "mdc-data-table__cell": !0,
          "mdc-data-table__cell--numeric": (
            /*numeric*/
            C[2]
          ),
          "mdc-data-table__cell--checkbox": (
            /*checkbox*/
            C[3]
          ),
          .../*internalClasses*/
          C[7]
        }))) && { class: t },
        u & /*internalAttrs*/
        256 && /*internalAttrs*/
        C[8],
        u & /*$$restProps*/
        524288 && /*$$restProps*/
        C[19]
      ])), s && Fe(s.update) && u & /*use*/
      1 && s.update.call(
        null,
        /*use*/
        C[0]
      );
    },
    i(C) {
      a || (L(d, C), a = !0);
    },
    o(C) {
      h(d, C), a = !1;
    },
    d(C) {
      C && F(e), d && d.d(C), n[25](null), r = !1, ze(o);
    }
  };
}
function gp(n) {
  let e, t, s, a, r, o, i, d, c;
  const l = [yp, hp], C = [];
  function u(D, _) {
    return (
      /*sortable*/
      D[5] ? 0 : 1
    );
  }
  t = u(n), s = C[t] = l[t](n);
  let m = [
    {
      class: a = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-data-table__header-cell": !0,
        "mdc-data-table__header-cell--numeric": (
          /*numeric*/
          n[2]
        ),
        "mdc-data-table__header-cell--checkbox": (
          /*checkbox*/
          n[3]
        ),
        "mdc-data-table__header-cell--with-sort": (
          /*sortable*/
          n[5]
        ),
        "mdc-data-table__header-cell--sorted": (
          /*sortable*/
          n[5] && /*$sort*/
          n[9] === /*columnId*/
          n[4]
        ),
        .../*internalClasses*/
        n[7]
      })
    },
    { role: "columnheader" },
    { scope: "col" },
    { "data-column-id": (
      /*columnId*/
      n[4]
    ) },
    {
      "aria-sort": r = /*sortable*/
      n[5] ? (
        /*$sort*/
        n[9] === /*columnId*/
        n[4] ? (
          /*$sortDirection*/
          n[10]
        ) : "none"
      ) : void 0
    },
    /*internalAttrs*/
    n[8],
    /*$$restProps*/
    n[19]
  ], p = {};
  for (let D = 0; D < m.length; D += 1)
    p = te(p, m[D]);
  return {
    c() {
      e = Z("th"), s.c(), Ae(e, p);
    },
    m(D, _) {
      G(D, e, _), C[t].m(e, null), n[23](e), i = !0, d || (c = [
        De(o = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[11].call(null, e)
        ),
        ce(
          e,
          "change",
          /*change_handler*/
          n[24]
        )
      ], d = !0);
    },
    p(D, _) {
      let A = t;
      t = u(D), t === A ? C[t].p(D, _) : (he(), h(C[A], 1, 1, () => {
        C[A] = null;
      }), ye(), s = C[t], s ? s.p(D, _) : (s = C[t] = l[t](D), s.c()), L(s, 1), s.m(e, null)), Ae(e, p = Ee(m, [
        (!i || _ & /*className, numeric, checkbox, sortable, $sort, columnId, internalClasses*/
        702 && a !== (a = le({
          [
            /*className*/
            D[1]
          ]: !0,
          "mdc-data-table__header-cell": !0,
          "mdc-data-table__header-cell--numeric": (
            /*numeric*/
            D[2]
          ),
          "mdc-data-table__header-cell--checkbox": (
            /*checkbox*/
            D[3]
          ),
          "mdc-data-table__header-cell--with-sort": (
            /*sortable*/
            D[5]
          ),
          "mdc-data-table__header-cell--sorted": (
            /*sortable*/
            D[5] && /*$sort*/
            D[9] === /*columnId*/
            D[4]
          ),
          .../*internalClasses*/
          D[7]
        }))) && { class: a },
        { role: "columnheader" },
        { scope: "col" },
        (!i || _ & /*columnId*/
        16) && { "data-column-id": (
          /*columnId*/
          D[4]
        ) },
        (!i || _ & /*sortable, $sort, columnId, $sortDirection*/
        1584 && r !== (r = /*sortable*/
        D[5] ? (
          /*$sort*/
          D[9] === /*columnId*/
          D[4] ? (
            /*$sortDirection*/
            D[10]
          ) : "none"
        ) : void 0)) && { "aria-sort": r },
        _ & /*internalAttrs*/
        256 && /*internalAttrs*/
        D[8],
        _ & /*$$restProps*/
        524288 && /*$$restProps*/
        D[19]
      ])), o && Fe(o.update) && _ & /*use*/
      1 && o.update.call(
        null,
        /*use*/
        D[0]
      );
    },
    i(D) {
      i || (L(s), i = !0);
    },
    o(D) {
      h(s), i = !1;
    },
    d(D) {
      D && F(e), C[t].d(), n[23](null), d = !1, ze(c);
    }
  };
}
function hp(n) {
  let e;
  const t = (
    /*#slots*/
    n[22].default
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[21],
    null
  );
  return {
    c() {
      s && s.c();
    },
    m(a, r) {
      s && s.m(a, r), e = !0;
    },
    p(a, r) {
      s && s.p && (!e || r & /*$$scope*/
      2097152) && Me(
        s,
        t,
        a,
        /*$$scope*/
        a[21],
        e ? ve(
          t,
          /*$$scope*/
          a[21],
          r,
          null
        ) : Re(
          /*$$scope*/
          a[21]
        ),
        null
      );
    },
    i(a) {
      e || (L(s, a), e = !0);
    },
    o(a) {
      h(s, a), e = !1;
    },
    d(a) {
      s && s.d(a);
    }
  };
}
function yp(n) {
  let e, t, s, a = (
    /*$sort*/
    (n[9] === /*columnId*/
    n[4] ? (
      /*$sortDirection*/
      n[10] === "ascending" ? (
        /*sortAscendingAriaLabel*/
        n[15]
      ) : (
        /*sortDescendingAriaLabel*/
        n[16]
      )
    ) : "") + ""
  ), r, o, i;
  const d = (
    /*#slots*/
    n[22].default
  ), c = Pe(
    d,
    n,
    /*$$scope*/
    n[21],
    null
  );
  return {
    c() {
      e = Z("div"), c && c.c(), t = $(), s = Z("div"), r = Se(a), R(s, "class", "mdc-data-table__sort-status-label"), R(s, "aria-hidden", "true"), R(s, "id", o = /*columnId*/
      n[4] + "-status-label"), R(e, "class", "mdc-data-table__header-cell-wrapper");
    },
    m(l, C) {
      G(l, e, C), c && c.m(e, null), U(e, t), U(e, s), U(s, r), i = !0;
    },
    p(l, C) {
      c && c.p && (!i || C & /*$$scope*/
      2097152) && Me(
        c,
        d,
        l,
        /*$$scope*/
        l[21],
        i ? ve(
          d,
          /*$$scope*/
          l[21],
          C,
          null
        ) : Re(
          /*$$scope*/
          l[21]
        ),
        null
      ), (!i || C & /*$sort, columnId, $sortDirection*/
      1552) && a !== (a = /*$sort*/
      (l[9] === /*columnId*/
      l[4] ? (
        /*$sortDirection*/
        l[10] === "ascending" ? (
          /*sortAscendingAriaLabel*/
          l[15]
        ) : (
          /*sortDescendingAriaLabel*/
          l[16]
        )
      ) : "") + "") && je(r, a), (!i || C & /*columnId*/
      16 && o !== (o = /*columnId*/
      l[4] + "-status-label")) && R(s, "id", o);
    },
    i(l) {
      i || (L(c, l), i = !0);
    },
    o(l) {
      h(c, l), i = !1;
    },
    d(l) {
      l && F(e), c && c.d(l);
    }
  };
}
function Np(n) {
  let e, t, s, a;
  const r = [gp, Lp], o = [];
  function i(d, c) {
    return (
      /*header*/
      d[12] ? 0 : 1
    );
  }
  return e = i(n), t = o[e] = r[e](n), {
    c() {
      t.c(), s = st();
    },
    m(d, c) {
      o[e].m(d, c), G(d, s, c), a = !0;
    },
    p(d, [c]) {
      t.p(d, c);
    },
    i(d) {
      a || (L(t), a = !0);
    },
    o(d) {
      h(t), a = !1;
    },
    d(d) {
      d && F(s), o[e].d(d);
    }
  };
}
let Tp = 0;
function Pp(n, e, t) {
  const s = ["use", "class", "numeric", "checkbox", "columnId", "sortable", "getElement"];
  let a = Te(e, s), r, o, { $$slots: i = {}, $$scope: d } = e;
  const c = lt(tt());
  let l = Qe("SMUI:data-table:row:header"), { use: C = [] } = e, { class: u = "" } = e, { numeric: m = !1 } = e, { checkbox: p = !1 } = e, { columnId: D = l ? "SMUI-data-table-column-" + Tp++ : "SMUI-data-table-unused" } = e, { sortable: _ = Qe("SMUI:data-table:sortable") } = e, A, b = {}, S = {}, f = Qe("SMUI:data-table:sort");
  Ye(n, f, (T) => t(9, r = T));
  let E = Qe("SMUI:data-table:sortDirection");
  Ye(n, E, (T) => t(10, o = T));
  let y = Qe("SMUI:data-table:sortAscendingAriaLabel"), I = Qe("SMUI:data-table:sortDescendingAriaLabel");
  _ && (qe("SMUI:label:context", "data-table:sortable-header-cell"), qe("SMUI:icon-button:context", "data-table:sortable-header-cell"), qe("SMUI:icon-button:aria-describedby", D + "-status-label")), at(() => {
    const T = l ? {
      _smui_data_table_header_cell_accessor: !0,
      get element() {
        return g();
      },
      get columnId() {
        return D;
      },
      addClass: N,
      removeClass: j,
      getAttr: v,
      addAttr: O
    } : {
      _smui_data_table_header_cell_accessor: !1,
      get element() {
        return g();
      },
      get columnId() {
      },
      addClass: N,
      removeClass: j,
      getAttr: v,
      addAttr: O
    };
    return Oe(g(), "SMUIDataTableCell:mount", T), () => {
      Oe(g(), "SMUIDataTableCell:unmount", T);
    };
  });
  function N(T) {
    b[T] || t(7, b[T] = !0, b);
  }
  function j(T) {
    (!(T in b) || b[T]) && t(7, b[T] = !1, b);
  }
  function v(T) {
    var Y;
    return T in S ? (Y = S[T]) !== null && Y !== void 0 ? Y : null : g().getAttribute(T);
  }
  function O(T, Y) {
    S[T] !== Y && t(8, S[T] = Y, S);
  }
  function M(T) {
    Oe(g(), "SMUIDataTableHeaderCheckbox:change", T);
  }
  function P(T) {
    Oe(g(), "SMUIDataTableBodyCheckbox:change", T);
  }
  function g() {
    return A;
  }
  function W(T) {
    de[T ? "unshift" : "push"](() => {
      A = T, t(6, A);
    });
  }
  const B = (T) => p && M(T);
  function H(T) {
    de[T ? "unshift" : "push"](() => {
      A = T, t(6, A);
    });
  }
  const w = (T) => p && P(T);
  return n.$$set = (T) => {
    e = te(te({}, e), ct(T)), t(19, a = Te(e, s)), "use" in T && t(0, C = T.use), "class" in T && t(1, u = T.class), "numeric" in T && t(2, m = T.numeric), "checkbox" in T && t(3, p = T.checkbox), "columnId" in T && t(4, D = T.columnId), "sortable" in T && t(5, _ = T.sortable), "$$scope" in T && t(21, d = T.$$scope);
  }, [
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    b,
    S,
    r,
    o,
    c,
    l,
    f,
    E,
    y,
    I,
    M,
    P,
    a,
    g,
    d,
    i,
    W,
    B,
    H,
    w
  ];
}
class qt extends me {
  constructor(e) {
    super(), ue(this, e, Pp, Np, Ce, {
      use: 0,
      class: 1,
      numeric: 2,
      checkbox: 3,
      columnId: 4,
      sortable: 5,
      getElement: 20
    });
  }
  get getElement() {
    return this.$$.ctx[20];
  }
}
function Yi(n, e, t) {
  const s = n.slice();
  return s[5] = e[t], s[7] = t, s;
}
function Qi(n) {
  let e, t = (
    /*crumb*/
    n[5].secondaryLabel + ""
  ), s;
  return {
    c() {
      e = Z("span"), s = Se(t), R(e, "class", "secondary-label svelte-1ngm2be");
    },
    m(a, r) {
      G(a, e, r), U(e, s);
    },
    p(a, r) {
      r & /*breadcrumbs*/
      1 && t !== (t = /*crumb*/
      a[5].secondaryLabel + "") && je(s, t);
    },
    d(a) {
      a && F(e);
    }
  };
}
function Ji(n) {
  let e;
  return {
    c() {
      e = Z("span"), e.textContent = "chevron_right", R(e, "class", "material-icons separator svelte-1ngm2be");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function xi(n) {
  let e, t, s, a = (
    /*crumb*/
    n[5].label + ""
  ), r, o, i, d, c, l, C, u, m = (
    /*crumb*/
    n[5].secondaryLabel && Qi(n)
  );
  function p() {
    return (
      /*click_handler*/
      n[3](
        /*i*/
        n[7]
      )
    );
  }
  let D = (
    /*i*/
    n[7] < /*breadcrumbs*/
    n[0].length - 1 && Ji()
  );
  return {
    c() {
      e = Z("div"), t = Z("span"), s = Z("span"), r = Se(a), o = $(), m && m.c(), c = $(), D && D.c(), l = $(), R(s, "class", "label svelte-1ngm2be"), R(t, "class", i = "breadcrumb " + /*crumb*/
      (n[5].enabled ? "" : "br-disabled") + " " + /*i*/
      (n[7] === /*activeIndex*/
      n[1] ? "br-active" : "") + " svelte-1ngm2be"), R(t, "aria-current", d = /*i*/
      n[7] === /*activeIndex*/
      n[1] ? "page" : void 0), R(e, "class", "breadcrumb-wrapper svelte-1ngm2be");
    },
    m(_, A) {
      G(_, e, A), U(e, t), U(t, s), U(s, r), U(t, o), m && m.m(t, null), U(e, c), D && D.m(e, null), U(e, l), C || (u = ce(t, "click", p), C = !0);
    },
    p(_, A) {
      n = _, A & /*breadcrumbs*/
      1 && a !== (a = /*crumb*/
      n[5].label + "") && je(r, a), /*crumb*/
      n[5].secondaryLabel ? m ? m.p(n, A) : (m = Qi(n), m.c(), m.m(t, null)) : m && (m.d(1), m = null), A & /*breadcrumbs, activeIndex*/
      3 && i !== (i = "breadcrumb " + /*crumb*/
      (n[5].enabled ? "" : "br-disabled") + " " + /*i*/
      (n[7] === /*activeIndex*/
      n[1] ? "br-active" : "") + " svelte-1ngm2be") && R(t, "class", i), A & /*activeIndex*/
      2 && d !== (d = /*i*/
      n[7] === /*activeIndex*/
      n[1] ? "page" : void 0) && R(t, "aria-current", d), /*i*/
      n[7] < /*breadcrumbs*/
      n[0].length - 1 ? D || (D = Ji(), D.c(), D.m(e, l)) : D && (D.d(1), D = null);
    },
    d(_) {
      _ && F(e), m && m.d(), D && D.d(), C = !1, u();
    }
  };
}
function vp(n) {
  let e, t = Vt(
    /*breadcrumbs*/
    n[0]
  ), s = [];
  for (let a = 0; a < t.length; a += 1)
    s[a] = xi(Yi(n, t, a));
  return {
    c() {
      e = Z("div");
      for (let a = 0; a < s.length; a += 1)
        s[a].c();
      R(e, "class", "oscd-breadcrumbs svelte-1ngm2be");
    },
    m(a, r) {
      G(a, e, r);
      for (let o = 0; o < s.length; o += 1)
        s[o] && s[o].m(e, null);
    },
    p(a, [r]) {
      if (r & /*breadcrumbs, activeIndex, undefined, handleClick*/
      7) {
        t = Vt(
          /*breadcrumbs*/
          a[0]
        );
        let o;
        for (o = 0; o < t.length; o += 1) {
          const i = Yi(a, t, o);
          s[o] ? s[o].p(i, r) : (s[o] = xi(i), s[o].c(), s[o].m(e, null));
        }
        for (; o < s.length; o += 1)
          s[o].d(1);
        s.length = t.length;
      }
    },
    i: Le,
    o: Le,
    d(a) {
      a && F(e), lr(s, a);
    }
  };
}
function Mp(n, e, t) {
  let { breadcrumbs: s = [] } = e, { activeIndex: a = 0 } = e;
  const r = Qt(), o = (d) => {
    s[d].enabled && d !== a && r("click", { index: d });
  }, i = (d) => o(d);
  return n.$$set = (d) => {
    "breadcrumbs" in d && t(0, s = d.breadcrumbs), "activeIndex" in d && t(1, a = d.activeIndex);
  }, [s, a, o, i];
}
class Rp extends me {
  constructor(e) {
    super(), ue(this, e, Mp, vp, Ce, { breadcrumbs: 0, activeIndex: 1 });
  }
}
/**
 * @license
 * Copyright 2021 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Rn;
(function(n) {
  n.PROCESSING = "mdc-switch--processing", n.SELECTED = "mdc-switch--selected", n.UNSELECTED = "mdc-switch--unselected";
})(Rn || (Rn = {}));
var $i;
(function(n) {
  n.RIPPLE = ".mdc-switch__ripple";
})($i || ($i = {}));
/**
 * @license
 * Copyright 2021 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function Fp(n, e, t) {
  var s = Gp(n, e), a = s.getObservers(e);
  return a.push(t), function() {
    a.splice(a.indexOf(t), 1);
  };
}
var Hs = /* @__PURE__ */ new WeakMap();
function Gp(n, e) {
  var t = /* @__PURE__ */ new Map();
  Hs.has(n) || Hs.set(n, {
    isEnabled: !0,
    getObservers: function(c) {
      var l = t.get(c) || [];
      return t.has(c) || t.set(c, l), l;
    },
    installedProperties: /* @__PURE__ */ new Set()
  });
  var s = Hs.get(n);
  if (s.installedProperties.has(e))
    return s;
  var a = Vp(n, e) || {
    configurable: !0,
    enumerable: !0,
    value: n[e],
    writable: !0
  }, r = et({}, a), o = a.get, i = a.set;
  if ("value" in a) {
    delete r.value, delete r.writable;
    var d = a.value;
    o = function() {
      return d;
    }, a.writable && (i = function(c) {
      d = c;
    });
  }
  return o && (r.get = function() {
    return o.call(this);
  }), i && (r.set = function(c) {
    var l, C, u = o ? o.call(this) : c;
    if (i.call(this, c), s.isEnabled && (!o || c !== u))
      try {
        for (var m = kt(s.getObservers(e)), p = m.next(); !p.done; p = m.next()) {
          var D = p.value;
          D(c, u);
        }
      } catch (_) {
        l = { error: _ };
      } finally {
        try {
          p && !p.done && (C = m.return) && C.call(m);
        } finally {
          if (l)
            throw l.error;
        }
      }
  }), s.installedProperties.add(e), Object.defineProperty(n, e, r), s;
}
function Vp(n, e) {
  for (var t = n, s; t && (s = Object.getOwnPropertyDescriptor(t, e), !s); )
    t = Object.getPrototypeOf(t);
  return s;
}
function jp(n, e) {
  var t = Hs.get(n);
  t && (t.isEnabled = e);
}
/**
 * @license
 * Copyright 2021 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var kp = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, t) || this;
      return s.unobserves = /* @__PURE__ */ new Set(), s;
    }
    return e.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.unobserve();
    }, e.prototype.observe = function(t, s) {
      var a, r, o = this, i = [];
      try {
        for (var d = kt(Object.keys(s)), c = d.next(); !c.done; c = d.next()) {
          var l = c.value, C = s[l].bind(this);
          i.push(this.observeProperty(t, l, C));
        }
      } catch (m) {
        a = { error: m };
      } finally {
        try {
          c && !c.done && (r = d.return) && r.call(d);
        } finally {
          if (a)
            throw a.error;
        }
      }
      var u = function() {
        var m, p;
        try {
          for (var D = kt(i), _ = D.next(); !_.done; _ = D.next()) {
            var A = _.value;
            A();
          }
        } catch (b) {
          m = { error: b };
        } finally {
          try {
            _ && !_.done && (p = D.return) && p.call(D);
          } finally {
            if (m)
              throw m.error;
          }
        }
        o.unobserves.delete(u);
      };
      return this.unobserves.add(u), u;
    }, e.prototype.observeProperty = function(t, s, a) {
      return Fp(t, s, a);
    }, e.prototype.setObserversEnabled = function(t, s) {
      jp(t, s);
    }, e.prototype.unobserve = function() {
      var t, s;
      try {
        for (var a = kt(Od([], Ha(this.unobserves))), r = a.next(); !r.done; r = a.next()) {
          var o = r.value;
          o();
        }
      } catch (i) {
        t = { error: i };
      } finally {
        try {
          r && !r.done && (s = a.return) && s.call(a);
        } finally {
          if (t)
            throw t.error;
        }
      }
    }, e;
  }(wt)
);
/**
 * @license
 * Copyright 2021 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var wp = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, t) || this;
      return s.handleClick = s.handleClick.bind(s), s;
    }
    return e.prototype.init = function() {
      this.observe(this.adapter.state, {
        disabled: this.stopProcessingIfDisabled,
        processing: this.stopProcessingIfDisabled
      });
    }, e.prototype.handleClick = function() {
      this.adapter.state.disabled || (this.adapter.state.selected = !this.adapter.state.selected);
    }, e.prototype.stopProcessingIfDisabled = function() {
      this.adapter.state.disabled && (this.adapter.state.processing = !1);
    }, e;
  }(kp)
), Bp = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.init = function() {
      n.prototype.init.call(this), this.observe(this.adapter.state, {
        disabled: this.onDisabledChange,
        processing: this.onProcessingChange,
        selected: this.onSelectedChange
      });
    }, e.prototype.initFromDOM = function() {
      this.setObserversEnabled(this.adapter.state, !1), this.adapter.state.selected = this.adapter.hasClass(Rn.SELECTED), this.onSelectedChange(), this.adapter.state.disabled = this.adapter.isDisabled(), this.adapter.state.processing = this.adapter.hasClass(Rn.PROCESSING), this.setObserversEnabled(this.adapter.state, !0), this.stopProcessingIfDisabled();
    }, e.prototype.onDisabledChange = function() {
      this.adapter.setDisabled(this.adapter.state.disabled);
    }, e.prototype.onProcessingChange = function() {
      this.toggleClass(this.adapter.state.processing, Rn.PROCESSING);
    }, e.prototype.onSelectedChange = function() {
      this.adapter.setAriaChecked(String(this.adapter.state.selected)), this.toggleClass(this.adapter.state.selected, Rn.SELECTED), this.toggleClass(!this.adapter.state.selected, Rn.UNSELECTED);
    }, e.prototype.toggleClass = function(t, s) {
      t ? this.adapter.addClass(s) : this.adapter.removeClass(s);
    }, e;
  }(wp)
);
function eo(n) {
  let e, t, s, a, r, o, i, d, c, l, C = [
    {
      class: i = le({
        [
          /*icons$class*/
          n[8]
        ]: !0,
        "mdc-switch__icons": !0
      })
    },
    Je(
      /*$$restProps*/
      n[19],
      "icons$"
    )
  ], u = {};
  for (let m = 0; m < C.length; m += 1)
    u = te(u, C[m]);
  return {
    c() {
      e = Z("div"), t = Ct("svg"), s = Ct("path"), a = $(), r = Ct("svg"), o = Ct("path"), R(s, "d", "M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z"), R(t, "class", "mdc-switch__icon mdc-switch__icon--on"), R(t, "viewBox", "0 0 24 24"), R(o, "d", "M20 13H4v-2h16v2z"), R(r, "class", "mdc-switch__icon mdc-switch__icon--off"), R(r, "viewBox", "0 0 24 24"), Ae(e, u);
    },
    m(m, p) {
      G(m, e, p), U(e, t), U(t, s), U(e, a), U(e, r), U(r, o), c || (l = De(d = rt.call(
        null,
        e,
        /*icons$use*/
        n[7]
      )), c = !0);
    },
    p(m, p) {
      Ae(e, u = Ee(C, [
        p[0] & /*icons$class*/
        256 && i !== (i = le({
          [
            /*icons$class*/
            m[8]
          ]: !0,
          "mdc-switch__icons": !0
        })) && { class: i },
        p[0] & /*$$restProps*/
        524288 && Je(
          /*$$restProps*/
          m[19],
          "icons$"
        )
      ])), d && Fe(d.update) && p[0] & /*icons$use*/
      128 && d.update.call(
        null,
        /*icons$use*/
        m[7]
      );
    },
    d(m) {
      m && F(e), c = !1, l();
    }
  };
}
function to(n) {
  let e;
  return {
    c() {
      e = Z("div"), e.innerHTML = '<div class="mdc-switch__focus-ring"></div>', R(e, "class", "mdc-switch__focus-ring-wrapper");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function Up(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m, p, D, _, A = (
    /*icons*/
    n[6] && eo(n)
  ), b = (
    /*focusRing*/
    n[4] && to()
  ), S = [
    {
      class: C = le({
        [
          /*className*/
          n[3]
        ]: !0,
        "mdc-switch": !0,
        "mdc-switch--unselected": !/*selected*/
        n[10],
        "mdc-switch--selected": (
          /*selected*/
          n[10]
        ),
        "mdc-switch--processing": (
          /*processing*/
          n[1]
        ),
        "smui-switch--color-secondary": (
          /*color*/
          n[5] === "secondary"
        ),
        .../*internalClasses*/
        n[12]
      })
    },
    { type: "button" },
    { role: "switch" },
    {
      "aria-checked": u = /*selected*/
      n[10] ? "true" : "false"
    },
    { disabled: (
      /*disabled*/
      n[0]
    ) },
    /*inputProps*/
    n[16],
    jt(
      /*$$restProps*/
      n[19],
      ["icons$"]
    )
  ], f = {};
  for (let E = 0; E < S.length; E += 1)
    f = te(f, S[E]);
  return {
    c() {
      e = Z("button"), t = Z("div"), s = $(), a = Z("div"), r = Z("div"), o = Z("div"), o.innerHTML = '<div class="mdc-elevation-overlay"></div>', i = $(), d = Z("div"), c = $(), A && A.c(), l = $(), b && b.c(), R(t, "class", "mdc-switch__track"), R(o, "class", "mdc-switch__shadow"), R(d, "class", "mdc-switch__ripple"), R(r, "class", "mdc-switch__handle"), R(a, "class", "mdc-switch__handle-track"), Ae(e, f);
    },
    m(E, y) {
      G(E, e, y), U(e, t), U(e, s), U(e, a), U(a, r), U(r, o), U(r, i), U(r, d), n[28](d), U(r, c), A && A.m(r, null), U(e, l), b && b.m(e, null), e.autofocus && e.focus(), n[29](e), D || (_ = [
        De(m = rt.call(
          null,
          e,
          /*use*/
          n[2]
        )),
        De(
          /*forwardEvents*/
          n[15].call(null, e)
        ),
        De(p = Yt.call(null, e, {
          unbounded: !0,
          color: (
            /*color*/
            n[5]
          ),
          active: (
            /*rippleActive*/
            n[14]
          ),
          rippleElement: (
            /*rippleElement*/
            n[13]
          ),
          disabled: (
            /*disabled*/
            n[0]
          ),
          addClass: (
            /*addClass*/
            n[17]
          ),
          removeClass: (
            /*removeClass*/
            n[18]
          )
        })),
        ce(
          e,
          "click",
          /*click_handler*/
          n[30]
        )
      ], D = !0);
    },
    p(E, y) {
      /*icons*/
      E[6] ? A ? A.p(E, y) : (A = eo(E), A.c(), A.m(r, null)) : A && (A.d(1), A = null), /*focusRing*/
      E[4] ? b || (b = to(), b.c(), b.m(e, null)) : b && (b.d(1), b = null), Ae(e, f = Ee(S, [
        y[0] & /*className, selected, processing, color, internalClasses*/
        5162 && C !== (C = le({
          [
            /*className*/
            E[3]
          ]: !0,
          "mdc-switch": !0,
          "mdc-switch--unselected": !/*selected*/
          E[10],
          "mdc-switch--selected": (
            /*selected*/
            E[10]
          ),
          "mdc-switch--processing": (
            /*processing*/
            E[1]
          ),
          "smui-switch--color-secondary": (
            /*color*/
            E[5] === "secondary"
          ),
          .../*internalClasses*/
          E[12]
        })) && { class: C },
        { type: "button" },
        { role: "switch" },
        y[0] & /*selected*/
        1024 && u !== (u = /*selected*/
        E[10] ? "true" : "false") && {
          "aria-checked": u
        },
        y[0] & /*disabled*/
        1 && { disabled: (
          /*disabled*/
          E[0]
        ) },
        /*inputProps*/
        E[16],
        y[0] & /*$$restProps*/
        524288 && jt(
          /*$$restProps*/
          E[19],
          ["icons$"]
        )
      ])), m && Fe(m.update) && y[0] & /*use*/
      4 && m.update.call(
        null,
        /*use*/
        E[2]
      ), p && Fe(p.update) && y[0] & /*color, rippleActive, rippleElement, disabled*/
      24609 && p.update.call(null, {
        unbounded: !0,
        color: (
          /*color*/
          E[5]
        ),
        active: (
          /*rippleActive*/
          E[14]
        ),
        rippleElement: (
          /*rippleElement*/
          E[13]
        ),
        disabled: (
          /*disabled*/
          E[0]
        ),
        addClass: (
          /*addClass*/
          E[17]
        ),
        removeClass: (
          /*removeClass*/
          E[18]
        )
      });
    },
    i: Le,
    o: Le,
    d(E) {
      E && F(e), n[28](null), A && A.d(), b && b.d(), n[29](null), D = !1, ze(_);
    }
  };
}
function Hp(n, e, t) {
  const s = [
    "use",
    "class",
    "disabled",
    "focusRing",
    "color",
    "group",
    "checked",
    "value",
    "processing",
    "icons",
    "icons$use",
    "icons$class",
    "getId",
    "getElement"
  ];
  let a = Te(e, s);
  var r;
  const o = lt(tt());
  let i = () => {
  };
  function d(ae) {
    return ae === i;
  }
  let { use: c = [] } = e, { class: l = "" } = e, { disabled: C = !1 } = e, { focusRing: u = !1 } = e, { color: m = "primary" } = e, { group: p = i } = e, { checked: D = i } = e, { value: _ = null } = e, { processing: A = !1 } = e, { icons: b = !0 } = e, { icons$use: S = [] } = e, { icons$class: f = "" } = e, E, y, I = {}, N, j = !1, v = (r = Qe("SMUI:generic:input:props")) !== null && r !== void 0 ? r : {}, O = d(p) ? d(D) ? !1 : D : p.indexOf(_) !== -1, M = {
    get disabled() {
      return C;
    },
    set disabled(ae) {
      t(0, C = ae);
    },
    get processing() {
      return A;
    },
    set processing(ae) {
      t(1, A = ae);
    },
    get selected() {
      return O;
    },
    set selected(ae) {
      t(10, O = ae);
    }
  }, P = D, g = d(p) ? [] : [...p], W = O;
  at(() => {
    t(11, y = new Bp({
      addClass: H,
      hasClass: B,
      isDisabled: () => C,
      removeClass: w,
      setAriaChecked: () => {
      },
      // Handled automatically.
      setDisabled: (_e) => {
        t(0, C = _e);
      },
      state: M
    }));
    const ae = {
      get element() {
        return Y();
      },
      get checked() {
        return O;
      },
      set checked(_e) {
        O !== _e && (M.selected = _e, E && Oe(E, "SMUISwitch:change", { selected: _e, value: _ }));
      },
      activateRipple() {
        C || t(14, j = !0);
      },
      deactivateRipple() {
        t(14, j = !1);
      }
    };
    return Oe(E, "SMUIGenericInput:mount", ae), y.init(), y.initFromDOM(), () => {
      Oe(E, "SMUIGenericInput:unmount", ae), y.destroy();
    };
  });
  function B(ae) {
    return ae in I ? I[ae] : Y().classList.contains(ae);
  }
  function H(ae) {
    I[ae] || t(12, I[ae] = !0, I);
  }
  function w(ae) {
    (!(ae in I) || I[ae]) && t(12, I[ae] = !1, I);
  }
  function T() {
    return v && v.id;
  }
  function Y() {
    return E;
  }
  function Ie(ae) {
    de[ae ? "unshift" : "push"](() => {
      N = ae, t(13, N);
    });
  }
  function Ge(ae) {
    de[ae ? "unshift" : "push"](() => {
      E = ae, t(9, E);
    });
  }
  const ke = () => y && y.handleClick();
  return n.$$set = (ae) => {
    e = te(te({}, e), ct(ae)), t(19, a = Te(e, s)), "use" in ae && t(2, c = ae.use), "class" in ae && t(3, l = ae.class), "disabled" in ae && t(0, C = ae.disabled), "focusRing" in ae && t(4, u = ae.focusRing), "color" in ae && t(5, m = ae.color), "group" in ae && t(20, p = ae.group), "checked" in ae && t(21, D = ae.checked), "value" in ae && t(22, _ = ae.value), "processing" in ae && t(1, A = ae.processing), "icons" in ae && t(6, b = ae.icons), "icons$use" in ae && t(7, S = ae.icons$use), "icons$class" in ae && t(8, f = ae.icons$class);
  }, n.$$.update = () => {
    if (n.$$.dirty[0] & /*group, previousSelected, selected, value, previousGroup, checked, previousChecked, element*/
    242222592) {
      let ae = !1;
      if (!d(p))
        if (W !== O) {
          const _e = p.indexOf(_);
          O && _e === -1 ? (p.push(_), t(20, p), t(27, W), t(10, O), t(22, _), t(26, g), t(21, D), t(25, P), t(9, E)) : !O && _e !== -1 && (p.splice(_e, 1), t(20, p), t(27, W), t(10, O), t(22, _), t(26, g), t(21, D), t(25, P), t(9, E)), ae = !0;
        } else {
          const _e = g.indexOf(_), We = p.indexOf(_);
          _e > -1 && We === -1 ? M.selected = !1 : We > -1 && _e === -1 && (M.selected = !0);
        }
      d(D) ? W !== O && (ae = !0) : D !== O && (D === P ? (t(21, D = O), ae = !0) : M.selected = D), t(25, P = D), t(26, g = d(p) ? [] : [...p]), t(27, W = O), ae && E && Oe(E, "SMUISwitch:change", { selected: O, value: _ });
    }
  }, [
    C,
    A,
    c,
    l,
    u,
    m,
    b,
    S,
    f,
    E,
    O,
    y,
    I,
    N,
    j,
    o,
    v,
    H,
    w,
    a,
    p,
    D,
    _,
    T,
    Y,
    P,
    g,
    W,
    Ie,
    Ge,
    ke
  ];
}
class Kp extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      Hp,
      Up,
      Ce,
      {
        use: 2,
        class: 3,
        disabled: 0,
        focusRing: 4,
        color: 5,
        group: 20,
        checked: 21,
        value: 22,
        processing: 1,
        icons: 6,
        icons$use: 7,
        icons$class: 8,
        getId: 23,
        getElement: 24
      },
      null,
      [-1, -1]
    );
  }
  get getId() {
    return this.$$.ctx[23];
  }
  get getElement() {
    return this.$$.ctx[24];
  }
}
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Wp = {
  ROOT: "mdc-form-field"
}, qp = {
  LABEL_SELECTOR: ".mdc-form-field > label"
};
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var zp = (
  /** @class */
  function(n) {
    Tt(e, n);
    function e(t) {
      var s = n.call(this, et(et({}, e.defaultAdapter), t)) || this;
      return s.click = function() {
        s.handleClick();
      }, s;
    }
    return Object.defineProperty(e, "cssClasses", {
      get: function() {
        return Wp;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "strings", {
      get: function() {
        return qp;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e, "defaultAdapter", {
      get: function() {
        return {
          activateInputRipple: function() {
          },
          deactivateInputRipple: function() {
          },
          deregisterInteractionHandler: function() {
          },
          registerInteractionHandler: function() {
          }
        };
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function() {
      this.adapter.registerInteractionHandler("click", this.click);
    }, e.prototype.destroy = function() {
      this.adapter.deregisterInteractionHandler("click", this.click);
    }, e.prototype.handleClick = function() {
      var t = this;
      this.adapter.activateInputRipple(), requestAnimationFrame(function() {
        t.adapter.deactivateInputRipple();
      });
    }, e;
  }(wt)
);
const Xp = (n) => ({}), no = (n) => ({});
function Zp(n) {
  let e, t, s, a, r, o, i, d, c;
  const l = (
    /*#slots*/
    n[14].default
  ), C = Pe(
    l,
    n,
    /*$$scope*/
    n[13],
    null
  ), u = (
    /*#slots*/
    n[14].label
  ), m = Pe(
    u,
    n,
    /*$$scope*/
    n[13],
    no
  );
  let p = [{ for: (
    /*inputId*/
    n[4]
  ) }, Je(
    /*$$restProps*/
    n[11],
    "label$"
  )], D = {};
  for (let b = 0; b < p.length; b += 1)
    D = te(D, p[b]);
  let _ = [
    {
      class: r = le({
        [
          /*className*/
          n[1]
        ]: !0,
        "mdc-form-field": !0,
        "mdc-form-field--align-end": (
          /*align*/
          n[2] === "end"
        ),
        "mdc-form-field--nowrap": (
          /*noWrap*/
          n[3]
        )
      })
    },
    jt(
      /*$$restProps*/
      n[11],
      ["label$"]
    )
  ], A = {};
  for (let b = 0; b < _.length; b += 1)
    A = te(A, _[b]);
  return {
    c() {
      e = Z("div"), C && C.c(), t = $(), s = Z("label"), m && m.c(), Ae(s, D), Ae(e, A);
    },
    m(b, S) {
      G(b, e, S), C && C.m(e, null), U(e, t), U(e, s), m && m.m(s, null), n[15](s), n[16](e), i = !0, d || (c = [
        De(a = rt.call(
          null,
          s,
          /*label$use*/
          n[5]
        )),
        De(o = rt.call(
          null,
          e,
          /*use*/
          n[0]
        )),
        De(
          /*forwardEvents*/
          n[9].call(null, e)
        ),
        ce(
          e,
          "SMUIGenericInput:mount",
          /*handleInputMount*/
          n[10]
        ),
        ce(
          e,
          "SMUIGenericInput:unmount",
          /*SMUIGenericInput_unmount_handler*/
          n[17]
        )
      ], d = !0);
    },
    p(b, [S]) {
      C && C.p && (!i || S & /*$$scope*/
      8192) && Me(
        C,
        l,
        b,
        /*$$scope*/
        b[13],
        i ? ve(
          l,
          /*$$scope*/
          b[13],
          S,
          null
        ) : Re(
          /*$$scope*/
          b[13]
        ),
        null
      ), m && m.p && (!i || S & /*$$scope*/
      8192) && Me(
        m,
        u,
        b,
        /*$$scope*/
        b[13],
        i ? ve(
          u,
          /*$$scope*/
          b[13],
          S,
          Xp
        ) : Re(
          /*$$scope*/
          b[13]
        ),
        no
      ), Ae(s, D = Ee(p, [
        (!i || S & /*inputId*/
        16) && { for: (
          /*inputId*/
          b[4]
        ) },
        S & /*$$restProps*/
        2048 && Je(
          /*$$restProps*/
          b[11],
          "label$"
        )
      ])), a && Fe(a.update) && S & /*label$use*/
      32 && a.update.call(
        null,
        /*label$use*/
        b[5]
      ), Ae(e, A = Ee(_, [
        (!i || S & /*className, align, noWrap*/
        14 && r !== (r = le({
          [
            /*className*/
            b[1]
          ]: !0,
          "mdc-form-field": !0,
          "mdc-form-field--align-end": (
            /*align*/
            b[2] === "end"
          ),
          "mdc-form-field--nowrap": (
            /*noWrap*/
            b[3]
          )
        }))) && { class: r },
        S & /*$$restProps*/
        2048 && jt(
          /*$$restProps*/
          b[11],
          ["label$"]
        )
      ])), o && Fe(o.update) && S & /*use*/
      1 && o.update.call(
        null,
        /*use*/
        b[0]
      );
    },
    i(b) {
      i || (L(C, b), L(m, b), i = !0);
    },
    o(b) {
      h(C, b), h(m, b), i = !1;
    },
    d(b) {
      b && F(e), C && C.d(b), m && m.d(b), n[15](null), n[16](null), d = !1, ze(c);
    }
  };
}
let Yp = 0;
function Qp(n, e, t) {
  const s = ["use", "class", "align", "noWrap", "inputId", "label$use", "getElement"];
  let a = Te(e, s), { $$slots: r = {}, $$scope: o } = e;
  const i = lt(tt());
  let { use: d = [] } = e, { class: c = "" } = e, { align: l = "start" } = e, { noWrap: C = !1 } = e, { inputId: u = "SMUI-form-field-" + Yp++ } = e, { label$use: m = [] } = e, p, D, _, A;
  qe("SMUI:generic:input:props", { id: u }), at(() => (D = new zp({
    activateInputRipple: () => {
      A && A.activateRipple();
    },
    deactivateInputRipple: () => {
      A && A.deactivateRipple();
    },
    deregisterInteractionHandler: (I, N) => {
      _.removeEventListener(I, N);
    },
    registerInteractionHandler: (I, N) => {
      _.addEventListener(I, N);
    }
  }), D.init(), () => {
    D.destroy();
  }));
  function b(I) {
    t(8, A = I.detail);
  }
  function S() {
    return p;
  }
  function f(I) {
    de[I ? "unshift" : "push"](() => {
      _ = I, t(7, _);
    });
  }
  function E(I) {
    de[I ? "unshift" : "push"](() => {
      p = I, t(6, p);
    });
  }
  const y = () => t(8, A = void 0);
  return n.$$set = (I) => {
    e = te(te({}, e), ct(I)), t(11, a = Te(e, s)), "use" in I && t(0, d = I.use), "class" in I && t(1, c = I.class), "align" in I && t(2, l = I.align), "noWrap" in I && t(3, C = I.noWrap), "inputId" in I && t(4, u = I.inputId), "label$use" in I && t(5, m = I.label$use), "$$scope" in I && t(13, o = I.$$scope);
  }, [
    d,
    c,
    l,
    C,
    u,
    m,
    p,
    _,
    A,
    i,
    b,
    a,
    S,
    o,
    r,
    f,
    E,
    y
  ];
}
class Jp extends me {
  constructor(e) {
    super(), ue(this, e, Qp, Zp, Ce, {
      use: 0,
      class: 1,
      align: 2,
      noWrap: 3,
      inputId: 4,
      label$use: 5,
      getElement: 12
    });
  }
  get getElement() {
    return this.$$.ctx[12];
  }
}
function so(n) {
  let e, t;
  return {
    c() {
      e = Z("label"), t = Se(
        /*label*/
        n[1]
      ), R(
        e,
        "for",
        /*id*/
        n[2]
      ), R(
        e,
        "style",
        /*labelStyle*/
        n[3]
      ), R(e, "class", "oscd-switch-label svelte-99191v");
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*label*/
      2 && je(
        t,
        /*label*/
        s[1]
      ), a & /*id*/
      4 && R(
        e,
        "for",
        /*id*/
        s[2]
      ), a & /*labelStyle*/
      8 && R(
        e,
        "style",
        /*labelStyle*/
        s[3]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function xp(n) {
  let e, t, s, a, r;
  function o(c) {
    n[9](c);
  }
  let i = {
    id: (
      /*id*/
      n[2]
    ),
    class: (
      /*switchClass*/
      n[4]
    ),
    icons: (
      /*icons*/
      n[6]
    )
  };
  /*checked*/
  n[0] !== void 0 && (i.checked = /*checked*/
  n[0]), e = new Kp({ props: i }), de.push(() => Ve(e, "checked", o)), e.$on(
    "SMUISwitch:change",
    /*SMUISwitch_change_handler*/
    n[10]
  );
  let d = (
    /*label*/
    n[1] && so(n)
  );
  return {
    c() {
      X(e.$$.fragment), s = $(), d && d.c(), a = st();
    },
    m(c, l) {
      q(e, c, l), G(c, s, l), d && d.m(c, l), G(c, a, l), r = !0;
    },
    p(c, l) {
      const C = {};
      l & /*id*/
      4 && (C.id = /*id*/
      c[2]), l & /*switchClass*/
      16 && (C.class = /*switchClass*/
      c[4]), l & /*icons*/
      64 && (C.icons = /*icons*/
      c[6]), !t && l & /*checked*/
      1 && (t = !0, C.checked = /*checked*/
      c[0], we(() => t = !1)), e.$set(C), /*label*/
      c[1] ? d ? d.p(c, l) : (d = so(c), d.c(), d.m(a.parentNode, a)) : d && (d.d(1), d = null);
    },
    i(c) {
      r || (L(e.$$.fragment, c), r = !0);
    },
    o(c) {
      h(e.$$.fragment, c), r = !1;
    },
    d(c) {
      c && (F(s), F(a)), z(e, c), d && d.d(c);
    }
  };
}
function $p(n) {
  let e, t;
  return e = new Jp({
    props: {
      class: (
        /*formFieldClass*/
        n[5]
      ),
      $$slots: { default: [xp] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*formFieldClass*/
      32 && (r.class = /*formFieldClass*/
      s[5]), a & /*$$scope, id, labelStyle, label, switchClass, icons, checked*/
      4191 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function e_(n, e, t) {
  let { checked: s = !1 } = e, { label: a = "Toggle" } = e, { id: r = "toggle-switch" } = e, { labelStyle: o = "" } = e, { switchClass: i = "" } = e, { formFieldClass: d = "" } = e, { icons: c = !1 } = e, { preventToggleOnClick: l = !1 } = e;
  const C = Qt();
  function u(D) {
    l && t(0, s = !D), C("change", D);
  }
  function m(D) {
    s = D, t(0, s);
  }
  const p = (D) => u(D.detail.selected);
  return n.$$set = (D) => {
    "checked" in D && t(0, s = D.checked), "label" in D && t(1, a = D.label), "id" in D && t(2, r = D.id), "labelStyle" in D && t(3, o = D.labelStyle), "switchClass" in D && t(4, i = D.switchClass), "formFieldClass" in D && t(5, d = D.formFieldClass), "icons" in D && t(6, c = D.icons), "preventToggleOnClick" in D && t(8, l = D.preventToggleOnClick);
  }, [
    s,
    a,
    r,
    o,
    i,
    d,
    c,
    u,
    l,
    m,
    p
  ];
}
class Fd extends me {
  constructor(e) {
    super(), ue(this, e, e_, $p, Ce, {
      checked: 0,
      label: 1,
      id: 2,
      labelStyle: 3,
      switchClass: 4,
      formFieldClass: 5,
      icons: 6,
      preventToggleOnClick: 8
    });
  }
}
function t_(n) {
  let e, t;
  return {
    c() {
      e = Se("Unsupported supported type: "), t = Se(
        /*type*/
        n[2]
      );
    },
    m(s, a) {
      G(s, e, a), G(s, t, a);
    },
    p(s, a) {
      a & /*type*/
      4 && je(
        t,
        /*type*/
        s[2]
      );
    },
    i: Le,
    o: Le,
    d(s) {
      s && (F(e), F(t));
    }
  };
}
function n_(n) {
  let e, t;
  return e = new sp({
    props: {
      svgStyles: `fill: ${/*fillColor*/
      n[4]}; margin: 0; width: 25px; height: 25px;`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*fillColor*/
      16 && (r.svgStyles = `fill: ${/*fillColor*/
      s[4]}; margin: 0; width: 25px; height: 25px;`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function s_(n) {
  let e, t;
  return e = new zm({
    props: {
      svgStyles: `fill: ${/*fillColor*/
      n[4]}; margin: 0; width: 20px; height: 20px;`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*fillColor*/
      16 && (r.svgStyles = `fill: ${/*fillColor*/
      s[4]}; margin: 0; width: 20px; height: 20px;`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function a_(n) {
  let e, t;
  return e = new Hm({
    props: {
      svgStyles: `fill: ${/*fillColor*/
      n[4]}; margin: 0; width: 20px; height: 20px;`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*fillColor*/
      16 && (r.svgStyles = `fill: ${/*fillColor*/
      s[4]}; margin: 0; width: 20px; height: 20px;`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function r_(n) {
  let e, t;
  return e = new vm({
    props: {
      svgStyles: `fill: ${/*fillColor*/
      n[4]}; margin: 0; width: 20px; height: 20px;`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*fillColor*/
      16 && (r.svgStyles = `fill: ${/*fillColor*/
      s[4]}; margin: 0; width: 20px; height: 20px;`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function i_(n) {
  let e, t;
  return e = new Sm({
    props: {
      svgStyles: `fill: ${/*fillColor*/
      n[4]}; margin: 0; width: 20px; height: 20px;`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*fillColor*/
      16 && (r.svgStyles = `fill: ${/*fillColor*/
      s[4]}; margin: 0; width: 20px; height: 20px;`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function o_(n) {
  let e, t;
  return e = new Gm({
    props: {
      svgStyles: `fill: ${/*fillColor*/
      n[4]}; margin: 0; width: 20px; height: 20px;`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*fillColor*/
      16 && (r.svgStyles = `fill: ${/*fillColor*/
      s[4]}; margin: 0; width: 20px; height: 20px;`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function d_(n) {
  let e, t;
  return e = new ym({
    props: {
      svgStyles: `fill: ${/*fillColor*/
      n[4]}; margin: 0; width: 20px; height: 20px;`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*fillColor*/
      16 && (r.svgStyles = `fill: ${/*fillColor*/
      s[4]}; margin: 0; width: 20px; height: 20px;`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function c_(n) {
  let e, t, s, a, r, o;
  const i = [
    d_,
    o_,
    i_,
    r_,
    a_,
    s_,
    n_,
    t_
  ], d = [];
  function c(l, C) {
    return (
      /*type*/
      l[2] === "delete" ? 0 : (
        /*type*/
        l[2] === "duplicate" ? 1 : (
          /*type*/
          l[2] === "edit" ? 2 : (
            /*type*/
            l[2] === "visibility" ? 3 : (
              /*type*/
              l[2] === "wand-stars" ? 4 : (
                /*type*/
                l[2] === "link-off" ? 5 : (
                  /*type*/
                  l[2] === "close" ? 6 : 7
                )
              )
            )
          )
        )
      )
    );
  }
  return t = c(n), s = d[t] = i[t](n), {
    c() {
      e = Z("button"), s.c(), R(
        e,
        "aria-label",
        /*tooltip*/
        n[0]
      ), R(e, "class", "icon-button svelte-1q1od4l");
    },
    m(l, C) {
      G(l, e, C), d[t].m(e, null), a = !0, r || (o = ce(
        e,
        "click",
        /*click_handler*/
        n[6]
      ), r = !0);
    },
    p(l, C) {
      let u = t;
      t = c(l), t === u ? d[t].p(l, C) : (he(), h(d[u], 1, 1, () => {
        d[u] = null;
      }), ye(), s = d[t], s ? s.p(l, C) : (s = d[t] = i[t](l), s.c()), L(s, 1), s.m(e, null)), (!a || C & /*tooltip*/
      1) && R(
        e,
        "aria-label",
        /*tooltip*/
        l[0]
      );
    },
    i(l) {
      a || (L(s), a = !0);
    },
    o(l) {
      h(s), a = !1;
    },
    d(l) {
      l && F(e), d[t].d(), r = !1, o();
    }
  };
}
function l_(n) {
  let e, t;
  return e = new la({
    props: {
      content: (
        /*tooltip*/
        n[0]
      ),
      hoverDelay: (
        /*showDelay*/
        n[3]
      ),
      side: (
        /*tooltipSide*/
        n[1]
      ),
      $$slots: { default: [c_] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*tooltip*/
      1 && (r.content = /*tooltip*/
      s[0]), a & /*showDelay*/
      8 && (r.hoverDelay = /*showDelay*/
      s[3]), a & /*tooltipSide*/
      2 && (r.side = /*tooltipSide*/
      s[1]), a & /*$$scope, tooltip, onClick, fillColor, type*/
      181 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function C_(n, e, t) {
  let { tooltip: s } = e, { tooltipSide: a = "top" } = e, { type: r } = e, { showDelay: o = 1e3 } = e, { fillColor: i = "var(--mdc-theme-primary)" } = e, { onClick: d } = e;
  const c = (l) => {
    l.stopPropagation(), d == null || d(l);
  };
  return n.$$set = (l) => {
    "tooltip" in l && t(0, s = l.tooltip), "tooltipSide" in l && t(1, a = l.tooltipSide), "type" in l && t(2, r = l.type), "showDelay" in l && t(3, o = l.showDelay), "fillColor" in l && t(4, i = l.fillColor), "onClick" in l && t(5, d = l.onClick);
  }, [s, a, r, o, i, d, c];
}
class gn extends me {
  constructor(e) {
    super(), ue(this, e, C_, l_, Ce, {
      tooltip: 0,
      tooltipSide: 1,
      type: 2,
      showDelay: 3,
      fillColor: 4,
      onClick: 5
    });
  }
}
const u_ = "finalize", m_ = "consider";
function as(n, e, t) {
  n.dispatchEvent(
    new CustomEvent(u_, {
      detail: { items: e, info: t }
    })
  );
}
function hn(n, e, t) {
  n.dispatchEvent(
    new CustomEvent(m_, {
      detail: { items: e, info: t }
    })
  );
}
const ua = "draggedEntered", gs = "draggedLeft", ma = "draggedOverIndex", Dr = "draggedLeftDocument", xs = {
  LEFT_FOR_ANOTHER: "leftForAnother",
  OUTSIDE_OF_ANY: "outsideOfAny"
};
function p_(n, e, t) {
  n.dispatchEvent(
    new CustomEvent(ua, {
      detail: { indexObj: e, draggedEl: t }
    })
  );
}
function __(n, e, t) {
  n.dispatchEvent(
    new CustomEvent(gs, {
      detail: { draggedEl: e, type: xs.LEFT_FOR_ANOTHER, theOtherDz: t }
    })
  );
}
function I_(n, e) {
  n.dispatchEvent(
    new CustomEvent(gs, {
      detail: { draggedEl: e, type: xs.OUTSIDE_OF_ANY }
    })
  );
}
function D_(n, e, t) {
  n.dispatchEvent(
    new CustomEvent(ma, {
      detail: { indexObj: e, draggedEl: t }
    })
  );
}
function b_(n) {
  window.dispatchEvent(
    new CustomEvent(Dr, {
      detail: { draggedEl: n }
    })
  );
}
const St = {
  DRAG_STARTED: "dragStarted",
  DRAGGED_ENTERED: ua,
  DRAGGED_ENTERED_ANOTHER: "dragEnteredAnother",
  DRAGGED_OVER_INDEX: ma,
  DRAGGED_LEFT: gs,
  DRAGGED_LEFT_ALL: "draggedLeftAll",
  DROPPED_INTO_ZONE: "droppedIntoZone",
  DROPPED_INTO_ANOTHER: "droppedIntoAnother",
  DROPPED_OUTSIDE_OF_ANY: "droppedOutsideOfAny",
  DRAG_STOPPED: "dragStopped"
}, zt = {
  POINTER: "pointer",
  KEYBOARD: "keyboard"
}, hs = "isDndShadowItem", pa = "data-is-dnd-shadow-item-internal", f_ = "data-is-dnd-shadow-item-hint", A_ = "id:dnd-shadow-placeholder-0000", E_ = "dnd-action-dragged-el";
let Ot = "id", Wa = 0;
function Gd() {
  Wa++;
}
function Vd() {
  if (Wa === 0)
    throw new Error("Bug! trying to decrement when there are no dropzones");
  Wa--;
}
const br = typeof window > "u";
function qa(n, e = !0) {
  let t;
  const s = e ? L_(n) : n.getBoundingClientRect(), a = getComputedStyle(n), r = a.transform;
  if (r) {
    let o, i, d, c;
    if (r.startsWith("matrix3d("))
      t = r.slice(9, -1).split(/, /), o = +t[0], i = +t[5], d = +t[12], c = +t[13];
    else if (r.startsWith("matrix("))
      t = r.slice(7, -1).split(/, /), o = +t[0], i = +t[3], d = +t[4], c = +t[5];
    else
      return s;
    const l = a.transformOrigin, C = s.x - d - (1 - o) * parseFloat(l), u = s.y - c - (1 - i) * parseFloat(l.slice(l.indexOf(" ") + 1)), m = o ? s.width / o : n.offsetWidth, p = i ? s.height / i : n.offsetHeight;
    return {
      x: C,
      y: u,
      width: m,
      height: p,
      top: u,
      right: C + m,
      bottom: u + p,
      left: C
    };
  } else
    return s;
}
function jd(n) {
  const e = qa(n);
  return {
    top: e.top + window.scrollY,
    bottom: e.bottom + window.scrollY,
    left: e.left + window.scrollX,
    right: e.right + window.scrollX
  };
}
function kd(n) {
  const e = n.getBoundingClientRect();
  return {
    top: e.top + window.scrollY,
    bottom: e.bottom + window.scrollY,
    left: e.left + window.scrollX,
    right: e.right + window.scrollX
  };
}
function wd(n) {
  return {
    x: (n.left + n.right) / 2,
    y: (n.top + n.bottom) / 2
  };
}
function O_(n, e) {
  return Math.sqrt(Math.pow(n.x - e.x, 2) + Math.pow(n.y - e.y, 2));
}
function _a(n, e) {
  return n.y <= e.bottom && n.y >= e.top && n.x >= e.left && n.x <= e.right;
}
function bs(n) {
  return wd(kd(n));
}
function ao(n, e) {
  const t = bs(n), s = jd(e);
  return _a(t, s);
}
function ro(n, e) {
  const t = bs(n), s = bs(e);
  return O_(t, s);
}
function S_(n) {
  const e = kd(n);
  return e.right < 0 || e.left > document.documentElement.scrollWidth || e.bottom < 0 || e.top > document.documentElement.scrollHeight;
}
function L_(n) {
  let e = n.getBoundingClientRect(), t = {
    top: e.top,
    bottom: e.bottom,
    left: e.left,
    right: e.right
  }, s = n.parentElement;
  for (; s && s !== document.body; ) {
    let a = s.getBoundingClientRect();
    const r = window.getComputedStyle(s).overflowY, o = window.getComputedStyle(s).overflowX, i = r === "scroll" || r === "auto", d = o === "scroll" || o === "auto";
    i && (t.top = Math.max(t.top, a.top), t.bottom = Math.min(t.bottom, a.bottom)), d && (t.left = Math.max(t.left, a.left), t.right = Math.min(t.right, a.right)), s = s.parentElement;
  }
  return t.top = Math.max(t.top, 0), t.bottom = Math.min(t.bottom, window.innerHeight), t.left = Math.max(t.left, 0), t.right = Math.min(t.right, window.innerWidth), {
    top: t.top,
    bottom: t.bottom,
    left: t.left,
    right: t.right,
    width: Math.max(0, t.right - t.left),
    height: Math.max(0, t.bottom - t.top)
  };
}
let es;
function fr() {
  es = /* @__PURE__ */ new Map();
}
fr();
function g_(n) {
  const e = Array.from(n.children).findIndex((t) => t.getAttribute(pa));
  if (e >= 0)
    return es.has(n) || es.set(n, /* @__PURE__ */ new Map()), es.get(n).set(e, jd(n.children[e])), e;
}
function h_(n, e) {
  if (!ao(n, e))
    return null;
  const t = e.children;
  if (t.length === 0)
    return { index: 0, isProximityBased: !0 };
  const s = g_(e);
  for (let o = 0; o < t.length; o++)
    if (ao(n, t[o])) {
      const i = es.has(e) && es.get(e).get(o);
      return i && !_a(bs(n), i) ? { index: s, isProximityBased: !1 } : { index: o, isProximityBased: !1 };
    }
  let a = Number.MAX_VALUE, r;
  for (let o = 0; o < t.length; o++) {
    const i = ro(n, t[o]);
    i < a && (a = i, r = o);
  }
  if (t.length > 0) {
    const o = t.length, d = t[o - 1].cloneNode(!1);
    d.style.visibility = "hidden", d.style.pointerEvents = "none", e.appendChild(d), ro(n, d) < a && (r = o), e.removeChild(d);
  }
  return { index: r, isProximityBased: !0 };
}
function ls(n) {
  return JSON.stringify(n, null, 2);
}
function $s(n) {
  if (!n)
    throw new Error("cannot get depth of a falsy node");
  return Bd(n, 0);
}
function Bd(n, e = 0) {
  return n.parentElement ? Bd(n.parentElement, e + 1) : e - 1;
}
function y_(n, e) {
  if (Object.keys(n).length !== Object.keys(e).length)
    return !1;
  for (const t in n)
    if (!{}.hasOwnProperty.call(e, t) || e[t] !== n[t])
      return !1;
  return !0;
}
function N_(n, e) {
  if (n.length !== e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (n[t] !== e[t])
      return !1;
  return !0;
}
const T_ = 200, io = 10;
let za;
function P_(n, e, t = T_, s) {
  let a, r, o = !1, i;
  const d = Array.from(e).sort((l, C) => $s(C) - $s(l));
  function c() {
    const l = bs(n), C = s.multiScrollIfNeeded();
    if (!C && i && Math.abs(i.x - l.x) < io && Math.abs(i.y - l.y) < io) {
      za = window.setTimeout(c, t);
      return;
    }
    if (S_(n)) {
      b_(n);
      return;
    }
    i = l;
    let u = !1;
    for (const m of d) {
      C && fr();
      const p = h_(n, m);
      if (p === null)
        continue;
      const { index: D } = p;
      u = !0, m !== a ? (a && __(a, n, m), p_(m, p, n), a = m) : D !== r && (D_(m, p, n), r = D);
      break;
    }
    !u && o && a ? (I_(a, n), a = void 0, r = void 0, o = !1) : o = !0, za = window.setTimeout(c, t);
  }
  c();
}
function v_() {
  clearTimeout(za), fr();
}
const Cs = 30;
function M_() {
  let n;
  function e() {
    n = { directionObj: void 0, stepPx: 0 };
  }
  e();
  function t(r) {
    const { directionObj: o, stepPx: i } = n;
    o && (r.scrollBy(o.x * i, o.y * i), window.requestAnimationFrame(() => t(r)));
  }
  function s(r) {
    return Cs - r;
  }
  function a(r, o) {
    if (!o)
      return !1;
    const i = R_(r, o), d = !!n.directionObj;
    if (i === null)
      return d && e(), !1;
    let [c, l] = [!1, !1];
    return o.scrollHeight > o.clientHeight && (i.bottom < Cs ? (c = !0, n.directionObj = { x: 0, y: 1 }, n.stepPx = s(i.bottom)) : i.top < Cs && (c = !0, n.directionObj = { x: 0, y: -1 }, n.stepPx = s(i.top)), !d && c) || o.scrollWidth > o.clientWidth && (i.right < Cs ? (l = !0, n.directionObj = { x: 1, y: 0 }, n.stepPx = s(i.right)) : i.left < Cs && (l = !0, n.directionObj = { x: -1, y: 0 }, n.stepPx = s(i.left)), !d && l) ? (t(o), !0) : (e(), !1);
  }
  return {
    scrollIfNeeded: a,
    resetScrolling: e
  };
}
function R_(n, e) {
  const t = e === document.scrollingElement ? {
    top: 0,
    bottom: window.innerHeight,
    left: 0,
    right: window.innerWidth
  } : e.getBoundingClientRect();
  return _a(n, t) ? {
    top: n.y - t.top,
    bottom: t.bottom - n.y,
    left: n.x - t.left,
    right: t.right - n.x
  } : null;
}
function F_(n = [], e) {
  const t = V_(n), s = Array.from(t).sort((i, d) => $s(d) - $s(i)), { scrollIfNeeded: a, resetScrolling: r } = M_();
  function o() {
    const i = e();
    if (!i || !s)
      return !1;
    const d = s.filter(
      (c) => _a(i, c.getBoundingClientRect()) || c === document.scrollingElement
    );
    for (let c = 0; c < d.length; c++)
      if (a(i, d[c]))
        return !0;
    return !1;
  }
  return {
    multiScrollIfNeeded: t.size > 0 ? o : () => !1,
    destroy: () => r()
  };
}
function G_(n) {
  if (!n)
    return [];
  const e = [];
  let t = n;
  for (; t; ) {
    const { overflow: s } = window.getComputedStyle(t);
    s.split(" ").some((a) => a.includes("auto") || a.includes("scroll")) && e.push(t), t = t.parentElement;
  }
  return e;
}
function V_(n) {
  const e = /* @__PURE__ */ new Set();
  for (let t of n)
    G_(t).forEach((s) => e.add(s));
  return (document.scrollingElement.scrollHeight > document.scrollingElement.clientHeight || document.scrollingElement.scrollWidth > document.scrollingElement.clientHeight) && e.add(document.scrollingElement), e;
}
function j_(n) {
  const e = n.cloneNode(!0), t = [], s = n.tagName === "SELECT", a = s ? [n] : [...n.querySelectorAll("select")];
  for (const i of a)
    t.push(i.value);
  if (a.length > 0) {
    const i = s ? [e] : [...e.querySelectorAll("select")];
    for (let d = 0; d < i.length; d++) {
      const c = i[d], l = t[d], C = c.querySelector(`option[value="${l}"`);
      C && C.setAttribute("selected", !0);
    }
  }
  const r = n.tagName === "CANVAS", o = r ? [n] : [...n.querySelectorAll("canvas")];
  if (o.length > 0) {
    const i = r ? [e] : [...e.querySelectorAll("canvas")];
    for (let d = 0; d < i.length; d++) {
      const c = o[d], l = i[d];
      l.width = c.width, l.height = c.height, c.width > 0 && c.height > 0 && l.getContext("2d").drawImage(c, 0, 0);
    }
  }
  return e;
}
const fs = Object.freeze({
  // This flag exists as a workaround for issue 454 (basically a browser bug) - seems like these rect values take time to update when in grid layout. Setting it to true can cause strange behaviour in the REPL for non-grid zones, see issue 470
  USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT: "USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT"
}), k_ = {
  [fs.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT]: !1
};
function Ud(n) {
  if (!fs[n])
    throw new Error(`Can't get non existing feature flag ${n}! Supported flags: ${Object.keys(fs)}`);
  return k_[n];
}
const w_ = 0.2;
function vn(n) {
  return `${n} ${w_}s ease`;
}
function B_(n, e) {
  const t = n.getBoundingClientRect(), s = j_(n);
  Hd(n, s), s.id = E_, s.style.position = "fixed";
  let a = t.top, r = t.left;
  if (s.style.top = `${a}px`, s.style.left = `${r}px`, e) {
    const o = wd(t);
    a -= o.y - e.y, r -= o.x - e.x, window.setTimeout(() => {
      s.style.top = `${a}px`, s.style.left = `${r}px`;
    }, 0);
  }
  return s.style.margin = "0", s.style.boxSizing = "border-box", s.style.height = `${t.height}px`, s.style.width = `${t.width}px`, s.style.transition = `${vn("top")}, ${vn("left")}, ${vn("background-color")}, ${vn("opacity")}, ${vn("color")} `, window.setTimeout(() => s.style.transition += `, ${vn("width")}, ${vn("height")}`, 0), s.style.zIndex = "9999", s.style.cursor = "grabbing", s;
}
function U_(n) {
  n.style.cursor = "grab";
}
function H_(n, e, t, s) {
  Hd(e, n);
  const a = e.getBoundingClientRect(), r = n.getBoundingClientRect(), o = a.width - r.width, i = a.height - r.height;
  if (o || i) {
    const d = {
      left: (t - r.left) / r.width,
      top: (s - r.top) / r.height
    };
    Ud(fs.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT) || (n.style.height = `${a.height}px`, n.style.width = `${a.width}px`), n.style.left = `${parseFloat(n.style.left) - d.left * o}px`, n.style.top = `${parseFloat(n.style.top) - d.top * i}px`;
  }
}
function Hd(n, e) {
  const t = window.getComputedStyle(n);
  Array.from(t).filter(
    (s) => s.startsWith("background") || s.startsWith("padding") || s.startsWith("font") || s.startsWith("text") || s.startsWith("align") || s.startsWith("justify") || s.startsWith("display") || s.startsWith("flex") || s.startsWith("border") || s === "opacity" || s === "color" || s === "list-style-type" || // copying with and height to make up for rect update timing issues in some browsers
    Ud(fs.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT) && (s === "width" || s === "height")
  ).forEach((s) => e.style.setProperty(s, t.getPropertyValue(s), t.getPropertyPriority(s)));
}
function K_(n, e) {
  n.draggable = !1, n.ondragstart = () => !1, e ? (n.style.userSelect = "", n.style.WebkitUserSelect = "", n.style.cursor = "") : (n.style.userSelect = "none", n.style.WebkitUserSelect = "none", n.style.cursor = "grab");
}
function Kd(n) {
  n.style.display = "none", n.style.position = "fixed", n.style.zIndex = "-5";
}
function W_(n) {
  n.style.visibility = "hidden", n.setAttribute(pa, "true");
}
function q_(n) {
  n.style.visibility = "", n.removeAttribute(pa);
}
function Ks(n, e = () => {
}, t = () => []) {
  n.forEach((s) => {
    const a = e(s);
    Object.keys(a).forEach((r) => {
      s.style[r] = a[r];
    }), t(s).forEach((r) => s.classList.add(r));
  });
}
function ea(n, e = () => {
}, t = () => []) {
  n.forEach((s) => {
    const a = e(s);
    Object.keys(a).forEach((r) => {
      s.style[r] = "";
    }), t(s).forEach((r) => s.classList.contains(r) && s.classList.remove(r));
  });
}
function z_(n) {
  const e = n.style.minHeight;
  n.style.minHeight = window.getComputedStyle(n).getPropertyValue("height");
  const t = n.style.minWidth;
  return n.style.minWidth = window.getComputedStyle(n).getPropertyValue("width"), function() {
    n.style.minHeight = e, n.style.minWidth = t;
  };
}
const X_ = "--any--", Z_ = 100, Y_ = 20, Vs = 3, Q_ = 80, oo = {
  outline: "rgba(255, 255, 102, 0.7) solid 2px"
}, co = "data-is-dnd-original-dragged-item";
let Kt, Et, Wt, Ia, mt, Da, Ln, Nt, on, vt, En = !1, Ar = !1, Er, ys = !1, Ws = [], _s, dn, ms = !1;
const sn = /* @__PURE__ */ new Map(), It = /* @__PURE__ */ new Map(), ja = /* @__PURE__ */ new WeakMap();
function J_(n, e) {
  sn.has(e) || sn.set(e, /* @__PURE__ */ new Set()), sn.get(e).has(n) || (sn.get(e).add(n), Gd());
}
function lo(n, e) {
  sn.get(e).delete(n), Vd(), sn.get(e).size === 0 && sn.delete(e);
}
function x_() {
  const n = sn.get(Ia);
  for (const s of n)
    s.addEventListener(ua, Wd), s.addEventListener(gs, qd), s.addEventListener(ma, zd);
  window.addEventListener(Dr, rs);
  const e = Math.max(...Array.from(n.keys()).map((s) => It.get(s).dropAnimationDurationMs)), t = e === 0 ? Y_ : Math.max(e, Z_);
  _s = F_(n, () => vt), P_(Et, n, t * 1.07, _s);
}
function $_() {
  const n = sn.get(Ia);
  for (const e of n)
    e.removeEventListener(ua, Wd), e.removeEventListener(gs, qd), e.removeEventListener(ma, zd);
  window.removeEventListener(Dr, rs), _s && (_s.destroy(), _s = void 0), v_();
}
function ba(n) {
  return n.findIndex((e) => !!e[hs]);
}
function eI(n) {
  return { ...n, [hs]: !0, [Ot]: A_ };
}
function Wd(n) {
  let { items: e, dropFromOthersDisabled: t } = It.get(n.currentTarget);
  if (t && n.currentTarget !== mt)
    return;
  if (ys = !1, e = e.filter((a) => a[Ot] !== Ln[Ot]), mt !== n.currentTarget) {
    const r = It.get(mt).items.filter((o) => !o[hs]);
    hn(mt, r, {
      trigger: St.DRAGGED_ENTERED_ANOTHER,
      id: Wt[Ot],
      source: zt.POINTER
    });
  }
  const { index: s } = n.detail.indexObj;
  Nt = n.currentTarget, e.splice(s, 0, Ln), hn(n.currentTarget, e, { trigger: St.DRAGGED_ENTERED, id: Wt[Ot], source: zt.POINTER });
}
function qd(n) {
  if (!En)
    return;
  const { items: e, dropFromOthersDisabled: t } = It.get(n.currentTarget);
  if (t && n.currentTarget !== mt && n.currentTarget !== Nt)
    return;
  const s = [...e], a = ba(s);
  a !== -1 && s.splice(a, 1);
  const r = Nt;
  Nt = void 0;
  const { type: o, theOtherDz: i } = n.detail;
  if (o === xs.OUTSIDE_OF_ANY || o === xs.LEFT_FOR_ANOTHER && i !== mt && It.get(i).dropFromOthersDisabled) {
    ys = !0, Nt = mt;
    const d = r === mt ? s : [...It.get(mt).items];
    d.splice(Da, 0, Ln), hn(mt, d, {
      trigger: St.DRAGGED_LEFT_ALL,
      id: Wt[Ot],
      source: zt.POINTER
    });
  }
  hn(n.currentTarget, s, {
    trigger: St.DRAGGED_LEFT,
    id: Wt[Ot],
    source: zt.POINTER
  });
}
function zd(n) {
  const { items: e, dropFromOthersDisabled: t } = It.get(n.currentTarget);
  if (t && n.currentTarget !== mt)
    return;
  const s = [...e];
  ys = !1;
  const { index: a } = n.detail.indexObj, r = ba(s);
  r !== -1 && s.splice(r, 1), s.splice(a, 0, Ln), hn(n.currentTarget, s, { trigger: St.DRAGGED_OVER_INDEX, id: Wt[Ot], source: zt.POINTER });
}
function ta(n) {
  n.preventDefault();
  const e = n.touches ? n.touches[0] : n;
  vt = { x: e.clientX, y: e.clientY }, Et.style.transform = `translate3d(${vt.x - on.x}px, ${vt.y - on.y}px, 0)`;
}
function rs() {
  Ar = !0, window.removeEventListener("mousemove", ta), window.removeEventListener("touchmove", ta), window.removeEventListener("mouseup", rs), window.removeEventListener("touchend", rs), $_(), U_(Et), Nt || (Nt = mt);
  let { items: n, type: e } = It.get(Nt);
  ea(
    sn.get(e),
    (a) => It.get(a).dropTargetStyle,
    (a) => It.get(a).dropTargetClasses
  );
  let t = ba(n);
  t === -1 && Nt === mt && (t = Da), n = n.map((a) => a[hs] ? Wt : a);
  function s() {
    Er(), as(Nt, n, {
      trigger: ys ? St.DROPPED_OUTSIDE_OF_ANY : St.DROPPED_INTO_ZONE,
      id: Wt[Ot],
      source: zt.POINTER
    }), Nt !== mt && as(mt, It.get(mt).items, {
      trigger: St.DROPPED_INTO_ANOTHER,
      id: Wt[Ot],
      source: zt.POINTER
    });
    const a = Array.from(Nt.children).find((r) => r.getAttribute(pa));
    a && q_(a), sI();
  }
  It.get(Nt).dropAnimationDisabled ? s() : tI(t, s);
}
function tI(n, e) {
  const t = n > -1 ? qa(Nt.children[n], !1) : qa(Nt, !1), s = {
    x: t.left - parseFloat(Et.style.left),
    y: t.top - parseFloat(Et.style.top)
  }, { dropAnimationDurationMs: a } = It.get(Nt), r = `transform ${a}ms ease`;
  Et.style.transition = Et.style.transition ? Et.style.transition + "," + r : r, Et.style.transform = `translate3d(${s.x}px, ${s.y}px, 0)`, window.setTimeout(e, a);
}
function nI(n, e) {
  Ws.push({ dz: n, destroy: e }), window.requestAnimationFrame(() => {
    Kd(n), document.body.appendChild(n);
  });
}
function sI() {
  Et && Et.remove && Et.remove(), Kt && Kt.remove && Kt.remove(), Et = void 0, Kt = void 0, Wt = void 0, Ia = void 0, mt = void 0, Da = void 0, Ln = void 0, Nt = void 0, on = void 0, vt = void 0, En = !1, Ar = !1, Er = void 0, ys = !1, dn && clearTimeout(dn), dn = void 0, ms = !1, Ws.length && (Ws.forEach(({ dz: n, destroy: e }) => {
    e(), n.remove();
  }), Ws = []);
}
function aI(n, e) {
  let t = !1;
  const s = {
    items: void 0,
    type: void 0,
    flipDurationMs: 0,
    dragDisabled: !1,
    morphDisabled: !1,
    dropFromOthersDisabled: !1,
    dropTargetStyle: oo,
    dropTargetClasses: [],
    transformDraggedElement: () => {
    },
    centreDraggedOnCursor: !1,
    dropAnimationDisabled: !1,
    delayTouchStartMs: 0
  };
  let a = /* @__PURE__ */ new Map();
  function r() {
    window.addEventListener("mousemove", d, { passive: !1 }), window.addEventListener("touchmove", d, { passive: !1, capture: !1 }), window.addEventListener("mouseup", i, { passive: !1 }), window.addEventListener("touchend", i, { passive: !1 });
  }
  function o() {
    window.removeEventListener("mousemove", d), window.removeEventListener("touchmove", d), window.removeEventListener("mouseup", i), window.removeEventListener("touchend", i), dn && (clearTimeout(dn), dn = void 0, ms = !1);
  }
  function i(u) {
    if (o(), Kt = void 0, on = void 0, vt = void 0, u.type === "touchend") {
      const m = new Event("click", {
        bubbles: !0,
        cancelable: !0
      });
      u.target.dispatchEvent(m);
    }
  }
  function d(u) {
    const m = !!u.touches, p = m ? u.touches[0] : u;
    if (m && s.delayTouchStartMs > 0 && !ms) {
      vt = { x: p.clientX, y: p.clientY }, (Math.abs(vt.x - on.x) >= Vs || Math.abs(vt.y - on.y) >= Vs) && (dn && (clearTimeout(dn), dn = void 0), i(u));
      return;
    }
    u.preventDefault(), vt = { x: p.clientX, y: p.clientY }, (Math.abs(vt.x - on.x) >= Vs || Math.abs(vt.y - on.y) >= Vs) && (o(), l());
  }
  function c(u) {
    if (u.target !== u.currentTarget && (u.target.value !== void 0 || u.target.isContentEditable) || u.button || En)
      return;
    const m = !!u.touches, p = m && s.delayTouchStartMs > 0;
    p || u.preventDefault(), u.stopPropagation();
    const D = m ? u.touches[0] : u;
    on = { x: D.clientX, y: D.clientY }, vt = { ...on }, Kt = u.currentTarget, p && (ms = !1, dn = window.setTimeout(() => {
      Kt && (ms = !0, o(), l());
    }, s.delayTouchStartMs)), r();
  }
  function l() {
    En = !0;
    const u = a.get(Kt);
    Da = u, mt = Kt.parentElement;
    const m = mt.closest("dialog") || mt.closest("[popover]") || mt.getRootNode(), p = m.body || m, { items: D, type: _, centreDraggedOnCursor: A } = s, b = [...D];
    Wt = b[u], Ia = _, Ln = eI(Wt), Et = B_(Kt, A && vt), p.appendChild(Et);
    function S() {
      Kt.parentElement ? window.requestAnimationFrame(S) : (Kt.setAttribute(co, !0), p.appendChild(Kt), x_(), Kd(Kt), Ln[Ot] = Wt[Ot], Et.focus());
    }
    window.requestAnimationFrame(S), Ks(
      Array.from(sn.get(s.type)).filter((f) => f === mt || !It.get(f).dropFromOthersDisabled),
      (f) => It.get(f).dropTargetStyle,
      (f) => It.get(f).dropTargetClasses
    ), b.splice(u, 1, Ln), Er = z_(mt), hn(mt, b, { trigger: St.DRAG_STARTED, id: Wt[Ot], source: zt.POINTER }), window.addEventListener("mousemove", ta, { passive: !1 }), window.addEventListener("touchmove", ta, { passive: !1, capture: !1 }), window.addEventListener("mouseup", rs, { passive: !1 }), window.addEventListener("touchend", rs, { passive: !1 });
  }
  function C({
    items: u = void 0,
    flipDurationMs: m = 0,
    type: p = X_,
    dragDisabled: D = !1,
    morphDisabled: _ = !1,
    dropFromOthersDisabled: A = !1,
    dropTargetStyle: b = oo,
    dropTargetClasses: S = [],
    transformDraggedElement: f = () => {
    },
    centreDraggedOnCursor: E = !1,
    dropAnimationDisabled: y = !1,
    delayTouchStart: I = !1
  }) {
    s.dropAnimationDurationMs = m;
    let N = 0;
    I === !0 ? N = Q_ : typeof I == "number" && isFinite(I) && I >= 0 && (N = I), s.delayTouchStartMs = N, s.type && p !== s.type && lo(n, s.type), s.type = p, s.items = [...u], s.dragDisabled = D, s.morphDisabled = _, s.transformDraggedElement = f, s.centreDraggedOnCursor = E, s.dropAnimationDisabled = y, t && En && !Ar && (!y_(b, s.dropTargetStyle) || !N_(S, s.dropTargetClasses)) && (ea(
      [n],
      () => s.dropTargetStyle,
      () => S
    ), Ks(
      [n],
      () => b,
      () => S
    )), s.dropTargetStyle = b, s.dropTargetClasses = [...S];
    function j(O, M) {
      return It.get(O) ? It.get(O)[M] : s[M];
    }
    t && En && s.dropFromOthersDisabled !== A && (A ? ea(
      [n],
      (O) => j(O, "dropTargetStyle"),
      (O) => j(O, "dropTargetClasses")
    ) : Ks(
      [n],
      (O) => j(O, "dropTargetStyle"),
      (O) => j(O, "dropTargetClasses")
    )), s.dropFromOthersDisabled = A, It.set(n, s), J_(n, p);
    const v = En ? ba(s.items) : -1;
    for (let O = 0; O < n.children.length; O++) {
      const M = n.children[O];
      if (K_(M, D), O === v) {
        _ || H_(Et, M, vt.x, vt.y), s.transformDraggedElement(Et, Wt, O), W_(M);
        continue;
      }
      M.removeEventListener("mousedown", ja.get(M)), M.removeEventListener("touchstart", ja.get(M)), D || (M.addEventListener("mousedown", c), M.addEventListener("touchstart", c), ja.set(M, c)), a.set(M, O), t || (t = !0);
    }
  }
  return C(e), {
    update: (u) => {
      C(u);
    },
    destroy: () => {
      function u() {
        lo(n, It.get(n).type), It.delete(n);
      }
      En && !n.closest(`[${co}]`) ? nI(n, u) : u();
    }
  };
}
const Xa = {
  DND_ZONE_ACTIVE: "dnd-zone-active",
  DND_ZONE_DRAG_DISABLED: "dnd-zone-drag-disabled"
}, Xd = {
  [Xa.DND_ZONE_ACTIVE]: "Tab to one the items and press space-bar or enter to start dragging it",
  [Xa.DND_ZONE_DRAG_DISABLED]: "This is a disabled drag and drop list"
}, rI = "dnd-action-aria-alert";
let ft;
function Za() {
  ft || (ft = document.createElement("div"), function() {
    ft.id = rI, ft.style.position = "fixed", ft.style.bottom = "0", ft.style.left = "0", ft.style.zIndex = "-5", ft.style.opacity = "0", ft.style.height = "0", ft.style.width = "0", ft.setAttribute("role", "alert");
  }(), document.body.prepend(ft), Object.entries(Xd).forEach(([n, e]) => document.body.prepend(dI(n, e))));
}
function iI() {
  return br ? null : (document.readyState === "complete" ? Za() : window.addEventListener("DOMContentLoaded", Za), { ...Xa });
}
function oI() {
  br || !ft || (Object.keys(Xd).forEach((n) => {
    var e;
    return (e = document.getElementById(n)) == null ? void 0 : e.remove();
  }), ft.remove(), ft = void 0);
}
function dI(n, e) {
  const t = document.createElement("div");
  return t.id = n, t.innerHTML = `<p>${e}</p>`, t.style.display = "none", t.style.position = "fixed", t.style.zIndex = "-5", t;
}
function ts(n) {
  if (br)
    return;
  ft || Za(), ft.innerHTML = "";
  const e = document.createTextNode(n);
  ft.appendChild(e), ft.style.display = "none", ft.style.display = "inline";
}
const cI = "--any--", Co = {
  outline: "rgba(255, 255, 102, 0.7) solid 2px"
};
let en = !1, Ya, Rt, Vn = "", Mn, cn, Sn = "";
const na = /* @__PURE__ */ new WeakSet(), uo = /* @__PURE__ */ new WeakMap(), mo = /* @__PURE__ */ new WeakMap(), Qa = /* @__PURE__ */ new Map(), yt = /* @__PURE__ */ new Map(), nn = /* @__PURE__ */ new Map();
let sa;
function lI(n, e) {
  nn.size === 0 && (sa = iI(), window.addEventListener("keydown", Zd), window.addEventListener("click", Yd)), nn.has(e) || nn.set(e, /* @__PURE__ */ new Set()), nn.get(e).has(n) || (nn.get(e).add(n), Gd());
}
function po(n, e) {
  Rt === n && As(), nn.get(e).delete(n), Vd(), nn.get(e).size === 0 && nn.delete(e), nn.size === 0 && (window.removeEventListener("keydown", Zd), window.removeEventListener("click", Yd), sa = void 0, oI());
}
function Zd(n) {
  if (en)
    switch (n.key) {
      case "Escape": {
        As();
        break;
      }
    }
}
function Yd() {
  en && (na.has(document.activeElement) || As());
}
function CI(n) {
  if (!en)
    return;
  const e = n.currentTarget;
  if (e === Rt)
    return;
  Vn = e.getAttribute("aria-label") || "";
  const { items: t } = yt.get(Rt), s = t.find((c) => c[Ot] === cn), a = t.indexOf(s), r = t.splice(a, 1)[0], { items: o, autoAriaDisabled: i } = yt.get(e);
  e.getBoundingClientRect().top < Rt.getBoundingClientRect().top || e.getBoundingClientRect().left < Rt.getBoundingClientRect().left ? (o.push(r), i || ts(`Moved item ${Sn} to the end of the list ${Vn}`)) : (o.unshift(r), i || ts(`Moved item ${Sn} to the beginning of the list ${Vn}`)), as(Rt, t, { trigger: St.DROPPED_INTO_ANOTHER, id: cn, source: zt.KEYBOARD }), as(e, o, { trigger: St.DROPPED_INTO_ZONE, id: cn, source: zt.KEYBOARD }), Rt = e;
}
function Qd() {
  Qa.forEach(({ update: n }, e) => n(yt.get(e)));
}
function As(n = !0) {
  yt.get(Rt).autoAriaDisabled || ts(`Stopped dragging item ${Sn}`), na.has(document.activeElement) && document.activeElement.blur(), n && hn(Rt, yt.get(Rt).items, {
    trigger: St.DRAG_STOPPED,
    id: cn,
    source: zt.KEYBOARD
  }), ea(
    nn.get(Ya),
    (e) => yt.get(e).dropTargetStyle,
    (e) => yt.get(e).dropTargetClasses
  ), Mn = null, cn = null, Sn = "", Ya = null, Rt = null, Vn = "", en = !1, Qd();
}
function uI(n, e) {
  const t = {
    items: void 0,
    type: void 0,
    dragDisabled: !1,
    zoneTabIndex: 0,
    zoneItemTabIndex: 0,
    dropFromOthersDisabled: !1,
    dropTargetStyle: Co,
    dropTargetClasses: [],
    autoAriaDisabled: !1
  };
  function s(l, C, u) {
    l.length <= 1 || l.splice(u, 1, l.splice(C, 1, l[u])[0]);
  }
  function a(l) {
    switch (l.key) {
      case "Enter":
      case " ": {
        if ((l.target.disabled !== void 0 || l.target.href || l.target.isContentEditable) && !na.has(l.target))
          return;
        l.preventDefault(), l.stopPropagation(), en ? As() : r(l);
        break;
      }
      case "ArrowDown":
      case "ArrowRight": {
        if (!en)
          return;
        l.preventDefault(), l.stopPropagation();
        const { items: C } = yt.get(n), u = Array.from(n.children), m = u.indexOf(l.currentTarget);
        m < u.length - 1 && (t.autoAriaDisabled || ts(`Moved item ${Sn} to position ${m + 2} in the list ${Vn}`), s(C, m, m + 1), as(n, C, { trigger: St.DROPPED_INTO_ZONE, id: cn, source: zt.KEYBOARD }));
        break;
      }
      case "ArrowUp":
      case "ArrowLeft": {
        if (!en)
          return;
        l.preventDefault(), l.stopPropagation();
        const { items: C } = yt.get(n), m = Array.from(n.children).indexOf(l.currentTarget);
        m > 0 && (t.autoAriaDisabled || ts(`Moved item ${Sn} to position ${m} in the list ${Vn}`), s(C, m, m - 1), as(n, C, { trigger: St.DROPPED_INTO_ZONE, id: cn, source: zt.KEYBOARD }));
        break;
      }
    }
  }
  function r(l) {
    i(l.currentTarget), Rt = n, Ya = t.type, en = !0;
    const C = Array.from(nn.get(t.type)).filter((u) => u === Rt || !yt.get(u).dropFromOthersDisabled);
    if (Ks(
      C,
      (u) => yt.get(u).dropTargetStyle,
      (u) => yt.get(u).dropTargetClasses
    ), !t.autoAriaDisabled) {
      let u = `Started dragging item ${Sn}. Use the arrow keys to move it within its list ${Vn}`;
      C.length > 1 && (u += ", or tab to another list in order to move the item into it"), ts(u);
    }
    hn(n, yt.get(n).items, { trigger: St.DRAG_STARTED, id: cn, source: zt.KEYBOARD }), Qd();
  }
  function o(l) {
    en && l.currentTarget !== Mn && (l.stopPropagation(), As(!1), r(l));
  }
  function i(l) {
    const { items: C } = yt.get(n), u = Array.from(n.children), m = u.indexOf(l);
    Mn = l, Mn.tabIndex = t.zoneItemTabIndex, cn = C[m][Ot], Sn = u[m].getAttribute("aria-label") || "";
  }
  function d({
    items: l = [],
    type: C = cI,
    dragDisabled: u = !1,
    zoneTabIndex: m = 0,
    zoneItemTabIndex: p = 0,
    dropFromOthersDisabled: D = !1,
    dropTargetStyle: _ = Co,
    dropTargetClasses: A = [],
    autoAriaDisabled: b = !1
  }) {
    t.items = [...l], t.dragDisabled = u, t.dropFromOthersDisabled = D, t.zoneTabIndex = m, t.zoneItemTabIndex = p, t.dropTargetStyle = _, t.dropTargetClasses = A, t.autoAriaDisabled = b, t.type && C !== t.type && po(n, t.type), t.type = C, lI(n, C), b || (n.setAttribute("aria-disabled", u), n.setAttribute("role", "list"), n.setAttribute("aria-describedby", u ? sa.DND_ZONE_DRAG_DISABLED : sa.DND_ZONE_ACTIVE)), yt.set(n, t), en ? n.tabIndex = n === Rt || Mn.contains(n) || t.dropFromOthersDisabled || Rt && t.type !== yt.get(Rt).type ? -1 : 0 : n.tabIndex = t.zoneTabIndex, n.addEventListener("focus", CI);
    for (let S = 0; S < n.children.length; S++) {
      const f = n.children[S];
      na.add(f), f.tabIndex = en ? -1 : t.zoneItemTabIndex, b || f.setAttribute("role", "listitem"), f.removeEventListener("keydown", uo.get(f)), f.removeEventListener("click", mo.get(f)), u || (f.addEventListener("keydown", a), uo.set(f, a), f.addEventListener("click", o), mo.set(f, o)), en && t.items[S][Ot] === cn && (Mn = f, Mn.tabIndex = t.zoneItemTabIndex, f.focus());
    }
  }
  d(e);
  const c = {
    update: (l) => {
      d(l);
    },
    destroy: () => {
      po(n, t.type), yt.delete(n), Qa.delete(n);
    }
  };
  return Qa.set(n, c), c;
}
function Jd(n, e) {
  if (mI(n))
    return {
      update: () => {
      },
      destroy: () => {
      }
    };
  _o(e);
  const t = aI(n, e), s = uI(n, e);
  return {
    update: (a) => {
      _o(a), t.update(a), s.update(a);
    },
    destroy: () => {
      t.destroy(), s.destroy();
    }
  };
}
function mI(n) {
  return !!n.closest(`[${f_}="true"]`);
}
function _o(n) {
  const {
    items: e,
    flipDurationMs: t,
    type: s,
    dragDisabled: a,
    morphDisabled: r,
    dropFromOthersDisabled: o,
    zoneTabIndex: i,
    zoneItemTabIndex: d,
    dropTargetStyle: c,
    dropTargetClasses: l,
    transformDraggedElement: C,
    autoAriaDisabled: u,
    centreDraggedOnCursor: m,
    delayTouchStart: p,
    dropAnimationDisabled: D,
    ..._
  } = n;
  if (Object.keys(_).length > 0 && console.warn("dndzone will ignore unknown options", _), !e)
    throw new Error("no 'items' key provided to dndzone");
  const A = e.find((b) => !{}.hasOwnProperty.call(b, Ot));
  if (A)
    throw new Error(`missing '${Ot}' property for item ${ls(A)}`);
  if (l && !Array.isArray(l))
    throw new Error(`dropTargetClasses should be an array but instead it is a ${typeof l}, ${ls(l)}`);
  if (i && !Io(i))
    throw new Error(`zoneTabIndex should be a number but instead it is a ${typeof i}, ${ls(i)}`);
  if (d && !Io(d))
    throw new Error(`zoneItemTabIndex should be a number but instead it is a ${typeof d}, ${ls(d)}`);
  if (p !== void 0 && p !== !1) {
    const b = p === !0, S = typeof p == "number" && isFinite(p) && p >= 0;
    if (!b && !S)
      throw new Error(
        `delayTouchStart should be a boolean (true/false) or a non-negative number but instead it is a ${typeof p}, ${ls(
          p
        )}`
      );
  }
}
function Io(n) {
  return !isNaN(n) && function(e) {
    return (e | 0) === e;
  }(parseFloat(n));
}
function xd(n) {
  const e = n - 1;
  return e * e * e + 1;
}
function pI(n, { from: e, to: t }, s = {}) {
  const a = getComputedStyle(n), r = a.transform === "none" ? "" : a.transform, [o, i] = a.transformOrigin.split(" ").map(parseFloat), d = e.left + e.width * o / t.width - (t.left + o), c = e.top + e.height * i / t.height - (t.top + i), { delay: l = 0, duration: C = (m) => Math.sqrt(m) * 120, easing: u = xd } = s;
  return {
    delay: l,
    duration: Fe(C) ? C(Math.sqrt(d * d + c * c)) : C,
    easing: u,
    css: (m, p) => {
      const D = p * d, _ = p * c, A = m + p * e.width / t.width, b = m + p * e.height / t.height;
      return `transform: ${r} translate(${D}px, ${_}px) scale(${A}, ${b});`;
    }
  };
}
const Or = Ft([]), $d = {
  subscribe: Or.subscribe
};
function Sr(n) {
  Or.update((e) => [...e, n]);
}
async function _I(n, e) {
  var t;
  return (t = n.ref) != null && t.canClose ? await n.ref.canClose(e) : !0;
}
async function us(n = "button") {
  const e = rn($d);
  if (!e.length)
    return;
  const t = e[e.length - 1];
  await _I(t, n) && Or.update((a) => a.slice(0, -1));
}
function Do(n, { delay: e = 0, duration: t = 400, easing: s = xd, x: a = 0, y: r = 0, opacity: o = 0 } = {}) {
  const i = getComputedStyle(n), d = +i.opacity, c = i.transform === "none" ? "" : i.transform, l = d * (1 - o), [C, u] = Br(a), [m, p] = Br(r);
  return {
    delay: e,
    duration: t,
    easing: s,
    css: (D, _) => `
			transform: ${c} translate(${(1 - D) * C}${u}, ${(1 - D) * m}${p});
			opacity: ${d - l * _}`
  };
}
function bo(n, e, t) {
  const s = n.slice();
  return s[16] = e[t], s[17] = e, s[18] = t, s;
}
function fo(n, e, t) {
  const s = n.slice();
  return s[19] = e[t], s;
}
function Ao(n) {
  let e, t, s;
  return {
    c() {
      e = Z("div"), R(e, "class", "drawer-backdrop svelte-50u54e"), ln(
        e,
        "z-index",
        /*zBase*/
        n[2] + /*drawerList*/
        (n[0].length - 1) * 2
      );
    },
    m(a, r) {
      G(a, e, r), t || (s = [
        ce(
          e,
          "click",
          /*click_handler*/
          n[9]
        ),
        ce(e, "pointerdown", vs(
          /*pointerdown_handler*/
          n[5]
        )),
        ce(e, "pointerup", vs(
          /*pointerup_handler*/
          n[6]
        )),
        ce(e, "pointermove", vs(
          /*pointermove_handler*/
          n[7]
        )),
        ce(e, "wheel", vs(
          /*wheel_handler*/
          n[8]
        ))
      ], t = !0);
    },
    p(a, r) {
      r & /*zBase, drawerList*/
      5 && ln(
        e,
        "z-index",
        /*zBase*/
        a[2] + /*drawerList*/
        (a[0].length - 1) * 2
      );
    },
    d(a) {
      a && F(e), t = !1, ze(s);
    }
  };
}
function II(n) {
  let e;
  return {
    c() {
      e = Se("Save & Close");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function DI(n) {
  let e;
  return {
    c() {
      e = Se("Cancel");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function Eo(n) {
  let e, t = (
    /*d*/
    n[19].title + ""
  ), s, a, r;
  return {
    c() {
      e = Z("span"), s = Se(t), a = $(), r = Z("span"), r.textContent = "›", R(e, "class", "breadcrumb-segment svelte-50u54e"), R(r, "class", "breadcrumb-separator svelte-50u54e");
    },
    m(o, i) {
      G(o, e, i), U(e, s), G(o, a, i), G(o, r, i);
    },
    p(o, i) {
      i & /*drawerList*/
      1 && t !== (t = /*d*/
      o[19].title + "") && je(s, t);
    },
    d(o) {
      o && (F(e), F(a), F(r));
    }
  };
}
function Oo(n, e) {
  let t, s, a, r, o, i, d, c, l, C, u = (
    /*drawer*/
    e[16].title + ""
  ), m, p, D, _, A, b, S = (
    /*each_value*/
    e[17]
  ), f = (
    /*index*/
    e[18]
  ), E, y, I, N;
  r = new ss({
    props: {
      variant: "unelevated",
      color: "primary",
      style: `background: white;
            color: var(--mdc-theme-primary, #ff3e00)`,
      $$slots: { default: [II] },
      $$scope: { ctx: e }
    }
  }), r.$on(
    "click",
    /*click_handler_1*/
    e[10]
  ), i = new ss({
    props: {
      variant: "unelevated",
      color: "secondary",
      style: `
            background: #6B9197;
            color: white`,
      $$slots: { default: [DI] },
      $$scope: { ctx: e }
    }
  }), i.$on(
    "click",
    /*click_handler_2*/
    e[11]
  );
  let j = Vt(
    /*drawerList*/
    e[0].slice(
      0,
      /*index*/
      e[18]
    )
  ), v = [];
  for (let B = 0; B < j.length; B += 1)
    v[B] = Eo(fo(e, j, B));
  D = new gn({
    props: {
      type: "close",
      fillColor: "white",
      onClick: (
        /*func*/
        e[12]
      ),
      tooltip: "Close",
      tooltipSide: "left"
    }
  });
  const O = [
    /*drawer*/
    e[16].props
  ], M = () => (
    /*switch_instance_binding*/
    e[13](b, S, f)
  ), P = () => (
    /*switch_instance_binding*/
    e[13](null, S, f)
  );
  var g = (
    /*drawer*/
    e[16].component
  );
  function W(B, H) {
    let w = {};
    for (let T = 0; T < O.length; T += 1)
      w = te(w, O[T]);
    return H !== void 0 && H & /*drawerList*/
    1 && (w = te(w, Ee(O, [Ne(
      /*drawer*/
      B[16].props
    )]))), { props: w };
  }
  return g && (b = Gt(g, W(e)), M()), {
    key: n,
    first: null,
    c() {
      t = Z("div"), s = Z("div"), a = Z("div"), X(r.$$.fragment), o = $(), X(i.$$.fragment), d = $(), c = Z("div");
      for (let B = 0; B < v.length; B += 1)
        v[B].c();
      l = $(), C = Z("span"), m = Se(u), p = $(), X(D.$$.fragment), _ = $(), A = Z("div"), b && X(b.$$.fragment), E = $(), R(a, "class", "drawer-header__actions svelte-50u54e"), R(C, "class", "breadcrumb-current svelte-50u54e"), R(c, "class", "drawer-header__breadcrumbs svelte-50u54e"), R(s, "class", "drawer-header svelte-50u54e"), R(A, "class", "drawer-body svelte-50u54e"), R(t, "class", "drawer svelte-50u54e"), ln(
        t,
        "width",
        /*baseWidth*/
        e[1] - /*index*/
        e[18] * Ja + "px"
      ), ln(
        t,
        "z-index",
        /*zBase*/
        e[2] + /*index*/
        e[18] * 2 + 1
      ), this.first = t;
    },
    m(B, H) {
      G(B, t, H), U(t, s), U(s, a), q(r, a, null), U(a, o), q(i, a, null), U(s, d), U(s, c);
      for (let w = 0; w < v.length; w += 1)
        v[w] && v[w].m(c, null);
      U(c, l), U(c, C), U(C, m), U(s, p), q(D, s, null), U(t, _), U(t, A), b && q(b, A, null), U(t, E), N = !0;
    },
    p(B, H) {
      e = B;
      const w = {};
      H & /*$$scope*/
      4194304 && (w.$$scope = { dirty: H, ctx: e }), r.$set(w);
      const T = {};
      if (H & /*$$scope*/
      4194304 && (T.$$scope = { dirty: H, ctx: e }), i.$set(T), H & /*drawerList*/
      1) {
        j = Vt(
          /*drawerList*/
          e[0].slice(
            0,
            /*index*/
            e[18]
          )
        );
        let Y;
        for (Y = 0; Y < j.length; Y += 1) {
          const Ie = fo(e, j, Y);
          v[Y] ? v[Y].p(Ie, H) : (v[Y] = Eo(Ie), v[Y].c(), v[Y].m(c, l));
        }
        for (; Y < v.length; Y += 1)
          v[Y].d(1);
        v.length = j.length;
      }
      if ((!N || H & /*drawerList*/
      1) && u !== (u = /*drawer*/
      e[16].title + "") && je(m, u), (S !== /*each_value*/
      e[17] || f !== /*index*/
      e[18]) && (P(), S = /*each_value*/
      e[17], f = /*index*/
      e[18], M()), H & /*drawerList*/
      1 && g !== (g = /*drawer*/
      e[16].component)) {
        if (b) {
          he();
          const Y = b;
          h(Y.$$.fragment, 1, 0, () => {
            z(Y, 1);
          }), ye();
        }
        g ? (b = Gt(g, W(e, H)), M(), X(b.$$.fragment), L(b.$$.fragment, 1), q(b, A, null)) : b = null;
      } else if (g) {
        const Y = H & /*drawerList*/
        1 ? Ee(O, [Ne(
          /*drawer*/
          e[16].props
        )]) : {};
        b.$set(Y);
      }
      (!N || H & /*baseWidth, drawerList*/
      3) && ln(
        t,
        "width",
        /*baseWidth*/
        e[1] - /*index*/
        e[18] * Ja + "px"
      ), (!N || H & /*zBase, drawerList*/
      5) && ln(
        t,
        "z-index",
        /*zBase*/
        e[2] + /*index*/
        e[18] * 2 + 1
      );
    },
    i(B) {
      N || (L(r.$$.fragment, B), L(i.$$.fragment, B), L(D.$$.fragment, B), b && L(b.$$.fragment, B), B && ns(() => {
        N && (I && I.end(1), y = $c(t, Do, {
          x: (
            /*baseWidth*/
            e[1] + 200
          ),
          duration: 200
        }), y.start());
      }), N = !0);
    },
    o(B) {
      h(r.$$.fragment, B), h(i.$$.fragment, B), h(D.$$.fragment, B), b && h(b.$$.fragment, B), y && y.invalidate(), B && (I = el(t, Do, {
        x: (
          /*baseWidth*/
          e[1] + 200
        ),
        duration: 200
      })), N = !1;
    },
    d(B) {
      B && F(t), z(r), z(i), lr(v, B), z(D), P(), b && z(b), B && I && I.end();
    }
  };
}
function bI(n) {
  let e, t, s = [], a = /* @__PURE__ */ new Map(), r, o = (
    /*drawerList*/
    n[0].length > 0 && Ao(n)
  ), i = Vt(
    /*drawerList*/
    n[0]
  );
  const d = (c) => (
    /*index*/
    c[18]
  );
  for (let c = 0; c < i.length; c += 1) {
    let l = bo(n, i, c), C = d(l);
    a.set(C, s[c] = Oo(C, l));
  }
  return {
    c() {
      e = Z("div"), o && o.c(), t = $();
      for (let c = 0; c < s.length; c += 1)
        s[c].c();
      R(e, "class", "drawer-stack svelte-50u54e");
    },
    m(c, l) {
      G(c, e, l), o && o.m(e, null), U(e, t);
      for (let C = 0; C < s.length; C += 1)
        s[C] && s[C].m(e, null);
      r = !0;
    },
    p(c, [l]) {
      /*drawerList*/
      c[0].length > 0 ? o ? o.p(c, l) : (o = Ao(c), o.c(), o.m(e, t)) : o && (o.d(1), o = null), l & /*baseWidth, drawerList, widthStep, zBase*/
      7 && (i = Vt(
        /*drawerList*/
        c[0]
      ), he(), s = Ss(s, l, d, 1, c, i, a, e, Os, Oo, null, bo), ye());
    },
    i(c) {
      if (!r) {
        for (let l = 0; l < i.length; l += 1)
          L(s[l]);
        r = !0;
      }
    },
    o(c) {
      for (let l = 0; l < s.length; l += 1)
        h(s[l]);
      r = !1;
    },
    d(c) {
      c && F(e), o && o.d();
      for (let l = 0; l < s.length; l += 1)
        s[l].d();
    }
  };
}
const Ja = 45;
function fI(n, e, t) {
  let s, a, r;
  Ye(n, $d, (S) => t(4, r = S));
  let o = [], i = window.innerWidth;
  function d() {
    t(3, i = window.innerWidth);
  }
  function c(S) {
    S.key === "Escape" && o.length > 0 && us("esc");
  }
  at(() => {
    window.addEventListener("resize", d), window.addEventListener("keydown", c);
  }), an(() => {
    window.removeEventListener("resize", d), window.removeEventListener("keydown", c), document.body.style.overflow = "";
  });
  function l(S) {
    Cn.call(this, n, S);
  }
  function C(S) {
    Cn.call(this, n, S);
  }
  function u(S) {
    Cn.call(this, n, S);
  }
  function m(S) {
    Cn.call(this, n, S);
  }
  const p = () => us("backdrop"), D = () => us("save"), _ = () => us("cancel"), A = () => us("button");
  function b(S, f, E) {
    de[S ? "unshift" : "push"](() => {
      f[E].ref = S, t(0, o), t(4, r);
    });
  }
  return n.$$.update = () => {
    n.$$.dirty & /*$drawers*/
    16 && t(0, o = r), n.$$.dirty & /*drawerList*/
    1 && (o.length > 0 ? document.body.style.overflow = "hidden" : document.body.style.overflow = ""), n.$$.dirty & /*innerWidth*/
    8 && t(1, a = Math.floor(Math.max(i - Ja * 1.5, 300)));
  }, t(2, s = 1e3), [
    o,
    a,
    s,
    i,
    r,
    l,
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    b
  ];
}
class AI extends me {
  constructor(e) {
    super(), ue(this, e, fI, bI, Ce, {});
  }
}
function So(n, e, t) {
  const s = n.slice();
  return s[58] = e[t], s[60] = t, s;
}
const EI = (n) => ({}), Lo = (n) => ({}), OI = (n) => ({ match: n[0] & /*matches*/
32768 }), go = (n) => ({ match: (
  /*match*/
  n[58]
) }), SI = (n) => ({}), ho = (n) => ({}), LI = (n) => ({}), yo = (n) => ({});
function gI(n) {
  let e, t, s;
  const a = [
    { label: (
      /*label*/
      n[6]
    ) },
    { disabled: (
      /*disabled*/
      n[7]
    ) },
    Je(
      /*$$restProps*/
      n[28],
      "textfield$"
    )
  ];
  function r(i) {
    n[44](i);
  }
  let o = {};
  for (let i = 0; i < a.length; i += 1)
    o = te(o, a[i]);
  return (
    /*text*/
    n[1] !== void 0 && (o.value = /*text*/
    n[1]), e = new oa({ props: o }), de.push(() => Ve(e, "value", r)), {
      c() {
        X(e.$$.fragment);
      },
      m(i, d) {
        q(e, i, d), s = !0;
      },
      p(i, d) {
        const c = d[0] & /*label, disabled, $$restProps*/
        268435648 ? Ee(a, [
          d[0] & /*label*/
          64 && { label: (
            /*label*/
            i[6]
          ) },
          d[0] & /*disabled*/
          128 && { disabled: (
            /*disabled*/
            i[7]
          ) },
          d[0] & /*$$restProps*/
          268435456 && Ne(Je(
            /*$$restProps*/
            i[28],
            "textfield$"
          ))
        ]) : {};
        !t && d[0] & /*text*/
        2 && (t = !0, c.value = /*text*/
        i[1], we(() => t = !1)), e.$set(c);
      },
      i(i) {
        s || (L(e.$$.fragment, i), s = !0);
      },
      o(i) {
        h(e.$$.fragment, i), s = !1;
      },
      d(i) {
        z(e, i);
      }
    }
  );
}
function hI(n) {
  let e, t, s = Vt(
    /*matches*/
    n[15]
  ), a = [];
  for (let i = 0; i < s.length; i += 1)
    a[i] = To(So(n, s, i));
  const r = (i) => h(a[i], 1, 1, () => {
    a[i] = null;
  });
  let o = null;
  return s.length || (o = No(n)), {
    c() {
      for (let i = 0; i < a.length; i += 1)
        a[i].c();
      e = st(), o && o.c();
    },
    m(i, d) {
      for (let c = 0; c < a.length; c += 1)
        a[c] && a[c].m(i, d);
      G(i, e, d), o && o.m(i, d), t = !0;
    },
    p(i, d) {
      if (d[0] & /*getOptionDisabled, matches, value, focusedIndex, toggle, toggleOption, selectOption, getOptionLabel, noMatchesActionDisabled, element*/
      50561841 | d[1] & /*$$scope*/
      4194304) {
        s = Vt(
          /*matches*/
          i[15]
        );
        let c;
        for (c = 0; c < s.length; c += 1) {
          const l = So(i, s, c);
          a[c] ? (a[c].p(l, d), L(a[c], 1)) : (a[c] = To(l), a[c].c(), L(a[c], 1), a[c].m(e.parentNode, e));
        }
        for (he(), c = s.length; c < a.length; c += 1)
          r(c);
        ye(), !s.length && o ? o.p(i, d) : s.length ? o && (he(), h(o, 1, 1, () => {
          o = null;
        }), ye()) : (o = No(i), o.c(), L(o, 1), o.m(e.parentNode, e));
      }
    },
    i(i) {
      if (!t) {
        for (let d = 0; d < s.length; d += 1)
          L(a[d]);
        t = !0;
      }
    },
    o(i) {
      a = a.filter(Boolean);
      for (let d = 0; d < a.length; d += 1)
        h(a[d]);
      t = !1;
    },
    d(i) {
      i && F(e), lr(a, i), o && o.d(i);
    }
  };
}
function yI(n) {
  let e, t;
  return e = new da({
    props: {
      disabled: !0,
      $$slots: { default: [jI] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[1] & /*$$scope*/
      4194304 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function NI(n) {
  let e, t;
  return e = new da({
    props: {
      disabled: !0,
      $$slots: { default: [BI] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[1] & /*$$scope*/
      4194304 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function No(n) {
  let e, t;
  return e = new da({
    props: {
      disabled: (
        /*noMatchesActionDisabled*/
        n[9]
      ),
      $$slots: { default: [vI] },
      $$scope: { ctx: n }
    }
  }), e.$on(
    "SMUI:action",
    /*SMUI_action_handler_1*/
    n[50]
  ), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[0] & /*noMatchesActionDisabled*/
      512 && (r.disabled = /*noMatchesActionDisabled*/
      s[9]), a[1] & /*$$scope*/
      4194304 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function TI(n) {
  let e;
  return {
    c() {
      e = Se("No matches found.");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function PI(n) {
  let e, t;
  return e = new ca({
    props: {
      $$slots: { default: [TI] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[1] & /*$$scope*/
      4194304 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function vI(n) {
  let e, t;
  const s = (
    /*#slots*/
    n[43]["no-matches"]
  ), a = Pe(
    s,
    n,
    /*$$scope*/
    n[53],
    Lo
  ), r = a || PI(n);
  return {
    c() {
      r && r.c(), e = $();
    },
    m(o, i) {
      r && r.m(o, i), G(o, e, i), t = !0;
    },
    p(o, i) {
      a && a.p && (!t || i[1] & /*$$scope*/
      4194304) && Me(
        a,
        s,
        o,
        /*$$scope*/
        o[53],
        t ? ve(
          s,
          /*$$scope*/
          o[53],
          i,
          EI
        ) : Re(
          /*$$scope*/
          o[53]
        ),
        Lo
      );
    },
    i(o) {
      t || (L(r, o), t = !0);
    },
    o(o) {
      h(r, o), t = !1;
    },
    d(o) {
      o && F(e), r && r.d(o);
    }
  };
}
function MI(n) {
  let e = (
    /*getOptionLabel*/
    n[5](
      /*match*/
      n[58]
    ) + ""
  ), t;
  return {
    c() {
      t = Se(e);
    },
    m(s, a) {
      G(s, t, a);
    },
    p(s, a) {
      a[0] & /*getOptionLabel, matches*/
      32800 && e !== (e = /*getOptionLabel*/
      s[5](
        /*match*/
        s[58]
      ) + "") && je(t, e);
    },
    d(s) {
      s && F(t);
    }
  };
}
function RI(n) {
  let e, t;
  return e = new ca({
    props: {
      $$slots: { default: [MI] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[0] & /*getOptionLabel, matches*/
      32800 | a[1] & /*$$scope*/
      4194304 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function FI(n) {
  let e, t;
  const s = (
    /*#slots*/
    n[43].match
  ), a = Pe(
    s,
    n,
    /*$$scope*/
    n[53],
    go
  ), r = a || RI(n);
  return {
    c() {
      r && r.c(), e = $();
    },
    m(o, i) {
      r && r.m(o, i), G(o, e, i), t = !0;
    },
    p(o, i) {
      a ? a.p && (!t || i[0] & /*matches*/
      32768 | i[1] & /*$$scope*/
      4194304) && Me(
        a,
        s,
        o,
        /*$$scope*/
        o[53],
        t ? ve(
          s,
          /*$$scope*/
          o[53],
          i,
          OI
        ) : Re(
          /*$$scope*/
          o[53]
        ),
        go
      ) : r && r.p && (!t || i[0] & /*getOptionLabel, matches*/
      32800) && r.p(o, t ? i : [-1, -1]);
    },
    i(o) {
      t || (L(r, o), t = !0);
    },
    o(o) {
      h(r, o), t = !1;
    },
    d(o) {
      o && F(e), r && r.d(o);
    }
  };
}
function To(n) {
  let e, t;
  function s() {
    return (
      /*mouseenter_handler*/
      n[48](
        /*i*/
        n[60]
      )
    );
  }
  function a() {
    return (
      /*SMUI_action_handler*/
      n[49](
        /*match*/
        n[58]
      )
    );
  }
  return e = new da({
    props: {
      disabled: (
        /*getOptionDisabled*/
        n[4](
          /*match*/
          n[58]
        )
      ),
      selected: (
        /*match*/
        n[58] === /*value*/
        n[0]
      ),
      $$slots: { default: [FI] },
      $$scope: { ctx: n }
    }
  }), e.$on("mouseenter", s), e.$on("SMUI:action", a), {
    c() {
      X(e.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), t = !0;
    },
    p(r, o) {
      n = r;
      const i = {};
      o[0] & /*getOptionDisabled, matches*/
      32784 && (i.disabled = /*getOptionDisabled*/
      n[4](
        /*match*/
        n[58]
      )), o[0] & /*matches, value*/
      32769 && (i.selected = /*match*/
      n[58] === /*value*/
      n[0]), o[0] & /*getOptionLabel, matches*/
      32800 | o[1] & /*$$scope*/
      4194304 && (i.$$scope = { dirty: o, ctx: n }), e.$set(i);
    },
    i(r) {
      t || (L(e.$$.fragment, r), t = !0);
    },
    o(r) {
      h(e.$$.fragment, r), t = !1;
    },
    d(r) {
      z(e, r);
    }
  };
}
function GI(n) {
  let e;
  return {
    c() {
      e = Se("Error while fetching suggestions.");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function VI(n) {
  let e, t;
  return e = new ca({
    props: {
      $$slots: { default: [GI] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[1] & /*$$scope*/
      4194304 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function jI(n) {
  let e;
  const t = (
    /*#slots*/
    n[43].error
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[53],
    ho
  ), a = s || VI(n);
  return {
    c() {
      a && a.c();
    },
    m(r, o) {
      a && a.m(r, o), e = !0;
    },
    p(r, o) {
      s && s.p && (!e || o[1] & /*$$scope*/
      4194304) && Me(
        s,
        t,
        r,
        /*$$scope*/
        r[53],
        e ? ve(
          t,
          /*$$scope*/
          r[53],
          o,
          SI
        ) : Re(
          /*$$scope*/
          r[53]
        ),
        ho
      );
    },
    i(r) {
      e || (L(a, r), e = !0);
    },
    o(r) {
      h(a, r), e = !1;
    },
    d(r) {
      a && a.d(r);
    }
  };
}
function kI(n) {
  let e;
  return {
    c() {
      e = Se("Loading...");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function wI(n) {
  let e, t;
  return e = new ca({
    props: {
      $$slots: { default: [kI] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[1] & /*$$scope*/
      4194304 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function BI(n) {
  let e;
  const t = (
    /*#slots*/
    n[43].loading
  ), s = Pe(
    t,
    n,
    /*$$scope*/
    n[53],
    yo
  ), a = s || wI(n);
  return {
    c() {
      a && a.c();
    },
    m(r, o) {
      a && a.m(r, o), e = !0;
    },
    p(r, o) {
      s && s.p && (!e || o[1] & /*$$scope*/
      4194304) && Me(
        s,
        t,
        r,
        /*$$scope*/
        r[53],
        e ? ve(
          t,
          /*$$scope*/
          r[53],
          o,
          LI
        ) : Re(
          /*$$scope*/
          r[53]
        ),
        yo
      );
    },
    i(r) {
      e || (L(a, r), e = !0);
    },
    o(r) {
      h(a, r), e = !1;
    },
    d(r) {
      a && a.d(r);
    }
  };
}
function UI(n) {
  let e, t, s, a;
  const r = [NI, yI, hI], o = [];
  function i(d, c) {
    return (
      /*loading*/
      d[13] ? 0 : (
        /*error*/
        d[19] ? 1 : 2
      )
    );
  }
  return e = i(n), t = o[e] = r[e](n), {
    c() {
      t.c(), s = st();
    },
    m(d, c) {
      o[e].m(d, c), G(d, s, c), a = !0;
    },
    p(d, c) {
      let l = e;
      e = i(d), e === l ? o[e].p(d, c) : (he(), h(o[l], 1, 1, () => {
        o[l] = null;
      }), ye(), t = o[e], t ? t.p(d, c) : (t = o[e] = r[e](d), t.c()), L(t, 1), t.m(s.parentNode, s));
    },
    i(d) {
      a || (L(t), a = !0);
    },
    o(d) {
      h(t), a = !1;
    },
    d(d) {
      d && F(s), o[e].d(d);
    }
  };
}
function HI(n) {
  let e, t;
  const s = [Je(
    /*$$restProps*/
    n[28],
    "list$"
  )];
  let a = {
    $$slots: { default: [UI] },
    $$scope: { ctx: n }
  };
  for (let r = 0; r < s.length; r += 1)
    a = te(a, s[r]);
  return e = new Gu({ props: a }), {
    c() {
      X(e.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), t = !0;
    },
    p(r, o) {
      const i = o[0] & /*$$restProps*/
      268435456 ? Ee(s, [Ne(Je(
        /*$$restProps*/
        r[28],
        "list$"
      ))]) : {};
      o[0] & /*loading, error, matches, getOptionDisabled, value, focusedIndex, toggle, getOptionLabel, noMatchesActionDisabled, element*/
      762673 | o[1] & /*$$scope*/
      4194304 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
    },
    i(r) {
      t || (L(e.$$.fragment, r), t = !0);
    },
    o(r) {
      h(e.$$.fragment, r), t = !1;
    },
    d(r) {
      z(e, r);
    }
  };
}
function KI(n) {
  let e, t, s, a, r, o, i, d, c, l, C;
  const u = (
    /*#slots*/
    n[43].default
  ), m = Pe(
    u,
    n,
    /*$$scope*/
    n[53],
    null
  ), p = m || gI(n), D = [
    {
      class: le({
        [
          /*menu$class*/
          n[10]
        ]: !0,
        "smui-autocomplete__menu": !0
      })
    },
    { id: (
      /*menuId*/
      n[22]
    ) },
    { managed: !0 },
    { neverRestoreFocus: !0 },
    { open: (
      /*menuOpen*/
      n[20]
    ) },
    { anchor: (
      /*menu$anchor*/
      n[11]
    ) },
    {
      anchorCorner: (
        /*menu$anchorCorner*/
        n[12]
      )
    },
    Je(
      /*$$restProps*/
      n[28],
      "menu$"
    )
  ];
  function _(f) {
    n[51](f);
  }
  let A = {
    $$slots: { default: [HI] },
    $$scope: { ctx: n }
  };
  for (let f = 0; f < D.length; f += 1)
    A = te(A, D[f]);
  /*element*/
  n[17] !== void 0 && (A.anchorElement = /*element*/
  n[17]), r = new vu({ props: A }), de.push(() => Ve(r, "anchorElement", _)), r.$on(
    "SMUIList:mount",
    /*handleListAccessor*/
    n[23]
  );
  let b = [
    {
      class: i = le({
        [
          /*className*/
          n[3]
        ]: !0,
        "smui-autocomplete": !0
      })
    },
    jt(
      /*$$restProps*/
      n[28],
      ["menu$", "textfield$", "list$"]
    )
  ], S = {};
  for (let f = 0; f < b.length; f += 1)
    S = te(S, b[f]);
  return {
    c() {
      e = Z("div"), t = Z("div"), p && p.c(), a = $(), X(r.$$.fragment), R(
        t,
        "aria-controls",
        /*menuId*/
        n[22]
      ), R(t, "aria-expanded", s = /*menuOpen*/
      n[20] ? "true" : "false"), R(t, "role", "combobox"), R(t, "tabindex", "0"), Ae(e, S);
    },
    m(f, E) {
      G(f, e, E), U(e, t), p && p.m(t, null), n[45](t), U(e, a), q(r, e, null), n[52](e), c = !0, l || (C = [
        ce(
          t,
          "focusin",
          /*focusin_handler*/
          n[46]
        ),
        ce(
          t,
          "focusout",
          /*handleTextfieldBlur*/
          n[27]
        ),
        ce(
          t,
          "input",
          /*input_handler*/
          n[47]
        ),
        ce(
          t,
          "keydown",
          /*handleTextfieldKeydown*/
          n[26],
          !0
        ),
        De(yu.call(null, e)),
        De(d = rt.call(
          null,
          e,
          /*use*/
          n[2]
        )),
        De(
          /*forwardEvents*/
          n[21].call(null, e)
        )
      ], l = !0);
    },
    p(f, E) {
      m ? m.p && (!c || E[1] & /*$$scope*/
      4194304) && Me(
        m,
        u,
        f,
        /*$$scope*/
        f[53],
        c ? ve(
          u,
          /*$$scope*/
          f[53],
          E,
          null
        ) : Re(
          /*$$scope*/
          f[53]
        ),
        null
      ) : p && p.p && (!c || E[0] & /*label, disabled, $$restProps, text*/
      268435650) && p.p(f, c ? E : [-1, -1]), (!c || E[0] & /*menuOpen*/
      1048576 && s !== (s = /*menuOpen*/
      f[20] ? "true" : "false")) && R(t, "aria-expanded", s);
      const y = E[0] & /*menu$class, menuId, menuOpen, menu$anchor, menu$anchorCorner, $$restProps*/
      273685504 ? Ee(D, [
        E[0] & /*menu$class*/
        1024 && {
          class: le({
            [
              /*menu$class*/
              f[10]
            ]: !0,
            "smui-autocomplete__menu": !0
          })
        },
        E[0] & /*menuId*/
        4194304 && { id: (
          /*menuId*/
          f[22]
        ) },
        D[2],
        D[3],
        E[0] & /*menuOpen*/
        1048576 && { open: (
          /*menuOpen*/
          f[20]
        ) },
        E[0] & /*menu$anchor*/
        2048 && { anchor: (
          /*menu$anchor*/
          f[11]
        ) },
        E[0] & /*menu$anchorCorner*/
        4096 && {
          anchorCorner: (
            /*menu$anchorCorner*/
            f[12]
          )
        },
        E[0] & /*$$restProps*/
        268435456 && Ne(Je(
          /*$$restProps*/
          f[28],
          "menu$"
        ))
      ]) : {};
      E[0] & /*$$restProps, loading, error, matches, getOptionDisabled, value, focusedIndex, toggle, getOptionLabel, noMatchesActionDisabled, element*/
      269198129 | E[1] & /*$$scope*/
      4194304 && (y.$$scope = { dirty: E, ctx: f }), !o && E[0] & /*element*/
      131072 && (o = !0, y.anchorElement = /*element*/
      f[17], we(() => o = !1)), r.$set(y), Ae(e, S = Ee(b, [
        (!c || E[0] & /*className*/
        8 && i !== (i = le({
          [
            /*className*/
            f[3]
          ]: !0,
          "smui-autocomplete": !0
        }))) && { class: i },
        E[0] & /*$$restProps*/
        268435456 && jt(
          /*$$restProps*/
          f[28],
          ["menu$", "textfield$", "list$"]
        )
      ])), d && Fe(d.update) && E[0] & /*use*/
      4 && d.update.call(
        null,
        /*use*/
        f[2]
      );
    },
    i(f) {
      c || (L(p, f), L(r.$$.fragment, f), c = !0);
    },
    o(f) {
      h(p, f), h(r.$$.fragment, f), c = !1;
    },
    d(f) {
      f && F(e), p && p.d(f), n[45](null), z(r), n[52](null), l = !1, ze(C);
    }
  };
}
let WI = 0;
function qI(n) {
  var e = n.getBoundingClientRect();
  return e.top >= 0 && e.left >= 0 && e.bottom <= (window.innerHeight || document.documentElement.clientHeight) && e.right <= (window.innerWidth || document.documentElement.clientWidth);
}
function zI(n, e, t) {
  let s;
  const a = [
    "use",
    "class",
    "options",
    "value",
    "getOptionDisabled",
    "getOptionLabel",
    "text",
    "label",
    "disabled",
    "toggle",
    "combobox",
    "clearOnBlur",
    "selectOnExactMatch",
    "showMenuWithNoInput",
    "noMatchesActionDisabled",
    "search",
    "menu$class",
    "menu$anchor",
    "menu$anchorCorner",
    "focus",
    "blur",
    "getElement"
  ];
  let r = Te(e, a), { $$slots: o = {}, $$scope: i } = e;
  var d;
  const c = lt(tt());
  let { use: l = [] } = e, { class: C = "" } = e, { options: u = [] } = e, { value: m = void 0 } = e, { getOptionDisabled: p = () => !1 } = e, { getOptionLabel: D = (ne) => ne == null ? "" : `${ne}` } = e, { text: _ = D(m) } = e, { label: A = void 0 } = e, { disabled: b = !1 } = e, { toggle: S = !1 } = e, { combobox: f = !1 } = e, { clearOnBlur: E = !f } = e, { selectOnExactMatch: y = !0 } = e, { showMenuWithNoInput: I = !0 } = e, { noMatchesActionDisabled: N = !0 } = e, { search: j = async (ne) => {
    const nt = ne.toLowerCase(), Dt = typeof u == "function" ? await u() : u || [];
    if (nt === "")
      return Dt;
    const wn = Dt.filter((ee) => D(ee).toLowerCase().includes(nt));
    return wn.sort((ee, be) => {
      const fe = D(ee).toLowerCase(), ot = D(be).toLowerCase();
      return fe.startsWith(nt) && !ot.startsWith(nt) ? -1 : ot.startsWith(nt) && !fe.startsWith(nt) ? 1 : 0;
    }), wn;
  } } = e, { menu$class: v = "" } = e, { menu$anchor: O = !1 } = e, { menu$anchorCorner: M = "BOTTOM_START" } = e, P, g, W = !1, B = !1, H = !1, w, T = [], Y = -1, Ie, Ge = (d = r.menu$id) !== null && d !== void 0 ? d : "SMUI-autocomplete-" + WI++ + "-menu", ke = _, ae = m, _e;
  async function We() {
    t(13, W = !0), t(19, B = !1);
    try {
      const ne = await j(_);
      if (ne !== !1 && (t(15, T = ne), y)) {
        const nt = T.find((Dt) => D(Dt) === _);
        nt && m !== nt && xe(nt);
      }
    } catch {
      t(19, B = !0);
    }
    t(13, W = !1);
  }
  function Be(ne) {
    w || t(38, w = ne.detail);
  }
  function xe(ne, nt = !0) {
    Oe(P, "SMUIAutocomplete:selected", ne, { bubbles: !0, cancelable: !0 }).defaultPrevented || (nt && t(1, _ = D(ne)), t(0, m = ne), nt || t(41, ae = ne));
  }
  function it(ne, nt = !0) {
    Oe(P, "SMUIAutocomplete:deselected", ne, { bubbles: !0, cancelable: !0 }).defaultPrevented || (nt && t(1, _ = ""), t(0, m = void 0), nt || t(41, ae = void 0));
  }
  function oe(ne) {
    ne === m ? it(ne) : xe(ne);
  }
  function J() {
    return w ? w.getOrderedList().filter((ne) => !ne.disabled) : [];
  }
  function se(ne) {
    if (!(f && !T.length)) {
      if (ne.key === "ArrowDown")
        ne.preventDefault(), Y === -1 || Y === J().length - 1 ? t(16, Y = 0) : t(16, Y++, Y);
      else if (ne.key === "ArrowUp")
        ne.preventDefault(), Y === -1 || Y === 0 ? t(16, Y = J().length - 1) : t(16, Y--, Y);
      else if (ne.key === "Enter") {
        ne.preventDefault();
        const nt = J();
        Ie && (nt[Y] && nt[Y].action(ne), t(16, Y = -1));
      }
    }
  }
  async function V(ne) {
    if (ne.relatedTarget && J().map((nt) => nt.element).indexOf(ne.relatedTarget) !== -1) {
      P.addEventListener(
        "SMUIAutocomplete:selected",
        () => {
          t(16, Y = -1), t(14, H = !1);
        },
        { once: !0 }
      );
      return;
    }
    t(16, Y = -1), t(14, H = !1), E && m == null && t(1, _ = "");
  }
  function ge() {
    if (g) {
      const ne = g.querySelector("input.mdc-text-field__input");
      ne && ne.focus();
    }
  }
  function Q() {
    if (g) {
      const ne = g.querySelector("input.mdc-text-field__input");
      ne && ne.blur();
    }
  }
  function pe() {
    return P;
  }
  function $e(ne) {
    _ = ne, t(1, _), t(41, ae), t(0, m), t(5, D), t(30, f);
  }
  function Lt(ne) {
    de[ne ? "unshift" : "push"](() => {
      g = ne, t(18, g);
    });
  }
  const Ht = () => {
    t(14, H = !0);
  }, k = () => {
    t(16, Y = -1);
  }, ie = (ne) => {
    t(16, Y = ne);
  }, Ke = (ne) => S ? oe(ne) : xe(ne), re = (ne) => Oe(P, "SMUIAutocomplete:noMatchesAction", ne);
  function Ue(ne) {
    P = ne, t(17, P);
  }
  function At(ne) {
    de[ne ? "unshift" : "push"](() => {
      P = ne, t(17, P);
    });
  }
  return n.$$set = (ne) => {
    e = te(te({}, e), ct(ne)), t(28, r = Te(e, a)), "use" in ne && t(2, l = ne.use), "class" in ne && t(3, C = ne.class), "options" in ne && t(29, u = ne.options), "value" in ne && t(0, m = ne.value), "getOptionDisabled" in ne && t(4, p = ne.getOptionDisabled), "getOptionLabel" in ne && t(5, D = ne.getOptionLabel), "text" in ne && t(1, _ = ne.text), "label" in ne && t(6, A = ne.label), "disabled" in ne && t(7, b = ne.disabled), "toggle" in ne && t(8, S = ne.toggle), "combobox" in ne && t(30, f = ne.combobox), "clearOnBlur" in ne && t(31, E = ne.clearOnBlur), "selectOnExactMatch" in ne && t(32, y = ne.selectOnExactMatch), "showMenuWithNoInput" in ne && t(33, I = ne.showMenuWithNoInput), "noMatchesActionDisabled" in ne && t(9, N = ne.noMatchesActionDisabled), "search" in ne && t(34, j = ne.search), "menu$class" in ne && t(10, v = ne.menu$class), "menu$anchor" in ne && t(11, O = ne.menu$anchor), "menu$anchorCorner" in ne && t(12, M = ne.menu$anchorCorner), "$$scope" in ne && t(53, i = ne.$$scope);
  }, n.$$.update = () => {
    if (n.$$.dirty[0] & /*value, getOptionLabel, combobox, text*/
    1073741859 | n.$$.dirty[1] & /*previousValue*/
    1024 && (ae !== m ? (t(1, _ = D(m)), t(41, ae = m)) : f && m !== _ && (t(0, m = _), t(41, ae = m))), n.$$.dirty[0] & /*focused, text, loading, combobox, matches, value*/
    1073799171 | n.$$.dirty[1] & /*showMenuWithNoInput*/
    4 && t(20, s = H && (_ !== "" || I) && (W || !f && !(T.length === 1 && T[0] === m) || f && !!T.length && !(T.length === 1 && T[0] === m))), n.$$.dirty[0] & /*text, combobox, value, getOptionLabel, focused*/
    1073758243 | n.$$.dirty[1] & /*previousText*/
    512 && ke !== _ && (!f && m != null && D(m) !== _ && it(m, !1), H && (We(), t(40, ke = _))), n.$$.dirty[0] & /*options*/
    536870912 && u && We(), n.$$.dirty[0] & /*focusedIndex*/
    65536 | n.$$.dirty[1] & /*previousFocusedIndex, focusedItem, listAccessor*/
    2432 && _e !== Y) {
      const ne = J();
      Y === -1 ? t(39, Ie = void 0) : (t(39, Ie = ne[Y]), Ie && (t(39, Ie.activated = !0, Ie), qI(Ie.element) || Ie.element.scrollIntoView({ block: "end", inline: "nearest" }))), ne.forEach((nt, Dt) => {
        Dt !== Y && (nt.activated = !1);
      }), w && w.getOrderedList().forEach((nt) => {
        nt.tabindex = -1;
      }), t(42, _e = Y);
    }
  }, [
    m,
    _,
    l,
    C,
    p,
    D,
    A,
    b,
    S,
    N,
    v,
    O,
    M,
    W,
    H,
    T,
    Y,
    P,
    g,
    B,
    s,
    c,
    Ge,
    Be,
    xe,
    oe,
    se,
    V,
    r,
    u,
    f,
    E,
    y,
    I,
    j,
    ge,
    Q,
    pe,
    w,
    Ie,
    ke,
    ae,
    _e,
    o,
    $e,
    Lt,
    Ht,
    k,
    ie,
    Ke,
    re,
    Ue,
    At,
    i
  ];
}
class ec extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      zI,
      KI,
      Ce,
      {
        use: 2,
        class: 3,
        options: 29,
        value: 0,
        getOptionDisabled: 4,
        getOptionLabel: 5,
        text: 1,
        label: 6,
        disabled: 7,
        toggle: 8,
        combobox: 30,
        clearOnBlur: 31,
        selectOnExactMatch: 32,
        showMenuWithNoInput: 33,
        noMatchesActionDisabled: 9,
        search: 34,
        menu$class: 10,
        menu$anchor: 11,
        menu$anchorCorner: 12,
        focus: 35,
        blur: 36,
        getElement: 37
      },
      null,
      [-1, -1]
    );
  }
  get focus() {
    return this.$$.ctx[35];
  }
  get blur() {
    return this.$$.ctx[36];
  }
  get getElement() {
    return this.$$.ctx[37];
  }
}
function XI(n) {
  let e;
  return {
    c() {
      e = Z("span"), e.textContent = "This ID is already taken.", ln(e, "color", "var(--mdc-theme-error, #b71c1c)");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function ZI(n) {
  let e;
  return {
    c() {
      e = Z("span"), e.textContent = "Invalid ID", ln(e, "color", "var(--mdc-theme-error, #b71c1c)");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function YI(n) {
  let e;
  function t(r, o) {
    if (
      /*idTouched*/
      r[5] && !/*isIdValid*/
      r[6]
    )
      return ZI;
    if (
      /*idTouched*/
      r[5] && /*isIdTaken*/
      r[7]
    )
      return XI;
  }
  let s = t(n), a = s && s(n);
  return {
    c() {
      a && a.c(), e = st();
    },
    m(r, o) {
      a && a.m(r, o), G(r, e, o);
    },
    p(r, o) {
      s !== (s = t(r)) && (a && a.d(1), a = s && s(r), a && (a.c(), a.m(e.parentNode, e)));
    },
    d(r) {
      r && F(e), a && a.d(r);
    }
  };
}
function Po(n) {
  let e, t = (
    /*match*/
    n[25].description + ""
  ), s;
  return {
    c() {
      e = Z("div"), s = Se(t), R(e, "class", "subtitle svelte-1ymw80b");
    },
    m(a, r) {
      G(a, e, r), U(e, s);
    },
    p(a, r) {
      r & /*match*/
      33554432 && t !== (t = /*match*/
      a[25].description + "") && je(s, t);
    },
    d(a) {
      a && F(e);
    }
  };
}
function QI(n) {
  let e, t, s = (
    /*match*/
    n[25].id + ""
  ), a, r, o = (
    /*match*/
    n[25].id && Po(n)
  );
  return {
    c() {
      e = Z("div"), t = Z("div"), a = Se(s), r = $(), o && o.c(), R(t, "class", "title svelte-1ymw80b"), R(e, "class", "custom-item");
    },
    m(i, d) {
      G(i, e, d), U(e, t), U(t, a), U(e, r), o && o.m(e, null);
    },
    p(i, d) {
      d & /*match*/
      33554432 && s !== (s = /*match*/
      i[25].id + "") && je(a, s), /*match*/
      i[25].id ? o ? o.p(i, d) : (o = Po(i), o.c(), o.m(e, null)) : o && (o.d(1), o = null);
    },
    d(i) {
      i && F(e), o && o.d();
    }
  };
}
function JI(n) {
  let e, t, s, a, r, o, i, d, c, l, C;
  function u(_) {
    n[18](_);
  }
  let m = {
    label: (
      /*idLabel*/
      n[2]
    ),
    required: !0,
    style: "width: 100%;",
    invalid: (
      /*idTouched*/
      n[5] && (!/*isIdValid*/
      n[6] || /*isIdTaken*/
      n[7])
    ),
    $$slots: { helper: [YI] },
    $$scope: { ctx: n }
  };
  /*id*/
  n[0] !== void 0 && (m.value = /*id*/
  n[0]), t = new oa({ props: m }), n[17](t), de.push(() => Ve(t, "value", u)), t.$on(
    "input",
    /*input_handler*/
    n[19]
  );
  function p(_) {
    n[20](_);
  }
  let D = {
    label: (
      /*autocompleteLabel*/
      n[3]
    ),
    options: (
      /*options*/
      n[4]
    ),
    getOptionLabel: (
      /*getOptionLabel*/
      n[9]
    ),
    textfield$required: !0,
    menu$style: "max-height: 500px;",
    $$slots: {
      match: [
        QI,
        ({ match: _ }) => ({ 25: _ }),
        ({ match: _ }) => _ ? 33554432 : 0
      ]
    },
    $$scope: { ctx: n }
  };
  return (
    /*selectedItem*/
    n[1] !== void 0 && (D.value = /*selectedItem*/
    n[1]), r = new ec({ props: D }), de.push(() => Ve(r, "value", p)), {
      c() {
        e = Z("form"), X(t.$$.fragment), a = $(), X(r.$$.fragment), i = $(), d = Z("button"), R(d, "type", "submit"), ln(d, "display", "none");
      },
      m(_, A) {
        G(_, e, A), q(t, e, null), U(e, a), q(r, e, null), U(e, i), U(e, d), c = !0, l || (C = ce(
          e,
          "submit",
          /*handleSubmit*/
          n[10]
        ), l = !0);
      },
      p(_, [A]) {
        const b = {};
        A & /*idLabel*/
        4 && (b.label = /*idLabel*/
        _[2]), A & /*idTouched, isIdValid, isIdTaken*/
        224 && (b.invalid = /*idTouched*/
        _[5] && (!/*isIdValid*/
        _[6] || /*isIdTaken*/
        _[7])), A & /*$$scope, idTouched, isIdValid, isIdTaken*/
        67109088 && (b.$$scope = { dirty: A, ctx: _ }), !s && A & /*id*/
        1 && (s = !0, b.value = /*id*/
        _[0], we(() => s = !1)), t.$set(b);
        const S = {};
        A & /*autocompleteLabel*/
        8 && (S.label = /*autocompleteLabel*/
        _[3]), A & /*options*/
        16 && (S.options = /*options*/
        _[4]), A & /*$$scope, match*/
        100663296 && (S.$$scope = { dirty: A, ctx: _ }), !o && A & /*selectedItem*/
        2 && (o = !0, S.value = /*selectedItem*/
        _[1], we(() => o = !1)), r.$set(S);
      },
      i(_) {
        c || (L(t.$$.fragment, _), L(r.$$.fragment, _), c = !0);
      },
      o(_) {
        h(t.$$.fragment, _), h(r.$$.fragment, _), c = !1;
      },
      d(_) {
        _ && F(e), n[17](null), z(t), z(r), l = !1, C();
      }
    }
  );
}
function vo(n) {
  return /^[^\s]+$/.test(n);
}
function xI(n, e, t) {
  let { id: s = "" } = e, { selectedItem: a = null } = e, { valid: r = !1 } = e, { idLabel: o = "Enter ID" } = e, { autocompleteLabel: i = "Select" } = e, d = [], { getOptions: c = () => He(void 0, void 0, void 0, function* () {
    return [];
  }) } = e, { mapOption: l = (O) => O } = e, { isIdTakenFn: C = (O) => He(void 0, void 0, void 0, function* () {
    return !1;
  }) } = e, u = (O) => {
    var M;
    return (M = O == null ? void 0 : O.id) !== null && M !== void 0 ? M : "";
  }, m = !1, p = !1, D = !1, _ = !1;
  at(() => {
    c().then((O) => {
      t(4, d = O.map(l));
    });
  });
  function A(O, M) {
    return He(this, void 0, void 0, function* () {
      const P = O, g = yield C(O);
      P === O && (t(7, D = g), b(M));
    });
  }
  function b(O) {
    t(6, p = vo(s)), t(16, _ = p && !D && s && O !== null);
  }
  const S = Qt();
  let f;
  function E() {
    var O;
    (O = f == null ? void 0 : f.focus) === null || O === void 0 || O.call(f);
  }
  function y(O) {
    O.preventDefault(), _ && S("submit", { id: s, selectedItem: a });
  }
  function I(O) {
    de[O ? "unshift" : "push"](() => {
      f = O, t(8, f);
    });
  }
  function N(O) {
    s = O, t(0, s);
  }
  const j = () => t(5, m = !0);
  function v(O) {
    a = O, t(1, a);
  }
  return n.$$set = (O) => {
    "id" in O && t(0, s = O.id), "selectedItem" in O && t(1, a = O.selectedItem), "valid" in O && t(11, r = O.valid), "idLabel" in O && t(2, o = O.idLabel), "autocompleteLabel" in O && t(3, i = O.autocompleteLabel), "getOptions" in O && t(12, c = O.getOptions), "mapOption" in O && t(13, l = O.mapOption), "isIdTakenFn" in O && t(14, C = O.isIdTakenFn);
  }, n.$$.update = () => {
    n.$$.dirty & /*id, selectedItem*/
    3 && (s ? (t(6, p = vo(s)), A(s, a)) : (t(7, D = !1), b(a))), n.$$.dirty & /*isFormValid*/
    65536 && t(11, r = _), n.$$.dirty & /*id, selectedItem, valid*/
    2051 && S("change", { id: s, selectedItem: a, valid: r });
  }, [
    s,
    a,
    o,
    i,
    d,
    m,
    p,
    D,
    f,
    u,
    y,
    r,
    c,
    l,
    C,
    E,
    _,
    I,
    N,
    j,
    v
  ];
}
class $I extends me {
  constructor(e) {
    super(), ue(this, e, xI, JI, Ce, {
      id: 0,
      selectedItem: 1,
      valid: 11,
      idLabel: 2,
      autocompleteLabel: 3,
      getOptions: 12,
      mapOption: 13,
      isIdTakenFn: 14,
      focus: 15
    });
  }
  get focus() {
    return this.$$.ctx[15];
  }
}
function eD(n) {
  let e, t, s, a, r, o;
  function i(C) {
    n[16](C);
  }
  function d(C) {
    n[17](C);
  }
  function c(C) {
    n[18](C);
  }
  let l = {
    idLabel: (
      /*idLabel*/
      n[3]
    ),
    autocompleteLabel: (
      /*autocompleteLabel*/
      n[4]
    ),
    getOptions: (
      /*getOptions*/
      n[5]
    ),
    isIdTakenFn: (
      /*isIdTaken*/
      n[6]
    )
  };
  return (
    /*id*/
    n[7] !== void 0 && (l.id = /*id*/
    n[7]), /*selectedItem*/
    n[9] !== void 0 && (l.selectedItem = /*selectedItem*/
    n[9]), /*valid*/
    n[8] !== void 0 && (l.valid = /*valid*/
    n[8]), t = new $I({ props: l }), n[15](t), de.push(() => Ve(t, "id", i)), de.push(() => Ve(t, "selectedItem", d)), de.push(() => Ve(t, "valid", c)), t.$on(
      "submit",
      /*handleCreate*/
      n[11]
    ), {
      c() {
        e = Z("div"), X(t.$$.fragment), ln(e, "padding", "1rem"), R(e, "slot", "content");
      },
      m(C, u) {
        G(C, e, u), q(t, e, null), o = !0;
      },
      p(C, u) {
        const m = {};
        u & /*idLabel*/
        8 && (m.idLabel = /*idLabel*/
        C[3]), u & /*autocompleteLabel*/
        16 && (m.autocompleteLabel = /*autocompleteLabel*/
        C[4]), u & /*getOptions*/
        32 && (m.getOptions = /*getOptions*/
        C[5]), u & /*isIdTaken*/
        64 && (m.isIdTakenFn = /*isIdTaken*/
        C[6]), !s && u & /*id*/
        128 && (s = !0, m.id = /*id*/
        C[7], we(() => s = !1)), !a && u & /*selectedItem*/
        512 && (a = !0, m.selectedItem = /*selectedItem*/
        C[9], we(() => a = !1)), !r && u & /*valid*/
        256 && (r = !0, m.valid = /*valid*/
        C[8], we(() => r = !1)), t.$set(m);
      },
      i(C) {
        o || (L(t.$$.fragment, C), o = !0);
      },
      o(C) {
        h(t.$$.fragment, C), o = !1;
      },
      d(C) {
        C && F(e), n[15](null), z(t);
      }
    }
  );
}
function tD(n) {
  let e, t, s, a;
  function r(i) {
    n[19](i);
  }
  let o = {
    title: (
      /*dialogTitle*/
      n[1]
    ),
    confirmActionText: (
      /*confirmText*/
      n[2]
    ),
    maxWidth: "800px",
    confirmDisabled: !/*valid*/
    n[8],
    $$slots: { content: [eD] },
    $$scope: { ctx: n }
  };
  return (
    /*open*/
    n[0] !== void 0 && (o.open = /*open*/
    n[0]), t = new Ir({ props: o }), de.push(() => Ve(t, "open", r)), t.$on(
      "confirm",
      /*handleCreate*/
      n[11]
    ), t.$on(
      "cancel",
      /*handleCancel*/
      n[12]
    ), t.$on(
      "close",
      /*handleClose*/
      n[13]
    ), {
      c() {
        e = Z("div"), X(t.$$.fragment), R(e, "class", "generic-create-dialog");
      },
      m(i, d) {
        G(i, e, d), q(t, e, null), a = !0;
      },
      p(i, [d]) {
        const c = {};
        d & /*dialogTitle*/
        2 && (c.title = /*dialogTitle*/
        i[1]), d & /*confirmText*/
        4 && (c.confirmActionText = /*confirmText*/
        i[2]), d & /*valid*/
        256 && (c.confirmDisabled = !/*valid*/
        i[8]), d & /*$$scope, idLabel, autocompleteLabel, getOptions, isIdTaken, formEl, id, selectedItem, valid*/
        1050616 && (c.$$scope = { dirty: d, ctx: i }), !s && d & /*open*/
        1 && (s = !0, c.open = /*open*/
        i[0], we(() => s = !1)), t.$set(c);
      },
      i(i) {
        a || (L(t.$$.fragment, i), a = !0);
      },
      o(i) {
        h(t.$$.fragment, i), a = !1;
      },
      d(i) {
        i && F(e), z(t);
      }
    }
  );
}
function nD(n, e, t) {
  let { open: s = !1 } = e, { dialogTitle: a } = e, { confirmText: r = "Confirm" } = e, { idLabel: o = "ID" } = e, { autocompleteLabel: i = "Select Option" } = e, { getOptions: d = () => He(void 0, void 0, void 0, function* () {
    return [];
  }) } = e, { isIdTaken: c = () => He(void 0, void 0, void 0, function* () {
    return !1;
  }) } = e, { onConfirm: l } = e, C, u = !1, m, p;
  const D = () => {
    l(C, m.id);
  }, _ = () => {
    un("cancel");
  }, A = () => {
    un("close");
  };
  at(() => {
    setTimeout(
      () => {
        p.focus();
      },
      300
    );
  });
  function b(I) {
    de[I ? "unshift" : "push"](() => {
      p = I, t(10, p);
    });
  }
  function S(I) {
    C = I, t(7, C);
  }
  function f(I) {
    m = I, t(9, m);
  }
  function E(I) {
    u = I, t(8, u);
  }
  function y(I) {
    s = I, t(0, s);
  }
  return n.$$set = (I) => {
    "open" in I && t(0, s = I.open), "dialogTitle" in I && t(1, a = I.dialogTitle), "confirmText" in I && t(2, r = I.confirmText), "idLabel" in I && t(3, o = I.idLabel), "autocompleteLabel" in I && t(4, i = I.autocompleteLabel), "getOptions" in I && t(5, d = I.getOptions), "isIdTaken" in I && t(6, c = I.isIdTaken), "onConfirm" in I && t(14, l = I.onConfirm);
  }, [
    s,
    a,
    r,
    o,
    i,
    d,
    c,
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    l,
    b,
    S,
    f,
    E,
    y
  ];
}
class fa extends me {
  constructor(e) {
    super(), ue(this, e, nD, tD, Ce, {
      open: 0,
      dialogTitle: 1,
      confirmText: 2,
      idLabel: 3,
      autocompleteLabel: 4,
      getOptions: 5,
      isIdTaken: 6,
      onConfirm: 14
    });
  }
}
function js(n, e, t) {
  if (!n)
    return null;
  const s = n.querySelector(`${e}[id="${t}"]`);
  return s || null;
}
var x = /* @__PURE__ */ ((n) => (n.LNodeType = "LNodeType", n.DOType = "DOType", n.DAType = "DAType", n.EnumType = "EnumType", n))(x || {});
function Mo(n, e, t = null) {
  return { parent: n, node: e, reference: t };
}
function Ro(n) {
  return { node: n };
}
function tc(n, e) {
  return new CustomEvent("oscd-edit-v2", {
    composed: !0,
    bubbles: !0,
    detail: { ...e, edit: n }
  });
}
function sD(n, e) {
  if (!n)
    return console.warn("Host element is undefined, cannot dispatch event"), !1;
  const t = tc(e);
  return n.dispatchEvent(t);
}
function Fo(n, e, t) {
  if (!n)
    return console.warn("Host element is undefined, cannot dispatch event"), !1;
  const s = tc(e, t);
  return n.dispatchEvent(s);
}
function aD(n) {
  switch (n) {
    case x.DOType:
      return "DO";
    case x.LNodeType:
      return "LN";
    case x.EnumType:
      return "Enum";
    case x.DAType:
      return "DA";
    default:
      return "";
  }
}
function rD(n, e, t) {
  var a;
  const s = [
    ((a = n.meta) == null ? void 0 : a.objectType) ?? "Unknown Type",
    n.meta.refTypeKind ? aD(n.meta.refTypeKind) : null
  ].filter(Boolean).join(" • ");
  return {
    id: n.name,
    title: n.name,
    subtitle: n.typeRef,
    references: null,
    badgeText: s,
    marked: n.isMarked,
    isMandatory: n.meta.isMandatory,
    selected: n.meta.isConfigured,
    canEdit: !1,
    canMark: n.meta.requiresReference,
    canSelect: e,
    canUnlink: e && !!n.typeRef && !n.meta.isMandatory,
    canApplyDefaults: e && n.meta.requiresReference,
    referencable: n.meta.requiresReference,
    acceptDrop: t ? (r) => t(r, n) : void 0
  };
}
function iD(n, e = !1) {
  return {
    id: n.id,
    title: n.id,
    references: n.references,
    badgeText: (n == null ? void 0 : n.instanceType) ?? "Unknown Type",
    canEdit: !0,
    canUnlink: !1
  };
}
const gt = "scl", oD = "be-template-generator", aa = `${oD}:instanceType`;
class dD {
  fromElement(e) {
    const t = e.getAttribute("id") || "", s = e.getAttribute("lnClass") || "", a = Array.from(e.children).map(Lr);
    return { id: t, lnClass: s, children: a };
  }
  toElement(e, t) {
    const s = t.createElementNS(t.documentElement.namespaceURI, "LNodeType");
    return s.setAttribute("id", e.id), s.setAttribute("lnClass", e.lnClass), e.children.forEach((a) => s.appendChild(gr(a, t))), s;
  }
}
class cD {
  fromElement(e) {
    const t = e.getAttribute("id") || "", s = e.getAttribute("cdc") || "", a = Array.from(e.children).map(Lr);
    return { id: t, cdc: s, children: a };
  }
  toElement(e, t) {
    const s = t.createElementNS(t.documentElement.namespaceURI, "DOType");
    return s.setAttribute("id", e.id), s.setAttribute("cdc", e.cdc), e.children.forEach((a) => s.appendChild(gr(a, t))), s;
  }
}
class lD {
  fromElement(e) {
    const t = e.getAttribute("id") || "", s = Array.from(e.children).map(Lr).filter((r) => r.tagName === "BDA" || r.tagName === "DA"), a = nc(e);
    return a ? { id: t, instanceType: a, children: s } : { id: t, children: s };
  }
  toElement(e, t) {
    const s = t.createElementNS(t.documentElement.namespaceURI, "DAType");
    return s.setAttribute("id", e.id), e.children.forEach((a) => s.appendChild(gr(a, t))), sc(t, s, e.instanceType), s;
  }
}
class CD {
  fromElement(e) {
    const t = e.getAttribute("id") || "", s = Array.from(e.children).filter((r) => r.tagName === "EnumVal").map((r) => ({
      tagName: "EnumVal",
      name: r.textContent || "",
      typeRef: void 0,
      attributes: {
        literalValue: r.getAttribute("ord") || ""
      }
    })), a = nc(e);
    return a ? { id: t, instanceType: a, children: s } : { id: t, children: s };
  }
  toElement(e, t) {
    const s = t.createElementNS(t.documentElement.namespaceURI, "EnumType");
    return s.setAttribute("id", e.id), e.children.forEach((a) => {
      const r = t.createElementNS(t.documentElement.namespaceURI, "EnumVal");
      r.textContent = a.name, r.setAttribute("ord", a.attributes.literalValue || ""), s.appendChild(r);
    }), sc(t, s, e.instanceType), s;
  }
}
function Lr(n) {
  return {
    name: n.getAttribute("name") || "",
    tagName: n.tagName,
    typeRef: n.getAttribute("type"),
    attributes: Object.fromEntries(Array.from(n.attributes).filter((e) => e.name !== "name" && e.name !== "type").map((e) => [e.name, e.value]))
  };
}
function gr(n, e) {
  const t = e.createElementNS(e.documentElement.namespaceURI, n.tagName);
  return t.setAttribute("name", n.name), n.typeRef && t.setAttribute("type", n.typeRef), n.attributes && Object.entries(n.attributes).forEach(([s, a]) => {
    s !== "name" && s !== "type" && t.setAttribute(s, a);
  }), t;
}
function nc(n) {
  const e = n.querySelector(`Private[type="${aa}"]`);
  return (e == null ? void 0 : e.textContent) || void 0;
}
function sc(n, e, t) {
  if (t) {
    const s = n.createElementNS(n.documentElement.namespaceURI, "Private");
    s.setAttribute("type", aa), s.textContent = t, e.appendChild(s);
  }
}
class jn {
  static mapLNodeTypeToBasicType(e) {
    return {
      id: e.id,
      typeKind: x.LNodeType,
      instanceType: e.lnClass,
      references: e.children ? e.children.length : 0
    };
  }
  static mapDOTypeToBasicType(e) {
    return {
      id: e.id,
      typeKind: x.DOType,
      instanceType: e.cdc,
      references: e.children.length
    };
  }
  static mapDATypeToBasicType(e) {
    return {
      id: e.id,
      instanceType: e == null ? void 0 : e.instanceType,
      typeKind: x.DAType,
      references: e.children ? e.children.length : 0
    };
  }
  static mapEnumTypeToBasicType(e) {
    return {
      id: e.id,
      instanceType: e == null ? void 0 : e.instanceType,
      typeKind: x.EnumType,
      references: e.children ? e.children.length : 0
    };
  }
  static mapDataTypesToBasicTypes(e) {
    return {
      lNodeTypes: e.lNodeTypes.map(this.mapLNodeTypeToBasicType),
      dataObjectTypes: e.dataObjectTypes.map(this.mapDOTypeToBasicType),
      dataAttributeTypes: e.dataAttributeTypes.map(this.mapDATypeToBasicType),
      enumTypes: e.enumTypes.map(this.mapEnumTypeToBasicType)
    };
  }
}
function ks(n, e) {
  return `${e}:${n}`;
}
class uD {
  constructor(e) {
    this.doc = e;
  }
  traverse(e, t, s, a = !1, r = []) {
    const o = /* @__PURE__ */ new Set();
    e === x.LNodeType ? this.resolveLNodeType(t, o, s, a, r) : e === x.DOType ? this.resolveDOType(t, o, s, a, r) : e === x.DAType ? this.resolveDAType(t, o, s, a, r) : e === x.EnumType && this.resolveEnumType(t, o, s, a);
  }
  resolveLNodeType(e, t, s, a = !0, r = []) {
    const o = ks(e, x.LNodeType);
    if (t.has(o))
      return;
    t.add(o);
    const i = this.doc.querySelector(`LNodeType[id="${e}"]`);
    i && (a && s(x.LNodeType, i), Array.from(i.querySelectorAll("DO")).filter((d) => this.matchesChildNameFilter(d, r)).forEach((d) => {
      const c = d.getAttribute("type");
      c && this.resolveDOType(c, t, s);
    }));
  }
  resolveDOType(e, t, s, a = !0, r = []) {
    const o = ks(e, x.DOType);
    if (t.has(o))
      return;
    t.add(o);
    const i = this.doc.querySelector(`DOType[id="${e}"]`);
    i && (a && s(x.DOType, i), Array.from(i.querySelectorAll("DA")).filter((d) => this.matchesChildNameFilter(d, r)).forEach((d) => {
      const c = d.getAttribute("type"), l = d.getAttribute("bType");
      c && (l === "Struct" ? this.resolveDAType(c, t, s) : l === "Enum" && this.resolveEnumType(c, t, s));
    }), Array.from(i.querySelectorAll("SDO")).filter((d) => this.matchesChildNameFilter(d, r)).forEach((d) => {
      const c = d.getAttribute("type");
      c && this.resolveDOType(c, t, s);
    }));
  }
  resolveDAType(e, t, s, a = !0, r = []) {
    const o = ks(e, x.DAType);
    if (t.has(o))
      return;
    t.add(o);
    const i = this.doc.querySelector(`DAType[id="${e}"]`);
    i && (a && s(x.DAType, i), Array.from(i.querySelectorAll("BDA")).filter((d) => this.matchesChildNameFilter(d, r)).forEach((d) => {
      const c = d.getAttribute("type"), l = d.getAttribute("bType");
      c && (l === "Struct" ? this.resolveDAType(c, t, s) : l === "Enum" && this.resolveEnumType(c, t, s));
    }));
  }
  resolveEnumType(e, t, s, a = !0) {
    const r = ks(e, x.EnumType);
    if (t.has(r))
      return;
    t.add(r);
    const o = this.doc.querySelector(`EnumType[id="${e}"]`);
    o && a && s(x.EnumType, o);
  }
  /**
   * Checks whether the element's 'name' attribute matches any in the provided filter.
   * If the filter is empty, it always returns true.
   */
  matchesChildNameFilter(e, t) {
    if (!t.length)
      return !0;
    const s = e.getAttribute("name");
    return s !== null && t.includes(s);
  }
}
const $t = class $t {
  constructor(e, t) {
    this.doc = e, this.hostElement = t, this.nsResolver = (s) => s === gt || s == null ? this.doc.documentElement.namespaceURI : null;
  }
  findReferencedTypesById(e, t, s = []) {
    if (!js(this.doc, e, t))
      return null;
    const r = {
      lNodeTypes: [],
      dataObjectTypes: [],
      dataAttributeTypes: [],
      enumTypes: []
    };
    function o(i, d) {
      const l = $t.typeMapperRegistry[i].fromElement(d);
      l && (i === x.LNodeType ? r.lNodeTypes.push(l) : i === x.DOType ? r.dataObjectTypes.push(l) : i === x.DAType ? r.dataAttributeTypes.push(l) : i === x.EnumType && r.enumTypes.push(l));
    }
    return new uD(this.doc).traverse(e, t, o, !1, s), r;
  }
  findDataTypeById(e, t) {
    const s = js(this.doc, e, t);
    return s ? $t.typeMapperRegistry[e].fromElement(s) : null;
  }
  findAllDataTypesByKind(e, t) {
    const s = t ? this.getTypeKindAndInstanceTypeXPath(e, t) : `//${gt}:DataTypeTemplates/${gt}:${e}`, a = $t.typeMapperRegistry[e];
    return this.evaluateXPath(s).map((r) => a.fromElement(r)).filter((r) => r !== null);
  }
  findAllDataTypesWithoutInstanceType(e) {
    const t = this.getTypeKindAndInstanceTypeXPath(e), s = $t.typeMapperRegistry[e];
    return this.evaluateXPath(t).map((a) => s.fromElement(a)).filter((a) => a !== null);
  }
  deleteDataTypeById(e, t) {
    const s = js(this.doc, e, t);
    if (!s)
      return !1;
    const a = Ro(s);
    return Fo(this.hostElement, a), !0;
  }
  upsertDataType(e, t) {
    const s = $t.typeMapperRegistry[e];
    if (!t.id)
      throw new Error(
        `Upsert failed: DataType of kind "${e}" is missing an "id"`
      );
    const a = s.toElement(t, this.doc), r = this.ensureRootElement(), o = js(this.doc, e, t.id);
    if (o)
      return this.replaceElement(o, a), t;
    const i = this.findInsertionReference(r, e);
    return Fo(
      this.hostElement,
      Mo(r, a, i)
    ), t;
  }
  /** Sets a new XML document. */
  setDocument(e) {
    this.doc = e;
  }
  // ===== Private Helpers =====
  getTypeKindAndInstanceTypeXPath(e, t) {
    switch (e) {
      case x.LNodeType:
        return t ? `//${gt}:DataTypeTemplates/${gt}:LNodeType[@lnClass="${t}"]` : `//${gt}:DataTypeTemplates/${gt}:LNodeType[not(@lnClass)]`;
      case x.DOType:
        return t ? `//${gt}:DataTypeTemplates/${gt}:DOType[@cdc="${t}"]` : `//${gt}:DataTypeTemplates/${gt}:DOType[not(@cdc)]`;
      case x.DAType:
      case x.EnumType:
        return t ? `//${gt}:DataTypeTemplates/${gt}:${e}[${gt}:Private[@type="${aa}" and normalize-space(.)="${t}"]]` : `//${gt}:DataTypeTemplates/${gt}:${e}[not(${gt}:Private[@type="${aa}"])]`;
      default:
        throw new Error(`Unsupported data type kind: ${e}`);
    }
  }
  evaluateXPath(e) {
    const t = [], s = this.doc.evaluate(
      e,
      this.doc,
      this.nsResolver,
      XPathResult.ORDERED_NODE_ITERATOR_TYPE,
      null
    );
    let a = s.iterateNext();
    for (; a; )
      a.nodeType === Node.ELEMENT_NODE && t.push(a), a = s.iterateNext();
    return t;
  }
  /** Ensures <DataTypeTemplates> exists, creates if missing */
  ensureRootElement() {
    let e = this.doc.querySelector($t.rootElementTagName);
    return e || (e = this.doc.createElementNS(this.doc.documentElement.namespaceURI, $t.rootElementTagName), this.doc.documentElement.appendChild(e)), e;
  }
  replaceElement(e, t) {
    const s = e.parentNode;
    if (!s)
      throw new Error("Replace failed: old element has no parent");
    const a = [
      Ro(e),
      Mo(s, t, e.nextSibling)
    ];
    sD(this.hostElement, a);
  }
  /** Find where to insert a new DataType, respecting order and siblings */
  findInsertionReference(e, t) {
    const s = Array.from(e.querySelectorAll(t));
    if (s.length > 0)
      return s[s.length - 1].nextSibling;
    const a = [
      x.LNodeType,
      x.DOType,
      x.DAType,
      x.EnumType
    ], r = a.indexOf(t);
    for (let o = r + 1; o < a.length; o++) {
      const i = e.querySelector(a[o]);
      if (i)
        return i;
    }
    return null;
  }
};
$t.rootElementTagName = "DataTypeTemplates", $t.typeMapperRegistry = {
  [x.LNodeType]: new dD(),
  [x.DOType]: new cD(),
  [x.DAType]: new lD(),
  [x.EnumType]: new CD()
}, $t.instanceTypeRegistry = {
  [x.LNodeType]: "lnClass",
  [x.DOType]: "cdc",
  [x.DAType]: void 0,
  [x.EnumType]: void 0
};
let xa = $t;
const mD = `<?xml version="1.0" encoding="UTF-8"?>
<NS xmlns="http://www.iec.ch/61850/2016/NSD"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.iec.ch/61850/2016/NSD NSD.xsd"
    id="IEC 61850-7-2"
    version="2007"
    revision="B"
    release="3"
    umlVersion="WG10built4"
    umlDate="2019-10-02T00:00:00Z"
    publicationStage="IS">
   <Copyright>
         <Notice>
			COPYRIGHT (c) IEC, www.iec.ch/tc57/supportdocuments. This version of this NSD is part of IEC_61850-7-2:2010 Edition 2.1; see the IEC_61850-7-2:2010 Edition 2.1 for full legal notices. In case of any differences between the here-below code and the IEC published content, the here-below definition supersedes the IEC publication; it may contain updates. See history files. The whole document has to be taken into account to have a full description of this code component.
			See www.iec.ch/CCv1 for copyright details.
			</Notice>
         <License uri="www.iec.ch/CCv1" kind="Standard"/>
      </Copyright>
   <Changes version="2007"
            revision="A"
            tissues="728, 730, 778, 780, 783, 786, 813, 820, 850, 852, 858, 860, 861, 869, 875, 876, 943, 970, 1038, 1050, 1061, 1062, 1071, 1091, 1092, 1116, 1122, 1127, 1145, 1154, 1194, 1202, 1232, 1242, 1252, 1276, 1283, 1307, 1308, 1319, 1338, 1341, 1356, 1377, 1386, 1428, 1432, 1433, 1435, 1439, 1455, 1569,  1589, 1622, 1630, 1650, 1652"/>
   <BasicTypes>
         <BasicType name="BOOLEAN" descID="IEC61850_7_2.BasicTypes::P_BOOLEAN.cl.desc"/>
         <BasicType name="INT8" descID="IEC61850_7_2.BasicTypes::P_INT8.cl.desc"/>
         <BasicType name="INT16" descID="IEC61850_7_2.BasicTypes::P_INT16.cl.desc"/>
         <BasicType name="INT32" descID="IEC61850_7_2.BasicTypes::P_INT32.cl.desc"/>
         <BasicType name="INT64" descID="IEC61850_7_2.BasicTypes::P_INT64.cl.desc"/>
         <BasicType name="INT8U" descID="IEC61850_7_2.BasicTypes::P_INT8U.cl.desc"/>
         <BasicType name="INT16U" descID="IEC61850_7_2.BasicTypes::P_INT16U.cl.desc"/>

         <BasicType name="INT32U" descID="IEC61850_7_2.BasicTypes::P_INT32U.cl.desc"/>
         <BasicType name="FLOAT32" descID="IEC61850_7_2.BasicTypes::P_FLOAT32.cl.desc"/>
         <BasicType name="Octet64" descID="IEC61850_7_2.BasicTypes::P_Octet64.cl.desc"/>
         <BasicType name="VisString64"
                 descID="IEC61850_7_2.BasicTypes::P_VisString64.cl.desc"/>
         <BasicType name="VisString129"
                 descID="IEC61850_7_2.BasicTypes::P_VisString129.cl.desc"/>
         <BasicType name="VisString255"
                 descID="IEC61850_7_2.BasicTypes::P_VisString255.cl.desc"/>
         <BasicType name="Unicode255"
                 descID="IEC61850_7_2.BasicTypes::P_Unicode255.cl.desc"/>
         <BasicType name="PhyComAddr"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_PhyComAddr.cl.desc"/>

         <BasicType name="ObjRef"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_ObjectReference.cl.desc"/>
         <BasicType name="EntryID"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_EntryID.cl.desc"/>
         <BasicType name="Currency"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_Currency.cl.desc"/>
         <BasicType name="Timestamp"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_Timestamp.cl.desc"/>

         <BasicType name="Quality"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_Quality.cl.desc"/>

         <BasicType name="EntryTime"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_EntryTime.cl.desc"/>
         <BasicType name="TrgOps"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_TriggerConditions.cl.desc"/>
         <BasicType name="OptFlds"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_RCBReportOptions.cl.desc"/>

         <BasicType name="SvOptFlds"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_SVMessageOptions.cl.desc"/>
         <BasicType name="Check"
                 descID="IEC61850_7_2.DomainTypesGeneral::P_CheckConditions.cl.desc"/>
         <BasicType name="Tcmd"
                 descID="IEC61850_7_2.DomainTypesCodedEnums::StepControlKind.cl.desc"/>
         <BasicType name="Dbpos"
                 descID="IEC61850_7_2.DomainTypesCodedEnums::DpStatusKind.cl.desc"/>


      </BasicTypes>
   <FunctionalConstraints>
         <FunctionalConstraint abbreviation="ST"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.ST.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <DataSetMemberOf cb="GoCB"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
               <DataSetMemberOf cb="SVCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="MX"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.MX.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <DataSetMemberOf cb="GoCB"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
               <DataSetMemberOf cb="SVCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="SP"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.SP.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="SetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <DataSetMemberOf cb="GoCB"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="SV"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.SV.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="SetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <Service name="SetDataSetValues"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="CF"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.CF.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="SetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <Service name="SetDataSetValues"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="DC"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.DC.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="SetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <Service name="SetDataSetValues"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="SG"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.SG.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="SE"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.SE.title">
            <ApplicableServices>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetEditSGValue"/>
               <Service name="SetEditSGValue"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="SR"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.SR.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="OR"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.OR.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <DataSetMemberOf cb="GoCB"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="BL"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.BL.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="SetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <Service name="SetDataSetValues"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
         <FunctionalConstraint abbreviation="EX"
                            titleID="IEC61850_7_2.FunctionalConstraints::FcKind.EX.title">
            <ApplicableServices>
               <Service name="GetDataValues"/>
               <Service name="GetDataDefinition"/>
               <Service name="GetDataDirectory"/>
               <Service name="GetDataSetValues"/>
               <DataSetMemberOf cb="RCB"/>
               <DataSetMemberOf cb="LCB"/>
            </ApplicableServices>
         </FunctionalConstraint>
      </FunctionalConstraints>
   <PresenceConditions>
         <PresenceCondition name="M"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.M.desc"/>
         <PresenceCondition name="O"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.O.desc"/>
         <PresenceCondition name="F"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.F.desc"/>
         <PresenceCondition name="na"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.na.desc"/>
         <PresenceCondition name="Mmulti"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.Mmulti.desc"/>
         <PresenceCondition name="Omulti"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.Omulti.desc"/>
         <PresenceCondition name="AtLeastOne"
                         argument="n"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.AtLeastOne(n).desc"/>
         <PresenceCondition name="AtMostOne"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.AtMostOne.desc"/>
         <PresenceCondition name="AllOrNonePerGroup"
                         argument="n"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.AllOrNonePerGroup(n).desc"/>
         <PresenceCondition name="AllOnlyOneGroup"
                         argument="n"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.AllOnlyOneGroup(n).desc"/>
         <PresenceCondition name="AllAtLeastOneGroup"
                         argument="n"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.AllAtLeastOneGroup(n).desc"/>
         <PresenceCondition name="MF"
                         argument="sibling"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MF(sibling).desc"/>
         <PresenceCondition name="MO"
                         argument="sibling"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MO(sibling).desc"/>
         <PresenceCondition name="OM"
                         argument="sibling"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.OM(sibling).desc"/>
         <PresenceCondition name="FM"
                         argument="sibling"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.FM(sibling).desc"/>
         <PresenceCondition name="MOcond"
                         argument="condID"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOcond(condID).desc"/>
         <PresenceCondition name="MFcond"
                         argument="condID"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MFcond(condID).desc"/>
         <PresenceCondition name="OFcond"
                         argument="condID"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.OFcond(condID).desc"/>
         <PresenceCondition name="MmultiRange"
                         argument="min, max"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MmultiRange(min,_max).desc"/>
         <PresenceCondition name="OmultiRange"
                         argument="min, max"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.OmultiRange(min,_max).desc"/>
         <PresenceCondition name="MFsubst"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MFsubst.desc"/>
         <PresenceCondition name="MOln0"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOln0.desc"/>
         <PresenceCondition name="MFln0"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MFln0.desc"/>
         <PresenceCondition name="MOlnNs"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOlnNs.desc"/>
         <PresenceCondition name="MOdataNs"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOdataNs.desc"/>
         <PresenceCondition name="MFscaledAV"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MFscaledAV.desc"/>
         <PresenceCondition name="MFscaledMagV"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MFscaledMagV.desc"/>
         <PresenceCondition name="MFscaledAngV"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MFscaledAngV.desc"/>
         <PresenceCondition name="MOrms"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOrms.desc"/>
         <PresenceCondition name="MOrootLD"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOrootLD.desc"/>
         <PresenceCondition name="MOoperTm"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOoperTm.desc"/>
         <PresenceCondition name="MmultiF"
                         argument="sibling"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MmultiF(sibling).desc"/>
         <PresenceCondition name="MOsbo"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOsbo.desc"/>
         <PresenceCondition name="MOenhanced"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MOenhanced.desc"/>
         <PresenceCondition name="MONamPlt"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MONamPlt.desc"/>
         <PresenceCondition name="OF"
                         argument="sibling"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.OF(sibling).desc"/>
         <PresenceCondition name="MORange"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MORange.desc"/>
         <PresenceCondition name="OMSynPh"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.OMSynPh.desc"/>
         <PresenceCondition name="MAllOrNonePerGroup"
                         argument="n"
                         descID="IEC61850_7_2.PresenceConditions::PresenceCondition.MAllOrNonePerGroup(n).desc"/>
      </PresenceConditions>
   <Enumerations>
         <Enumeration name="ServiceNameKind"
                   titleID="IEC61850_7_2.DomainTypesEnums::ServiceNameKind.cl.title">
            <Literal name="Unknown" literalVal="0"/>
            <Literal name="Associate" literalVal="1"/>
            <Literal name="Abort" literalVal="2"/>
            <Literal name="Release" literalVal="3"/>
            <Literal name="GetServerDirectory" literalVal="4"/>
            <Literal name="GetLogicalDeviceDirectory" literalVal="5"/>
            <Literal name="GetAllDataValues" literalVal="6"/>
            <Literal name="GetDataValues" literalVal="7"/>
            <Literal name="SetDataValues" literalVal="8"/>
            <Literal name="GetDataDirectory" literalVal="9"/>
            <Literal name="GetDataDefinition" literalVal="10"/>
            <Literal name="GetDataSetValues" literalVal="11"/>
            <Literal name="SetDataSetValues" literalVal="12"/>
            <Literal name="CreateDataSet" literalVal="13"/>
            <Literal name="DeleteDataSet" literalVal="14"/>
            <Literal name="GetDataSetDirectory" literalVal="15"/>
            <Literal name="SelectActiveSG" literalVal="16"/>
            <Literal name="SelectEditSG" literalVal="17"/>
            <Literal name="SetEditSGValue" literalVal="18"/>
            <Literal name="ConfirmEditSGValues" literalVal="19"/>
            <Literal name="GetEditSGValue" literalVal="20"/>
            <Literal name="GetSGCBValues" literalVal="21"/>
            <Literal name="Report" literalVal="22"/>
            <Literal name="GetBRCBValues" literalVal="23"/>
            <Literal name="SetBRCBValues" literalVal="24"/>
            <Literal name="GetURCBValues" literalVal="25"/>
            <Literal name="SetURCBValues" literalVal="26"/>
            <Literal name="GetLCBValues" literalVal="27"/>
            <Literal name="SetLCBValues" literalVal="28"/>
            <Literal name="QueryLogByTime" literalVal="29"/>
            <Literal name="QueryLogAfter" literalVal="30"/>
            <Literal name="GetLogStatusValues" literalVal="31"/>
            <Literal name="SendGOOSEMessage" literalVal="32"/>
            <Literal name="GetGoCBValues" literalVal="33"/>
            <Literal name="SetGoCBValues" literalVal="34"/>
            <Literal name="GetGoReference" literalVal="35"/>
            <Literal name="GetGOOSEElementNumber" literalVal="36"/>
            <Literal name="SendMSVMessage" literalVal="37"/>
            <Literal name="GetMSVCBValues" literalVal="38"/>
            <Literal name="SetMSVCBValues" literalVal="39"/>
            <Literal name="SendUSVMessage" literalVal="40" deprecated="true"/>
            <Literal name="GetUSVCBValues" literalVal="41" deprecated="true"/>
            <Literal name="SetUSVCBValues" literalVal="42" deprecated="true"/>
            <Literal name="Select" literalVal="43"/>
            <Literal name="SelectWithValue" literalVal="44"/>
            <Literal name="Cancel" literalVal="45"/>
            <Literal name="Operate" literalVal="46"/>
            <Literal name="CommandTermination" literalVal="47"/>
            <Literal name="TimeActivatedOperate" literalVal="48"/>
            <Literal name="GetFile" literalVal="49"/>
            <Literal name="SetFile" literalVal="50"/>
            <Literal name="DeleteFile" literalVal="51"/>
            <Literal name="GetFileAttributeValues" literalVal="52"/>
            <Literal name="TimeSynchronization" literalVal="53"/>
            <Literal name="InternalChange" literalVal="54"/>
            <Literal name="GetLogicalNodeDirectory" literalVal="55"/>
            <Literal name="GetMsvReference" literalVal="56"/>
            <Literal name="GetMSVElementNumber" literalVal="57"/>
         </Enumeration>
         <Enumeration name="ServiceStatusKind"
                   titleID="IEC61850_7_2.DomainTypesEnums::ServiceStatusKind.cl.title">
            <Literal name="no-error" literalVal="0"/>
            <Literal name="instance-not-available" literalVal="1"/>
            <Literal name="instance-in-use" literalVal="2"/>
            <Literal name="access-violation" literalVal="3"/>
            <Literal name="access-not-allowed-in-current-state" literalVal="4"/>
            <Literal name="parameter-value-inappropriate" literalVal="5"/>
            <Literal name="parameter-value-inconsistent" literalVal="6"/>
            <Literal name="class-not-supported" literalVal="7"/>
            <Literal name="instance-locked-by-other-client" literalVal="8"/>
            <Literal name="control-must-be-selected" literalVal="9" deprecated="true"/>
            <Literal name="type-conflict" literalVal="10"/>
            <Literal name="failed-due-to-communications-constraint" literalVal="11"/>
            <Literal name="failed-due-to-server-constraint" literalVal="12"/>
         </Enumeration>
         <Enumeration name="OriginatorCategoryKind"
                   titleID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.cl.title">
            <Literal name="not-supported"
                  literalVal="0"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.not-supported.desc"/>
            <Literal name="bay-control"
                  literalVal="1"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.bay-control.desc"/>
            <Literal name="station-control"
                  literalVal="2"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.station-control.desc"/>
            <Literal name="remote-control"
                  literalVal="3"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.remote-control.desc"/>
            <Literal name="automatic-bay"
                  literalVal="4"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.automatic-bay.desc"/>
            <Literal name="automatic-station"
                  literalVal="5"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.automatic-station.desc"/>
            <Literal name="automatic-remote"
                  literalVal="6"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.automatic-remote.desc"/>
            <Literal name="maintenance"
                  literalVal="7"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.maintenance.desc"/>
            <Literal name="process"
                  literalVal="8"
                  descID="IEC61850_7_2.DomainTypesEnums::OriginatorCategoryKind.process.desc"/>
         </Enumeration>
         <Enumeration name="ControlServiceStatusKind"
                   titleID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.cl.title">
            <Literal name="Unknown"
                  literalVal="0"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Unknown.desc"/>
            <Literal name="Not-supported"
                  literalVal="1"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Not-supported.desc"/>
            <Literal name="Blocked-by-switching-hierarchy"
                  literalVal="2"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Blocked-by-switching-hierarchy.desc"/>
            <Literal name="Select-failed"
                  literalVal="3"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Select-failed.desc"/>
            <Literal name="Invalid-position"
                  literalVal="4"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Invalid-position.desc"/>
            <Literal name="Position-reached"
                  literalVal="5"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Position-reached.desc"/>
            <Literal name="Parameter-change-in-execution"
                  literalVal="6"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Parameter-change-in-execution.desc"/>
            <Literal name="Step-limit"
                  literalVal="7"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Step-limit.desc"/>
            <Literal name="Blocked-by-Mode"
                  literalVal="8"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Blocked-by-Mode.desc"/>
            <Literal name="Blocked-by-process"
                  literalVal="9"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Blocked-by-process.desc"/>
            <Literal name="Blocked-by-interlocking"
                  literalVal="10"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Blocked-by-interlocking.desc"/>
            <Literal name="Blocked-by-synchrocheck"
                  literalVal="11"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Blocked-by-synchrocheck.desc"/>
            <Literal name="Command-already-in-execution"
                  literalVal="12"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Command-already-in-execution.desc"/>
            <Literal name="Blocked-by-health"
                  literalVal="13"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Blocked-by-health.desc"/>
            <Literal name="1-of-n-control"
                  literalVal="14"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.1-of-n-control.desc"/>
            <Literal name="Abortion-by-cancel"
                  literalVal="15"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Abortion-by-cancel.desc"/>
            <Literal name="Time-limit-over"
                  literalVal="16"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Time-limit-over.desc"/>
            <Literal name="Abortion-by-trip"
                  literalVal="17"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Abortion-by-trip.desc"/>
            <Literal name="Object-not-selected"
                  literalVal="18"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Object-not-selected.desc"/>
            <Literal name="Object-already-selected"
                  literalVal="19"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Object-already-selected.desc"/>
            <Literal name="No-access-authority"
                  literalVal="20"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.No-access-authority.desc"/>
            <Literal name="Ended-with-overshoot"
                  literalVal="21"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Ended-with-overshoot.desc"/>
            <Literal name="Abortion-due-to-deviation"
                  literalVal="22"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Abortion-due-to-deviation.desc"/>
            <Literal name="Abortion-by-communication-loss"
                  literalVal="23"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Abortion-by-communication-loss.desc"/>
            <Literal name="Blocked-by-command"
                  literalVal="24"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Blocked-by-command.desc"/>
            <Literal name="None"
                  literalVal="25"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.None.desc"/>
            <Literal name="Inconsistent-parameters"
                  literalVal="26"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Inconsistent-parameters.desc"/>
            <Literal name="Locked-by-other-client"
                  literalVal="27"
                  descID="IEC61850_7_2.DomainTypesEnums::ControlServiceStatusKind.Locked-by-other-client.desc"/>
         </Enumeration>
         <Enumeration name="SamplingModeKind"
                   titleID="IEC61850_7_2.DomainTypesEnums::SamplingModeKind.cl.title">
            <Literal name="SamplesPerPeriod" literalVal="0"/>
            <Literal name="SamplesPerSecond" literalVal="1"/>
            <Literal name="SecondsPerSample" literalVal="2"/>
         </Enumeration>
      </Enumerations>
   <ConstructedAttributes>
         <ConstructedAttribute name="Originator"
                            titleID="IEC61850_7_2.DomainTypesGeneral::S_Originator.cl.title">
            <SubDataAttribute name="orCat"
                           type="OriginatorCategoryKind"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_2.DomainTypesGeneral::S_Originator.orCat.desc"
                           presCond="M"/>
            <SubDataAttribute name="orIdent"
                           type="Octet64"
                           descID="IEC61850_7_2.DomainTypesGeneral::S_Originator.orIdent.desc"
                           presCond="M"/>
         </ConstructedAttribute>
      </ConstructedAttributes>
</NS>`, pD = `<?xml version="1.0" encoding="UTF-8"?>
<NS xmlns="http://www.iec.ch/61850/2016/NSD"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.iec.ch/61850/2016/NSD NSD.xsd"
    id="IEC 61850-7-3"
    version="2007"
    revision="B"
    release="3"
    umlVersion="WG10built3"
    umlDate="2019-10-02T00:00:00Z"
    publicationStage="IS">
   <Copyright>
         <Notice>
			COPYRIGHT (c) IEC, www.iec.ch/tc57/supportdocuments. This version of this NSD is part of IEC_61850-7-3:2010 Edition 2.1; see the IEC_61850-7-3:2010 Edition 2.1 for full legal notices. In case of any differences between the here-below code and the IEC published content, the here-below definition supersedes the IEC publication; it may contain updates. See history files. The whole document has to be taken into account to have a full description of this code component.
			See www.iec.ch/CCv1 for copyright details.
			</Notice>
         <License uri="www.iec.ch/CCv1" kind="Standard"/>
      </Copyright>
   <Changes version="2007"
            revision="A"
            tissues="690, 691, 692, 697, 698, 707, 709, 711, 722, 814, 816, 819, 832, 839, 846, 868, 887, 919, 924, 925, 926, 929, 953, 954, 962, 968, 996, 1078, 1079, 1122, 1127, 1184, 1187, 1189, 1220, 1233, 1240, 1242, 1247, 1253, 1265, 1270, 1311, 1372, 1387, 1388, 1403, 1430, 1438, 1578, 1581, 1598, 1602, 1623"/>
   <DependsOn id="IEC 61850-7-2" version="2007" revision="B"/>
   <Enumerations>
         <Enumeration name="AngleReferenceKind"
                   titleID="IEC61850_7_3.DAEnums::AngleReferenceKind.cl.title">
            <Literal name="V" literalVal="0"/>
            <Literal name="A" literalVal="1"/>
            <Literal name="other" literalVal="2"/>
            <Literal name="Synchrophasor"
                  literalVal="3"
                  descID="IEC61850_7_3.DAEnums::AngleReferenceKind.Synchrophasor.desc"/>
         </Enumeration>
         <Enumeration name="CtlModelKind"
                   titleID="IEC61850_7_3.DAEnums::CtlModelKind.cl.title">
            <Literal name="status-only"
                  literalVal="0"
                  descID="IEC61850_7_3.DAEnums::CtlModelKind.status-only.desc"/>
            <Literal name="direct-with-normal-security"
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::CtlModelKind.direct-with-normal-security.desc"/>
            <Literal name="sbo-with-normal-security"
                  literalVal="2"
                  descID="IEC61850_7_3.DAEnums::CtlModelKind.sbo-with-normal-security.desc"/>
            <Literal name="direct-with-enhanced-security"
                  literalVal="3"
                  descID="IEC61850_7_3.DAEnums::CtlModelKind.direct-with-enhanced-security.desc"/>
            <Literal name="sbo-with-enhanced-security"
                  literalVal="4"
                  descID="IEC61850_7_3.DAEnums::CtlModelKind.sbo-with-enhanced-security.desc"/>
         </Enumeration>
         <Enumeration name="CurveCharKind"
                   titleID="IEC61850_7_3.DAEnums::CurveCharKind.cl.title">
            <Literal name="None"
                  literalVal="0"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.None.desc"/>
            <Literal name="ANSI Extremely Inverse"
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.ANSI_Extremely_Inverse.desc"/>
            <Literal name="ANSI Very Inverse"
                  literalVal="2"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.ANSI_Very_Inverse.desc"/>
            <Literal name="ANSI Normal Inverse" literalVal="3" deprecated="true"/>
            <Literal name="ANSI Moderate Inverse"
                  literalVal="4"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.ANSI_Moderate_Inverse.desc"/>
            <Literal name="ANSI Definite Time"
                  literalVal="5"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.ANSI_Definite_Time.desc"/>
            <Literal name="Long-Time Extremely Inverse" literalVal="6" deprecated="true"/>
            <Literal name="Long-Time Very Inverse" literalVal="7" deprecated="true"/>
            <Literal name="Long-Time Inverse" literalVal="8" deprecated="true"/>
            <Literal name="IEC Normal Inverse" literalVal="9" deprecated="true"/>
            <Literal name="IEC Very Inverse"
                  literalVal="10"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.IEC_Very_Inverse.desc"/>
            <Literal name="IEC Inverse"
                  literalVal="11"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.IEC_Inverse.desc"/>
            <Literal name="IEC Extremely Inverse"
                  literalVal="12"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.IEC_Extremely_Inverse.desc"/>
            <Literal name="IEC Short-Time Inverse" literalVal="13" deprecated="true"/>
            <Literal name="IEC Long-Time Inverse" literalVal="14" deprecated="true"/>
            <Literal name="IEC Definite Time"
                  literalVal="15"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.IEC_Definite_Time.desc"/>
            <Literal name="Reserved" literalVal="16"/>
            <Literal name="Polynom 1"
                  literalVal="17"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_1.desc"/>
            <Literal name="Polynom 2"
                  literalVal="18"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_2.desc"/>
            <Literal name="Polynom 3"
                  literalVal="19"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_3.desc"/>
            <Literal name="Polynom 4"
                  literalVal="20"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_4.desc"/>
            <Literal name="Polynom 5"
                  literalVal="21"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_5.desc"/>
            <Literal name="Polynom 6"
                  literalVal="22"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_6.desc"/>
            <Literal name="Polynom 7"
                  literalVal="23"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_7.desc"/>
            <Literal name="Polynom 8"
                  literalVal="24"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_8.desc"/>
            <Literal name="Polynom 9"
                  literalVal="25"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_9.desc"/>
            <Literal name="Polynom 10"
                  literalVal="26"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_10.desc"/>
            <Literal name="Polynom 11"
                  literalVal="27"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_11.desc"/>
            <Literal name="Polynom 12"
                  literalVal="28"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_12.desc"/>
            <Literal name="Polynom 13"
                  literalVal="29"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_13.desc"/>
            <Literal name="Polynom 14"
                  literalVal="30"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_14.desc"/>
            <Literal name="Polynom 15"
                  literalVal="31"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_15.desc"/>
            <Literal name="Polynom 16"
                  literalVal="32"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Polynom_16.desc"/>
            <Literal name="Multiline 1"
                  literalVal="33"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_1.desc"/>
            <Literal name="Multiline 2"
                  literalVal="34"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_2.desc"/>
            <Literal name="Multiline 3"
                  literalVal="35"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_3.desc"/>
            <Literal name="Multiline 4"
                  literalVal="36"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_4.desc"/>
            <Literal name="Multiline 5"
                  literalVal="37"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_5.desc"/>
            <Literal name="Multiline 6"
                  literalVal="38"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_6.desc"/>
            <Literal name="Multiline 7"
                  literalVal="39"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_7.desc"/>
            <Literal name="Multiline 8"
                  literalVal="40"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_8.desc"/>
            <Literal name="Multiline 9"
                  literalVal="41"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_9.desc"/>
            <Literal name="Multiline 10"
                  literalVal="42"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_10.desc"/>
            <Literal name="Multiline 11"
                  literalVal="43"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_11.desc"/>
            <Literal name="Multiline 12"
                  literalVal="44"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_12.desc"/>
            <Literal name="Multiline 13"
                  literalVal="45"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_13.desc"/>
            <Literal name="Multiline 14"
                  literalVal="46"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_14.desc"/>
            <Literal name="Multiline 15"
                  literalVal="47"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_15.desc"/>
            <Literal name="Multiline 16"
                  literalVal="48"
                  descID="IEC61850_7_3.DAEnums::CurveCharKind.Multiline_16.desc"/>
         </Enumeration>
         <Enumeration name="FaultDirectionKind"
                   titleID="IEC61850_7_3.DAEnums::FaultDirectionKind.cl.title">
            <Literal name="unknown" literalVal="0"/>
            <Literal name="forward" literalVal="1"/>
            <Literal name="backward" literalVal="2"/>
            <Literal name="both" literalVal="3"/>
         </Enumeration>
         <Enumeration name="HvReferenceKind"
                   titleID="IEC61850_7_3.DAEnums::HvReferenceKind.cl.title">
            <Literal name="fundamental" literalVal="0"/>
            <Literal name="rms" literalVal="1"/>
            <Literal name="absolute" literalVal="2"/>
         </Enumeration>
         <Enumeration name="MonthKind" titleID="IEC61850_7_3.DAEnums::MonthKind.cl.title">
            <Literal name="reserved" literalVal="0"/>
            <Literal name="January" literalVal="1"/>
            <Literal name="February" literalVal="2"/>
            <Literal name="March" literalVal="3"/>
            <Literal name="April" literalVal="4"/>
            <Literal name="May" literalVal="5"/>
            <Literal name="June" literalVal="6"/>
            <Literal name="July" literalVal="7"/>
            <Literal name="August" literalVal="8"/>
            <Literal name="September" literalVal="9"/>
            <Literal name="October" literalVal="10"/>
            <Literal name="November" literalVal="11"/>
            <Literal name="December" literalVal="12"/>
         </Enumeration>
         <Enumeration name="MultiplierKind"
                   titleID="IEC61850_7_3.DAEnums::MultiplierKind.cl.title">
            <Literal name="y"
                  literalVal="-24"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.y.desc"/>
            <Literal name="z"
                  literalVal="-21"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.z.desc"/>
            <Literal name="a"
                  literalVal="-18"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.a.desc"/>
            <Literal name="f"
                  literalVal="-15"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.f.desc"/>
            <Literal name="p"
                  literalVal="-12"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.p.desc"/>
            <Literal name="n"
                  literalVal="-9"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.n.desc"/>
            <Literal name="µ"
                  literalVal="-6"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind._micro.desc"/>
            <Literal name="m"
                  literalVal="-3"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.m.desc"/>
            <Literal name="c"
                  literalVal="-2"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.c.desc"/>
            <Literal name="d"
                  literalVal="-1"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.d.desc"/>
            <Literal name=""
                  literalVal="0"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.none.desc"/>
            <Literal name="da"
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.da.desc"/>
            <Literal name="h"
                  literalVal="2"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.h.desc"/>
            <Literal name="k"
                  literalVal="3"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.k.desc"/>
            <Literal name="M"
                  literalVal="6"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.M.desc"/>
            <Literal name="G"
                  literalVal="9"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.G.desc"/>
            <Literal name="T"
                  literalVal="12"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.T.desc"/>
            <Literal name="P"
                  literalVal="15"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.P.desc"/>
            <Literal name="E"
                  literalVal="18"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.E.desc"/>
            <Literal name="Z"
                  literalVal="21"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.Z.desc"/>
            <Literal name="Y"
                  literalVal="24"
                  descID="IEC61850_7_3.DAEnums::MultiplierKind.Y.desc"/>
         </Enumeration>
         <Enumeration name="OccurrenceKind"
                   titleID="IEC61850_7_3.DAEnums::OccurrenceKind.cl.title">
            <Literal name="Time" literalVal="0"/>
            <Literal name="WeekDay" literalVal="1"/>
            <Literal name="WeekOfYear" literalVal="2"/>
            <Literal name="DayOfMonth" literalVal="3"/>
            <Literal name="DayOfYear" literalVal="4"/>
            <Literal name="NONE"
                  literalVal="5"
                  descID="IEC61850_7_3.DAEnums::OccurrenceKind.NONE.desc"/>
         </Enumeration>
         <Enumeration name="OutputSignalKind"
                   titleID="IEC61850_7_3.DAEnums::OutputSignalKind.cl.title">
            <Literal name="pulse"
                  literalVal="0"
                  descID="IEC61850_7_3.DAEnums::OutputSignalKind.pulse.desc"/>
            <Literal name="persistent"
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::OutputSignalKind.persistent.desc"/>
            <Literal name="persistent-feedback"
                  literalVal="2"
                  descID="IEC61850_7_3.DAEnums::OutputSignalKind.persistent-feedback.desc"/>
         </Enumeration>
         <Enumeration name="PeriodKind" titleID="IEC61850_7_3.DAEnums::PeriodKind.cl.title">
            <Literal name="Hour" literalVal="0"/>
            <Literal name="Day" literalVal="1"/>
            <Literal name="Week" literalVal="2"/>
            <Literal name="Month" literalVal="3"/>
            <Literal name="Year" literalVal="4"/>
         </Enumeration>
         <Enumeration name="PhaseAngleReferenceKind"
                   titleID="IEC61850_7_3.DAEnums::PhaseAngleReferenceKind.cl.title">
            <Literal name="Va" literalVal="0"/>
            <Literal name="Vb" literalVal="1"/>
            <Literal name="Vc" literalVal="2"/>
            <Literal name="Aa" literalVal="3"/>
            <Literal name="Ab" literalVal="4"/>
            <Literal name="Ac" literalVal="5"/>
            <Literal name="Vab" literalVal="6"/>
            <Literal name="Vbc" literalVal="7"/>
            <Literal name="Vca" literalVal="8"/>
            <Literal name="Vother" literalVal="9"/>
            <Literal name="Aother" literalVal="10"/>
            <Literal name="Synchrophasor"
                  literalVal="11"
                  descID="IEC61850_7_3.DAEnums::PhaseAngleReferenceKind.Synchrophasor.desc"/>
         </Enumeration>
         <Enumeration name="PhaseFaultDirectionKind"
                   titleID="IEC61850_7_3.DAEnums::PhaseFaultDirectionKind.cl.title">
            <Literal name="unknown" literalVal="0"/>
            <Literal name="forward" literalVal="1"/>
            <Literal name="backward" literalVal="2"/>
         </Enumeration>
         <Enumeration name="PhaseReferenceKind"
                   titleID="IEC61850_7_3.DAEnums::PhaseReferenceKind.cl.title">
            <Literal name="A" literalVal="0"/>
            <Literal name="B" literalVal="1"/>
            <Literal name="C" literalVal="2"/>
            <Literal name="Synchrophasor" literalVal="3"/>
         </Enumeration>
         <Enumeration name="RangeKind" titleID="IEC61850_7_3.DAEnums::RangeKind.cl.title">
            <Literal name="normal" literalVal="0"/>
            <Literal name="high" literalVal="1"/>
            <Literal name="low" literalVal="2"/>
            <Literal name="high-high" literalVal="3"/>
            <Literal name="low-low" literalVal="4"/>
         </Enumeration>
         <Enumeration name="SIUnitKind" titleID="IEC61850_7_3.DAEnums::SIUnitKind.cl.title">
            <Literal name=""
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.none.desc"/>
            <Literal name="m"
                  literalVal="2"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m.desc"/>
            <Literal name="kg"
                  literalVal="3"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.kg.desc"/>
            <Literal name="s"
                  literalVal="4"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.s.desc"/>
            <Literal name="A"
                  literalVal="5"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.A.desc"/>
            <Literal name="K"
                  literalVal="6"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.K.desc"/>
            <Literal name="mol"
                  literalVal="7"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.mol.desc"/>
            <Literal name="cd"
                  literalVal="8"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.cd.desc"/>
            <Literal name="deg"
                  literalVal="9"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.deg.desc"/>
            <Literal name="rad"
                  literalVal="10"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.rad.desc"/>
            <Literal name="sr"
                  literalVal="11"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.sr.desc"/>
            <Literal name="Gy"
                  literalVal="21"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Gy.desc"/>
            <Literal name="Bq"
                  literalVal="22"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Bq.desc"/>
            <Literal name="°C"
                  literalVal="23"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind._deg_C.desc"/>
            <Literal name="Sv"
                  literalVal="24"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Sv.desc"/>
            <Literal name="F"
                  literalVal="25"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.F.desc"/>
            <Literal name="C"
                  literalVal="26"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.C.desc"/>
            <Literal name="S"
                  literalVal="27"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.S.desc"/>
            <Literal name="H"
                  literalVal="28"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.H.desc"/>
            <Literal name="V"
                  literalVal="29"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.V.desc"/>
            <Literal name="ohm"
                  literalVal="30"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.ohm.desc"/>
            <Literal name="J"
                  literalVal="31"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.J.desc"/>
            <Literal name="N"
                  literalVal="32"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.N.desc"/>
            <Literal name="Hz"
                  literalVal="33"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Hz.desc"/>
            <Literal name="lx"
                  literalVal="34"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.lx.desc"/>
            <Literal name="Lm"
                  literalVal="35"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Lm.desc"/>
            <Literal name="Wb"
                  literalVal="36"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Wb.desc"/>
            <Literal name="T"
                  literalVal="37"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.T.desc"/>
            <Literal name="W"
                  literalVal="38"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.W.desc"/>
            <Literal name="Pa"
                  literalVal="39"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Pa.desc"/>
            <Literal name="m²"
                  literalVal="41"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m_sq_.desc"/>
            <Literal name="m³"
                  literalVal="42"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m_cube_.desc"/>
            <Literal name="m/s"
                  literalVal="43"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m_per_s.desc"/>
            <Literal name="m/s²"
                  literalVal="44"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m_per_s_sq_.desc"/>
            <Literal name="m³/s"
                  literalVal="45"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m_cube__per_s.desc"/>
            <Literal name="m/m³"
                  literalVal="46"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m_per_m_cube_.desc"/>
            <Literal name="M"
                  literalVal="47"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.M.desc"/>
            <Literal name="kg/m³"
                  literalVal="48"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.kg_per_m_cube_.desc"/>
            <Literal name="m²/s"
                  literalVal="49"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.m_sq__per_s.desc"/>
            <Literal name="W/m K"
                  literalVal="50"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.W_per_m_K.desc"/>
            <Literal name="J/K"
                  literalVal="51"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.J_per_K.desc"/>
            <Literal name="ppm"
                  literalVal="52"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.ppm.desc"/>
            <Literal name="1/s"
                  literalVal="53"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.1_per_s.desc"/>
            <Literal name="rad/s"
                  literalVal="54"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.rad_per_s.desc"/>
            <Literal name="W/m²"
                  literalVal="55"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.W_per_m_sq_.desc"/>
            <Literal name="J/m²"
                  literalVal="56"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.J_per_m_sq_.desc"/>
            <Literal name="S/m"
                  literalVal="57"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.S_per_m.desc"/>
            <Literal name="K/s"
                  literalVal="58"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.K_per_s.desc"/>
            <Literal name="Pa/s"
                  literalVal="59"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Pa_per_s.desc"/>
            <Literal name="J/kg K"
                  literalVal="60"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.J_per_kg_K.desc"/>
            <Literal name="VA"
                  literalVal="61"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.VA.desc"/>
            <Literal name="Watts"
                  literalVal="62"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Watts.desc"
                  deprecated="true"/>
            <Literal name="VAr"
                  literalVal="63"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.VAr.desc"/>
            <Literal name="phi"
                  literalVal="64"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.phi.desc"
                  deprecated="true"/>
            <Literal name="cos(phi)"
                  literalVal="65"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.cos(phi).desc"/>
            <Literal name="Vs"
                  literalVal="66"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Vs.desc"/>
            <Literal name="V²"
                  literalVal="67"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.V_sq_.desc"/>
            <Literal name="As"
                  literalVal="68"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.As.desc"/>
            <Literal name="A²"
                  literalVal="69"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.A_sq_.desc"/>
            <Literal name="A²t"
                  literalVal="70"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.A_sq_t.desc"/>
            <Literal name="VAh"
                  literalVal="71"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.VAh.desc"/>
            <Literal name="Wh"
                  literalVal="72"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Wh.desc"/>
            <Literal name="VArh"
                  literalVal="73"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.VArh.desc"/>
            <Literal name="V/Hz"
                  literalVal="74"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.V_per_Hz.desc"/>
            <Literal name="Hz/s"
                  literalVal="75"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Hz_per_s.desc"/>
            <Literal name="char"
                  literalVal="76"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.char.desc"/>
            <Literal name="char/s"
                  literalVal="77"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.char_per_s.desc"/>
            <Literal name="kgm²"
                  literalVal="78"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.kgm_sq_.desc"/>
            <Literal name="dB"
                  literalVal="79"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.dB.desc"/>
            <Literal name="J/Wh"
                  literalVal="80"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.J_per_Wh.desc"/>
            <Literal name="W/s"
                  literalVal="81"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.W_per_s.desc"/>
            <Literal name="l/s"
                  literalVal="82"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.l_per_s.desc"/>
            <Literal name="dBm"
                  literalVal="83"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.dBm.desc"/>
            <Literal name="h"
                  literalVal="84"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.h.desc"/>
            <Literal name="min"
                  literalVal="85"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.min.desc"/>
            <Literal name="Ohm/m"
                  literalVal="86"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.Ohm_per_m.desc"/>
            <Literal name="percent/s"
                  literalVal="87"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.percent_per_s.desc"/>
            <Literal name="A/V"
                  literalVal="88"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.A_per_V.desc"/>
            <Literal name="A/Vs"
                  literalVal="89"
                  descID="IEC61850_7_3.DAEnums::SIUnitKind.A_per_Vs.desc"/>
         </Enumeration>
         <Enumeration name="SboClassKind"
                   titleID="IEC61850_7_3.DAEnums::SboClassKind.cl.title">
            <Literal name="operate-once"
                  literalVal="0"
                  descID="IEC61850_7_3.DAEnums::SboClassKind.operate-once.desc"/>
            <Literal name="operate-many"
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::SboClassKind.operate-many.desc"/>
         </Enumeration>
         <Enumeration name="SequenceKind"
                   titleID="IEC61850_7_3.DAEnums::SequenceKind.cl.title">
            <Literal name="pos-neg-zero"
                  literalVal="0"
                  descID="IEC61850_7_3.DAEnums::SequenceKind.pos-neg-zero.desc"/>
            <Literal name="dir-quad-zero"
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::SequenceKind.dir-quad-zero.desc"/>
         </Enumeration>
         <Enumeration name="SeverityKind"
                   titleID="IEC61850_7_3.DAEnums::SeverityKind.cl.title">
            <Literal name="unknown"
                  literalVal="0"
                  descID="IEC61850_7_3.DAEnums::SeverityKind.unknown.desc"/>
            <Literal name="critical"
                  literalVal="1"
                  descID="IEC61850_7_3.DAEnums::SeverityKind.critical.desc"/>
            <Literal name="major"
                  literalVal="2"
                  descID="IEC61850_7_3.DAEnums::SeverityKind.major.desc"/>
            <Literal name="minor"
                  literalVal="3"
                  descID="IEC61850_7_3.DAEnums::SeverityKind.minor.desc"/>
            <Literal name="warning"
                  literalVal="4"
                  descID="IEC61850_7_3.DAEnums::SeverityKind.warning.desc"/>
         </Enumeration>
         <Enumeration name="WeekdayKind" titleID="IEC61850_7_3.DAEnums::WeekdayKind.cl.title">
            <Literal name="reserved" literalVal="0"/>
            <Literal name="Monday" literalVal="1"/>
            <Literal name="Tuesday" literalVal="2"/>
            <Literal name="Wednesday" literalVal="3"/>
            <Literal name="Thursday" literalVal="4"/>
            <Literal name="Friday" literalVal="5"/>
            <Literal name="Saturday" literalVal="6"/>
            <Literal name="Sunday" literalVal="7"/>
         </Enumeration>
      </Enumerations>
   <ConstructedAttributes>
         <ConstructedAttribute name="ScaledValueConfig"
                            titleID="IEC61850_7_3.ConstructedDAs::ScaledValueConfig.cl.title">
            <SubDataAttribute name="scaleFactor"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::ScaledValueConfig.scaleFactor.desc"
                           presCond="M"/>
            <SubDataAttribute name="offset"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::ScaledValueConfig.offset.desc"
                           presCond="M"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="RangeConfig"
                            titleID="IEC61850_7_3.ConstructedDAs::RangeConfig.cl.title">
            <SubDataAttribute name="hhLim"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.ConstructedDAs::RangeConfig.hhLim.desc"
                           presCond="MORange"/>
            <SubDataAttribute name="hLim"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.ConstructedDAs::RangeConfig.hLim.desc"
                           presCond="MORange"/>
            <SubDataAttribute name="lLim"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.ConstructedDAs::RangeConfig.lLim.desc"
                           presCond="MORange"/>
            <SubDataAttribute name="llLim"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.ConstructedDAs::RangeConfig.llLim.desc"
                           presCond="MORange"/>
            <SubDataAttribute name="min"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.ConstructedDAs::RangeConfig.min.desc"
                           presCond="M"/>
            <SubDataAttribute name="max"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.ConstructedDAs::RangeConfig.max.desc"
                           presCond="M"/>
            <SubDataAttribute name="limDb"
                           type="INT32U"
                           minValue="0"
                           maxValue="100000"
                           descID="IEC61850_7_3.ConstructedDAs::RangeConfig.limDb.desc"
                           presCond="O"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="ValWithTrans"
                            titleID="IEC61850_7_3.ConstructedDAs::ValWithTrans.cl.title">
            <SubDataAttribute name="posVal"
                           type="INT8"
                           minValue="-64"
                           maxValue="63"
                           descID="IEC61850_7_3.ConstructedDAs::ValWithTrans.posVal.desc"
                           presCond="M"/>
            <SubDataAttribute name="transInd"
                           type="BOOLEAN"
                           descID="IEC61850_7_3.ConstructedDAs::ValWithTrans.transInd.desc"
                           presCond="O"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="PulseConfig"
                            titleID="IEC61850_7_3.ConstructedDAs::PulseConfig.cl.title">
            <SubDataAttribute name="cmdQual"
                           type="OutputSignalKind"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_3.ConstructedDAs::PulseConfig.cmdQual.desc"
                           presCond="M"/>
            <SubDataAttribute name="onDur"
                           type="INT32U"
                           descID="IEC61850_7_3.ConstructedDAs::PulseConfig.onDur.desc"
                           presCond="M"/>
            <SubDataAttribute name="offDur"
                           type="INT32U"
                           descID="IEC61850_7_3.ConstructedDAs::PulseConfig.offDur.desc"
                           presCond="M"/>
            <SubDataAttribute name="numPls"
                           type="INT32U"
                           descID="IEC61850_7_3.ConstructedDAs::PulseConfig.numPls.desc"
                           presCond="M"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="Unit" titleID="IEC61850_7_3.ConstructedDAs::Unit.cl.title">
            <SubDataAttribute name="SIUnit"
                           type="SIUnitKind"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_3.ConstructedDAs::Unit.SIUnit.desc"
                           presCond="M"/>
            <SubDataAttribute name="multiplier"
                           type="MultiplierKind"
                           typeKind="ENUMERATED"
                           defaultValue="none"
                           descID="IEC61850_7_3.ConstructedDAs::Unit.multiplier.desc"
                           presCond="O"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="Vector" titleID="IEC61850_7_3.ConstructedDAs::Vector.cl.title">
            <SubDataAttribute name="mag"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.ConstructedDAs::Vector.mag.desc"
                           presCond="M"/>
            <SubDataAttribute name="ang"
                           type="AnalogueValue"
                           typeKind="CONSTRUCTED"
                           minValue="-180"
                           maxValue="180"
                           descID="IEC61850_7_3.ConstructedDAs::Vector.ang.desc"
                           presCond="O"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="Point" titleID="IEC61850_7_3.ConstructedDAs::Point.cl.title">
            <SubDataAttribute name="xVal"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::Point.xVal.desc"
                           presCond="M"/>
            <SubDataAttribute name="yVal"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::Point.yVal.desc"
                           presCond="M"/>
            <SubDataAttribute name="zVal"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::Point.zVal.desc"
                           presCond="O"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="Cell" titleID="IEC61850_7_3.ConstructedDAs::Cell.cl.title">
            <SubDataAttribute name="xStart"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::Cell.xStart.desc"
                           presCond="M"/>
            <SubDataAttribute name="xEnd"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::Cell.xEnd.desc"
                           presCond="O"/>
            <SubDataAttribute name="yStart"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::Cell.yStart.desc"
                           presCond="O"/>
            <SubDataAttribute name="yEnd"
                           type="FLOAT32"
                           descID="IEC61850_7_3.ConstructedDAs::Cell.yEnd.desc"
                           presCond="O"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="CalendarTime"
                            titleID="IEC61850_7_3.ConstructedDAs::CalendarTime.cl.title">
            <SubDataAttribute name="occ"
                           type="INT16U"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.occ.desc"
                           presCond="M"/>
            <SubDataAttribute name="occType"
                           type="OccurrenceKind"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.occType.desc"
                           presCond="M"/>
            <SubDataAttribute name="occPer"
                           type="PeriodKind"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.occPer.desc"
                           presCond="M"/>
            <SubDataAttribute name="weekDay"
                           type="WeekdayKind"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.weekDay.desc"
                           presCond="M"/>
            <SubDataAttribute name="month"
                           type="MonthKind"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.month.desc"
                           presCond="M"/>
            <SubDataAttribute name="day"
                           type="INT8U"
                           minValue="1"
                           maxValue="31"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.day.desc"
                           presCond="M"/>
            <SubDataAttribute name="hr"
                           type="INT8U"
                           minValue="0"
                           maxValue="23"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.hr.desc"
                           presCond="M"/>
            <SubDataAttribute name="mn"
                           type="INT8U"
                           minValue="0"
                           maxValue="59"
                           descID="IEC61850_7_3.ConstructedDAs::CalendarTime.mn.desc"
                           presCond="M"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="AnalogueValue"
                            titleID="IEC61850_7_3.AnalogueValue::AnalogueValue.cl.title">
            <SubDataAttribute name="i"
                           type="INT32"
                           descID="IEC61850_7_3.AnalogueValue::AnalogueValue.i.desc"
                           presCond="AtLeastOne"
                           presCondArgs="1"/>
            <SubDataAttribute name="f"
                           type="FLOAT32"
                           descID="IEC61850_7_3.AnalogueValue::AnalogueValue.f.desc"
                           presCond="AtLeastOne"
                           presCondArgs="1"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="AnalogueValueCtl"
                            titleID="IEC61850_7_3.AnalogueValue::AnalogueValueCtl.cl.title">
            <SubDataAttribute name="i"
                           type="INT32"
                           descID="IEC61850_7_3.AnalogueValue::AnalogueValueCtl.i.desc"
                           presCond="AllOnlyOneGroup"
                           presCondArgs="1"/>
            <SubDataAttribute name="f"
                           type="FLOAT32"
                           descID="IEC61850_7_3.AnalogueValue::AnalogueValueCtl.f.desc"
                           presCond="AllOnlyOneGroup"
                           presCondArgs="2"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="AnalogueValueCtlF"
                            titleID="IEC61850_7_3.AnalogueValue::AnalogueValueCtlF.cl.title">
            <SubDataAttribute name="f"
                           type="FLOAT32"
                           descID="IEC61850_7_3.AnalogueValue::AnalogueValueCtlF.f.desc"
                           presCond="M"/>
         </ConstructedAttribute>
         <ConstructedAttribute name="AnalogueValueCtlInt"
                            titleID="IEC61850_7_3.AnalogueValue::AnalogueValueCtlInt.cl.title">
            <SubDataAttribute name="i"
                           type="INT32"
                           descID="IEC61850_7_3.AnalogueValue::AnalogueValueCtlInt.i.desc"
                           presCond="M"/>
         </ConstructedAttribute>
      </ConstructedAttributes>
   <CDCs>
         <CDC name="SPS" titleID="IEC61850_7_3.CDCStatusInfo::SPS.cl.title">
            <DataAttribute name="stVal"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::SPS.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::SPS.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::SPS.t.desc"
                        presCond="M"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCStatusInfo::SPS.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="DPS" titleID="IEC61850_7_3.CDCStatusInfo::DPS.cl.title">
            <DataAttribute name="stVal"
                        fc="ST"
                        type="Dbpos"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::DPS.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::DPS.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::DPS.t.desc"
                        presCond="M"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="Dbpos"
                        descID="IEC61850_7_3.CDCStatusInfo::DPS.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="INS"
           titleID="IEC61850_7_3.CDCStatusInfo::INS.cl.title"
           statistics="true">
            <DataAttribute name="stVal"
                        fc="ST"
                        type="INT32"
                        dchg="true"
                        dupd="true"
                        descID="IEC61850_7_3.CDCStatusInfo::INS.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::INS.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::INS.t.desc"
                        presCond="M"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="INT32"
                        descID="IEC61850_7_3.CDCStatusInfo::INS.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::INS.units.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ENS"
           titleID="IEC61850_7_3.CDCStatusInfo::ENS.cl.title"
           enumParameterized="true">
            <DataAttribute name="stVal"
                        fc="ST"
                        typeKind="ENUMERATED"
                        dchg="true"
                        dupd="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ENS.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ENS.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::ENS.t.desc"
                        presCond="M"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCStatusInfo::ENS.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ACT" titleID="IEC61850_7_3.CDCStatusInfo::ACT.cl.title">
            <DataAttribute name="general"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.general.desc"
                        presCond="M"/>
            <DataAttribute name="phsA"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.phsA.desc"
                        presCond="O"/>
            <DataAttribute name="phsB"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.phsB.desc"
                        presCond="O"/>
            <DataAttribute name="phsC"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.phsC.desc"
                        presCond="O"/>
            <DataAttribute name="neut"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.neut.desc"
                        presCond="O"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.t.desc"
                        presCond="M"/>
            <DataAttribute name="originSrc"
                        fc="ST"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.originSrc.desc"
                        presCond="O"/>
            <DataAttribute name="operTmPhsA"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.operTmPhsA.desc"
                        presCond="O"/>
            <DataAttribute name="operTmPhsB"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.operTmPhsB.desc"
                        presCond="O"/>
            <DataAttribute name="operTmPhsC"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::ACT.operTmPhsC.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ACD" titleID="IEC61850_7_3.CDCStatusInfo::ACD.cl.title">
            <DataAttribute name="general"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.general.desc"
                        presCond="M"/>
            <DataAttribute name="dirGeneral"
                        fc="ST"
                        type="FaultDirectionKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.dirGeneral.desc"
                        presCond="M"/>
            <DataAttribute name="phsA"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.phsA.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="dirPhsA"
                        fc="ST"
                        type="PhaseFaultDirectionKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.dirPhsA.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="phsB"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.phsB.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="2"/>
            <DataAttribute name="dirPhsB"
                        fc="ST"
                        type="PhaseFaultDirectionKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.dirPhsB.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="2"/>
            <DataAttribute name="phsC"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.phsC.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="3"/>
            <DataAttribute name="dirPhsC"
                        fc="ST"
                        type="PhaseFaultDirectionKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.dirPhsC.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="3"/>
            <DataAttribute name="neut"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.neut.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="4"/>
            <DataAttribute name="dirNeut"
                        fc="ST"
                        type="PhaseFaultDirectionKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.dirNeut.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="4"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::ACD.t.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="SEC" titleID="IEC61850_7_3.CDCStatusInfo::SEC.cl.title">
            <DataAttribute name="cnt"
                        fc="ST"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::SEC.cnt.desc"
                        presCond="M"/>
            <DataAttribute name="sev"
                        fc="ST"
                        type="SeverityKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCStatusInfo::SEC.sev.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::SEC.t.desc"
                        presCond="M"/>
            <DataAttribute name="addr"
                        fc="ST"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCStatusInfo::SEC.addr.desc"
                        presCond="O"/>
            <DataAttribute name="addInfo"
                        fc="ST"
                        type="VisString64"
                        descID="IEC61850_7_3.CDCStatusInfo::SEC.addInfo.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="BCR"
           titleID="IEC61850_7_3.CDCStatusInfo::BCR.cl.title"
           statistics="true">
            <DataAttribute name="actVal"
                        fc="ST"
                        type="INT64"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.actVal.desc"
                        presCond="AllAtLeastOneGroup"
                        presCondArgs="2"/>
            <DataAttribute name="frVal"
                        fc="ST"
                        type="INT64"
                        dupd="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.frVal.desc"
                        presCond="AllAtLeastOneGroup"
                        presCondArgs="1"/>
            <DataAttribute name="frTm"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.frTm.desc"
                        presCond="AllAtLeastOneGroup"
                        presCondArgs="1"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.t.desc"
                        presCond="AllAtLeastOneGroup"
                        presCondArgs="2"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.units.desc"
                        presCond="O"/>
            <DataAttribute name="pulsQty"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.pulsQty.desc"
                        presCond="M"/>
            <DataAttribute name="frEna"
                        fc="CF"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.frEna.desc"
                        presCond="AllAtLeastOneGroup"
                        presCondArgs="1"/>
            <DataAttribute name="strTm"
                        fc="CF"
                        type="Timestamp"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.strTm.desc"
                        presCond="O"/>
            <DataAttribute name="frPd"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.frPd.desc"
                        presCond="AllAtLeastOneGroup"
                        presCondArgs="1"/>
            <DataAttribute name="frRs"
                        fc="CF"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::BCR.frRs.desc"
                        presCond="AllAtLeastOneGroup"
                        presCondArgs="1"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="HST" titleID="IEC61850_7_3.CDCStatusInfo::HST.cl.title">
            <DataAttribute name="hstVal"
                        fc="ST"
                        type="INT32"
                        dchg="true"
                        dupd="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.hstVal.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.t.desc"
                        presCond="M"/>
            <DataAttribute name="numPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.numPts.desc"
                        presCond="M"/>
            <DataAttribute name="hstRangeC"
                        fc="CF"
                        type="Cell"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.hstRangeC.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="xUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.xUnits.desc"
                        presCond="M"/>
            <DataAttribute name="yUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.yUnits.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.units.desc"
                        presCond="O"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="xD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.xD.desc"
                        presCond="M"/>
            <DataAttribute name="xDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.xDU.desc"
                        presCond="O"/>
            <DataAttribute name="yD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.yD.desc"
                        presCond="O"/>
            <DataAttribute name="yDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCStatusInfo::HST.yDU.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="VSS" titleID="IEC61850_7_3.CDCStatusInfo::VSS.cl.title">
            <DataAttribute name="stVal"
                        fc="ST"
                        type="VisString255"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::VSS.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::VSS.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::VSS.t.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ORS" titleID="IEC61850_7_3.CDCStatusInfo::ORS.cl.title">
            <DataAttribute name="stVal"
                        fc="ST"
                        type="ObjRef"
                        dchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ORS.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::ORS.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::ORS.t.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="TCS" titleID="IEC61850_7_3.CDCStatusInfo::TCS.cl.title">
            <DataAttribute name="stVal"
                        fc="ST"
                        type="Timestamp"
                        dchg="true"
                        dupd="true"
                        descID="IEC61850_7_3.CDCStatusInfo::TCS.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCStatusInfo::TCS.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCStatusInfo::TCS.t.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="MV"
           titleID="IEC61850_7_3.CDCAnalogueInfo::MV.cl.title"
           statistics="true">
            <DataAttribute name="instMag"
                        fc="MX"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.instMag.desc"
                        presCond="O"/>
            <DataAttribute name="mag"
                        fc="MX"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        dupd="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.mag.desc"
                        presCond="M"/>
            <DataAttribute name="range"
                        fc="MX"
                        type="RangeKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.range.desc"
                        presCond="O"/>
            <DataAttribute name="q"
                        fc="MX"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="MX"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.t.desc"
                        presCond="M"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subMag"
                        fc="SV"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.subMag.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.units.desc"
                        presCond="O"/>
            <DataAttribute name="db"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.db.desc"
                        presCond="O"/>
            <DataAttribute name="zeroDb"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.zeroDb.desc"
                        presCond="O"/>
            <DataAttribute name="sVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.sVC.desc"
                        presCond="MFscaledAV"/>
            <DataAttribute name="rangeC"
                        fc="CF"
                        type="RangeConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.rangeC.desc"
                        presCond="MO"
                        presCondArgs="range"/>
            <DataAttribute name="smpRate"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.smpRate.desc"
                        presCond="O"/>
            <DataAttribute name="dbRef"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.dbRef.desc"
                        presCond="MO"
                        presCondArgs="db"/>
            <DataAttribute name="zeroDbRef"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::MV.zeroDbRef.desc"
                        presCond="MO"
                        presCondArgs="zeroDb"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CMV"
           titleID="IEC61850_7_3.CDCAnalogueInfo::CMV.cl.title"
           statistics="true">
            <DataAttribute name="instCVal"
                        fc="MX"
                        type="Vector"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.instCVal.desc"
                        presCond="O"/>
            <DataAttribute name="cVal"
                        fc="MX"
                        type="Vector"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        dupd="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.cVal.desc"
                        presCond="M"/>
            <DataAttribute name="range"
                        fc="MX"
                        type="RangeKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.range.desc"
                        presCond="O"/>
            <DataAttribute name="rangeAng"
                        fc="MX"
                        type="RangeKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.rangeAng.desc"
                        presCond="O"/>
            <DataAttribute name="q"
                        fc="MX"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="MX"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.t.desc"
                        presCond="M"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subCVal"
                        fc="SV"
                        type="Vector"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.subCVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.units.desc"
                        presCond="O"/>
            <DataAttribute name="db"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.db.desc"
                        presCond="O"/>
            <DataAttribute name="dbAng"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.dbAng.desc"
                        presCond="O"/>
            <DataAttribute name="zeroDb"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.zeroDb.desc"
                        presCond="O"/>
            <DataAttribute name="rangeC"
                        fc="CF"
                        type="RangeConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.rangeC.desc"
                        presCond="MO"
                        presCondArgs="range"/>
            <DataAttribute name="rangeAngC"
                        fc="CF"
                        type="RangeConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.rangeAngC.desc"
                        presCond="MO"
                        presCondArgs="rangeAng"/>
            <DataAttribute name="magSVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.magSVC.desc"
                        presCond="MFscaledMagV"/>
            <DataAttribute name="angSVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.angSVC.desc"
                        presCond="MFscaledAngV"/>
            <DataAttribute name="angRef"
                        fc="CF"
                        type="PhaseAngleReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.angRef.desc"
                        presCond="O"/>
            <DataAttribute name="smpRate"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.smpRate.desc"
                        presCond="O"/>
            <DataAttribute name="dbRef"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.dbRef.desc"
                        presCond="MO"
                        presCondArgs="db"/>
            <DataAttribute name="zeroDbRef"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.zeroDbRef.desc"
                        presCond="MO"
                        presCondArgs="zeroDb"/>
            <DataAttribute name="dbAngRef"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::CMV.dbAngRef.desc"
                        presCond="MO"
                        presCondArgs="dbAng"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="SAV"
           titleID="IEC61850_7_3.CDCAnalogueInfo::SAV.cl.title"
           statistics="true">
            <DataAttribute name="instMag"
                        fc="MX"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SAV.instMag.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="MX"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SAV.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="MX"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SAV.t.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SAV.units.desc"
                        presCond="O"/>
            <DataAttribute name="sVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SAV.sVC.desc"
                        presCond="MFscaledAV"/>
            <DataAttribute name="min"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SAV.min.desc"
                        presCond="O"/>
            <DataAttribute name="max"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SAV.max.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="WYE"
           titleID="IEC61850_7_3.CDCAnalogueInfo::WYE.cl.title"
           statistics="true">
            <SubDataObject name="phsA"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.phsA.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <SubDataObject name="phsB"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.phsB.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <SubDataObject name="phsC"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.phsC.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <SubDataObject name="neut"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.neut.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <SubDataObject name="net"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.net.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <SubDataObject name="res"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.res.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="angRef"
                        fc="CF"
                        type="PhaseAngleReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.angRef.desc"
                        presCond="O"/>
            <DataAttribute name="phsToNeut"
                        fc="CF"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::WYE.phsToNeut.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="DEL"
           titleID="IEC61850_7_3.CDCAnalogueInfo::DEL.cl.title"
           statistics="true">
            <SubDataObject name="phsAB"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::DEL.phsAB.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <SubDataObject name="phsBC"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::DEL.phsBC.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <SubDataObject name="phsCA"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::DEL.phsCA.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="angRef"
                        fc="CF"
                        type="PhaseAngleReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::DEL.angRef.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="SEQ"
           titleID="IEC61850_7_3.CDCAnalogueInfo::SEQ.cl.title"
           statistics="true">
            <SubDataObject name="c1"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SEQ.c1.desc"
                        presCond="M"/>
            <SubDataObject name="c2"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SEQ.c2.desc"
                        presCond="OMSynPh"/>
            <SubDataObject name="c3"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SEQ.c3.desc"
                        presCond="OMSynPh"/>
            <DataAttribute name="seqT"
                        fc="MX"
                        type="SequenceKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SEQ.seqT.desc"
                        presCond="M"/>
            <DataAttribute name="phsRef"
                        fc="CF"
                        type="PhaseReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::SEQ.phsRef.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="HMV"
           titleID="IEC61850_7_3.CDCAnalogueInfo::HMV.cl.title"
           statistics="true">
            <SubDataObject name="har"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HMV.har.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="numHar"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.numHar.desc"
                        presCond="M"/>
            <DataAttribute name="numCyc"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.numCyc.desc"
                        presCond="M"/>
            <DataAttribute name="evalTm"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.evalTm.desc"
                        presCond="M"/>
            <DataAttribute name="smpRate"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.smpRate.desc"
                        presCond="O"/>
            <DataAttribute name="frequency"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.frequency.desc"
                        presCond="M"/>
            <DataAttribute name="hvRef"
                        fc="CF"
                        type="HvReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.hvRef.desc"
                        presCond="O"/>
            <DataAttribute name="rmsCyc"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.rmsCyc.desc"
                        presCond="MOrms"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="HWYE"
           titleID="IEC61850_7_3.CDCAnalogueInfo::HWYE.cl.title"
           statistics="true">
            <SubDataObject name="phsAHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HWYE.phsAHar.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <SubDataObject name="phsBHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HWYE.phsBHar.desc"
                        presCond="O"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <SubDataObject name="phsCHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HWYE.phsCHar.desc"
                        presCond="O"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <SubDataObject name="neutHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HWYE.neutHar.desc"
                        presCond="O"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <SubDataObject name="netHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HWYE.netHar.desc"
                        presCond="O"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <SubDataObject name="resHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HWYE.resHar.desc"
                        presCond="O"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="numHar"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.numHar.desc"
                        presCond="M"/>
            <DataAttribute name="numCyc"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.numCyc.desc"
                        presCond="M"/>
            <DataAttribute name="evalTm"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.evalTm.desc"
                        presCond="M"/>
            <DataAttribute name="angRef"
                        fc="CF"
                        type="PhaseAngleReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HWYE.angRef.desc"
                        presCond="O"/>
            <DataAttribute name="smpRate"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.smpRate.desc"
                        presCond="O"/>
            <DataAttribute name="frequency"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.frequency.desc"
                        presCond="M"/>
            <DataAttribute name="hvRef"
                        fc="CF"
                        type="HvReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.hvRef.desc"
                        presCond="O"/>
            <DataAttribute name="rmsCyc"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.rmsCyc.desc"
                        presCond="MOrms"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="HDEL"
           titleID="IEC61850_7_3.CDCAnalogueInfo::HDEL.cl.title"
           statistics="true">
            <SubDataObject name="phsABHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HDEL.phsABHar.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <SubDataObject name="phsBCHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HDEL.phsBCHar.desc"
                        presCond="O"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <SubDataObject name="phsCAHar"
                        type="CMV"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HDEL.phsCAHar.desc"
                        presCond="O"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="numHar"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.numHar.desc"
                        presCond="M"/>
            <DataAttribute name="numCyc"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.numCyc.desc"
                        presCond="M"/>
            <DataAttribute name="evalTm"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.evalTm.desc"
                        presCond="M"/>
            <DataAttribute name="angRef"
                        fc="CF"
                        type="PhaseAngleReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HDEL.angRef.desc"
                        presCond="O"/>
            <DataAttribute name="smpRate"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.smpRate.desc"
                        presCond="O"/>
            <DataAttribute name="frequency"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.frequency.desc"
                        presCond="M"/>
            <DataAttribute name="hvRef"
                        fc="CF"
                        type="HvReferenceKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.hvRef.desc"
                        presCond="O"/>
            <DataAttribute name="rmsCyc"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.rmsCyc.desc"
                        presCond="MOrms"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCAnalogueInfo::HarmonicMeasurandCDC.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BaseComposedCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="SPC" titleID="IEC61850_7_3.CDCControl::SPC.cl.title">
            <DataAttribute name="origin"
                        fc="ST"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::SPC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="ST"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::SPC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="stVal"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.stVal.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.q.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::SPC.t.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="stSeld"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCControl::SPC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="pulseConfig"
                        fc="CF"
                        type="PulseConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.pulseConfig.desc"
                        presCond="O"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::SPC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           type="BOOLEAN"
                           descID="IEC61850_7_3.CDCControl::SPC.ctlVal.desc"/>
         </CDC>
         <CDC name="DPC" titleID="IEC61850_7_3.CDCControl::DPC.cl.title">
            <DataAttribute name="origin"
                        fc="ST"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::DPC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="ST"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::DPC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="stVal"
                        fc="ST"
                        type="Dbpos"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::DPC.t.desc"
                        presCond="M"/>
            <DataAttribute name="stSeld"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="Dbpos"
                        descID="IEC61850_7_3.CDCControl::DPC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="pulseConfig"
                        fc="CF"
                        type="PulseConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.pulseConfig.desc"
                        presCond="O"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::DPC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           type="BOOLEAN"
                           descID="IEC61850_7_3.CDCControl::DPC.ctlVal.desc"/>
         </CDC>
         <CDC name="INC"
           titleID="IEC61850_7_3.CDCControl::INC.cl.title"
           statistics="true">
            <DataAttribute name="origin"
                        fc="ST"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::INC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="ST"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::INC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="stVal"
                        fc="ST"
                        type="INT32"
                        dchg="true"
                        dupd="true"
                        descID="IEC61850_7_3.CDCControl::INC.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::INC.t.desc"
                        presCond="M"/>
            <DataAttribute name="stSeld"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="INT32"
                        descID="IEC61850_7_3.CDCControl::INC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::INC.units.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           type="INT32"
                           descID="IEC61850_7_3.CDCControl::INC.ctlVal.desc"/>
         </CDC>
         <CDC name="ENC"
           titleID="IEC61850_7_3.CDCControl::ENC.cl.title"
           enumParameterized="true">
            <DataAttribute name="origin"
                        fc="ST"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::ENC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="ST"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::ENC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="stVal"
                        fc="ST"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ENC.stVal.desc"
                        presCond="M"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::ENC.q.desc"
                        presCond="M"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ENC.t.desc"
                        presCond="M"/>
            <DataAttribute name="stSeld"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ENC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCControl::ENC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ENC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ENC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ENC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ENC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           typeKind="ENUMERATED"
                           descID="IEC61850_7_3.CDCControl::ENC.ctlVal.desc"/>
         </CDC>
         <CDC name="BSC"
           titleID="IEC61850_7_3.CDCControl::BSC.cl.title"
           statistics="true">
            <DataAttribute name="origin"
                        fc="ST"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::BSC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="ST"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::BSC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="valWTr"
                        fc="ST"
                        type="ValWithTrans"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.valWTr.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.q.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::BSC.t.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="stSeld"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="ValWithTrans"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::BSC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="persistent"
                        fc="CF"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.persistent.desc"
                        presCond="M"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="INT8"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="INT8"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BSC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           type="Tcmd"
                           descID="IEC61850_7_3.CDCControl::BSC.ctlVal.desc"/>
         </CDC>
         <CDC name="ISC"
           titleID="IEC61850_7_3.CDCControl::ISC.cl.title"
           statistics="true">
            <DataAttribute name="origin"
                        fc="ST"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::ISC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="ST"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::ISC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="valWTr"
                        fc="ST"
                        type="ValWithTrans"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.valWTr.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="q"
                        fc="ST"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.q.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="t"
                        fc="ST"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ISC.t.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="stSeld"
                        fc="ST"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="ValWithTrans"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::ISC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="INT8"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="INT8"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ISC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           type="INT8"
                           descID="IEC61850_7_3.CDCControl::ISC.ctlVal.desc"/>
         </CDC>
         <CDC name="APC"
           titleID="IEC61850_7_3.CDCControl::APC.cl.title"
           statistics="true">
            <DataAttribute name="origin"
                        fc="MX"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::APC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="MX"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::APC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="mxVal"
                        fc="MX"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.mxVal.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="q"
                        fc="MX"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.q.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="t"
                        fc="MX"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::APC.t.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="stSeld"
                        fc="MX"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::APC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.units.desc"
                        presCond="O"/>
            <DataAttribute name="db"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.db.desc"
                        presCond="O"/>
            <DataAttribute name="sVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.sVC.desc"
                        presCond="MFscaledAV"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="dbRef"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::APC.dbRef.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           type="AnalogueValueCtl"
                           typeKind="CONSTRUCTED"
                           descID="IEC61850_7_3.CDCControl::APC.ctlVal.desc"/>
         </CDC>
         <CDC name="BAC"
           titleID="IEC61850_7_3.CDCControl::BAC.cl.title"
           statistics="true">
            <DataAttribute name="origin"
                        fc="MX"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::BAC.origin.desc"
                        presCond="O"/>
            <DataAttribute name="ctlNum"
                        fc="MX"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCControl::BAC.ctlNum.desc"
                        presCond="O"/>
            <DataAttribute name="mxVal"
                        fc="MX"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.mxVal.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="q"
                        fc="MX"
                        type="Quality"
                        qchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.q.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="t"
                        fc="MX"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::BAC.t.desc"
                        presCond="MAllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="stSeld"
                        fc="MX"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.stSeld.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="opRcvd"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opRcvd.desc"
                        presCond="O"/>
            <DataAttribute name="opOk"
                        fc="OR"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.opOk.desc"
                        presCond="O"/>
            <DataAttribute name="tOpOk"
                        fc="OR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCControl::ControlTestingCDC.tOpOk.desc"
                        presCond="O"/>
            <DataAttribute name="subEna"
                        fc="SV"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subEna.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subVal"
                        fc="SV"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCControl::BAC.subVal.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subQ"
                        fc="SV"
                        type="Quality"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subQ.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="subID"
                        fc="SV"
                        type="VisString64"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.subID.desc"
                        presCond="MFsubst"/>
            <DataAttribute name="blkEna"
                        fc="BL"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CoreAbstractCDCs::SubstitutionCDC.blkEna.desc"
                        presCond="O"/>
            <DataAttribute name="persistent"
                        fc="CF"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.persistent.desc"
                        presCond="M"/>
            <DataAttribute name="ctlModel"
                        fc="CF"
                        type="CtlModelKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.ctlModel.desc"
                        presCond="M"/>
            <DataAttribute name="sboTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.sboTimeout.desc"
                        presCond="MOsbo"/>
            <DataAttribute name="sboClass"
                        fc="CF"
                        type="SboClassKind"
                        typeKind="ENUMERATED"
                        defaultValue="operate-once"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.sboClass.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.units.desc"
                        presCond="O"/>
            <DataAttribute name="db"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.db.desc"
                        presCond="O"/>
            <DataAttribute name="sVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.sVC.desc"
                        presCond="MFscaledAV"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="operTimeout"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.operTimeout.desc"
                        presCond="MOenhanced"/>
            <DataAttribute name="dbRef"
                        fc="CF"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCControl::BAC.dbRef.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
            <ServiceParameter name="ctlVal"
                           type="Tcmd"
                           descID="IEC61850_7_3.CDCControl::BAC.ctlVal.desc"/>
         </CDC>
         <CDC name="SPG" variant="SP" titleID="IEC61850_7_3.SPG::SPG_SP.cl.title">
            <DataAttribute name="setVal"
                        fc="SP"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.SPG::SPG_SP.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="SPG" variant="SG" titleID="IEC61850_7_3.SPG::SPG_SG.cl.title">
            <DataAttribute name="setVal"
                        fc="SG"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.SPG::SPG_SG.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="SPG" variant="SE" titleID="IEC61850_7_3.SPG::SPG_SE.cl.title">
            <DataAttribute name="setVal"
                        fc="SE"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.SPG::SPG_SE.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ING" variant="SP" titleID="IEC61850_7_3.ING::ING_SP.cl.title">
            <DataAttribute name="setVal"
                        fc="SP"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING_SP.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.units.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ING" variant="SG" titleID="IEC61850_7_3.ING::ING_SG.cl.title">
            <DataAttribute name="setVal"
                        fc="SG"
                        type="INT32"
                        descID="IEC61850_7_3.ING::ING_SG.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.units.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ING" variant="SE" titleID="IEC61850_7_3.ING::ING_SE.cl.title">
            <DataAttribute name="setVal"
                        fc="SE"
                        type="INT32"
                        descID="IEC61850_7_3.ING::ING_SE.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="INT32U"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ING::ING.units.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ENG"
           variant="SP"
           titleID="IEC61850_7_3.ENG::ENG_SP.cl.title"
           enumParameterized="true">
            <DataAttribute name="setVal"
                        fc="SP"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.ENG::ENG_SP.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ENG"
           variant="SG"
           titleID="IEC61850_7_3.ENG::ENG_SG.cl.title"
           enumParameterized="true">
            <DataAttribute name="setVal"
                        fc="SG"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.ENG::ENG_SG.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ENG"
           variant="SE"
           titleID="IEC61850_7_3.ENG::ENG_SE.cl.title"
           enumParameterized="true">
            <DataAttribute name="setVal"
                        fc="SE"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.ENG::ENG_SE.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ORG" titleID="IEC61850_7_3.ORG::ORG.cl.title">
            <DataAttribute name="setSrcRef"
                        fc="SP"
                        type="ObjRef"
                        dchg="true"
                        descID="IEC61850_7_3.ORG::ORG.setSrcRef.desc"
                        presCond="M"/>
            <DataAttribute name="setTstRef"
                        fc="SP"
                        type="ObjRef"
                        dchg="true"
                        descID="IEC61850_7_3.ORG::ORG.setTstRef.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="setSrcCB"
                        fc="SP"
                        type="ObjRef"
                        dchg="true"
                        descID="IEC61850_7_3.ORG::ORG.setSrcCB.desc"
                        presCond="O"/>
            <DataAttribute name="setTstCB"
                        fc="SP"
                        type="ObjRef"
                        dchg="true"
                        descID="IEC61850_7_3.ORG::ORG.setTstCB.desc"
                        presCond="OF"
                        presCondArgs="setTstRef"/>
            <DataAttribute name="intAddr"
                        fc="SP"
                        type="VisString255"
                        dchg="true"
                        descID="IEC61850_7_3.ORG::ORG.intAddr.desc"
                        presCond="O"/>
            <DataAttribute name="tstEna"
                        fc="SP"
                        type="BOOLEAN"
                        dchg="true"
                        descID="IEC61850_7_3.ORG::ORG.tstEna.desc"
                        presCond="AllOrNonePerGroup"
                        presCondArgs="1"/>
            <DataAttribute name="purpose"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.ORG::ORG.purpose.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="TSG" variant="SP" titleID="IEC61850_7_3.TSG::TSG_SP.cl.title">
            <DataAttribute name="setTm"
                        fc="SP"
                        type="Timestamp"
                        dchg="true"
                        descID="IEC61850_7_3.TSG::TSG_SP.setTm.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="setCal"
                        fc="SP"
                        type="CalendarTime"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.TSG::TSG_SP.setCal.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="TSG" variant="SG" titleID="IEC61850_7_3.TSG::TSG_SG.cl.title">
            <DataAttribute name="setTm"
                        fc="SG"
                        type="Timestamp"
                        descID="IEC61850_7_3.TSG::TSG_SG.setTm.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="setCal"
                        fc="SG"
                        type="CalendarTime"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.TSG::TSG_SG.setCal.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="TSG" variant="SE" titleID="IEC61850_7_3.TSG::TSG_SE.cl.title">
            <DataAttribute name="setTm"
                        fc="SE"
                        type="Timestamp"
                        descID="IEC61850_7_3.TSG::TSG_SE.setTm.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="setCal"
                        fc="SE"
                        type="CalendarTime"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.TSG::TSG_SE.setCal.desc"
                        presCond="AtLeastOne"
                        presCondArgs="1"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CUG" variant="SP" titleID="IEC61850_7_3.CUG::CUG_SP.cl.title">
            <DataAttribute name="cur"
                        fc="SP"
                        type="Currency"
                        dchg="true"
                        descID="IEC61850_7_3.CUG::CUG_SP.cur.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CUG" variant="SG" titleID="IEC61850_7_3.CUG::CUG_SG.cl.title">
            <DataAttribute name="cur"
                        fc="SG"
                        type="Currency"
                        descID="IEC61850_7_3.CUG::CUG_SG.cur.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CUG" variant="SE" titleID="IEC61850_7_3.CUG::CUG_SE.cl.title">
            <DataAttribute name="cur"
                        fc="SE"
                        type="Currency"
                        descID="IEC61850_7_3.CUG::CUG_SE.cur.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="VSG" variant="SP" titleID="IEC61850_7_3.VSG::VSG_SP.cl.title">
            <DataAttribute name="setVal"
                        fc="SP"
                        type="VisString255"
                        dchg="true"
                        descID="IEC61850_7_3.VSG::VSG_SP.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="VSG" variant="SG" titleID="IEC61850_7_3.VSG::VSG_SG.cl.title">
            <DataAttribute name="setVal"
                        fc="SG"
                        type="VisString255"
                        descID="IEC61850_7_3.VSG::VSG_SG.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="VSG" variant="SE" titleID="IEC61850_7_3.VSG::VSG_SE.cl.title">
            <DataAttribute name="setVal"
                        fc="SE"
                        type="VisString255"
                        descID="IEC61850_7_3.VSG::VSG_SE.setVal.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ASG" variant="SP" titleID="IEC61850_7_3.ASG::ASG_SP.cl.title">
            <DataAttribute name="setMag"
                        fc="SP"
                        type="AnalogueValueCtl"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG_SP.setMag.desc"
                        presCond="M"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.units.desc"
                        presCond="O"/>
            <DataAttribute name="sVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.sVC.desc"
                        presCond="MFscaledAV"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ASG" variant="SG" titleID="IEC61850_7_3.ASG::ASG_SG.cl.title">
            <DataAttribute name="setMag"
                        fc="SG"
                        type="AnalogueValueCtl"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.ASG::ASG_SG.setMag.desc"
                        presCond="M"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.units.desc"
                        presCond="O"/>
            <DataAttribute name="sVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.sVC.desc"
                        presCond="MFscaledAV"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="ASG" variant="SE" titleID="IEC61850_7_3.ASG::ASG_SE.cl.title">
            <DataAttribute name="setMag"
                        fc="SE"
                        type="AnalogueValueCtl"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.ASG::ASG_SE.setMag.desc"
                        presCond="M"/>
            <DataAttribute name="units"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.units.desc"
                        presCond="O"/>
            <DataAttribute name="sVC"
                        fc="CF"
                        type="ScaledValueConfig"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.sVC.desc"
                        presCond="MFscaledAV"/>
            <DataAttribute name="minVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.minVal.desc"
                        presCond="O"/>
            <DataAttribute name="maxVal"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.maxVal.desc"
                        presCond="O"/>
            <DataAttribute name="stepSize"
                        fc="CF"
                        type="AnalogueValue"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.ASG::ASG.stepSize.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CURVE"
           variant="SP"
           titleID="IEC61850_7_3.CURVE::CURVE_SP.cl.title">
            <DataAttribute name="setCharact"
                        fc="SP"
                        type="CurveCharKind"
                        typeKind="ENUMERATED"
                        dchg="true"
                        descID="IEC61850_7_3.CURVE::CURVE_SP.setCharact.desc"
                        presCond="M"/>
            <DataAttribute name="setParA"
                        fc="SP"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CURVE::CURVE_SP.setParA.desc"
                        presCond="O"/>
            <DataAttribute name="setParB"
                        fc="SP"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CURVE::CURVE_SP.setParB.desc"
                        presCond="O"/>
            <DataAttribute name="setParC"
                        fc="SP"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CURVE::CURVE_SP.setParC.desc"
                        presCond="O"/>
            <DataAttribute name="setParD"
                        fc="SP"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CURVE::CURVE_SP.setParD.desc"
                        presCond="O"/>
            <DataAttribute name="setParE"
                        fc="SP"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CURVE::CURVE_SP.setParE.desc"
                        presCond="O"/>
            <DataAttribute name="setParF"
                        fc="SP"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CURVE::CURVE_SP.setParF.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CURVE"
           variant="SG"
           titleID="IEC61850_7_3.CURVE::CURVE_SG.cl.title">
            <DataAttribute name="setCharact"
                        fc="SG"
                        type="CurveCharKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CURVE::CURVE_SG.setCharact.desc"
                        presCond="M"/>
            <DataAttribute name="setParA"
                        fc="SG"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SG.setParA.desc"
                        presCond="O"/>
            <DataAttribute name="setParB"
                        fc="SG"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SG.setParB.desc"
                        presCond="O"/>
            <DataAttribute name="setParC"
                        fc="SG"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SG.setParC.desc"
                        presCond="O"/>
            <DataAttribute name="setParD"
                        fc="SG"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SG.setParD.desc"
                        presCond="O"/>
            <DataAttribute name="setParE"
                        fc="SG"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SG.setParE.desc"
                        presCond="O"/>
            <DataAttribute name="setParF"
                        fc="SG"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SG.setParF.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CURVE"
           variant="SE"
           titleID="IEC61850_7_3.CURVE::CURVE_SE.cl.title">
            <DataAttribute name="setCharact"
                        fc="SE"
                        type="CurveCharKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CURVE::CURVE_SE.setCharact.desc"
                        presCond="M"/>
            <DataAttribute name="setParA"
                        fc="SE"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SE.setParA.desc"
                        presCond="O"/>
            <DataAttribute name="setParB"
                        fc="SE"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SE.setParB.desc"
                        presCond="O"/>
            <DataAttribute name="setParC"
                        fc="SE"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SE.setParC.desc"
                        presCond="O"/>
            <DataAttribute name="setParD"
                        fc="SE"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SE.setParD.desc"
                        presCond="O"/>
            <DataAttribute name="setParE"
                        fc="SE"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SE.setParE.desc"
                        presCond="O"/>
            <DataAttribute name="setParF"
                        fc="SE"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CURVE::CURVE_SE.setParF.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CSG" variant="SP" titleID="IEC61850_7_3.CSG::CSG_SP.cl.title">
            <DataAttribute name="pointZ"
                        fc="SP"
                        type="FLOAT32"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG_SP.pointZ.desc"
                        presCond="O"/>
            <DataAttribute name="numPts"
                        fc="SP"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG_SP.numPts.desc"
                        presCond="M"/>
            <DataAttribute name="crvPts"
                        fc="SP"
                        type="Point"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG_SP.crvPts.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="xUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.xUnits.desc"
                        presCond="M"/>
            <DataAttribute name="yUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.yUnits.desc"
                        presCond="M"/>
            <DataAttribute name="zUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.zUnits.desc"
                        presCond="O"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="xD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.xD.desc"
                        presCond="M"/>
            <DataAttribute name="xDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.xDU.desc"
                        presCond="O"/>
            <DataAttribute name="yD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.yD.desc"
                        presCond="M"/>
            <DataAttribute name="yDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.yDU.desc"
                        presCond="O"/>
            <DataAttribute name="zD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.zD.desc"
                        presCond="O"/>
            <DataAttribute name="zDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.zDU.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CSG" variant="SG" titleID="IEC61850_7_3.CSG::CSG_SG.cl.title">
            <DataAttribute name="pointZ"
                        fc="SG"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CSG::CSG_SG.pointZ.desc"
                        presCond="O"/>
            <DataAttribute name="numPts"
                        fc="SG"
                        type="INT16U"
                        descID="IEC61850_7_3.CSG::CSG_SG.numPts.desc"
                        presCond="M"/>
            <DataAttribute name="crvPts"
                        fc="SG"
                        type="Point"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CSG::CSG_SG.crvPts.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="xUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.xUnits.desc"
                        presCond="M"/>
            <DataAttribute name="yUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.yUnits.desc"
                        presCond="M"/>
            <DataAttribute name="zUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.zUnits.desc"
                        presCond="O"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="xD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.xD.desc"
                        presCond="M"/>
            <DataAttribute name="xDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.xDU.desc"
                        presCond="O"/>
            <DataAttribute name="yD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.yD.desc"
                        presCond="M"/>
            <DataAttribute name="yDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.yDU.desc"
                        presCond="O"/>
            <DataAttribute name="zD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.zD.desc"
                        presCond="O"/>
            <DataAttribute name="zDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.zDU.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CSG" variant="SE" titleID="IEC61850_7_3.CSG::CSG_SE.cl.title">
            <DataAttribute name="pointZ"
                        fc="SE"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CSG::CSG_SE.pointZ.desc"
                        presCond="O"/>
            <DataAttribute name="numPts"
                        fc="SE"
                        type="INT16U"
                        descID="IEC61850_7_3.CSG::CSG_SE.numPts.desc"
                        presCond="M"/>
            <DataAttribute name="crvPts"
                        fc="SE"
                        type="Point"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CSG::CSG_SE.crvPts.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="xUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.xUnits.desc"
                        presCond="M"/>
            <DataAttribute name="yUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.yUnits.desc"
                        presCond="M"/>
            <DataAttribute name="zUnits"
                        fc="CF"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.zUnits.desc"
                        presCond="O"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CSG::CSG.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="xD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.xD.desc"
                        presCond="M"/>
            <DataAttribute name="xDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.xDU.desc"
                        presCond="O"/>
            <DataAttribute name="yD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.yD.desc"
                        presCond="M"/>
            <DataAttribute name="yDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.yDU.desc"
                        presCond="O"/>
            <DataAttribute name="zD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CSG::CSG.zD.desc"
                        presCond="O"/>
            <DataAttribute name="zDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CSG::CSG.zDU.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="DPL" titleID="IEC61850_7_3.CDCDescription::DPL.cl.title">
            <DataAttribute name="vendor"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.vendor.desc"
                        presCond="M"/>
            <DataAttribute name="hwRev"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.hwRev.desc"
                        presCond="O"/>
            <DataAttribute name="swRev"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.swRev.desc"
                        presCond="O"/>
            <DataAttribute name="serNum"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.serNum.desc"
                        presCond="O"/>
            <DataAttribute name="model"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.model.desc"
                        presCond="O"/>
            <DataAttribute name="location"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.location.desc"
                        presCond="O"/>
            <DataAttribute name="name"
                        fc="DC"
                        type="VisString64"
                        descID="IEC61850_7_3.CDCDescription::DPL.name.desc"
                        presCond="O"/>
            <DataAttribute name="owner"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.owner.desc"
                        presCond="O"/>
            <DataAttribute name="ePSName"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.ePSName.desc"
                        presCond="O"/>
            <DataAttribute name="primeOper"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.primeOper.desc"
                        presCond="O"/>
            <DataAttribute name="secondOper"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.secondOper.desc"
                        presCond="O"/>
            <DataAttribute name="latitude"
                        fc="DC"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CDCDescription::DPL.latitude.desc"
                        presCond="O"/>
            <DataAttribute name="longitude"
                        fc="DC"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CDCDescription::DPL.longitude.desc"
                        presCond="O"/>
            <DataAttribute name="altitude"
                        fc="DC"
                        type="FLOAT32"
                        descID="IEC61850_7_3.CDCDescription::DPL.altitude.desc"
                        presCond="O"/>
            <DataAttribute name="mRID"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::DPL.mRID.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="LPL" titleID="IEC61850_7_3.CDCDescription::LPL.cl.title">
            <DataAttribute name="paramRev"
                        fc="ST"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCDescription::LPL.paramRev.desc"
                        presCond="O"/>
            <DataAttribute name="valRev"
                        fc="ST"
                        type="INT32"
                        dchg="true"
                        descID="IEC61850_7_3.CDCDescription::LPL.valRev.desc"
                        presCond="O"/>
            <DataAttribute name="vendor"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::LPL.vendor.desc"
                        presCond="M"/>
            <DataAttribute name="swRev"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::LPL.swRev.desc"
                        presCond="M"/>
            <DataAttribute name="ldNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::LPL.ldNs.desc"
                        presCond="MFln0"/>
            <DataAttribute name="lnNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::LPL.lnNs.desc"
                        presCond="MOlnNs"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="configRev"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::LPL.configRev.desc"
                        presCond="MOln0"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CSD" titleID="IEC61850_7_3.CDCDescription::CSD.cl.title">
            <DataAttribute name="xUnits"
                        fc="DC"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCDescription::CSD.xUnits.desc"
                        presCond="M"/>
            <DataAttribute name="xD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::CSD.xD.desc"
                        presCond="M"/>
            <DataAttribute name="xDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCDescription::CSD.xDU.desc"
                        presCond="O"/>
            <DataAttribute name="yUnits"
                        fc="DC"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCDescription::CSD.yUnits.desc"
                        presCond="M"/>
            <DataAttribute name="yD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::CSD.yD.desc"
                        presCond="M"/>
            <DataAttribute name="yDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCDescription::CSD.yDU.desc"
                        presCond="O"/>
            <DataAttribute name="zUnits"
                        fc="DC"
                        type="Unit"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCDescription::CSD.zUnits.desc"
                        presCond="O"/>
            <DataAttribute name="zD"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::CSD.zD.desc"
                        presCond="O"/>
            <DataAttribute name="zDU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCDescription::CSD.zDU.desc"
                        presCond="O"/>
            <DataAttribute name="numPts"
                        fc="DC"
                        type="INT16U"
                        descID="IEC61850_7_3.CDCDescription::CSD.numPts.desc"
                        presCond="M"/>
            <DataAttribute name="crvPts"
                        fc="DC"
                        type="Point"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCDescription::CSD.crvPts.desc"
                        presCond="M"
                        isArray="true"
                        sizeAttribute="maxPts"/>
            <DataAttribute name="maxPts"
                        fc="CF"
                        type="INT16U"
                        dchg="true"
                        descID="IEC61850_7_3.CDCDescription::CSD.maxPts.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="VSD" titleID="IEC61850_7_3.CDCDescription::VSD.cl.title">
            <DataAttribute name="val"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CDCDescription::VSD.val.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CST" titleID="IEC61850_7_3.CDCServiceTracking::CST.cl.title">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::CST.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::CST.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::CST.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::CST.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::CST.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer"
                        fc="SR"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCServiceTracking::CST.certIssuer.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="BTS" titleID="IEC61850_7_3.CDCServiceTracking::BTS.cl.title">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer"
                        fc="SR"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.certIssuer.desc"
                        presCond="O"/>
            <DataAttribute name="rptID"
                        fc="SR"
                        type="VisString129"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.rptID.desc"
                        presCond="M"/>
            <DataAttribute name="rptEna"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.rptEna.desc"
                        presCond="M"/>
            <DataAttribute name="datSet"
                        fc="SR"
                        type="ObjRef"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.datSet.desc"
                        presCond="M"/>
            <DataAttribute name="confRev"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.confRev.desc"
                        presCond="M"/>
            <DataAttribute name="optFlds"
                        fc="SR"
                        type="OptFlds"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.optFlds.desc"
                        presCond="M"/>
            <DataAttribute name="bufTm"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.bufTm.desc"
                        presCond="M"/>
            <DataAttribute name="sqNum"
                        fc="SR"
                        type="INT16U"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.sqNum.desc"
                        presCond="M"/>
            <DataAttribute name="trgOps"
                        fc="SR"
                        type="TrgOps"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.trgOps.desc"
                        presCond="M"/>
            <DataAttribute name="intgPd"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.intgPd.desc"
                        presCond="M"/>
            <DataAttribute name="gi"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.gi.desc"
                        presCond="M"/>
            <DataAttribute name="purgeBuf"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.purgeBuf.desc"
                        presCond="M"/>
            <DataAttribute name="entryID"
                        fc="SR"
                        type="EntryID"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.entryID.desc"
                        presCond="M"/>
            <DataAttribute name="timeOfEntry"
                        fc="SR"
                        type="EntryTime"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.timeOfEntry.desc"
                        presCond="M"/>
            <DataAttribute name="resvTms"
                        fc="SR"
                        type="INT16"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.resvTms.desc"
                        presCond="O"/>
            <DataAttribute name="owner"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::BTS.owner.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="UTS" titleID="IEC61850_7_3.CDCServiceTracking::UTS.cl.title">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer"
                        fc="SR"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.certIssuer.desc"
                        presCond="O"/>
            <DataAttribute name="rptID"
                        fc="SR"
                        type="VisString129"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.rptID.desc"
                        presCond="M"/>
            <DataAttribute name="rptEna"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.rptEna.desc"
                        presCond="M"/>
            <DataAttribute name="resv"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.resv.desc"
                        presCond="M"/>
            <DataAttribute name="datSet"
                        fc="SR"
                        type="ObjRef"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.datSet.desc"
                        presCond="M"/>
            <DataAttribute name="confRev"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.confRev.desc"
                        presCond="M"/>
            <DataAttribute name="optFlds"
                        fc="SR"
                        type="OptFlds"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.optFlds.desc"
                        presCond="M"/>
            <DataAttribute name="bufTm"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.bufTm.desc"
                        presCond="M"/>
            <DataAttribute name="sqNum"
                        fc="SR"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.sqNum.desc"
                        presCond="M"/>
            <DataAttribute name="trgOps"
                        fc="SR"
                        type="TrgOps"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.trgOps.desc"
                        presCond="M"/>
            <DataAttribute name="intgPd"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.intgPd.desc"
                        presCond="M"/>
            <DataAttribute name="gi"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.gi.desc"
                        presCond="M"/>
            <DataAttribute name="owner"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::UTS.owner.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="LTS" titleID="IEC61850_7_3.CDCServiceTracking::LTS.cl.title">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer"
                        fc="SR"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.certIssuer.desc"
                        presCond="O"/>
            <DataAttribute name="logEna"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.logEna.desc"
                        presCond="M"/>
            <DataAttribute name="logRef"
                        fc="SR"
                        type="ObjRef"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.logRef.desc"
                        presCond="M"/>
            <DataAttribute name="datSet"
                        fc="SR"
                        type="ObjRef"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.datSet.desc"
                        presCond="M"/>
            <DataAttribute name="oldEntrTm"
                        fc="SR"
                        type="EntryTime"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.oldEntrTm.desc"
                        presCond="M"/>
            <DataAttribute name="newEntrTm"
                        fc="SR"
                        type="EntryTime"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.newEntrTm.desc"
                        presCond="M"/>
            <DataAttribute name="oldEnt"
                        fc="SR"
                        type="EntryID"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.oldEnt.desc"
                        presCond="M"/>
            <DataAttribute name="newEnt"
                        fc="SR"
                        type="EntryID"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.newEnt.desc"
                        presCond="M"/>
            <DataAttribute name="trgOps"
                        fc="SR"
                        type="TrgOps"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.trgOps.desc"
                        presCond="M"/>
            <DataAttribute name="intgPd"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::LTS.intgPd.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="GTS" titleID="IEC61850_7_3.CDCServiceTracking::GTS.cl.title">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer"
                        fc="SR"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.certIssuer.desc"
                        presCond="O"/>
            <DataAttribute name="goEna"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.goEna.desc"
                        presCond="M"/>
            <DataAttribute name="goID"
                        fc="SR"
                        type="VisString129"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.goID.desc"
                        presCond="M"/>
            <DataAttribute name="datSet"
                        fc="SR"
                        type="ObjRef"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.datSet.desc"
                        presCond="M"/>
            <DataAttribute name="confRev"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.confRev.desc"
                        presCond="M"/>
            <DataAttribute name="ndsCom"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.ndsCom.desc"
                        presCond="M"/>
            <DataAttribute name="dstAddress"
                        fc="SR"
                        type="PhyComAddr"
                        descID="IEC61850_7_3.CDCServiceTracking::GTS.dstAddress.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="MTS" titleID="IEC61850_7_3.CDCServiceTracking::MTS.cl.title">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer"
                        fc="SR"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.certIssuer.desc"
                        presCond="O"/>
            <DataAttribute name="svEna"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.svEna.desc"
                        presCond="M"/>
            <DataAttribute name="msvID"
                        fc="SR"
                        type="VisString129"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.msvID.desc"
                        presCond="M"/>
            <DataAttribute name="datSet"
                        fc="SR"
                        type="ObjRef"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.datSet.desc"
                        presCond="M"/>
            <DataAttribute name="confRev"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.confRev.desc"
                        presCond="M"/>
            <DataAttribute name="smpRate"
                        fc="SR"
                        type="INT16U"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.smpRate.desc"
                        presCond="M"/>
            <DataAttribute name="optFlds"
                        fc="SR"
                        type="SvOptFlds"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.optFlds.desc"
                        presCond="M"/>
            <DataAttribute name="smpMod"
                        fc="SR"
                        type="SamplingModeKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.smpMod.desc"
                        presCond="M"/>
            <DataAttribute name="dstAddress"
                        fc="SR"
                        type="PhyComAddr"
                        descID="IEC61850_7_3.CDCServiceTracking::MTS.dstAddress.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="NTS"
           titleID="IEC61850_7_3.CDCServiceTracking::NTS.cl.title"
           deprecated="true">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.t.desc"
                        presCond="M"/>
            <DataAttribute name="svEna"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.svEna.desc"
                        presCond="M"/>
            <DataAttribute name="resv"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.resv.desc"
                        presCond="M"/>
            <DataAttribute name="usvID"
                        fc="SR"
                        type="VisString129"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.usvID.desc"
                        presCond="M"/>
            <DataAttribute name="datSet"
                        fc="SR"
                        type="ObjRef"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.datSet.desc"
                        presCond="M"/>
            <DataAttribute name="confRev"
                        fc="SR"
                        type="INT32U"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.confRev.desc"
                        presCond="M"/>
            <DataAttribute name="smpMod"
                        fc="SR"
                        type="SamplingModeKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.smpMod.desc"
                        presCond="M"/>
            <DataAttribute name="smpRate"
                        fc="SR"
                        type="INT16U"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.smpRate.desc"
                        presCond="M"/>
            <DataAttribute name="optFlds"
                        fc="SR"
                        type="SvOptFlds"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.optFlds.desc"
                        presCond="M"/>
            <DataAttribute name="dstAddress"
                        fc="SR"
                        type="PhyComAddr"
                        descID="IEC61850_7_3.CDCServiceTracking::NTS.dstAddress.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="STS" titleID="IEC61850_7_3.CDCServiceTracking::STS.cl.title">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer"
                        fc="SR"
                        type="Unicode255"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.certIssuer.desc"
                        presCond="O"/>
            <DataAttribute name="numOfSG"
                        fc="SR"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.numOfSG.desc"
                        presCond="M"/>
            <DataAttribute name="actSG"
                        fc="SR"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.actSG.desc"
                        presCond="M"/>
            <DataAttribute name="editSG"
                        fc="SR"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.editSG.desc"
                        presCond="M"/>
            <DataAttribute name="cnfEdit"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.cnfEdit.desc"
                        presCond="M"/>
            <DataAttribute name="lActTm"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.lActTm.desc"
                        presCond="M"/>
            <DataAttribute name="resvTms"
                        fc="SR"
                        type="INT16U"
                        descID="IEC61850_7_3.CDCServiceTracking::STS.resvTms.desc"
                        presCond="O"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
         <CDC name="CTS"
           titleID="IEC61850_7_3.CDCServiceTracking::CTS.cl.title"
           typeKindParameterized="true">
            <DataAttribute name="objRef"
                        fc="SR"
                        type="ObjRef"
                        dupd="true"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.objRef.desc"
                        presCond="M"/>
            <DataAttribute name="serviceType"
                        fc="SR"
                        type="ServiceNameKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.serviceType.desc"
                        presCond="M"/>
            <DataAttribute name="errorCode"
                        fc="SR"
                        type="ServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.errorCode.desc"
                        presCond="M"/>
            <DataAttribute name="originatorID"
                        fc="SR"
                        type="Octet64"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.originatorID.desc"
                        presCond="O"/>
            <DataAttribute name="t"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.t.desc"
                        presCond="M"/>
            <DataAttribute name="certIssuer" fc="SR" type="Unicode255" presCond="O"/>
            <DataAttribute name="ctlVal"
                        fc="SR"
                        typeKind="undefined"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.ctlVal.desc"
                        presCond="M"/>
            <DataAttribute name="operTm"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.operTm.desc"
                        presCond="MOoperTm"/>
            <DataAttribute name="origin"
                        fc="SR"
                        type="Originator"
                        typeKind="CONSTRUCTED"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.origin.desc"
                        presCond="M"/>
            <DataAttribute name="ctlNum"
                        fc="SR"
                        type="INT8U"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.ctlNum.desc"
                        presCond="M"/>
            <DataAttribute name="T"
                        fc="SR"
                        type="Timestamp"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.T.desc"
                        presCond="M"/>
            <DataAttribute name="Test"
                        fc="SR"
                        type="BOOLEAN"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.Test.desc"
                        presCond="M"/>
            <DataAttribute name="Check"
                        fc="SR"
                        type="Check"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.Check.desc"
                        presCond="M"/>
            <DataAttribute name="respAddCause"
                        fc="SR"
                        type="ControlServiceStatusKind"
                        typeKind="ENUMERATED"
                        descID="IEC61850_7_3.CDCServiceTracking::CTS.respAddCause.desc"
                        presCond="M"/>
            <DataAttribute name="d"
                        fc="DC"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.d.desc"
                        presCond="O"/>
            <DataAttribute name="dU"
                        fc="DC"
                        type="Unicode255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dU.desc"
                        presCond="O"/>
            <DataAttribute name="cdcName"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.cdcName.desc"
                        presCond="O"/>
            <DataAttribute name="dataNs"
                        fc="EX"
                        type="VisString255"
                        descID="IEC61850_7_3.CoreAbstractCDCs::BasePrimitiveCDC.dataNs.desc"
                        presCond="MOdataNs"/>
         </CDC>
      </CDCs>
</NS>
`, _D = `<?xml version="1.0" encoding="UTF-8"?>
<NS xmlns="http://www.iec.ch/61850/2016/NSD"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.iec.ch/61850/2016/NSD NSD.xsd"
    id="IEC 61850-7-4"
    version="2007"
    revision="B"
    release="3"
    umlVersion="WG10UML02v20draft25"
    umlDate="2019-10-31T00:00:00Z"
    publicationStage="IS">
   <Copyright>
         <Notice>
			COPYRIGHT (c) IEC, www.iec.ch/tc57/supportdocuments. This version of this NSD is part of IEC_61850-7-4:2007; see the IEC_61850-7-4:2007 for full legal notices. In case of any differences between the here-below code and the IEC published content, the here-below definition supersedes the IEC publication; it may contain updates. See history files. The whole document has to be taken into account to have a full description of this code component.
			See www.iec.ch/CCv1 for copyright details.
			</Notice>
         <License uri="www.iec.ch/CCv1" kind="Standard"/>
      </Copyright>
   <Changes version=""
            revision=""
            tissues="671, 672, 674, 675, 676, 677, 679, 680, 682, 683, 685, 686, 689, 693, 694, 695, 696, 712, 713, 714, 715, 716, 724, 725, 732, 734, 735, 736, 742, 743, 744, 748, 749, 772, 773, 774, 775, 776, 800, 802, 808, 819, 830, 831, 835, 838, 842, 843, 844, 849, 871, 877, 878, 879, 881, 882, 902, 908, 909, 910, 911, 912, 913, 920, 928, 932, 933, 937, 939, 940, 952, 967, 991, 1007, 1029, 1044, 1046, 1071, 1075, 1076, 1077, 1081, 1086, 1117, 1119, 1128, 1137, 1139, 1176, 1177, 1190, 1191, 1203, 1205, 1229, 1235, 1236, 1244, 1250, 1256, 1258, 1259, 1261, 1269, 1273, 1278, 1282, 1292, 1294, 1310, 1316, 1330, 1331, 1333, 1339, 1347, 1348, 1364, 1368, 1375, 1380, 1390, 1404, 1411, 1420, 1423, 1425, 1426, 1436, 1456, 1568"/>
   <Abbreviations>
         <Abbreviation name="A" descID="IEC61850_7_4.Abbreviations::AbbrTermA.A.desc"/>
         <Abbreviation name="AC" descID="IEC61850_7_4.Abbreviations::AbbrTermA.AC.desc"/>
         <Abbreviation name="AGC" descID="IEC61850_7_4.Abbreviations::AbbrTermA.AGC.desc"/>
         <Abbreviation name="ASG" descID="IEC61850_7_4.Abbreviations::AbbrTermA.ASG.desc"/>
         <Abbreviation name="AWatt" descID="IEC61850_7_4.Abbreviations::AbbrTermA.AWatt.desc"/>
         <Abbreviation name="Abr" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Abr.desc"/>
         <Abbreviation name="Abs" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Abs.desc"/>
         <Abbreviation name="Absb" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Absb.desc"/>
         <Abbreviation name="Acc" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Acc.desc"/>
         <Abbreviation name="Accl" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Accl.desc"/>
         <Abbreviation name="Accm" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Accm.desc"/>
         <Abbreviation name="Ack" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Ack.desc"/>
         <Abbreviation name="Acs" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Acs.desc"/>
         <Abbreviation name="Act" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Act.desc"/>
         <Abbreviation name="Actr" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Actr.desc"/>
         <Abbreviation name="Acu" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Acu.desc"/>
         <Abbreviation name="Addr" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Addr.desc"/>
         <Abbreviation name="Adj" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Adj.desc"/>
         <Abbreviation name="Admin" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Admin.desc"/>
         <Abbreviation name="Adp" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Adp.desc"/>
         <Abbreviation name="Aff" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Aff.desc"/>
         <Abbreviation name="Age" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Age.desc"/>
         <Abbreviation name="Ahr" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Ahr.desc"/>
         <Abbreviation name="Air" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Air.desc"/>
         <Abbreviation name="Alg" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Alg.desc"/>
         <Abbreviation name="Alm" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Alm.desc"/>
         <Abbreviation name="Als" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Als.desc"/>
         <Abbreviation name="Alt" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Alt.desc"/>
         <Abbreviation name="Altn" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Altn.desc"/>
         <Abbreviation name="Amnt" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Amnt.desc"/>
         <Abbreviation name="Amp" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Amp.desc"/>
         <Abbreviation name="An" descID="IEC61850_7_4.Abbreviations::AbbrTermA.An.desc"/>
         <Abbreviation name="Anc" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Anc.desc"/>
         <Abbreviation name="Ane" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Ane.desc"/>
         <Abbreviation name="Ang" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Ang.desc"/>
         <Abbreviation name="Ap" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Ap.desc"/>
         <Abbreviation name="Apc" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Apc.desc"/>
         <Abbreviation name="App" descID="IEC61850_7_4.Abbreviations::AbbrTermA.App.desc"/>
         <Abbreviation name="Ar" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Ar.desc"/>
         <Abbreviation name="Arc" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Arc.desc"/>
         <Abbreviation name="Area" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Area.desc"/>
         <Abbreviation name="Arr" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Arr.desc"/>
         <Abbreviation name="Asyn" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Asyn.desc"/>
         <Abbreviation name="At" descID="IEC61850_7_4.Abbreviations::AbbrTermA.At.desc"/>
         <Abbreviation name="Auth" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Auth.desc"/>
         <Abbreviation name="Auto" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Auto.desc"/>
         <Abbreviation name="Aux" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Aux.desc"/>
         <Abbreviation name="Av" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Av.desc"/>
         <Abbreviation name="Avl" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Avl.desc"/>
         <Abbreviation name="Ax" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Ax.desc"/>
         <Abbreviation name="Azi" descID="IEC61850_7_4.Abbreviations::AbbrTermA.Azi.desc"/>
         <Abbreviation name="B" descID="IEC61850_7_4.Abbreviations::AbbrTermB.B.desc"/>
         <Abbreviation name="BG" descID="IEC61850_7_4.Abbreviations::AbbrTermB.BG.desc"/>
         <Abbreviation name="Bac" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bac.desc"/>
         <Abbreviation name="Bar" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bar.desc"/>
         <Abbreviation name="Base" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Base.desc"/>
         <Abbreviation name="Bat" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bat.desc"/>
         <Abbreviation name="Bck" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bck.desc"/>
         <Abbreviation name="Bec" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bec.desc"/>
         <Abbreviation name="Beh" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Beh.desc"/>
         <Abbreviation name="Ber" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Ber.desc"/>
         <Abbreviation name="Bias" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bias.desc"/>
         <Abbreviation name="Bl" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bl.desc"/>
         <Abbreviation name="Blb" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Blb.desc"/>
         <Abbreviation name="Blk" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Blk.desc"/>
         <Abbreviation name="Blow" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Blow.desc"/>
         <Abbreviation name="Bnd" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bnd.desc"/>
         <Abbreviation name="Boil" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Boil.desc"/>
         <Abbreviation name="Bot" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bot.desc"/>
         <Abbreviation name="Brcb" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Brcb.desc"/>
         <Abbreviation name="Brg" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Brg.desc"/>
         <Abbreviation name="Brk" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Brk.desc"/>
         <Abbreviation name="Bsc" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bsc.desc"/>
         <Abbreviation name="Bst" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bst.desc"/>
         <Abbreviation name="Bt" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bt.desc"/>
         <Abbreviation name="Bub" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bub.desc"/>
         <Abbreviation name="Bus" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Bus.desc"/>
         <Abbreviation name="Byp" descID="IEC61850_7_4.Abbreviations::AbbrTermB.Byp.desc"/>
         <Abbreviation name="C" descID="IEC61850_7_4.Abbreviations::AbbrTermC.C.desc"/>
         <Abbreviation name="C2H2" descID="IEC61850_7_4.Abbreviations::AbbrTermC.C2H2.desc"/>
         <Abbreviation name="C2H4" descID="IEC61850_7_4.Abbreviations::AbbrTermC.C2H4.desc"/>
         <Abbreviation name="C2H6" descID="IEC61850_7_4.Abbreviations::AbbrTermC.C2H6.desc"/>
         <Abbreviation name="CB" descID="IEC61850_7_4.Abbreviations::AbbrTermC.CB.desc"/>
         <Abbreviation name="CE" descID="IEC61850_7_4.Abbreviations::AbbrTermC.CE.desc"/>
         <Abbreviation name="CG" descID="IEC61850_7_4.Abbreviations::AbbrTermC.CG.desc"/>
         <Abbreviation name="CH4" descID="IEC61850_7_4.Abbreviations::AbbrTermC.CH4.desc"/>
         <Abbreviation name="CHP" descID="IEC61850_7_4.Abbreviations::AbbrTermC.CHP.desc"/>
         <Abbreviation name="CO" descID="IEC61850_7_4.Abbreviations::AbbrTermC.CO.desc"/>
         <Abbreviation name="CO2" descID="IEC61850_7_4.Abbreviations::AbbrTermC.CO2.desc"/>
         <Abbreviation name="Cab" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cab.desc"/>
         <Abbreviation name="Cal" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cal.desc"/>
         <Abbreviation name="Cam" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cam.desc"/>
         <Abbreviation name="Can" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Can.desc"/>
         <Abbreviation name="Cap" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cap.desc"/>
         <Abbreviation name="Capac" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Capac.desc"/>
         <Abbreviation name="Car" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Car.desc"/>
         <Abbreviation name="Cbr" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cbr.desc"/>
         <Abbreviation name="Ccw" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Ccw.desc"/>
         <Abbreviation name="Ccy" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Ccy.desc"/>
         <Abbreviation name="Cds" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cds.desc"/>
         <Abbreviation name="Ceil" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Ceil.desc"/>
         <Abbreviation name="Cel" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cel.desc"/>
         <Abbreviation name="Cf" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cf.desc"/>
         <Abbreviation name="Cff" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cff.desc"/>
         <Abbreviation name="Cfg" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cfg.desc"/>
         <Abbreviation name="Cg" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cg.desc"/>
         <Abbreviation name="Ch" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Ch.desc"/>
         <Abbreviation name="Cha" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cha.desc"/>
         <Abbreviation name="Chg" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Chg.desc"/>
         <Abbreviation name="Chk" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Chk.desc"/>
         <Abbreviation name="Chr" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Chr.desc"/>
         <Abbreviation name="Chs" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Chs.desc"/>
         <Abbreviation name="Circ" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Circ.desc"/>
         <Abbreviation name="Cl" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cl.desc"/>
         <Abbreviation name="Clc" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Clc.desc"/>
         <Abbreviation name="Clip" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Clip.desc"/>
         <Abbreviation name="Clk" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Clk.desc"/>
         <Abbreviation name="Cloud" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cloud.desc"/>
         <Abbreviation name="Clr" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Clr.desc"/>
         <Abbreviation name="Cls" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cls.desc"/>
         <Abbreviation name="Cm" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cm.desc"/>
         <Abbreviation name="Cmbu" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cmbu.desc"/>
         <Abbreviation name="Cmd" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cmd.desc"/>
         <Abbreviation name="Cmpl" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cmpl.desc"/>
         <Abbreviation name="Cmut" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cmut.desc"/>
         <Abbreviation name="Cndct" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cndct.desc"/>
         <Abbreviation name="Cnt" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cnt.desc"/>
         <Abbreviation name="Cntt" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cntt.desc"/>
         <Abbreviation name="Cnv" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cnv.desc"/>
         <Abbreviation name="Col" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Col.desc"/>
         <Abbreviation name="Comm" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Comm.desc"/>
         <Abbreviation name="Comp" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Comp.desc"/>
         <Abbreviation name="Conf" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Conf.desc"/>
         <Abbreviation name="ConfRev"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermC.ConfRev.desc"/>
         <Abbreviation name="Conn" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Conn.desc"/>
         <Abbreviation name="Cons" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cons.desc"/>
         <Abbreviation name="Cor" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cor.desc"/>
         <Abbreviation name="Core" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Core.desc"/>
         <Abbreviation name="Cost" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cost.desc"/>
         <Abbreviation name="Crank" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Crank.desc"/>
         <Abbreviation name="Crd" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Crd.desc"/>
         <Abbreviation name="Crit" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Crit.desc"/>
         <Abbreviation name="Crl" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Crl.desc"/>
         <Abbreviation name="Crp" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Crp.desc"/>
         <Abbreviation name="Crv" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Crv.desc"/>
         <Abbreviation name="Csmp" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Csmp.desc"/>
         <Abbreviation name="Ctl" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Ctl.desc"/>
         <Abbreviation name="Ctr" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Ctr.desc"/>
         <Abbreviation name="Cum" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cum.desc"/>
         <Abbreviation name="Cur" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cur.desc"/>
         <Abbreviation name="Cut" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cut.desc"/>
         <Abbreviation name="Cvr" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cvr.desc"/>
         <Abbreviation name="Cw" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cw.desc"/>
         <Abbreviation name="Cwb" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cwb.desc"/>
         <Abbreviation name="Cyc" descID="IEC61850_7_4.Abbreviations::AbbrTermC.Cyc.desc"/>
         <Abbreviation name="D" descID="IEC61850_7_4.Abbreviations::AbbrTermD.D.desc"/>
         <Abbreviation name="DC" descID="IEC61850_7_4.Abbreviations::AbbrTermD.DC.desc"/>
         <Abbreviation name="DER" descID="IEC61850_7_4.Abbreviations::AbbrTermD.DER.desc"/>
         <Abbreviation name="DExt" descID="IEC61850_7_4.Abbreviations::AbbrTermD.DExt.desc"/>
         <Abbreviation name="DPCSO" descID="IEC61850_7_4.Abbreviations::AbbrTermD.DPCSO.desc"/>
         <Abbreviation name="DQ0" descID="IEC61850_7_4.Abbreviations::AbbrTermD.DQ0.desc"/>
         <Abbreviation name="DS" descID="IEC61850_7_4.Abbreviations::AbbrTermD.DS.desc"/>
         <Abbreviation name="DT" descID="IEC61850_7_4.Abbreviations::AbbrTermD.DT.desc"/>
         <Abbreviation name="Dam" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dam.desc"/>
         <Abbreviation name="Damp" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Damp.desc"/>
         <Abbreviation name="Date" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Date.desc"/>
         <Abbreviation name="Day" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Day.desc"/>
         <Abbreviation name="Db" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Db.desc"/>
         <Abbreviation name="Dcl" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dcl.desc"/>
         <Abbreviation name="Dct" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dct.desc"/>
         <Abbreviation name="De" descID="IEC61850_7_4.Abbreviations::AbbrTermD.De.desc"/>
         <Abbreviation name="Dea" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dea.desc"/>
         <Abbreviation name="Dec" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dec.desc"/>
         <Abbreviation name="Deg" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Deg.desc"/>
         <Abbreviation name="Dehum" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dehum.desc"/>
         <Abbreviation name="Del" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Del.desc"/>
         <Abbreviation name="Den" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Den.desc"/>
         <Abbreviation name="Dep" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dep.desc"/>
         <Abbreviation name="Desc" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Desc.desc"/>
         <Abbreviation name="Det" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Det.desc"/>
         <Abbreviation name="Detun" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Detun.desc"/>
         <Abbreviation name="Dev" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dev.desc"/>
         <Abbreviation name="Dew" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dew.desc"/>
         <Abbreviation name="Dff" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dff.desc"/>
         <Abbreviation name="Dfl" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dfl.desc"/>
         <Abbreviation name="Dft" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dft.desc"/>
         <Abbreviation name="Dia" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dia.desc"/>
         <Abbreviation name="Diag" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Diag.desc"/>
         <Abbreviation name="Dif" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dif.desc"/>
         <Abbreviation name="Dig" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dig.desc"/>
         <Abbreviation name="Dip" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dip.desc"/>
         <Abbreviation name="Dir" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dir.desc"/>
         <Abbreviation name="Dis" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dis.desc"/>
         <Abbreviation name="Dist" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dist.desc"/>
         <Abbreviation name="Dith" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dith.desc"/>
         <Abbreviation name="Dl" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dl.desc"/>
         <Abbreviation name="Dlt" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dlt.desc"/>
         <Abbreviation name="Dlv" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dlv.desc"/>
         <Abbreviation name="Dmd" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dmd.desc"/>
         <Abbreviation name="Dn" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dn.desc"/>
         <Abbreviation name="Dpc" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dpc.desc"/>
         <Abbreviation name="Dpt" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dpt.desc"/>
         <Abbreviation name="Drag" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Drag.desc"/>
         <Abbreviation name="Dropout"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dropout.desc"/>
         <Abbreviation name="Drp" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Drp.desc"/>
         <Abbreviation name="Drt" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Drt.desc"/>
         <Abbreviation name="Drtb" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Drtb.desc"/>
         <Abbreviation name="Drv" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Drv.desc"/>
         <Abbreviation name="Dsa" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dsa.desc"/>
         <Abbreviation name="Dsc" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dsc.desc"/>
         <Abbreviation name="Dsch" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dsch.desc"/>
         <Abbreviation name="Dscon" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dscon.desc"/>
         <Abbreviation name="Dsp" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dsp.desc"/>
         <Abbreviation name="Dtc" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dtc.desc"/>
         <Abbreviation name="Dur" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dur.desc"/>
         <Abbreviation name="Dust" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dust.desc"/>
         <Abbreviation name="Dv" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dv.desc"/>
         <Abbreviation name="Dw" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dw.desc"/>
         <Abbreviation name="Dyn" descID="IEC61850_7_4.Abbreviations::AbbrTermD.Dyn.desc"/>
         <Abbreviation name="EE" descID="IEC61850_7_4.Abbreviations::AbbrTermE.EE.desc"/>
         <Abbreviation name="EF" descID="IEC61850_7_4.Abbreviations::AbbrTermE.EF.desc"/>
         <Abbreviation name="EFN" descID="IEC61850_7_4.Abbreviations::AbbrTermE.EFN.desc"/>
         <Abbreviation name="EMA" descID="IEC61850_7_4.Abbreviations::AbbrTermE.EMA.desc"/>
         <Abbreviation name="ENG" descID="IEC61850_7_4.Abbreviations::AbbrTermE.ENG.desc"/>
         <Abbreviation name="ENS" descID="IEC61850_7_4.Abbreviations::AbbrTermE.ENS.desc"/>
         <Abbreviation name="EPC" descID="IEC61850_7_4.Abbreviations::AbbrTermE.EPC.desc"/>
         <Abbreviation name="EV" descID="IEC61850_7_4.Abbreviations::AbbrTermE.EV.desc"/>
         <Abbreviation name="EVSE" descID="IEC61850_7_4.Abbreviations::AbbrTermE.EVSE.desc"/>
         <Abbreviation name="Echo" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Echo.desc"/>
         <Abbreviation name="Ecp" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Ecp.desc"/>
         <Abbreviation name="Edt" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Edt.desc"/>
         <Abbreviation name="Efc" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Efc.desc"/>
         <Abbreviation name="El" descID="IEC61850_7_4.Abbreviations::AbbrTermE.El.desc"/>
         <Abbreviation name="Ela" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Ela.desc"/>
         <Abbreviation name="Em" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Em.desc"/>
         <Abbreviation name="Emg" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Emg.desc"/>
         <Abbreviation name="En" descID="IEC61850_7_4.Abbreviations::AbbrTermE.En.desc"/>
         <Abbreviation name="Ena" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Ena.desc"/>
         <Abbreviation name="Enc" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Enc.desc"/>
         <Abbreviation name="Encl" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Encl.desc"/>
         <Abbreviation name="End" descID="IEC61850_7_4.Abbreviations::AbbrTermE.End.desc"/>
         <Abbreviation name="Eng" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Eng.desc"/>
         <Abbreviation name="Ent" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Ent.desc"/>
         <Abbreviation name="Entr" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Entr.desc"/>
         <Abbreviation name="Env" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Env.desc"/>
         <Abbreviation name="Eq" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Eq.desc"/>
         <Abbreviation name="Err" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Err.desc"/>
         <Abbreviation name="Est" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Est.desc"/>
         <Abbreviation name="Ev" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Ev.desc"/>
         <Abbreviation name="Evn" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Evn.desc"/>
         <Abbreviation name="Evt" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Evt.desc"/>
         <Abbreviation name="Ex" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Ex.desc"/>
         <Abbreviation name="ExIm" descID="IEC61850_7_4.Abbreviations::AbbrTermE.ExIm.desc"/>
         <Abbreviation name="Exc" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Exc.desc"/>
         <Abbreviation name="Excl" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Excl.desc"/>
         <Abbreviation name="Exp" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Exp.desc"/>
         <Abbreviation name="Exps" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Exps.desc"/>
         <Abbreviation name="Expt" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Expt.desc"/>
         <Abbreviation name="Ext" descID="IEC61850_7_4.Abbreviations::AbbrTermE.Ext.desc"/>
         <Abbreviation name="F" descID="IEC61850_7_4.Abbreviations::AbbrTermF.F.desc"/>
         <Abbreviation name="FA" descID="IEC61850_7_4.Abbreviations::AbbrTermF.FA.desc"/>
         <Abbreviation name="FPM" descID="IEC61850_7_4.Abbreviations::AbbrTermF.FPM.desc"/>
         <Abbreviation name="Fa" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fa.desc"/>
         <Abbreviation name="Fact" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fact.desc"/>
         <Abbreviation name="Fail" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fail.desc"/>
         <Abbreviation name="Fan" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fan.desc"/>
         <Abbreviation name="Fbc" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fbc.desc"/>
         <Abbreviation name="Fer" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fer.desc"/>
         <Abbreviation name="Fil" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fil.desc"/>
         <Abbreviation name="Fire" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fire.desc"/>
         <Abbreviation name="Fish" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fish.desc"/>
         <Abbreviation name="Fix" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fix.desc"/>
         <Abbreviation name="Fld" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fld.desc"/>
         <Abbreviation name="Flk" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Flk.desc"/>
         <Abbreviation name="Fll" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fll.desc"/>
         <Abbreviation name="Flm" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Flm.desc"/>
         <Abbreviation name="Flood" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Flood.desc"/>
         <Abbreviation name="Flsh" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Flsh.desc"/>
         <Abbreviation name="Flt" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Flt.desc"/>
         <Abbreviation name="Flush" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Flush.desc"/>
         <Abbreviation name="Flw" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Flw.desc"/>
         <Abbreviation name="Fol" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fol.desc"/>
         <Abbreviation name="Forc" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Forc.desc"/>
         <Abbreviation name="Fu" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fu.desc"/>
         <Abbreviation name="Fuel" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fuel.desc"/>
         <Abbreviation name="Full" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Full.desc"/>
         <Abbreviation name="Fun" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fun.desc"/>
         <Abbreviation name="Fwd" descID="IEC61850_7_4.Abbreviations::AbbrTermF.Fwd.desc"/>
         <Abbreviation name="Gain" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gain.desc"/>
         <Abbreviation name="Gas" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gas.desc"/>
         <Abbreviation name="Gbx" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gbx.desc"/>
         <Abbreviation name="Gdv" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gdv.desc"/>
         <Abbreviation name="Gen" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gen.desc"/>
         <Abbreviation name="Glob" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Glob.desc"/>
         <Abbreviation name="Gm" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gm.desc"/>
         <Abbreviation name="Gn" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gn.desc"/>
         <Abbreviation name="Gnd" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gnd.desc"/>
         <Abbreviation name="GoCBRef"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermG.GoCBRef.desc"/>
         <Abbreviation name="Gocb" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gocb.desc"/>
         <Abbreviation name="Gr" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gr.desc"/>
         <Abbreviation name="Gra" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gra.desc"/>
         <Abbreviation name="Grd" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Grd.desc"/>
         <Abbreviation name="Gri" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gri.desc"/>
         <Abbreviation name="Gross" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gross.desc"/>
         <Abbreviation name="Gs" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gs.desc"/>
         <Abbreviation name="Gte" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gte.desc"/>
         <Abbreviation name="Gust" descID="IEC61850_7_4.Abbreviations::AbbrTermG.Gust.desc"/>
         <Abbreviation name="H" descID="IEC61850_7_4.Abbreviations::AbbrTermH.H.desc"/>
         <Abbreviation name="H2" descID="IEC61850_7_4.Abbreviations::AbbrTermH.H2.desc"/>
         <Abbreviation name="H2O" descID="IEC61850_7_4.Abbreviations::AbbrTermH.H2O.desc"/>
         <Abbreviation name="HP" descID="IEC61850_7_4.Abbreviations::AbbrTermH.HP.desc"/>
         <Abbreviation name="HPh" descID="IEC61850_7_4.Abbreviations::AbbrTermH.HPh.desc"/>
         <Abbreviation name="Ha" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Ha.desc"/>
         <Abbreviation name="Har" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Har.desc"/>
         <Abbreviation name="Hb" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hb.desc"/>
         <Abbreviation name="Hd" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hd.desc"/>
         <Abbreviation name="Health"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermH.Health.desc"/>
         <Abbreviation name="Heat" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Heat.desc"/>
         <Abbreviation name="Hello" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hello.desc"/>
         <Abbreviation name="Hi" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hi.desc"/>
         <Abbreviation name="Hlf" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hlf.desc"/>
         <Abbreviation name="Hold" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hold.desc"/>
         <Abbreviation name="Hor" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hor.desc"/>
         <Abbreviation name="Horn" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Horn.desc"/>
         <Abbreviation name="Ht" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Ht.desc"/>
         <Abbreviation name="Htex" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Htex.desc"/>
         <Abbreviation name="Hub" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hub.desc"/>
         <Abbreviation name="Hum" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hum.desc"/>
         <Abbreviation name="Hy" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hy.desc"/>
         <Abbreviation name="Hyd" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hyd.desc"/>
         <Abbreviation name="Hys" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hys.desc"/>
         <Abbreviation name="Hz" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hz.desc"/>
         <Abbreviation name="Hz1" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hz1.desc"/>
         <Abbreviation name="Hz2" descID="IEC61850_7_4.Abbreviations::AbbrTermH.Hz2.desc"/>
         <Abbreviation name="I" descID="IEC61850_7_4.Abbreviations::AbbrTermI.I.desc"/>
         <Abbreviation name="ING" descID="IEC61850_7_4.Abbreviations::AbbrTermI.ING.desc"/>
         <Abbreviation name="INS" descID="IEC61850_7_4.Abbreviations::AbbrTermI.INS.desc"/>
         <Abbreviation name="ISCSO" descID="IEC61850_7_4.Abbreviations::AbbrTermI.ISCSO.desc"/>
         <Abbreviation name="Ia" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ia.desc"/>
         <Abbreviation name="Iafm" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iafm.desc"/>
         <Abbreviation name="Iano" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iano.desc"/>
         <Abbreviation name="Ianofo"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ianofo.desc"/>
         <Abbreviation name="Ianopca"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ianopca.desc"/>
         <Abbreviation name="Ianos" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ianos.desc"/>
         <Abbreviation name="Ianosm"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ianosm.desc"/>
         <Abbreviation name="Iao" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iao.desc"/>
         <Abbreviation name="Iaog" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaog.desc"/>
         <Abbreviation name="Iaogfp"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaogfp.desc"/>
         <Abbreviation name="Iaogpp"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaogpp.desc"/>
         <Abbreviation name="Iaong" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaong.desc"/>
         <Abbreviation name="Iaongel"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaongel.desc"/>
         <Abbreviation name="Iaongen"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaongen.desc"/>
         <Abbreviation name="Iaongrs"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaongrs.desc"/>
         <Abbreviation name="Iaongts"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iaongts.desc"/>
         <Abbreviation name="Ice" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ice.desc"/>
         <Abbreviation name="Id" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Id.desc"/>
         <Abbreviation name="Ieee" descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.Ieee.desc"/>
         <Abbreviation name="IeeeKH"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKH.desc"/>
         <Abbreviation name="IeeeKH1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKH1.desc"/>
         <Abbreviation name="IeeeKH11"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKH11.desc"/>
         <Abbreviation name="IeeeKH17"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKH17.desc"/>
         <Abbreviation name="IeeeKH2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKH2.desc"/>
         <Abbreviation name="IeeeKI"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKI.desc"/>
         <Abbreviation name="IeeeKI1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKI1.desc"/>
         <Abbreviation name="IeeeKI11"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKI11.desc"/>
         <Abbreviation name="IeeeKI17"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKI17.desc"/>
         <Abbreviation name="IeeeKI2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKI2.desc"/>
         <Abbreviation name="IeeeKL"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKL.desc"/>
         <Abbreviation name="IeeeKL1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKL1.desc"/>
         <Abbreviation name="IeeeKL11"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKL11.desc"/>
         <Abbreviation name="IeeeKL17"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKL17.desc"/>
         <Abbreviation name="IeeeKL2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKL2.desc"/>
         <Abbreviation name="IeeeKs1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKs1.desc"/>
         <Abbreviation name="IeeeKs2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKs2.desc"/>
         <Abbreviation name="IeeeKs3"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeKs3.desc"/>
         <Abbreviation name="IeeeM"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeM.desc"/>
         <Abbreviation name="IeeeN"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeN.desc"/>
         <Abbreviation name="IeeeT1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT1.desc"/>
         <Abbreviation name="IeeeT10"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT10.desc"/>
         <Abbreviation name="IeeeT11"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT11.desc"/>
         <Abbreviation name="IeeeT2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT2.desc"/>
         <Abbreviation name="IeeeT3"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT3.desc"/>
         <Abbreviation name="IeeeT4"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT4.desc"/>
         <Abbreviation name="IeeeT7"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT7.desc"/>
         <Abbreviation name="IeeeT8"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT8.desc"/>
         <Abbreviation name="IeeeT9"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeT9.desc"/>
         <Abbreviation name="IeeeTH1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH1.desc"/>
         <Abbreviation name="IeeeTH10"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH10.desc"/>
         <Abbreviation name="IeeeTH11"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH11.desc"/>
         <Abbreviation name="IeeeTH12"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH12.desc"/>
         <Abbreviation name="IeeeTH2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH2.desc"/>
         <Abbreviation name="IeeeTH3"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH3.desc"/>
         <Abbreviation name="IeeeTH4"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH4.desc"/>
         <Abbreviation name="IeeeTH5"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH5.desc"/>
         <Abbreviation name="IeeeTH6"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH6.desc"/>
         <Abbreviation name="IeeeTH7"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH7.desc"/>
         <Abbreviation name="IeeeTH8"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH8.desc"/>
         <Abbreviation name="IeeeTH9"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTH9.desc"/>
         <Abbreviation name="IeeeTI1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI1.desc"/>
         <Abbreviation name="IeeeTI10"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI10.desc"/>
         <Abbreviation name="IeeeTI11"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI11.desc"/>
         <Abbreviation name="IeeeTI12"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI12.desc"/>
         <Abbreviation name="IeeeTI2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI2.desc"/>
         <Abbreviation name="IeeeTI3"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI3.desc"/>
         <Abbreviation name="IeeeTI4"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI4.desc"/>
         <Abbreviation name="IeeeTI5"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI5.desc"/>
         <Abbreviation name="IeeeTI6"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI6.desc"/>
         <Abbreviation name="IeeeTI7"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI7.desc"/>
         <Abbreviation name="IeeeTI8"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI8.desc"/>
         <Abbreviation name="IeeeTI9"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTI9.desc"/>
         <Abbreviation name="IeeeTL1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL1.desc"/>
         <Abbreviation name="IeeeTL10"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL10.desc"/>
         <Abbreviation name="IeeeTL11"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL11.desc"/>
         <Abbreviation name="IeeeTL12"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL12.desc"/>
         <Abbreviation name="IeeeTL2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL2.desc"/>
         <Abbreviation name="IeeeTL3"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL3.desc"/>
         <Abbreviation name="IeeeTL4"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL4.desc"/>
         <Abbreviation name="IeeeTL5"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL5.desc"/>
         <Abbreviation name="IeeeTL6"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL6.desc"/>
         <Abbreviation name="IeeeTL7"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL7.desc"/>
         <Abbreviation name="IeeeTL8"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL8.desc"/>
         <Abbreviation name="IeeeTL9"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTL9.desc"/>
         <Abbreviation name="IeeeTw1"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTw1.desc"/>
         <Abbreviation name="IeeeTw2"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTw2.desc"/>
         <Abbreviation name="IeeeTw3"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTw3.desc"/>
         <Abbreviation name="IeeeTw4"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeTw4.desc"/>
         <Abbreviation name="IeeeVHMax"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVHMax.desc"/>
         <Abbreviation name="IeeeVHMin"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVHMin.desc"/>
         <Abbreviation name="IeeeVIMax"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVIMax.desc"/>
         <Abbreviation name="IeeeVIMin"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVIMin.desc"/>
         <Abbreviation name="IeeeVLMax"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVLMax.desc"/>
         <Abbreviation name="IeeeVLMin"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVLMin.desc"/>
         <Abbreviation name="IeeeVsi1Max"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVsi1Max.desc"/>
         <Abbreviation name="IeeeVsi1Min"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVsi1Min.desc"/>
         <Abbreviation name="IeeeVsi2Max"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVsi2Max.desc"/>
         <Abbreviation name="IeeeVsi2Min"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVsi2Min.desc"/>
         <Abbreviation name="IeeeVstMax"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVstMax.desc"/>
         <Abbreviation name="IeeeVstMin"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermIeee.IeeeVstMin.desc"/>
         <Abbreviation name="Imb" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Imb.desc"/>
         <Abbreviation name="Imp" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Imp.desc"/>
         <Abbreviation name="Impact"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermI.Impact.desc"/>
         <Abbreviation name="Impt" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Impt.desc"/>
         <Abbreviation name="In" descID="IEC61850_7_4.Abbreviations::AbbrTermI.In.desc"/>
         <Abbreviation name="Ina" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ina.desc"/>
         <Abbreviation name="Inc" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Inc.desc"/>
         <Abbreviation name="Incl" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Incl.desc"/>
         <Abbreviation name="Incr" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Incr.desc"/>
         <Abbreviation name="Ind" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ind.desc"/>
         <Abbreviation name="Indp" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Indp.desc"/>
         <Abbreviation name="Iner" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iner.desc"/>
         <Abbreviation name="Inh" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Inh.desc"/>
         <Abbreviation name="Inl" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Inl.desc"/>
         <Abbreviation name="Inlet" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Inlet.desc"/>
         <Abbreviation name="Inn" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Inn.desc"/>
         <Abbreviation name="Ins" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ins.desc"/>
         <Abbreviation name="Insol" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Insol.desc"/>
         <Abbreviation name="Inst" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Inst.desc"/>
         <Abbreviation name="Int" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Int.desc"/>
         <Abbreviation name="Intm" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Intm.desc"/>
         <Abbreviation name="Intn" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Intn.desc"/>
         <Abbreviation name="Intr" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Intr.desc"/>
         <Abbreviation name="Intv" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Intv.desc"/>
         <Abbreviation name="Inv" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Inv.desc"/>
         <Abbreviation name="Isc" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Isc.desc"/>
         <Abbreviation name="Isld" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Isld.desc"/>
         <Abbreviation name="Iso" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iso.desc"/>
         <Abbreviation name="Iu" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Iu.desc"/>
         <Abbreviation name="Ix" descID="IEC61850_7_4.Abbreviations::AbbrTermI.Ix.desc"/>
         <Abbreviation name="Jmp" descID="IEC61850_7_4.Abbreviations::AbbrTermJK.Jmp.desc"/>
         <Abbreviation name="Jnt" descID="IEC61850_7_4.Abbreviations::AbbrTermJK.Jnt.desc"/>
         <Abbreviation name="K" descID="IEC61850_7_4.Abbreviations::AbbrTermJK.K.desc"/>
         <Abbreviation name="K0Fact"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermJK.K0Fact.desc"/>
         <Abbreviation name="KFact" descID="IEC61850_7_4.Abbreviations::AbbrTermJK.KFact.desc"/>
         <Abbreviation name="Kck" descID="IEC61850_7_4.Abbreviations::AbbrTermJK.Kck.desc"/>
         <Abbreviation name="Key" descID="IEC61850_7_4.Abbreviations::AbbrTermJK.Key.desc"/>
         <Abbreviation name="L" descID="IEC61850_7_4.Abbreviations::AbbrTermL.L.desc"/>
         <Abbreviation name="LDC" descID="IEC61850_7_4.Abbreviations::AbbrTermL.LDC.desc"/>
         <Abbreviation name="LDCR" descID="IEC61850_7_4.Abbreviations::AbbrTermL.LDCR.desc"/>
         <Abbreviation name="LDCX" descID="IEC61850_7_4.Abbreviations::AbbrTermL.LDCX.desc"/>
         <Abbreviation name="LDCZ" descID="IEC61850_7_4.Abbreviations::AbbrTermL.LDCZ.desc"/>
         <Abbreviation name="LED" descID="IEC61850_7_4.Abbreviations::AbbrTermL.LED.desc"/>
         <Abbreviation name="LTC" descID="IEC61850_7_4.Abbreviations::AbbrTermL.LTC.desc"/>
         <Abbreviation name="Last" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Last.desc"/>
         <Abbreviation name="Ld" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Ld.desc"/>
         <Abbreviation name="Ldp" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Ldp.desc"/>
         <Abbreviation name="Leap" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Leap.desc"/>
         <Abbreviation name="Len" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Len.desc"/>
         <Abbreviation name="Lev" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lev.desc"/>
         <Abbreviation name="Lft" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lft.desc"/>
         <Abbreviation name="Lg" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lg.desc"/>
         <Abbreviation name="Life" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Life.desc"/>
         <Abbreviation name="Lim" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lim.desc"/>
         <Abbreviation name="Lin" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lin.desc"/>
         <Abbreviation name="Liv" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Liv.desc"/>
         <Abbreviation name="Lkd" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lkd.desc"/>
         <Abbreviation name="Lkg" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lkg.desc"/>
         <Abbreviation name="Ll" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Ll.desc"/>
         <Abbreviation name="Lo" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lo.desc"/>
         <Abbreviation name="Loc" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Loc.desc"/>
         <Abbreviation name="Locb" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Locb.desc"/>
         <Abbreviation name="Lod" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lod.desc"/>
         <Abbreviation name="Log" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Log.desc"/>
         <Abbreviation name="Lok" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lok.desc"/>
         <Abbreviation name="Loop" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Loop.desc"/>
         <Abbreviation name="Los" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Los.desc"/>
         <Abbreviation name="Ls" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Ls.desc"/>
         <Abbreviation name="Lst" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lst.desc"/>
         <Abbreviation name="Lub" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lub.desc"/>
         <Abbreviation name="Lum" descID="IEC61850_7_4.Abbreviations::AbbrTermL.Lum.desc"/>
         <Abbreviation name="M" descID="IEC61850_7_4.Abbreviations::AbbrTermM.M.desc"/>
         <Abbreviation name="MV" descID="IEC61850_7_4.Abbreviations::AbbrTermM.MV.desc"/>
         <Abbreviation name="Mac" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mac.desc"/>
         <Abbreviation name="Made" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Made.desc"/>
         <Abbreviation name="Mag" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mag.desc"/>
         <Abbreviation name="Maint" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Maint.desc"/>
         <Abbreviation name="Man" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Man.desc"/>
         <Abbreviation name="Mat" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mat.desc"/>
         <Abbreviation name="Mau" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mau.desc"/>
         <Abbreviation name="Max" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Max.desc"/>
         <Abbreviation name="Mbr" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mbr.desc"/>
         <Abbreviation name="Md" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Md.desc"/>
         <Abbreviation name="Mdul" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mdul.desc"/>
         <Abbreviation name="Meas" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Meas.desc"/>
         <Abbreviation name="Mech" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mech.desc"/>
         <Abbreviation name="Media" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Media.desc"/>
         <Abbreviation name="Mem" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mem.desc"/>
         <Abbreviation name="Min" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Min.desc"/>
         <Abbreviation name="Mir" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mir.desc"/>
         <Abbreviation name="Mlt" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mlt.desc"/>
         <Abbreviation name="Mns" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mns.desc"/>
         <Abbreviation name="Mod" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mod.desc"/>
         <Abbreviation name="Mot" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mot.desc"/>
         <Abbreviation name="Mrg" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mrg.desc"/>
         <Abbreviation name="Mrk" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mrk.desc"/>
         <Abbreviation name="Mst" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mst.desc"/>
         <Abbreviation name="Msv" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Msv.desc"/>
         <Abbreviation name="Msvcb" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Msvcb.desc"/>
         <Abbreviation name="Mth" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mth.desc"/>
         <Abbreviation name="Mult" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mult.desc"/>
         <Abbreviation name="Mvm" descID="IEC61850_7_4.Abbreviations::AbbrTermM.Mvm.desc"/>
         <Abbreviation name="N2" descID="IEC61850_7_4.Abbreviations::AbbrTermN.N2.desc"/>
         <Abbreviation name="NOx" descID="IEC61850_7_4.Abbreviations::AbbrTermN.NOx.desc"/>
         <Abbreviation name="NQS" descID="IEC61850_7_4.Abbreviations::AbbrTermN.NQS.desc"/>
         <Abbreviation name="Nam" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Nam.desc"/>
         <Abbreviation name="Name" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Name.desc"/>
         <Abbreviation name="Ndl" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Ndl.desc"/>
         <Abbreviation name="NdsCom"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermN.NdsCom.desc"/>
         <Abbreviation name="Neut" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Neut.desc"/>
         <Abbreviation name="Ng" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Ng.desc"/>
         <Abbreviation name="Ngt" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Ngt.desc"/>
         <Abbreviation name="Nhd" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Nhd.desc"/>
         <Abbreviation name="Night" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Night.desc"/>
         <Abbreviation name="No" descID="IEC61850_7_4.Abbreviations::AbbrTermN.No.desc"/>
         <Abbreviation name="Nom" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Nom.desc"/>
         <Abbreviation name="Num" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Num.desc"/>
         <Abbreviation name="Nxt" descID="IEC61850_7_4.Abbreviations::AbbrTermN.Nxt.desc"/>
         <Abbreviation name="O2" descID="IEC61850_7_4.Abbreviations::AbbrTermO.O2.desc"/>
         <Abbreviation name="O3" descID="IEC61850_7_4.Abbreviations::AbbrTermO.O3.desc"/>
         <Abbreviation name="Obl" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Obl.desc"/>
         <Abbreviation name="Oc" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Oc.desc"/>
         <Abbreviation name="Odd" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Odd.desc"/>
         <Abbreviation name="Of" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Of.desc"/>
         <Abbreviation name="Off" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Off.desc"/>
         <Abbreviation name="Ofs" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Ofs.desc"/>
         <Abbreviation name="Oil" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Oil.desc"/>
         <Abbreviation name="On" descID="IEC61850_7_4.Abbreviations::AbbrTermO.On.desc"/>
         <Abbreviation name="Oo" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Oo.desc"/>
         <Abbreviation name="Op" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Op.desc"/>
         <Abbreviation name="Operate"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermO.Operate.desc"/>
         <Abbreviation name="Opn" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Opn.desc"/>
         <Abbreviation name="Ord" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Ord.desc"/>
         <Abbreviation name="Out" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Out.desc"/>
         <Abbreviation name="Ov" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Ov.desc"/>
         <Abbreviation name="Ovl" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Ovl.desc"/>
         <Abbreviation name="Ox" descID="IEC61850_7_4.Abbreviations::AbbrTermO.Ox.desc"/>
         <Abbreviation name="P" descID="IEC61850_7_4.Abbreviations::AbbrTermP.P.desc"/>
         <Abbreviation name="PF" descID="IEC61850_7_4.Abbreviations::AbbrTermP.PF.desc"/>
         <Abbreviation name="PH" descID="IEC61850_7_4.Abbreviations::AbbrTermP.PH.desc"/>
         <Abbreviation name="PNV" descID="IEC61850_7_4.Abbreviations::AbbrTermP.PNV.desc"/>
         <Abbreviation name="POW" descID="IEC61850_7_4.Abbreviations::AbbrTermP.POW.desc"/>
         <Abbreviation name="PP" descID="IEC61850_7_4.Abbreviations::AbbrTermP.PP.desc"/>
         <Abbreviation name="PPV" descID="IEC61850_7_4.Abbreviations::AbbrTermP.PPV.desc"/>
         <Abbreviation name="PT1" descID="IEC61850_7_4.Abbreviations::AbbrTermP.PT1.desc"/>
         <Abbreviation name="Pa" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pa.desc"/>
         <Abbreviation name="Pair" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pair.desc"/>
         <Abbreviation name="Pap" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pap.desc"/>
         <Abbreviation name="Par" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Par.desc"/>
         <Abbreviation name="Pas" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pas.desc"/>
         <Abbreviation name="Path" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Path.desc"/>
         <Abbreviation name="Pcb" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pcb.desc"/>
         <Abbreviation name="Pct" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pct.desc"/>
         <Abbreviation name="Pdm" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pdm.desc"/>
         <Abbreviation name="Pe" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pe.desc"/>
         <Abbreviation name="Per" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Per.desc"/>
         <Abbreviation name="Ph" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Ph.desc"/>
         <Abbreviation name="Phs" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Phs.desc"/>
         <Abbreviation name="Phy" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Phy.desc"/>
         <Abbreviation name="Pi" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pi.desc"/>
         <Abbreviation name="Pin" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pin.desc"/>
         <Abbreviation name="Pipe" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pipe.desc"/>
         <Abbreviation name="Pk" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pk.desc"/>
         <Abbreviation name="Pl" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pl.desc"/>
         <Abbreviation name="Plg" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Plg.desc"/>
         <Abbreviation name="Pls" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pls.desc"/>
         <Abbreviation name="Plt" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Plt.desc"/>
         <Abbreviation name="Pmp" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pmp.desc"/>
         <Abbreviation name="Po" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Po.desc"/>
         <Abbreviation name="Pol" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pol.desc"/>
         <Abbreviation name="Polytr"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermP.Polytr.desc"/>
         <Abbreviation name="Port" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Port.desc"/>
         <Abbreviation name="Pos" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pos.desc"/>
         <Abbreviation name="Pot" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pot.desc"/>
         <Abbreviation name="Prc" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prc.desc"/>
         <Abbreviation name="Pre" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pre.desc"/>
         <Abbreviation name="Prec" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prec.desc"/>
         <Abbreviation name="Pres" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pres.desc"/>
         <Abbreviation name="Prg" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prg.desc"/>
         <Abbreviation name="Prim" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prim.desc"/>
         <Abbreviation name="Prio" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prio.desc"/>
         <Abbreviation name="Prm" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prm.desc"/>
         <Abbreviation name="Pro" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pro.desc"/>
         <Abbreviation name="Proc" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Proc.desc"/>
         <Abbreviation name="Proxy" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Proxy.desc"/>
         <Abbreviation name="Prs" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prs.desc"/>
         <Abbreviation name="Prt" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Prt.desc"/>
         <Abbreviation name="Ps" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Ps.desc"/>
         <Abbreviation name="Psk" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Psk.desc"/>
         <Abbreviation name="Pss" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pss.desc"/>
         <Abbreviation name="Pst" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pst.desc"/>
         <Abbreviation name="Pt" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pt.desc"/>
         <Abbreviation name="Pth" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pth.desc"/>
         <Abbreviation name="Pwr" descID="IEC61850_7_4.Abbreviations::AbbrTermP.Pwr.desc"/>
         <Abbreviation name="Qty" descID="IEC61850_7_4.Abbreviations::AbbrTermQ.Qty.desc"/>
         <Abbreviation name="Qu" descID="IEC61850_7_4.Abbreviations::AbbrTermQ.Qu.desc"/>
         <Abbreviation name="Qud" descID="IEC61850_7_4.Abbreviations::AbbrTermQ.Qud.desc"/>
         <Abbreviation name="R" descID="IEC61850_7_4.Abbreviations::AbbrTermR.R.desc"/>
         <Abbreviation name="Rad" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rad.desc"/>
         <Abbreviation name="Ral" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Ral.desc"/>
         <Abbreviation name="Ramp" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Ramp.desc"/>
         <Abbreviation name="Rat" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rat.desc"/>
         <Abbreviation name="Rb" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rb.desc"/>
         <Abbreviation name="Rcd" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rcd.desc"/>
         <Abbreviation name="Rch" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rch.desc"/>
         <Abbreviation name="Rcl" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rcl.desc"/>
         <Abbreviation name="Rct" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rct.desc"/>
         <Abbreviation name="Rdy" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rdy.desc"/>
         <Abbreviation name="Re" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Re.desc"/>
         <Abbreviation name="React" descID="IEC61850_7_4.Abbreviations::AbbrTermR.React.desc"/>
         <Abbreviation name="Rec" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rec.desc"/>
         <Abbreviation name="Rec1" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rec1.desc"/>
         <Abbreviation name="Rec13" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rec13.desc"/>
         <Abbreviation name="Rec3" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rec3.desc"/>
         <Abbreviation name="Recha" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Recha.desc"/>
         <Abbreviation name="Rect" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rect.desc"/>
         <Abbreviation name="Red" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Red.desc"/>
         <Abbreviation name="Ref" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Ref.desc"/>
         <Abbreviation name="Reg" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Reg.desc"/>
         <Abbreviation name="Rel" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rel.desc"/>
         <Abbreviation name="Req" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Req.desc"/>
         <Abbreviation name="Res" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Res.desc"/>
         <Abbreviation name="Reso" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Reso.desc"/>
         <Abbreviation name="Reuse" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Reuse.desc"/>
         <Abbreviation name="Rev" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rev.desc"/>
         <Abbreviation name="Rf" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rf.desc"/>
         <Abbreviation name="Rin" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rin.desc"/>
         <Abbreviation name="Ris" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Ris.desc"/>
         <Abbreviation name="Rl" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rl.desc"/>
         <Abbreviation name="Rm" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rm.desc"/>
         <Abbreviation name="Rmp" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rmp.desc"/>
         <Abbreviation name="Rms" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rms.desc"/>
         <Abbreviation name="Rn" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rn.desc"/>
         <Abbreviation name="Rnbk" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rnbk.desc"/>
         <Abbreviation name="Rng" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rng.desc"/>
         <Abbreviation name="Rod" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rod.desc"/>
         <Abbreviation name="Root" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Root.desc"/>
         <Abbreviation name="Rot" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rot.desc"/>
         <Abbreviation name="Rpt" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rpt.desc"/>
         <Abbreviation name="Rs" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rs.desc"/>
         <Abbreviation name="Rsl" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rsl.desc"/>
         <Abbreviation name="Rst" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rst.desc"/>
         <Abbreviation name="Rsv" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rsv.desc"/>
         <Abbreviation name="Rt" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rt.desc"/>
         <Abbreviation name="Rte" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rte.desc"/>
         <Abbreviation name="Rtg" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rtg.desc"/>
         <Abbreviation name="Rub" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rub.desc"/>
         <Abbreviation name="Run" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Run.desc"/>
         <Abbreviation name="Rv" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rv.desc"/>
         <Abbreviation name="Rvc" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rvc.desc"/>
         <Abbreviation name="Rvrt" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rvrt.desc"/>
         <Abbreviation name="Rwy" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rwy.desc"/>
         <Abbreviation name="Rx" descID="IEC61850_7_4.Abbreviations::AbbrTermR.Rx.desc"/>
         <Abbreviation name="S10" descID="IEC61850_7_4.Abbreviations::AbbrTermS.S10.desc"/>
         <Abbreviation name="S12" descID="IEC61850_7_4.Abbreviations::AbbrTermS.S12.desc"/>
         <Abbreviation name="SM" descID="IEC61850_7_4.Abbreviations::AbbrTermS.SM.desc"/>
         <Abbreviation name="SNL" descID="IEC61850_7_4.Abbreviations::AbbrTermS.SNL.desc"/>
         <Abbreviation name="SOx" descID="IEC61850_7_4.Abbreviations::AbbrTermS.SOx.desc"/>
         <Abbreviation name="SPCSO" descID="IEC61850_7_4.Abbreviations::AbbrTermS.SPCSO.desc"/>
         <Abbreviation name="SPG" descID="IEC61850_7_4.Abbreviations::AbbrTermS.SPG.desc"/>
         <Abbreviation name="SPS" descID="IEC61850_7_4.Abbreviations::AbbrTermS.SPS.desc"/>
         <Abbreviation name="SPl" descID="IEC61850_7_4.Abbreviations::AbbrTermS.SPl.desc"/>
         <Abbreviation name="ST" descID="IEC61850_7_4.Abbreviations::AbbrTermS.ST.desc"/>
         <Abbreviation name="Saf" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Saf.desc"/>
         <Abbreviation name="Sag" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sag.desc"/>
         <Abbreviation name="Sar" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sar.desc"/>
         <Abbreviation name="Sat" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sat.desc"/>
         <Abbreviation name="Sc" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sc.desc"/>
         <Abbreviation name="Scale" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Scale.desc"/>
         <Abbreviation name="Schd" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Schd.desc"/>
         <Abbreviation name="Scnd" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Scnd.desc"/>
         <Abbreviation name="Sco" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sco.desc"/>
         <Abbreviation name="Sec" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sec.desc"/>
         <Abbreviation name="Sel" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sel.desc"/>
         <Abbreviation name="Self" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Self.desc"/>
         <Abbreviation name="Seq" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Seq.desc"/>
         <Abbreviation name="Ser" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Ser.desc"/>
         <Abbreviation name="Set" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Set.desc"/>
         <Abbreviation name="Sgcb" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sgcb.desc"/>
         <Abbreviation name="Sh" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sh.desc"/>
         <Abbreviation name="Shar" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Shar.desc"/>
         <Abbreviation name="Shft" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Shft.desc"/>
         <Abbreviation name="Shld" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Shld.desc"/>
         <Abbreviation name="Sig" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sig.desc"/>
         <Abbreviation name="Sign" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sign.desc"/>
         <Abbreviation name="Sim" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sim.desc"/>
         <Abbreviation name="Sld" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sld.desc"/>
         <Abbreviation name="Slnt" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Slnt.desc"/>
         <Abbreviation name="Slp" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Slp.desc"/>
         <Abbreviation name="Smok" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Smok.desc"/>
         <Abbreviation name="Smp" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Smp.desc"/>
         <Abbreviation name="Snd" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Snd.desc"/>
         <Abbreviation name="Snpt" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Snpt.desc"/>
         <Abbreviation name="Snr" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Snr.desc"/>
         <Abbreviation name="Snw" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Snw.desc"/>
         <Abbreviation name="Soc" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Soc.desc"/>
         <Abbreviation name="Sof" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sof.desc"/>
         <Abbreviation name="Spc" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Spc.desc"/>
         <Abbreviation name="Spcf" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Spcf.desc"/>
         <Abbreviation name="Spd" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Spd.desc"/>
         <Abbreviation name="Spec" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Spec.desc"/>
         <Abbreviation name="Spir" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Spir.desc"/>
         <Abbreviation name="Spt" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Spt.desc"/>
         <Abbreviation name="Sq" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sq.desc"/>
         <Abbreviation name="Src" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Src.desc"/>
         <Abbreviation name="Srfc" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Srfc.desc"/>
         <Abbreviation name="St" descID="IEC61850_7_4.Abbreviations::AbbrTermS.St.desc"/>
         <Abbreviation name="Sta" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sta.desc"/>
         <Abbreviation name="Stab" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stab.desc"/>
         <Abbreviation name="Stat" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stat.desc"/>
         <Abbreviation name="Stc" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stc.desc"/>
         <Abbreviation name="Std" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Std.desc"/>
         <Abbreviation name="Stdby" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stdby.desc"/>
         <Abbreviation name="Step" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Step.desc"/>
         <Abbreviation name="Stk" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stk.desc"/>
         <Abbreviation name="Stl" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stl.desc"/>
         <Abbreviation name="Stnd" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stnd.desc"/>
         <Abbreviation name="Sto" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sto.desc"/>
         <Abbreviation name="Stop" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stop.desc"/>
         <Abbreviation name="Storm" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Storm.desc"/>
         <Abbreviation name="Stow" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stow.desc"/>
         <Abbreviation name="Str" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Str.desc"/>
         <Abbreviation name="Strg" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Strg.desc"/>
         <Abbreviation name="Stt" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stt.desc"/>
         <Abbreviation name="Stuck" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Stuck.desc"/>
         <Abbreviation name="Sub" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sub.desc"/>
         <Abbreviation name="Sum" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sum.desc"/>
         <Abbreviation name="Sup" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sup.desc"/>
         <Abbreviation name="Sv" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sv.desc"/>
         <Abbreviation name="SvCBRef"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermS.SvCBRef.desc"/>
         <Abbreviation name="Svc" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Svc.desc"/>
         <Abbreviation name="Sw" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sw.desc"/>
         <Abbreviation name="Swg" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Swg.desc"/>
         <Abbreviation name="Swl" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Swl.desc"/>
         <Abbreviation name="Syn" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Syn.desc"/>
         <Abbreviation name="Sys" descID="IEC61850_7_4.Abbreviations::AbbrTermS.Sys.desc"/>
         <Abbreviation name="TP" descID="IEC61850_7_4.Abbreviations::AbbrTermT.TP.desc"/>
         <Abbreviation name="Ta" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Ta.desc"/>
         <Abbreviation name="Tag" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tag.desc"/>
         <Abbreviation name="Tap" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tap.desc"/>
         <Abbreviation name="Task" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Task.desc"/>
         <Abbreviation name="Td" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Td.desc"/>
         <Abbreviation name="Td0p" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Td0p.desc"/>
         <Abbreviation name="Td0s" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Td0s.desc"/>
         <Abbreviation name="Tdd" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tdd.desc"/>
         <Abbreviation name="Tdf" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tdf.desc"/>
         <Abbreviation name="Tdp" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tdp.desc"/>
         <Abbreviation name="Tds" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tds.desc"/>
         <Abbreviation name="Tech" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tech.desc"/>
         <Abbreviation name="Term" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Term.desc"/>
         <Abbreviation name="Test" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Test.desc"/>
         <Abbreviation name="Tgt" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tgt.desc"/>
         <Abbreviation name="Thd" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Thd.desc"/>
         <Abbreviation name="Thm" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Thm.desc"/>
         <Abbreviation name="Ti" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Ti.desc"/>
         <Abbreviation name="Tilt" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tilt.desc"/>
         <Abbreviation name="Tm" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tm.desc"/>
         <Abbreviation name="Tm1" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tm1.desc"/>
         <Abbreviation name="Tm2" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tm2.desc"/>
         <Abbreviation name="Tm3" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tm3.desc"/>
         <Abbreviation name="Tmh" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tmh.desc"/>
         <Abbreviation name="Tmm" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tmm.desc"/>
         <Abbreviation name="Tmms" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tmms.desc"/>
         <Abbreviation name="Tmp" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tmp.desc"/>
         <Abbreviation name="Tms" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tms.desc"/>
         <Abbreviation name="Tnk" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tnk.desc"/>
         <Abbreviation name="Tns" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tns.desc"/>
         <Abbreviation name="Top" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Top.desc"/>
         <Abbreviation name="Topo" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Topo.desc"/>
         <Abbreviation name="Torq" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Torq.desc"/>
         <Abbreviation name="Tot" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tot.desc"/>
         <Abbreviation name="Tow" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tow.desc"/>
         <Abbreviation name="Tp" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tp.desc"/>
         <Abbreviation name="Tpc" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tpc.desc"/>
         <Abbreviation name="Tpy" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tpy.desc"/>
         <Abbreviation name="Tq0p" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tq0p.desc"/>
         <Abbreviation name="Tq0s" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tq0s.desc"/>
         <Abbreviation name="Tqp" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tqp.desc"/>
         <Abbreviation name="Tqs" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tqs.desc"/>
         <Abbreviation name="Tr" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tr.desc"/>
         <Abbreviation name="Trf" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Trf.desc"/>
         <Abbreviation name="Trg" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Trg.desc"/>
         <Abbreviation name="Trip" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Trip.desc"/>
         <Abbreviation name="Trk" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Trk.desc"/>
         <Abbreviation name="Trp" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Trp.desc"/>
         <Abbreviation name="Trs" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Trs.desc"/>
         <Abbreviation name="Trunk" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Trunk.desc"/>
         <Abbreviation name="Ts" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Ts.desc"/>
         <Abbreviation name="Tu" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tu.desc"/>
         <Abbreviation name="Tun" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tun.desc"/>
         <Abbreviation name="Tur" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tur.desc"/>
         <Abbreviation name="Tx" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Tx.desc"/>
         <Abbreviation name="Typ" descID="IEC61850_7_4.Abbreviations::AbbrTermT.Typ.desc"/>
         <Abbreviation name="UPS" descID="IEC61850_7_4.Abbreviations::AbbrTermU.UPS.desc"/>
         <Abbreviation name="UTC" descID="IEC61850_7_4.Abbreviations::AbbrTermU.UTC.desc"/>
         <Abbreviation name="Uhf" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Uhf.desc"/>
         <Abbreviation name="Un" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Un.desc"/>
         <Abbreviation name="Unav" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Unav.desc"/>
         <Abbreviation name="Unb" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Unb.desc"/>
         <Abbreviation name="Unld" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Unld.desc"/>
         <Abbreviation name="Unt" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Unt.desc"/>
         <Abbreviation name="Up" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Up.desc"/>
         <Abbreviation name="Ups" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Ups.desc"/>
         <Abbreviation name="Urcb" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Urcb.desc"/>
         <Abbreviation name="Use" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Use.desc"/>
         <Abbreviation name="Used" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Used.desc"/>
         <Abbreviation name="Usvcb" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Usvcb.desc"/>
         <Abbreviation name="Util" descID="IEC61850_7_4.Abbreviations::AbbrTermU.Util.desc"/>
         <Abbreviation name="V" descID="IEC61850_7_4.Abbreviations::AbbrTermV.V.desc"/>
         <Abbreviation name="V1" descID="IEC61850_7_4.Abbreviations::AbbrTermV.V1.desc"/>
         <Abbreviation name="V2" descID="IEC61850_7_4.Abbreviations::AbbrTermV.V2.desc"/>
         <Abbreviation name="VA" descID="IEC61850_7_4.Abbreviations::AbbrTermV.VA.desc"/>
         <Abbreviation name="VAh" descID="IEC61850_7_4.Abbreviations::AbbrTermV.VAh.desc"/>
         <Abbreviation name="VAr" descID="IEC61850_7_4.Abbreviations::AbbrTermV.VAr.desc"/>
         <Abbreviation name="VArh" descID="IEC61850_7_4.Abbreviations::AbbrTermV.VArh.desc"/>
         <Abbreviation name="Va" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Va.desc"/>
         <Abbreviation name="Vac" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vac.desc"/>
         <Abbreviation name="Val" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Val.desc"/>
         <Abbreviation name="Vbr" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vbr.desc"/>
         <Abbreviation name="Ver" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Ver.desc"/>
         <Abbreviation name="Viol" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Viol.desc"/>
         <Abbreviation name="Vis" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vis.desc"/>
         <Abbreviation name="Visc" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Visc.desc"/>
         <Abbreviation name="Vlan" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vlan.desc"/>
         <Abbreviation name="Vld" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vld.desc"/>
         <Abbreviation name="Vlm" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vlm.desc"/>
         <Abbreviation name="Vlv" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vlv.desc"/>
         <Abbreviation name="Vol" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vol.desc"/>
         <Abbreviation name="VolAmpr"
                    descID="IEC61850_7_4.Abbreviations::AbbrTermV.VolAmpr.desc"/>
         <Abbreviation name="Vss" descID="IEC61850_7_4.Abbreviations::AbbrTermV.Vss.desc"/>
         <Abbreviation name="W" descID="IEC61850_7_4.Abbreviations::AbbrTermW.W.desc"/>
         <Abbreviation name="W200" descID="IEC61850_7_4.Abbreviations::AbbrTermW.W200.desc"/>
         <Abbreviation name="Wac" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wac.desc"/>
         <Abbreviation name="Wash" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wash.desc"/>
         <Abbreviation name="Watt" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Watt.desc"/>
         <Abbreviation name="Wav" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wav.desc"/>
         <Abbreviation name="Wd" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wd.desc"/>
         <Abbreviation name="Week" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Week.desc"/>
         <Abbreviation name="Wei" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wei.desc"/>
         <Abbreviation name="Wet" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wet.desc"/>
         <Abbreviation name="Wgt" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wgt.desc"/>
         <Abbreviation name="Wh" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wh.desc"/>
         <Abbreviation name="Wid" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wid.desc"/>
         <Abbreviation name="Win" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Win.desc"/>
         <Abbreviation name="Wkup" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wkup.desc"/>
         <Abbreviation name="Wld" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wld.desc"/>
         <Abbreviation name="Wnd" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wnd.desc"/>
         <Abbreviation name="Wrm" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wrm.desc"/>
         <Abbreviation name="Wrn" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wrn.desc"/>
         <Abbreviation name="Wrs" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wrs.desc"/>
         <Abbreviation name="Wtr" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wtr.desc"/>
         <Abbreviation name="Wup" descID="IEC61850_7_4.Abbreviations::AbbrTermW.Wup.desc"/>
         <Abbreviation name="X" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.X.desc"/>
         <Abbreviation name="X0" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.X0.desc"/>
         <Abbreviation name="X1" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.X1.desc"/>
         <Abbreviation name="X2" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.X2.desc"/>
         <Abbreviation name="Xd" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xd.desc"/>
         <Abbreviation name="Xdir" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xdir.desc"/>
         <Abbreviation name="Xdp" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xdp.desc"/>
         <Abbreviation name="Xds" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xds.desc"/>
         <Abbreviation name="Xm" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xm.desc"/>
         <Abbreviation name="Xq" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xq.desc"/>
         <Abbreviation name="Xqp" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xqp.desc"/>
         <Abbreviation name="Xqs" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xqs.desc"/>
         <Abbreviation name="Xsec" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Xsec.desc"/>
         <Abbreviation name="Ydir" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Ydir.desc"/>
         <Abbreviation name="Yw" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Yw.desc"/>
         <Abbreviation name="Z" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Z.desc"/>
         <Abbreviation name="Zer" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Zer.desc"/>
         <Abbreviation name="Zero" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Zero.desc"/>
         <Abbreviation name="Zm" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Zm.desc"/>
         <Abbreviation name="Zn" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Zn.desc"/>
         <Abbreviation name="Zro" descID="IEC61850_7_4.Abbreviations::AbbrTermsXYZ.Zro.desc"/>
         <Abbreviation name="km" descID="IEC61850_7_4.Abbreviations::AbbrTermJK.km.desc"/>
         <Abbreviation name="ppm" descID="IEC61850_7_4.Abbreviations::AbbrTermP.ppm.desc"/>
      </Abbreviations>
   <Enumerations>
         <Enumeration name="AdjustmentKind"
                   titleID="IEC61850_7_4.DOEnums::AdjustmentKind.cl.title">
            <Literal name="Completed" literalVal="1"/>
            <Literal name="Cancelled" literalVal="2"/>
            <Literal name="New adjustments" literalVal="3"/>
            <Literal name="Under way" literalVal="4"/>
         </Enumeration>
         <Enumeration name="AffectedPhasesKind"
                   titleID="IEC61850_7_4.DOEnums::AffectedPhasesKind.cl.title">
            <Literal name="PhaseA" literalVal="1"/>
            <Literal name="PhaseB" literalVal="2"/>
            <Literal name="PhaseAB" literalVal="3"/>
            <Literal name="PhaseC" literalVal="4"/>
            <Literal name="PhaseAC" literalVal="5"/>
            <Literal name="PhaseBC" literalVal="6"/>
            <Literal name="PhaseABC" literalVal="7"/>
            <Literal name="None" literalVal="8"/>
         </Enumeration>
         <Enumeration name="AutoReclosingKind"
                   titleID="IEC61850_7_4.DOEnums::AutoReclosingKind.cl.title">
            <Literal name="Ready" literalVal="1"/>
            <Literal name="InProgress" literalVal="2" deprecated="true"/>
            <Literal name="Successful" literalVal="3"/>
            <Literal name="WaitingForTrip" literalVal="4"/>
            <Literal name="TripFromProtection" literalVal="5"/>
            <Literal name="FaultDisappeared" literalVal="6"/>
            <Literal name="WaitToComplete" literalVal="7"/>
            <Literal name="CBclosed" literalVal="8"/>
            <Literal name="CycleUnsuccessful" literalVal="9"/>
            <Literal name="Unsuccessful" literalVal="10"/>
            <Literal name="Aborted" literalVal="11"/>
            <Literal name="NotReady" literalVal="12"/>
         </Enumeration>
         <Enumeration name="BehaviourModeKind"
                   titleID="IEC61850_7_4.DOEnums::BehaviourModeKind.cl.title">
            <Literal name="on" literalVal="1"/>
            <Literal name="blocked" literalVal="2"/>
            <Literal name="test" literalVal="3"/>
            <Literal name="test/blocked" literalVal="4"/>
            <Literal name="off" literalVal="5"/>
         </Enumeration>
         <Enumeration name="BreakerOpCapabilityKind"
                   titleID="IEC61850_7_4.DOEnums::BreakerOpCapabilityKind.cl.title">
            <Literal name="None" literalVal="1"/>
            <Literal name="Open" literalVal="2"/>
            <Literal name="Close-Open" literalVal="3"/>
            <Literal name="Open-Close-Open" literalVal="4"/>
            <Literal name="Close-Open-Close-Open" literalVal="5"/>
            <Literal name="Open-Close-Open-Close-Open" literalVal="6"/>
            <Literal name="more" literalVal="7"/>
         </Enumeration>
         <Enumeration name="CalcIntervalKind"
                   titleID="IEC61850_7_4.DOEnums::CalcIntervalKind.cl.title">
            <Literal name="MS" literalVal="1"/>
            <Literal name="PER_CYCLE" literalVal="2"/>
            <Literal name="CYCLE" literalVal="3"/>
            <Literal name="DAY" literalVal="4"/>
            <Literal name="WEEK" literalVal="5"/>
            <Literal name="MONTH" literalVal="6"/>
            <Literal name="YEAR" literalVal="7"/>
            <Literal name="EXTERNAL" literalVal="8"/>
         </Enumeration>
         <Enumeration name="CalcMethodKind"
                   titleID="IEC61850_7_4.DOEnums::CalcMethodKind.cl.title">
            <Literal name="UNSPECIFIED"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.UNSPECIFIED.desc"/>
            <Literal name="TRUE_RMS"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.TRUE_RMS.desc"/>
            <Literal name="PEAK_FUNDAMENTAL"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.PEAK_FUNDAMENTAL.desc"/>
            <Literal name="RMS_FUNDAMENTAL"
                  literalVal="4"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.RMS_FUNDAMENTAL.desc"/>
            <Literal name="MIN"
                  literalVal="5"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.MIN.desc"/>
            <Literal name="MAX"
                  literalVal="6"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.MAX.desc"/>
            <Literal name="AVG"
                  literalVal="7"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.AVG.desc"/>
            <Literal name="SDV"
                  literalVal="8"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.SDV.desc"/>
            <Literal name="PREDICTION"
                  literalVal="9"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.PREDICTION.desc"
                  deprecated="true"/>
            <Literal name="RATE"
                  literalVal="10"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.RATE.desc"
                  deprecated="true"/>
            <Literal name="P-CLASS"
                  literalVal="11"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.P-CLASS.desc"/>
            <Literal name="M-CLASS"
                  literalVal="12"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.M-CLASS.desc"/>
            <Literal name="DIFF"
                  literalVal="13"
                  descID="IEC61850_7_4.DOEnums::CalcMethodKind.DIFF.desc"/>
         </Enumeration>
         <Enumeration name="CalcModeKind"
                   titleID="IEC61850_7_4.DOEnums::CalcModeKind.cl.title">
            <Literal name="TOTAL"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::CalcModeKind.TOTAL.desc"/>
            <Literal name="PERIOD"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::CalcModeKind.PERIOD.desc"/>
            <Literal name="SLIDING"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::CalcModeKind.SLIDING.desc"/>
         </Enumeration>
         <Enumeration name="ClockSourceKind"
                   titleID="IEC61850_7_4.DOEnums::ClockSourceKind.cl.title">
            <Literal name="Unknown" literalVal="1"/>
            <Literal name="SNTP" literalVal="2"/>
            <Literal name="PTP" literalVal="3"/>
            <Literal name="IRIG-B" literalVal="4"/>
            <Literal name="Substation internal" literalVal="5"/>
         </Enumeration>
         <Enumeration name="ClockSyncKind"
                   titleID="IEC61850_7_4.DOEnums::ClockSyncKind.cl.title">
            <Literal name="InternalClock" literalVal="1"/>
            <Literal name="LocalAreaClock" literalVal="2"/>
            <Literal name="GlobalAreaClock"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::ClockSyncKind.GlobalAreaClock.desc"/>
         </Enumeration>
         <Enumeration name="ClockSyncLockingKind"
                   titleID="IEC61850_7_4.DOEnums::ClockSyncLockingKind.cl.title">
            <Literal name="Locked"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::ClockSyncLockingKind.Locked.desc"/>
            <Literal name="Unlocked10s"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::ClockSyncLockingKind.Unlocked10s.desc"/>
            <Literal name="Unlocked100s"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::ClockSyncLockingKind.Unlocked100s.desc"/>
            <Literal name="Unlocked1000s"
                  literalVal="4"
                  descID="IEC61850_7_4.DOEnums::ClockSyncLockingKind.Unlocked1000s.desc"/>
            <Literal name="UnlockedMoreThan1000s"
                  literalVal="5"
                  descID="IEC61850_7_4.DOEnums::ClockSyncLockingKind.UnlockedMoreThan1000s.desc"/>
         </Enumeration>
         <Enumeration name="DirectionModeKind"
                   titleID="IEC61850_7_4.DOEnums::DirectionModeKind.cl.title">
            <Literal name="NonDirectional" literalVal="1"/>
            <Literal name="Forward" literalVal="2"/>
            <Literal name="Reverse" literalVal="3"/>
         </Enumeration>
         <Enumeration name="FailureDetectionKind"
                   titleID="IEC61850_7_4.DOEnums::FailureDetectionKind.cl.title">
            <Literal name="Current" literalVal="1"/>
            <Literal name="Breaker Status" literalVal="2"/>
            <Literal name="Both current and breaker status" literalVal="3"/>
            <Literal name="Other" literalVal="4"/>
         </Enumeration>
         <Enumeration name="FaultLoopKind"
                   titleID="IEC61850_7_4.DOEnums::FaultLoopKind.cl.title">
            <Literal name="PhaseAtoGround"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::FaultLoopKind.PhaseAtoGround.desc"/>
            <Literal name="PhaseBtoGround"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::FaultLoopKind.PhaseBtoGround.desc"/>
            <Literal name="PhaseCtoGround"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::FaultLoopKind.PhaseCtoGround.desc"/>
            <Literal name="PhaseAtoB"
                  literalVal="4"
                  descID="IEC61850_7_4.DOEnums::FaultLoopKind.PhaseAtoB.desc"/>
            <Literal name="PhaseBtoC"
                  literalVal="5"
                  descID="IEC61850_7_4.DOEnums::FaultLoopKind.PhaseBtoC.desc"/>
            <Literal name="PhaseCtoA"
                  literalVal="6"
                  descID="IEC61850_7_4.DOEnums::FaultLoopKind.PhaseCtoA.desc"/>
            <Literal name="Others" literalVal="7"/>
         </Enumeration>
         <Enumeration name="FaultMeasuredValueTypeKind"
                   titleID="IEC61850_7_4.DOEnums::FaultMeasuredValueTypeKind.cl.title">
            <Literal name="At Start Moment" literalVal="1"/>
            <Literal name="At Trip Moment" literalVal="2"/>
            <Literal name="Peak Fault Value" literalVal="3"/>
         </Enumeration>
         <Enumeration name="FilterFunctionKind"
                   titleID="IEC61850_7_4.DOEnums::FilterFunctionKind.cl.title">
            <Literal name="Low pass" literalVal="1"/>
            <Literal name="High pass" literalVal="2"/>
            <Literal name="Bandpass" literalVal="3"/>
            <Literal name="Bandstop" literalVal="4"/>
            <Literal name="Deadband" literalVal="5"/>
         </Enumeration>
         <Enumeration name="FuseFunctionKind"
                   titleID="IEC61850_7_4.DOEnums::FuseFunctionKind.cl.title">
            <Literal name="Slow time delay"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::FuseFunctionKind.Slow_time_delay.desc"/>
            <Literal name="Fast time delay"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::FuseFunctionKind.Fast_time_delay.desc"/>
            <Literal name="Fast acting"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::FuseFunctionKind.Fast_acting.desc"/>
            <Literal name="Very fast acting"
                  literalVal="4"
                  descID="IEC61850_7_4.DOEnums::FuseFunctionKind.Very_fast_acting.desc"/>
            <Literal name="Not applicable / Unknown" literalVal="98"/>
            <Literal name="Other" literalVal="99"/>
         </Enumeration>
         <Enumeration name="HealthKind" titleID="IEC61850_7_4.DOEnums::HealthKind.cl.title">
            <Literal name="Ok"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::HealthKind.Ok.desc"/>
            <Literal name="Warning"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::HealthKind.Warning.desc"/>
            <Literal name="Alarm"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::HealthKind.Alarm.desc"/>
         </Enumeration>
         <Enumeration name="InstrumentTransformerMeasurementRatingKind"
                   titleID="IEC61850_7_4.DOEnums::InstrumentTransformerMeasurementRatingKind.cl.title">
            <Literal name="0.05" literalVal="1"/>
            <Literal name="0.1" literalVal="2"/>
            <Literal name="0.2" literalVal="3"/>
            <Literal name="0.2S" literalVal="4"/>
            <Literal name="0.5" literalVal="5"/>
            <Literal name="0.5S" literalVal="6"/>
            <Literal name="1" literalVal="7"/>
            <Literal name="3" literalVal="8"/>
            <Literal name="5" literalVal="9"/>
         </Enumeration>
         <Enumeration name="InstrumentTransformerProtectionRatingKind"
                   titleID="IEC61850_7_4.DOEnums::InstrumentTransformerProtectionRatingKind.cl.title">
            <Literal name="1" literalVal="1"/>
            <Literal name="2" literalVal="2"/>
            <Literal name="3" literalVal="3"/>
            <Literal name="5" literalVal="4"/>
            <Literal name="6" literalVal="5"/>
            <Literal name="10" literalVal="6"/>
         </Enumeration>
         <Enumeration name="LeapSecondKind"
                   titleID="IEC61850_7_4.DOEnums::LeapSecondKind.cl.title">
            <Literal name="Unknown" literalVal="1"/>
            <Literal name="Normal Time" literalVal="2"/>
            <Literal name="Last minute of the day has 61 seconds" literalVal="3"/>
            <Literal name="Last minute of the day has 59 seconds" literalVal="4"/>
         </Enumeration>
         <Enumeration name="LevelTriggerModeKind"
                   titleID="IEC61850_7_4.DOEnums::LevelTriggerModeKind.cl.title">
            <Literal name="Positive or Rising" literalVal="1"/>
            <Literal name="Negative or Falling" literalVal="2"/>
            <Literal name="Both" literalVal="3"/>
            <Literal name="Other" literalVal="4"/>
         </Enumeration>
         <Enumeration name="LiveDeadModeKind"
                   titleID="IEC61850_7_4.DOEnums::LiveDeadModeKind.cl.title">
            <Literal name="Dead Line, Dead Bus" literalVal="1"/>
            <Literal name="Live Line, Dead Bus" literalVal="2"/>
            <Literal name="Dead Line, Live Bus" literalVal="3"/>
            <Literal name="Dead Line, Dead Bus OR Live Line, Dead Bus" literalVal="4"/>
            <Literal name="Dead Line, Dead Bus OR Dead Line, Live Bus" literalVal="5"/>
            <Literal name="Live Line, Dead Bus OR Dead Line, Live Bus" literalVal="6"/>
            <Literal name="Dead Line, Dead Bus OR Live Line, Dead Bus OR Dead Line, Live Bus"
                  literalVal="7"/>
         </Enumeration>
         <Enumeration name="MaterialKind"
                   titleID="IEC61850_7_4.DOEnums::MaterialKind.cl.title">
            <Literal name="Air" literalVal="1"/>
            <Literal name="Water" literalVal="2"/>
            <Literal name="Steam" literalVal="3"/>
            <Literal name="Oil" literalVal="4"/>
            <Literal name="Hydrogen" literalVal="5"/>
            <Literal name="Natural gas" literalVal="6"/>
            <Literal name="Butane" literalVal="7"/>
            <Literal name="Propane" literalVal="8"/>
            <Literal name="Waste gas" literalVal="9"/>
            <Literal name="Not applicable / Unknown" literalVal="98"/>
            <Literal name="Other" literalVal="99"/>
         </Enumeration>
         <Enumeration name="MaterialStateKind"
                   titleID="IEC61850_7_4.DOEnums::MaterialStateKind.cl.title">
            <Literal name="Gaseous"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::MaterialStateKind.Gaseous.desc"/>
            <Literal name="Liquid"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::MaterialStateKind.Liquid.desc"/>
            <Literal name="Solid"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::MaterialStateKind.Solid.desc"/>
            <Literal name="Not applicable / Unknown" literalVal="98"/>
            <Literal name="Other" literalVal="99"/>
         </Enumeration>
         <Enumeration name="PFSignKind" titleID="IEC61850_7_4.DOEnums::PFSignKind.cl.title">
            <Literal name="IEC"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::PFSignKind.IEC.desc"/>
            <Literal name="EEI"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::PFSignKind.EEI.desc"/>
         </Enumeration>
         <Enumeration name="PIDAlgorithmKind"
                   titleID="IEC61850_7_4.DOEnums::PIDAlgorithmKind.cl.title">
            <Literal name="P" literalVal="1"/>
            <Literal name="I" literalVal="2"/>
            <Literal name="D" literalVal="3"/>
            <Literal name="PI" literalVal="4"/>
            <Literal name="PD" literalVal="5"/>
            <Literal name="ID" literalVal="6"/>
            <Literal name="PID" literalVal="7"/>
         </Enumeration>
         <Enumeration name="POWSwitchingCapabilityKind"
                   titleID="IEC61850_7_4.DOEnums::POWSwitchingCapabilityKind.cl.title">
            <Literal name="None" literalVal="1"/>
            <Literal name="Close" literalVal="2"/>
            <Literal name="Open" literalVal="3"/>
            <Literal name="Close and Open" literalVal="4"/>
         </Enumeration>
         <Enumeration name="ParallelCoilModeKind"
                   titleID="IEC61850_7_4.DOEnums::ParallelCoilModeKind.cl.title">
            <Literal name="Master/Slave" literalVal="1"/>
            <Literal name="Master/Slave with fixed slave position" literalVal="2"/>
            <Literal name="Master/Slave with variable slave position" literalVal="3"/>
            <Literal name="Parallel operation without communication" literalVal="4"/>
         </Enumeration>
         <Enumeration name="ParallelCtrlModeKind"
                   titleID="IEC61850_7_4.DOEnums::ParallelCtrlModeKind.cl.title">
            <Literal name="Master" literalVal="1"/>
            <Literal name="Slave" literalVal="2"/>
            <Literal name="Independent" literalVal="3"/>
         </Enumeration>
         <Enumeration name="ParallelTransfModeKind"
                   titleID="IEC61850_7_4.DOEnums::ParallelTransfModeKind.cl.title">
            <Literal name="No Mode predefined" literalVal="1"/>
            <Literal name="Master" literalVal="2"/>
            <Literal name="Follower" literalVal="3"/>
            <Literal name="Power Factor" literalVal="4"/>
            <Literal name="Negative Reactance" literalVal="5"/>
            <Literal name="Circulating Current" literalVal="6"/>
            <Literal name="Circulating Reactive Current (var balancing)" literalVal="7"/>
            <Literal name="Circulating Reactive Current by equalizing power factor"
                  literalVal="8"
                  descID="IEC61850_7_4.DOEnums::ParallelTransfModeKind.Circulating_Reactive_Current_by_equalizing_power_factor.desc"/>
         </Enumeration>
         <Enumeration name="PolarizingQuantityKind"
                   titleID="IEC61850_7_4.DOEnums::PolarizingQuantityKind.cl.title">
            <Literal name="None" literalVal="1"/>
            <Literal name="Zero Sequence Current" literalVal="2"/>
            <Literal name="Zero Sequence Voltage" literalVal="3"/>
            <Literal name="Negative Sequence Voltage" literalVal="4"/>
            <Literal name="Phase to Phase Voltages"
                  literalVal="5"
                  descID="IEC61850_7_4.DOEnums::PolarizingQuantityKind.Phase_to_Phase_Voltages.desc"/>
            <Literal name="Phase to Ground Voltages" literalVal="6"/>
            <Literal name="Positive sequence voltage" literalVal="7"/>
         </Enumeration>
         <Enumeration name="RecordingModeKind"
                   titleID="IEC61850_7_4.DOEnums::RecordingModeKind.cl.title">
            <Literal name="Overwrite existing values" literalVal="1"/>
            <Literal name="Stop when full or saturated" literalVal="2"/>
         </Enumeration>
         <Enumeration name="RectifierControlModeKind"
                   titleID="IEC61850_7_4.DOEnums::RectifierControlModeKind.cl.title">
            <Literal name="Current" literalVal="1"/>
            <Literal name="Voltage" literalVal="2"/>
            <Literal name="Active Power" literalVal="3"/>
         </Enumeration>
         <Enumeration name="ResetCurveKind"
                   titleID="IEC61850_7_4.DOEnums::ResetCurveKind.cl.title">
            <Literal name="None" literalVal="1"/>
            <Literal name="Definite Time Delayed Reset" literalVal="2"/>
            <Literal name="Inverse Reset" literalVal="3"/>
         </Enumeration>
         <Enumeration name="RestraintModeKind"
                   titleID="IEC61850_7_4.DOEnums::RestraintModeKind.cl.title">
            <Literal name="None" literalVal="1"/>
            <Literal name="Harmonic2" literalVal="2"/>
            <Literal name="Harmonic5" literalVal="3"/>
            <Literal name="Harmonic2and5" literalVal="4"/>
            <Literal name="WaveformAnalysis" literalVal="5"/>
            <Literal name="WaveformAnalysisAndHarmonic2" literalVal="6"/>
            <Literal name="Other" literalVal="7"/>
            <Literal name="WaveformAnalysisAndHarmonic5" literalVal="8"/>
            <Literal name="WaveformAnalysisAndHarmonic2AndHarmonic5" literalVal="9"/>
         </Enumeration>
         <Enumeration name="RetripModeKind"
                   titleID="IEC61850_7_4.DOEnums::RetripModeKind.cl.title">
            <Literal name="Off" literalVal="1"/>
            <Literal name="Without Check" literalVal="2"/>
            <Literal name="With Current Check" literalVal="3"/>
            <Literal name="With Breaker Status Check" literalVal="4"/>
            <Literal name="With Current and Breaker Status Check" literalVal="5"/>
            <Literal name="Other Checks" literalVal="6"/>
         </Enumeration>
         <Enumeration name="RotatingMachineStateKind"
                   titleID="IEC61850_7_4.DOEnums::RotatingMachineStateKind.cl.title">
            <Literal name="Stopped"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::RotatingMachineStateKind.Stopped.desc"/>
            <Literal name="Stopping" literalVal="2"/>
            <Literal name="Started"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::RotatingMachineStateKind.Started.desc"/>
            <Literal name="Starting" literalVal="4"/>
            <Literal name="Disabled" literalVal="5"/>
         </Enumeration>
         <Enumeration name="RotationalDirectionKind"
                   titleID="IEC61850_7_4.DOEnums::RotationalDirectionKind.cl.title">
            <Literal name="Clockwise" literalVal="1"/>
            <Literal name="Counter-Clockwise" literalVal="2"/>
            <Literal name="Unknown" literalVal="3"/>
         </Enumeration>
         <Enumeration name="RotorThermalStateKind"
                   titleID="IEC61850_7_4.DOEnums::RotorThermalStateKind.cl.title">
            <Literal name="Cold" literalVal="1"/>
            <Literal name="Warm" literalVal="2"/>
            <Literal name="Overload" literalVal="3"/>
         </Enumeration>
         <Enumeration name="SOFEnablingModeKind"
                   titleID="IEC61850_7_4.DOEnums::SOFEnablingModeKind.cl.title">
            <Literal name="SwitchCommand"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::SOFEnablingModeKind.SwitchCommand.desc"/>
            <Literal name="BreakerClosed"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::SOFEnablingModeKind.BreakerClosed.desc"/>
            <Literal name="VoltageAndCurrentLevel"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::SOFEnablingModeKind.VoltageAndCurrentLevel.desc"/>
         </Enumeration>
         <Enumeration name="SOFOperationModeKind"
                   titleID="IEC61850_7_4.DOEnums::SOFOperationModeKind.cl.title">
            <Literal name="ExternalSignal"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::SOFOperationModeKind.ExternalSignal.desc"/>
            <Literal name="VoltageAndCurrent"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::SOFOperationModeKind.VoltageAndCurrent.desc"/>
            <Literal name="ExternalSignal or VoltageAndCurrent" literalVal="3"/>
         </Enumeration>
         <Enumeration name="STotalCalcMethodKind"
                   titleID="IEC61850_7_4.DOEnums::STotalCalcMethodKind.cl.title">
            <Literal name="Vector" literalVal="1"/>
            <Literal name="Arithmetic" literalVal="2"/>
         </Enumeration>
         <Enumeration name="ScheduleEnablingErrorKind"
                   titleID="IEC61850_7_4.DOEnums::ScheduleEnablingErrorKind.cl.title">
            <Literal name="None" literalVal="1"/>
            <Literal name="Missing valid NumEntr" literalVal="2"/>
            <Literal name="Missing valid SchdIntv" literalVal="3"/>
            <Literal name="Missing valid schedule values" literalVal="4"/>
            <Literal name="Inconsistent values CDC"
                  literalVal="5"
                  descID="IEC61850_7_4.DOEnums::ScheduleEnablingErrorKind.Inconsistent_values_CDC.desc"/>
            <Literal name="Missing valid StrTm"
                  literalVal="6"
                  descID="IEC61850_7_4.DOEnums::ScheduleEnablingErrorKind.Missing_valid_StrTm.desc"/>
            <Literal name="Other" literalVal="99"/>
         </Enumeration>
         <Enumeration name="ScheduleStateKind"
                   titleID="IEC61850_7_4.DOEnums::ScheduleStateKind.cl.title">
            <Literal name="Not ready" literalVal="1"/>
            <Literal name="Start Time required" literalVal="2"/>
            <Literal name="Ready" literalVal="3"/>
            <Literal name="Running" literalVal="4"/>
         </Enumeration>
         <Enumeration name="SetpointEndKind"
                   titleID="IEC61850_7_4.DOEnums::SetpointEndKind.cl.title">
            <Literal name="Ended normally" literalVal="1"/>
            <Literal name="Ended with overshoot" literalVal="2"/>
            <Literal name="Cancelled: measurement was deviating" literalVal="3"/>
            <Literal name="Cancelled: loss of communication with dispatch centre"
                  literalVal="4"/>
            <Literal name="Cancelled: loss of communication with local area network"
                  literalVal="5"/>
            <Literal name="Cancelled: loss of communication with the local interface"
                  literalVal="6"/>
            <Literal name="Cancelled: timeout" literalVal="7"/>
            <Literal name="Cancelled: voluntarily" literalVal="8"/>
            <Literal name="Cancelled: noisy environments" literalVal="9"/>
            <Literal name="Cancelled: material failure" literalVal="10"/>
            <Literal name="Cancelled: new set-point request" literalVal="11"/>
            <Literal name="Cancelled: improper environment (blockage)" literalVal="12"/>
            <Literal name="Cancelled: stability time was reached" literalVal="13"/>
            <Literal name="Cancelled: immobilisation time was reached" literalVal="14"/>
            <Literal name="Cancelled: equipment was in the wrong mode" literalVal="15"/>
            <Literal name="Unknown causes" literalVal="16"/>
         </Enumeration>
         <Enumeration name="StageControlKind"
                   titleID="IEC61850_7_4.DOEnums::StageControlKind.cl.title">
            <Literal name="Inactive" literalVal="1"/>
            <Literal name="Stage1" literalVal="2"/>
            <Literal name="Stage2" literalVal="3"/>
            <Literal name="Stage3" literalVal="4"/>
         </Enumeration>
         <Enumeration name="StrWeekDayKind"
                   titleID="IEC61850_7_4.DOEnums::StrWeekDayKind.cl.title">
            <Literal name="Monday"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::StrWeekDayKind.Monday.desc"/>
            <Literal name="Tuesday"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::StrWeekDayKind.Tuesday.desc"/>
            <Literal name="Wednesday"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::StrWeekDayKind.Wednesday.desc"/>
            <Literal name="Thursday"
                  literalVal="4"
                  descID="IEC61850_7_4.DOEnums::StrWeekDayKind.Thursday.desc"/>
            <Literal name="Friday"
                  literalVal="5"
                  descID="IEC61850_7_4.DOEnums::StrWeekDayKind.Friday.desc"/>
            <Literal name="Saturday"
                  literalVal="6"
                  descID="IEC61850_7_4.DOEnums::StrWeekDayKind.Saturday.desc"/>
            <Literal name="Sunday"
                  literalVal="7"
                  descID="IEC61850_7_4.DOEnums::StrWeekDayKind.Sunday.desc"/>
         </Enumeration>
         <Enumeration name="SwitchFunctionKind"
                   titleID="IEC61850_7_4.DOEnums::SwitchFunctionKind.cl.title">
            <Literal name="Load Break" literalVal="1"/>
            <Literal name="Disconnector" literalVal="2"/>
            <Literal name="Earthing Switch" literalVal="3"/>
            <Literal name="High Speed Earthing Switch" literalVal="4"/>
         </Enumeration>
         <Enumeration name="SwitchingCapabilityKind"
                   titleID="IEC61850_7_4.DOEnums::SwitchingCapabilityKind.cl.title">
            <Literal name="None" literalVal="1"/>
            <Literal name="Open" literalVal="2"/>
            <Literal name="Close" literalVal="3"/>
            <Literal name="Open and Close" literalVal="4"/>
         </Enumeration>
         <Enumeration name="SynchOperationModeKind"
                   titleID="IEC61850_7_4.DOEnums::SynchOperationModeKind.cl.title">
            <Literal name="Automatic-synchronizing"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::SynchOperationModeKind.Automatic-synchronizing.desc"/>
            <Literal name="Automatic-paralleling"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::SynchOperationModeKind.Automatic-paralleling.desc"/>
            <Literal name="Manual"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::SynchOperationModeKind.Manual.desc"/>
            <Literal name="Test"
                  literalVal="4"
                  descID="IEC61850_7_4.DOEnums::SynchOperationModeKind.Test.desc"/>
         </Enumeration>
         <Enumeration name="TankFillKind"
                   titleID="IEC61850_7_4.DOEnums::TankFillKind.cl.title">
            <Literal name="pressure only" literalVal="1"/>
            <Literal name="level only" literalVal="2"/>
            <Literal name="both pressure and level" literalVal="3"/>
         </Enumeration>
         <Enumeration name="TransientPerformanceClassKind"
                   titleID="IEC61850_7_4.DOEnums::TransientPerformanceClassKind.cl.title">
            <Literal name="Unknown" literalVal="1"/>
            <Literal name="P" literalVal="2"/>
            <Literal name="PR" literalVal="3"/>
            <Literal name="PX" literalVal="4"/>
            <Literal name="PXR" literalVal="5"/>
            <Literal name="TPX" literalVal="6"/>
            <Literal name="TPY" literalVal="7"/>
            <Literal name="TPZ" literalVal="8"/>
            <Literal name="TPE" literalVal="9"/>
            <Literal name="TPS" literalVal="10"/>
         </Enumeration>
         <Enumeration name="TpcAppModeKind"
                   titleID="IEC61850_7_4.DOEnums::TpcAppModeKind.cl.title">
            <Literal name="Unused" literalVal="1"/>
            <Literal name="Blocking" literalVal="2"/>
            <Literal name="Permissive" literalVal="3"/>
            <Literal name="Direct" literalVal="4"/>
            <Literal name="Unblocking" literalVal="5"/>
            <Literal name="Status" literalVal="6"/>
         </Enumeration>
         <Enumeration name="TriggerSourceKind"
                   titleID="IEC61850_7_4.DOEnums::TriggerSourceKind.cl.title">
            <Literal name="Internal" literalVal="1"/>
            <Literal name="External" literalVal="2"/>
            <Literal name="Both" literalVal="3"/>
         </Enumeration>
         <Enumeration name="TripBehaviourKind"
                   titleID="IEC61850_7_4.DOEnums::TripBehaviourKind.cl.title">
            <Literal name="Single Pole Tripping" literalVal="1"/>
            <Literal name="Undefined" literalVal="2"/>
            <Literal name="Three Pole Tripping" literalVal="3"/>
         </Enumeration>
         <Enumeration name="TripModeKind"
                   titleID="IEC61850_7_4.DOEnums::TripModeKind.cl.title">
            <Literal name="3 phase tripping"
                  literalVal="1"
                  descID="IEC61850_7_4.DOEnums::TripModeKind.3_phase_tripping.desc"/>
            <Literal name="1 or 3 phase tripping"
                  literalVal="2"
                  descID="IEC61850_7_4.DOEnums::TripModeKind.1_or_3_phase_tripping.desc"/>
            <Literal name="specific"
                  literalVal="3"
                  descID="IEC61850_7_4.DOEnums::TripModeKind.specific.desc"/>
            <Literal name="1 phase tripping"
                  literalVal="4"
                  descID="IEC61850_7_4.DOEnums::TripModeKind.1_phase_tripping.desc"/>
         </Enumeration>
         <Enumeration name="TuningKind" titleID="IEC61850_7_4.DOEnums::TuningKind.cl.title">
            <Literal name="Not tuned" literalVal="1"/>
            <Literal name="Tuned" literalVal="2"/>
            <Literal name="Tuned but not compensated" literalVal="3"/>
            <Literal name="Umax" literalVal="4"/>
            <Literal name="Umax but not compensated" literalVal="5"/>
            <Literal name="Umax but not compensated due to U continous limitation"
                  literalVal="6"/>
         </Enumeration>
         <Enumeration name="UnbalanceDetectionKind"
                   titleID="IEC61850_7_4.DOEnums::UnbalanceDetectionKind.cl.title">
            <Literal name="Negative sequence" literalVal="1"/>
            <Literal name="Zero sequence" literalVal="2"/>
            <Literal name="Neg-pos sequence" literalVal="3"/>
            <Literal name="Zero-pos sequence" literalVal="4"/>
            <Literal name="Phase vector comparison" literalVal="5"/>
            <Literal name="Others" literalVal="6"/>
         </Enumeration>
         <Enumeration name="UnblockModeKind"
                   titleID="IEC61850_7_4.DOEnums::UnblockModeKind.cl.title">
            <Literal name="Off" literalVal="1"/>
            <Literal name="Permanent" literalVal="2"/>
            <Literal name="Time window" literalVal="3"/>
         </Enumeration>
         <Enumeration name="VoltInterruptDetectionKind"
                   titleID="IEC61850_7_4.DOEnums::VoltInterruptDetectionKind.cl.title">
            <Literal name="Voltage" literalVal="1"/>
            <Literal name="Voltage and Current" literalVal="2"/>
            <Literal name="Voltage and Normally Open breaker contact" literalVal="3"/>
            <Literal name="Voltage and Normally Closed breaker contact" literalVal="4"/>
            <Literal name="Voltage and Normally Open and Normally Closed breaker contacts"
                  literalVal="5"/>
            <Literal name="Normally Open breaker contact" literalVal="6"/>
            <Literal name="Normally Closed breaker contact" literalVal="7"/>
            <Literal name="Both Normally Open and Normally Closed breaker contacts"
                  literalVal="8"/>
         </Enumeration>
         <Enumeration name="WeakEndInfeedModeKind"
                   titleID="IEC61850_7_4.DOEnums::WeakEndInfeedModeKind.cl.title">
            <Literal name="Off" literalVal="1"/>
            <Literal name="Operate" literalVal="2"/>
            <Literal name="Echo" literalVal="3"/>
            <Literal name="Echo and Operate" literalVal="4"/>
         </Enumeration>
      </Enumerations>
   <LNClasses>
         <AbstractLNClass name="DomainLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::DomainLN.cl.title">
            <DataObject name="NamPlt"
                     type="LPL"
                     descID="IEC61850_7_4.AbstractLNsCommon::DomainLN.NamPlt.desc"
                     presCond="MONamPlt"
                     presCondArgsID="IEC61850_7_4.AbstractLNsCommon::DomainLN__(_MONamPlt_=__((_NamPlt_))__)_.cond.AbstractLNsCommon::DomainLN.NamPlt"
                     dsPresCond="MONamPlt"
                     dsPresCondArgsID="IEC61850_7_4.AbstractLNsCommon::DomainLN__(_MONamPlt_=__((_NamPlt_))__)_.dsCond.AbstractLNsCommon::DomainLN.NamPlt"/>
            <DataObject name="Beh"
                     type="ENS"
                     underlyingType="BehaviourModeKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::DomainLN.Beh.desc"
                     presCond="M"
                     dsPresCond="M"/>
            <DataObject name="Health"
                     type="ENS"
                     underlyingType="HealthKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::DomainLN.Health.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Mir"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::DomainLN.Mir.desc"
                     presCond="MOcond"
                     presCondArgs="1"
                     presCondArgsID="IEC61850_7_4.AbstractLNsCommon::DomainLN__(_MOcond(1)_=__((_Mir_))__)_.cond.AbstractLNsCommon::DomainLN.Mir"
                     dsPresCond="MOcond"
                     dsPresCondArgs="1"
                     dsPresCondArgsID="IEC61850_7_4.AbstractLNsCommon::DomainLN__(_MOcond(1)_=__((_Mir_))__)_.dsCond.AbstractLNsCommon::DomainLN.Mir"/>
            <DataObject name="Mod"
                     type="ENC"
                     underlyingType="BehaviourModeKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::DomainLN.Mod.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InRef"
                     type="ORG"
                     descID="IEC61850_7_4.AbstractLNsCommon::DomainLN.InRef.desc"
                     presCond="Omulti"
                     dsPresCond="Omulti"/>
         </AbstractLNClass>
         <AbstractLNClass name="StatisticsLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.cl.title"
                       base="DomainLN">
            <DataObject name="ClcExp"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcExp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcNxtTmms"
                     type="INS"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcNxtTmms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcStr"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcStr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcMth"
                     type="ENG"
                     underlyingType="CalcMethodKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcMth.desc"
                     presCond="O"
                     dsPresCond="M"/>
            <DataObject name="ClcMod"
                     type="ENG"
                     underlyingType="CalcModeKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcMod.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcIntvTyp"
                     type="ENG"
                     underlyingType="CalcIntervalKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcIntvTyp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcIntvPer"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcIntvPer.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="NumSubIntv"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.NumSubIntv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcRfTyp"
                     type="ENG"
                     underlyingType="CalcIntervalKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcRfTyp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcRfPer"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcRfPer.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcSrc"
                     type="ORG"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.ClcSrc.desc"
                     presCond="F"
                     dsPresCond="M"/>
            <DataObject name="InSyn"
                     type="ORG"
                     descID="IEC61850_7_4.AbstractLNsCommon::StatisticsLN.InSyn.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="NonProcessInterfaceLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::NonProcessInterfaceLN.cl.title"
                       base="StatisticsLN">
            <DataObject name="EEName"
                     type="DPL"
                     descID="IEC61850_7_4.AbstractLNsCommon::NonProcessInterfaceLN.EEName.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EEHealth"
                     type="ENS"
                     underlyingType="HealthKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::NonProcessInterfaceLN.EEHealth.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmh"
                     type="INS"
                     descID="IEC61850_7_4.AbstractLNsCommon::NonProcessInterfaceLN.OpTmh.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="NonProcessControllingEquipmentInterfaceLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::NonProcessControllingEquipmentInterfaceLN.cl.title"
                       base="NonProcessInterfaceLN">
            <DataObject name="Loc"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::NonProcessControllingEquipmentInterfaceLN.Loc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LocKey"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::NonProcessControllingEquipmentInterfaceLN.LocKey.desc"
                     presCond="OF"
                     presCondArgs="Loc"
                     dsPresCond="F"/>
            <DataObject name="LocSta"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::NonProcessControllingEquipmentInterfaceLN.LocSta.desc"
                     presCond="OF"
                     presCondArgs="Loc"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="FunctionLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::FunctionLN.cl.title"
                       base="StatisticsLN">
            <DataObject name="Blk"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::FunctionLN.Blk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkRef"
                     type="ORG"
                     descID="IEC61850_7_4.AbstractLNsCommon::FunctionLN.BlkRef.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="EquipmentInterfaceLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::EquipmentInterfaceLN.cl.title"
                       base="FunctionLN">
            <DataObject name="EEName"
                     type="DPL"
                     descID="IEC61850_7_4.AbstractLNsCommon::EquipmentInterfaceLN.EEName.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EEHealth"
                     type="ENS"
                     underlyingType="HealthKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::EquipmentInterfaceLN.EEHealth.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmh"
                     type="INS"
                     descID="IEC61850_7_4.AbstractLNsCommon::EquipmentInterfaceLN.OpTmh.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="CmdEquipmentInterfaceLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::CmdEquipmentInterfaceLN.cl.title"
                       base="EquipmentInterfaceLN">
            <DataObject name="CmdBlk"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::CmdEquipmentInterfaceLN.CmdBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ControllingLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::ControllingLN.cl.title"
                       base="FunctionLN">
            <DataObject name="Loc"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControllingLN.Loc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LocKey"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControllingLN.LocKey.desc"
                     presCond="OF"
                     presCondArgs="Loc"
                     dsPresCond="F"/>
            <DataObject name="LocSta"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControllingLN.LocSta.desc"
                     presCond="OF"
                     presCondArgs="Loc"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ControlledLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::ControlledLN.cl.title"
                       base="ControllingLN">
            <DataObject name="CmdBlk"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControlledLN.CmdBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControlledLN.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="ControlEquipmentInterfaceLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::ControlEquipmentInterfaceLN.cl.title"
                       base="ControlledLN">
            <DataObject name="EEName"
                     type="DPL"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControlEquipmentInterfaceLN.EEName.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EEHealth"
                     type="ENS"
                     underlyingType="HealthKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControlEquipmentInterfaceLN.EEHealth.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmh"
                     type="INS"
                     descID="IEC61850_7_4.AbstractLNsCommon::ControlEquipmentInterfaceLN.OpTmh.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="AutomaticControlLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::AutomaticControlLN.cl.title"
                       base="ControlledLN">
            <DataObject name="Auto"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::AutomaticControlLN.Auto.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="SynchronisationLN"
                       titleID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.cl.title"
                       base="ControlledLN">
            <DataObject name="Rel"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.Rel.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="VInd"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.VInd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AngInd"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.AngInd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzInd"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.HzInd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifVClc"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifVClc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DifHzClc"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifHzClc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DifAngClc"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifAngClc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="V1Clc"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.V1Clc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="V2Clc"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.V2Clc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Hz1Clc"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.Hz1Clc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Hz2Clc"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.Hz2Clc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SynPrg"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.SynPrg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LivLivBlk"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.LivLivBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VAdpFact"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.VAdpFact.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AdpAngDeg"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.AdpAngDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifVNg"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifVNg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifVPs"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifVPs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifHzNg"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifHzNg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifHzPs"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifHzPs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifAngNg"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifAngNg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifAngPs"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DifAngPs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinVSyn"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.MinVSyn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxVSyn"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.MaxVSyn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DetSyn"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DetSyn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LivDeaMod"
                     type="ENG"
                     underlyingType="LiveDeadModeKind"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.LivDeaMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DeaLinVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DeaLinVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LivLinVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.LivLinVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DeaBusVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.DeaBusVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LivBusVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.LivBusVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TotTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsCommon::SynchronisationLN.TotTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="SubscriptionSupervisionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupL::SubscriptionSupervisionLN.cl.title"
                       base="DomainLN">
            <DataObject name="NdsCom"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupL::SubscriptionSupervisionLN.NdsCom.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="St"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupL::SubscriptionSupervisionLN.St.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="SimSt"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupL::SubscriptionSupervisionLN.SimSt.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="ConfRevNum"
                     type="INS"
                     descID="IEC61850_7_4.AbstractLNsGroupL::SubscriptionSupervisionLN.ConfRevNum.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="RxConfRevNum"
                     type="INS"
                     descID="IEC61850_7_4.AbstractLNsGroupL::SubscriptionSupervisionLN.RxConfRevNum.desc"
                     presCond="O"
                     dsPresCond="na"/>
         </AbstractLNClass>
         <AbstractLNClass name="FunctionOutputLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupF::FunctionOutputLN.cl.title"
                       base="FunctionLN">
            <DataObject name="Out"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupF::FunctionOutputLN.Out.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="ThresholdLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupF::ThresholdLN.cl.title"
                       base="FunctionLN">
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupF::ThresholdLN.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupF::ThresholdLN.StrVal.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupF::ThresholdLN.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrCrv"
                     type="CSG"
                     descID="IEC61850_7_4.AbstractLNsGroupF::ThresholdLN.StrCrv.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupF::ThresholdLN.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="EnergyLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.cl.title"
                       base="FunctionLN">
            <DataObject name="TotVAh"
                     type="BCR"
                     descID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.TotVAh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TotWh"
                     type="BCR"
                     descID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.TotWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TotVArh"
                     type="BCR"
                     descID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.TotVArh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SupWh"
                     type="BCR"
                     descID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.SupWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SupVArh"
                     type="BCR"
                     descID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.SupVArh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DmdWh"
                     type="BCR"
                     descID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.DmdWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DmdVArh"
                     type="BCR"
                     descID="IEC61850_7_4.AbstractLNsGroupM::EnergyLN.DmdVArh.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="HarmonicsLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.cl.title"
                       base="FunctionLN">
            <DataObject name="Hz"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.Hz.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="HzSet"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.HzSet.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="F"/>
            <DataObject name="EvTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.EvTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NumCyc"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.NumCyc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ThdAVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.ThdAVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ThdVVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.ThdVVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ThdATmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.ThdATmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ThdVTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.ThdVTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NomA"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupM::HarmonicsLN.NomA.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::ProtectionLN.cl.title"
                       base="FunctionLN">
            <DataObject name="FltPhV"
                     type="WYE"
                     descID="IEC61850_7_4.AbstractLNsGroupP::ProtectionLN.FltPhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FltA"
                     type="WYE"
                     descID="IEC61850_7_4.AbstractLNsGroupP::ProtectionLN.FltA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.AbstractLNsGroupP::ProtectionLN.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FltValTyp"
                     type="ENG"
                     underlyingType="FaultMeasuredValueTypeKind"
                     descID="IEC61850_7_4.AbstractLNsGroupP::ProtectionLN.FltValTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="CurrentProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="TmASt"
                     type="CSD"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.TmASt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="TmACrv"
                     type="CURVE"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.TmACrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmAChr"
                     type="CSG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.TmAChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
            <DataObject name="TmMult"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.TmMult.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.MinOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.MaxOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TypRsCrv"
                     type="ENG"
                     underlyingType="ResetCurveKind"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.TypRsCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::CurrentProtectionLN.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="EarthfaultProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::EarthfaultProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="FltIndRs"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsGroupP::EarthfaultProtectionLN.FltIndRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndStr"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::EarthfaultProtectionLN.GndStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DirMod"
                     type="ENG"
                     underlyingType="DirectionModeKind"
                     descID="IEC61850_7_4.AbstractLNsGroupP::EarthfaultProtectionLN.DirMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="FrequencyProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BlkV"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.BlkV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.BlkVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::FrequencyProtectionLN.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="GeneratorProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::GeneratorProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.AbstractLNsGroupP::GeneratorProtectionLN.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupP::GeneratorProtectionLN.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::GeneratorProtectionLN.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="MotorStartupProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::MotorStartupProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupP::MotorStartupProtectionLN.Op.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SetA"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::MotorStartupProtectionLN.SetA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SetTms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::MotorStartupProtectionLN.SetTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="PowerProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::PowerProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerProtectionLN.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerProtectionLN.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="DirMod"
                     type="ENG"
                     underlyingType="DirectionModeKind"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerProtectionLN.DirMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerProtectionLN.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerProtectionLN.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerProtectionLN.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="PowerFactorProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BlkA"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.BlkA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkV"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.BlkV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkValA"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.BlkValA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkValV"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::PowerFactorProtectionLN.BlkValV.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="VoltageProtectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.cl.title"
                       base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmMult"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.TmMult.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.MinOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.MaxOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupP::VoltageProtectionLN.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="PowerQualityLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupQ::PowerQualityLN.cl.title"
                       base="FunctionLN">
            <DataObject name="VaStr"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupQ::PowerQualityLN.VaStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VaEnd"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.AbstractLNsGroupQ::PowerQualityLN.VaEnd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EvtCnt"
                     type="HST"
                     descID="IEC61850_7_4.AbstractLNsGroupQ::PowerQualityLN.EvtCnt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.AbstractLNsGroupQ::PowerQualityLN.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="UnbalanceDetectionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupQ::UnbalanceDetectionLN.cl.title"
                       base="PowerQualityLN">
            <DataObject name="UnbDetMth"
                     type="ENG"
                     underlyingType="UnbalanceDetectionKind"
                     descID="IEC61850_7_4.AbstractLNsGroupQ::UnbalanceDetectionLN.UnbDetMth.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupQ::UnbalanceDetectionLN.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="RecorderLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupR::RecorderLN.cl.title"
                       base="FunctionLN">
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.AbstractLNsGroupR::RecorderLN.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TrgMod"
                     type="ENG"
                     underlyingType="TriggerSourceKind"
                     descID="IEC61850_7_4.AbstractLNsGroupR::RecorderLN.TrgMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LevMod"
                     type="ENG"
                     underlyingType="LevelTriggerModeKind"
                     descID="IEC61850_7_4.AbstractLNsGroupR::RecorderLN.LevMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PreTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupR::RecorderLN.PreTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PstTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupR::RecorderLN.PstTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="DRChannelLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupR::DRChannelLN.cl.title"
                       base="RecorderLN">
            <DataObject name="ChTrg"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupR::DRChannelLN.ChTrg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChNum"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupR::DRChannelLN.ChNum.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="SrcRef"
                     type="ORG"
                     descID="IEC61850_7_4.AbstractLNsGroupR::DRChannelLN.SrcRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="SupervisionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupS::SupervisionLN.cl.title"
                       base="FunctionLN">
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SupervisionLN.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="LineSupervisionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.cl.title"
                       base="SupervisionLN">
            <DataObject name="InsAlm"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.InsAlm.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InsBlk"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.InsBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InsTr"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.InsTr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InsLevMax"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.InsLevMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InsLevMin"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.InsLevMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Pres"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.Pres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Tmp"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::LineSupervisionLN.Tmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="SwitchgearSupervisionLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.cl.title"
                       base="SupervisionLN">
            <DataObject name="OpCntAlm"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpCntAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpCntWrn"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpCntWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmAlm"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmWrn"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MechHealth"
                     type="ENS"
                     underlyingType="HealthKind"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.MechHealth.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmOpnAlm"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmOpnAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmClsAlm"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmClsAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AccmAbr"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.AccmAbr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AuxSwTmOpn"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.AuxSwTmOpn.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AuxSwTmCls"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.AuxSwTmCls.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RctTmOpn"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.RctTmOpn.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RctTmCls"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.RctTmCls.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpSpdOpn"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpSpdOpn.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpSpdCls"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpSpdCls.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpTmOpn"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmOpn.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpTmCls"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmCls.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Stk"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.Stk.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OvStkOpn"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OvStkOpn.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OvStkCls"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OvStkCls.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ColA"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.ColA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Tmp"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.Tmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpAlmTmh"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpAlmTmh.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpWrnTmh"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpWrnTmh.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpAlmNum"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpAlmNum.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpWrnNum"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpWrnNum.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmOpnSet"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmOpnSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpTmClsSet"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupS::SwitchgearSupervisionLN.OpTmClsSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="InstrumentTransformerLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.cl.title"
                       base="SensorLN">
            <DataObject name="HzRtg"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.HzRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Rat"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.Rat.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Cor"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.Cor.desc"
                     presCond="MFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN__(_MFcond(3)_=__((_Cor,_AngCor_))__)_.cond.AbstractLNsGroupT::InstrumentTransformerLN.Cor"
                     dsPresCond="F"/>
            <DataObject name="AngCor"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.AngCor.desc"
                     presCond="MFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN__(_MFcond(3)_=__((_Cor,_AngCor_))__)_.cond.AbstractLNsGroupT::InstrumentTransformerLN.AngCor"
                     dsPresCond="F"/>
            <DataObject name="CorCrv"
                     type="CSG"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.CorCrv.desc"
                     presCond="MFcond"
                     presCondArgs="4"
                     presCondArgsID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN__(_MFcond(4)_=__((_CorCrv_))__)_.cond.AbstractLNsGroupT::InstrumentTransformerLN.CorCrv"
                     dsPresCond="F"/>
            <DataObject name="Clip"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.Clip.desc"
                     presCond="MOcond"
                     presCondArgs="5"
                     presCondArgsID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN__(_MOcond(5)_=__((_Clip_))__)_.cond.AbstractLNsGroupT::InstrumentTransformerLN.Clip"
                     dsPresCond="F"/>
            <DataObject name="AccMeas"
                     type="ENG"
                     underlyingType="InstrumentTransformerMeasurementRatingKind"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.AccMeas.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AccPro"
                     type="ENG"
                     underlyingType="InstrumentTransformerProtectionRatingKind"
                     descID="IEC61850_7_4.AbstractLNsGroupT::InstrumentTransformerLN.AccPro.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="SensorLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupT::SensorLN.cl.title"
                       base="EquipmentInterfaceLN">
            <DataObject name="SmpRte"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupT::SensorLN.SmpRte.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HoldTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupT::SensorLN.HoldTmms.desc"
                     presCond="MOcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.AbstractLNsGroupT::SensorLN__(_MOcond(2)_=__((_HoldTmms_))__)_.cond.AbstractLNsGroupT::SensorLN.HoldTmms"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="SwitchingEquipmentLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.cl.title"
                       base="EquipmentInterfaceLN">
            <DataObject name="Loc"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.Loc.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="LocKey"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.LocKey.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpCnt"
                     type="INS"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.OpCnt.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="Dsc"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.Dsc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LocSta"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.LocSta.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Pos"
                     type="DPC"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.Pos.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BlkOpn"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.BlkOpn.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BlkCls"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.BlkCls.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ChaMotEna"
                     type="SPC"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.ChaMotEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DscDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.AbstractLNsGroupX::SwitchingEquipmentLN.DscDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="BaseConverterLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupZ::BaseConverterLN.cl.title"
                       base="EquipmentInterfaceLN">
            <DataObject name="VArRtg"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BaseConverterLN.VArRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BaseConverterLN.VRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="BatteryLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.cl.title"
                       base="EquipmentInterfaceLN">
            <DataObject name="BatHi"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.BatHi.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BatLo"
                     type="SPS"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.BatLo.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VolChgRte"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.VolChgRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Vol"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.Vol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Amp"
                     type="MV"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.Amp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HiBatVol"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.HiBatVol.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LoBatVol"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::BatteryLN.LoBatVol.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ConductorLN"
                       titleID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.cl.title"
                       base="EquipmentInterfaceLN">
            <DataObject name="LinLenkm"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.LinLenkm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RPs"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.RPs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="XPs"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.XPs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ZPsMag"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.ZPsMag.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ZPsAng"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.ZPsAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RZer"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.RZer.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="XZer"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.XZer.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ZZerMag"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.ZZerMag.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ZZerAng"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.ZZerAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RmZer"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.RmZer.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="XmZer"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.XmZer.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ZmZerMag"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.ZmZerMag.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ZmZerAng"
                     type="ASG"
                     descID="IEC61850_7_4.AbstractLNsGroupZ::ConductorLN.ZmZerAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <LNClass name="LPHD" titleID="IEC61850_7_4.LNGroupL::LPHD.cl.title">
            <DataObject name="NamPlt"
                     type="LPL"
                     descID="IEC61850_7_4.LNGroupL::LPHD.NamPlt.desc"
                     presCond="MONamPlt"
                     presCondArgsID="IEC61850_7_4.LNGroupL::LPHD__(_MONamPlt_=__((_NamPlt_))__)_.cond.LNGroupL::LPHD.NamPlt"
                     dsPresCond="na"/>
            <DataObject name="PhyNam"
                     type="DPL"
                     descID="IEC61850_7_4.LNGroupL::LPHD.PhyNam.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="PhyHealth"
                     type="ENS"
                     underlyingType="HealthKind"
                     descID="IEC61850_7_4.LNGroupL::LPHD.PhyHealth.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="OutOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.OutOv.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="Proxy"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.Proxy.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="InOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.InOv.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="OpTmh"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.OpTmh.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="NumPwrUp"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.NumPwrUp.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="WrmStr"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.WrmStr.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="WacTrg"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.WacTrg.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="PwrUp"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupL::LPHD.PwrUp.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="PwrDn"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupL::LPHD.PwrDn.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="PwrSupAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LPHD.PwrSupAlm.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="RsStat"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupL::LPHD.RsStat.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="Sim"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupL::LPHD.Sim.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="MaxDl"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupL::LPHD.MaxDl.desc"
                     presCond="MOcond"
                     presCondArgs="1"
                     presCondArgsID="IEC61850_7_4.LNGroupL::LPHD__(_MOcond(1)_=__((_MaxDl_))__)_.cond.LNGroupL::LPHD.MaxDl"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="LLN0"
               titleID="IEC61850_7_4.LNGroupL::LLN0.cl.title"
               canHaveLOG="true">
            <DataObject name="NamPlt"
                     type="LPL"
                     descID="IEC61850_7_4.LNGroupL::LLN0.NamPlt.desc"
                     presCond="MOrootLD"
                     dsPresCond="na"/>
            <DataObject name="Beh"
                     type="ENS"
                     underlyingType="BehaviourModeKind"
                     descID="IEC61850_7_4.LNGroupL::LLN0.Beh.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="Health"
                     type="ENS"
                     underlyingType="HealthKind"
                     descID="IEC61850_7_4.LNGroupL::LLN0.Health.desc"
                     presCond="MOrootLD"
                     dsPresCond="na"/>
            <DataObject name="LocKey"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LLN0.LocKey.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="Loc"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LLN0.Loc.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="Mod"
                     type="ENC"
                     underlyingType="BehaviourModeKind"
                     descID="IEC61850_7_4.LNGroupL::LLN0.Mod.desc"
                     presCond="MOrootLD"
                     dsPresCond="na"/>
            <DataObject name="LocSta"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupL::LLN0.LocSta.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="Diag"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupL::LLN0.Diag.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="LEDRs"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupL::LLN0.LEDRs.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="SwModKey"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupL::LLN0.SwModKey.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="InRef"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupL::LLN0.InRef.desc"
                     presCond="Omulti"
                     dsPresCond="na"/>
            <DataObject name="GrRef"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupL::LLN0.GrRef.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="MltLev"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupL::LLN0.MltLev.desc"
                     presCond="O"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="LCCH"
               titleID="IEC61850_7_4.LNGroupL::LCCH.cl.title"
               base="DomainLN">
            <DataObject name="ChLiv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LCCH.ChLiv.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="RedChLiv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LCCH.RedChLiv.desc"
                     presCond="MFcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupL::LCCH__(_MFcond(2)_=__((_RedChLiv_))__)_.cond.LNGroupL::LCCH.RedChLiv"
                     dsPresCond="na"/>
            <DataObject name="OutOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LCCH.OutOv.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="InOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LCCH.InOv.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="FerCh"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LCCH.FerCh.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="RedFerCh"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LCCH.RedFerCh.desc"
                     presCond="OF"
                     presCondArgs="RedChLiv"
                     dsPresCond="na"/>
            <DataObject name="RxCnt"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupL::LCCH.RxCnt.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="RedRxCnt"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupL::LCCH.RedRxCnt.desc"
                     presCond="OF"
                     presCondArgs="RedChLiv"
                     dsPresCond="na"/>
            <DataObject name="TxCnt"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupL::LCCH.TxCnt.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="ApNam"
                     type="VSG"
                     descID="IEC61850_7_4.LNGroupL::LCCH.ApNam.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="ChLivTms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupL::LCCH.ChLivTms.desc"
                     presCond="O"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="LGOS"
               titleID="IEC61850_7_4.LNGroupL::LGOS.cl.title"
               base="SubscriptionSupervisionLN">
            <DataObject name="LastStNum"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LGOS.LastStNum.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="GoCBRef"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupL::LGOS.GoCBRef.desc"
                     presCond="M"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="LSVS"
               titleID="IEC61850_7_4.LNGroupL::LSVS.cl.title"
               base="SubscriptionSupervisionLN">
            <DataObject name="SvCBRef"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupL::LSVS.SvCBRef.desc"
                     presCond="M"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="LTIM"
               titleID="IEC61850_7_4.LNGroupL::LTIM.cl.title"
               base="DomainLN">
            <DataObject name="TmDT"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LTIM.TmDT.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="Leap"
                     type="ENS"
                     underlyingType="LeapSecondKind"
                     descID="IEC61850_7_4.LNGroupL::LTIM.Leap.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="TmOfsTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupL::LTIM.TmOfsTmm.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="TmUseDT"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupL::LTIM.TmUseDT.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="TmChgDT"
                     type="TSG"
                     descID="IEC61850_7_4.LNGroupL::LTIM.TmChgDT.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="TmChgST"
                     type="TSG"
                     descID="IEC61850_7_4.LNGroupL::LTIM.TmChgST.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="StrWeekDay"
                     type="ENG"
                     underlyingType="StrWeekDayKind"
                     descID="IEC61850_7_4.LNGroupL::LTIM.StrWeekDay.desc"
                     presCond="O"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="LTMS"
               titleID="IEC61850_7_4.LNGroupL::LTMS.cl.title"
               base="DomainLN">
            <DataObject name="TmAcc"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupL::LTMS.TmAcc.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="TmSrc"
                     type="VSS"
                     descID="IEC61850_7_4.LNGroupL::LTMS.TmSrc.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="TmSrcTyp"
                     type="ENS"
                     underlyingType="ClockSourceKind"
                     descID="IEC61850_7_4.LNGroupL::LTMS.TmSrcTyp.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="TmSyn"
                     type="ENS"
                     underlyingType="ClockSyncKind"
                     descID="IEC61850_7_4.LNGroupL::LTMS.TmSyn.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="TmChSt"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupL::LTMS.TmChSt.desc"
                     presCond="Omulti"
                     dsPresCond="na"/>
            <DataObject name="TmSynLkd"
                     type="ENS"
                     underlyingType="ClockSyncLockingKind"
                     descID="IEC61850_7_4.LNGroupL::LTMS.TmSynLkd.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="TmSrcSet"
                     type="VSG"
                     descID="IEC61850_7_4.LNGroupL::LTMS.TmSrcSet.desc"
                     presCond="Omulti"
                     dsPresCond="na"/>
            <DataObject name="HoldTms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupL::LTMS.HoldTms.desc"
                     presCond="O"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="LTRK"
               titleID="IEC61850_7_4.LNGroupL::LTRK.cl.title"
               base="DomainLN">
            <DataObject name="SpcTrk"
                     type="CTS"
                     underlyingTypeKind="BASIC"
                     underlyingType="BOOLEAN"
                     descID="IEC61850_7_4.LNGroupL::LTRK.SpcTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="DpcTrk"
                     type="CTS"
                     underlyingTypeKind="BASIC"
                     underlyingType="BOOLEAN"
                     descID="IEC61850_7_4.LNGroupL::LTRK.DpcTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="IncTrk"
                     type="CTS"
                     underlyingTypeKind="BASIC"
                     underlyingType="INT32"
                     descID="IEC61850_7_4.LNGroupL::LTRK.IncTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="EncTrk"
                     type="CTS"
                     underlyingTypeKind="ENUMERATED"
                     descID="IEC61850_7_4.LNGroupL::LTRK.EncTrk.desc"
                     presCond="Omulti"
                     dsPresCond="na"/>
            <DataObject name="ApcFTrk"
                     type="CTS"
                     underlyingTypeKind="CONSTRUCTED"
                     underlyingType="AnalogueValueCtlF"
                     descID="IEC61850_7_4.LNGroupL::LTRK.ApcFTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="ApcIntTrk"
                     type="CTS"
                     underlyingTypeKind="CONSTRUCTED"
                     underlyingType="AnalogueValueCtlInt"
                     descID="IEC61850_7_4.LNGroupL::LTRK.ApcIntTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="BscTrk"
                     type="CTS"
                     underlyingTypeKind="BASIC"
                     underlyingType="Tcmd"
                     descID="IEC61850_7_4.LNGroupL::LTRK.BscTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="IscTrk"
                     type="CTS"
                     underlyingTypeKind="BASIC"
                     underlyingType="INT8"
                     descID="IEC61850_7_4.LNGroupL::LTRK.IscTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="BacTrk"
                     type="CTS"
                     underlyingTypeKind="BASIC"
                     underlyingType="Tcmd"
                     descID="IEC61850_7_4.LNGroupL::LTRK.BacTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="GenTrk"
                     type="CST"
                     descID="IEC61850_7_4.LNGroupL::LTRK.GenTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="UrcbTrk"
                     type="UTS"
                     descID="IEC61850_7_4.LNGroupL::LTRK.UrcbTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="BrcbTrk"
                     type="BTS"
                     descID="IEC61850_7_4.LNGroupL::LTRK.BrcbTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="LocbTrk"
                     type="LTS"
                     descID="IEC61850_7_4.LNGroupL::LTRK.LocbTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="GocbTrk"
                     type="GTS"
                     descID="IEC61850_7_4.LNGroupL::LTRK.GocbTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="MsvcbTrk"
                     type="MTS"
                     descID="IEC61850_7_4.LNGroupL::LTRK.MsvcbTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="UsvcbTrk"
                     type="NTS"
                     descID="IEC61850_7_4.LNGroupL::LTRK.UsvcbTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="SgcbTrk"
                     type="STS"
                     descID="IEC61850_7_4.LNGroupL::LTRK.SgcbTrk.desc"
                     presCond="O"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="ANCR"
               titleID="IEC61850_7_4.LNGroupA::ANCR.cl.title"
               base="AutomaticControlLN">
            <DataObject name="HiColPos"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.HiColPos.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LoColPos"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.LoColPos.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ColChgOp"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ColChgOp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StFixCol"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.StFixCol.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StClcTun"
                     type="ENS"
                     underlyingType="TuningKind"
                     descID="IEC61850_7_4.LNGroupA::ANCR.StClcTun.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PotAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.PotAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.MotAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotWrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.MotWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ClcSeqWrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ClcSeqWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ColPosA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ColPosA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AResoPt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.AResoPt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AWatt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.AWatt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ADetun"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ADetun.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Damp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.Damp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CapacImb"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.CapacImb.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VolResoPt"
                     type="CMV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.VolResoPt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="NeutVol"
                     type="CMV"
                     descID="IEC61850_7_4.LNGroupA::ANCR.NeutVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TapChg"
                     type="BSC"
                     descID="IEC61850_7_4.LNGroupA::ANCR.TapChg.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ColTapPos"
                     type="ISC"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ColTapPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ColPos"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ColPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ColChg"
                     type="BAC"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ColChg.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="StrClc"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupA::ANCR.StrClc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ParOp"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ParOp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FixCol"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ANCR.FixCol.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ParColMod"
                     type="ENG"
                     underlyingType="ParallelCoilModeKind"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ParColMod.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ParMod"
                     type="ENG"
                     underlyingType="ParallelCtrlModeKind"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ParMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ADetunSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ANCR.ADetunSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BndWid"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ANCR.BndWid.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ARCO"
               titleID="IEC61850_7_4.LNGroupA::ARCO.cl.title"
               base="AutomaticControlLN">
            <DataObject name="VOvSt"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ARCO.VOvSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NeutAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ARCO.NeutAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschBlk"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ARCO.DschBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapChg"
                     type="BSC"
                     descID="IEC61850_7_4.LNGroupA::ARCO.TapChg.desc"
                     presCond="M"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="ARIS"
               titleID="IEC61850_7_4.LNGroupA::ARIS.cl.title"
               base="AutomaticControlLN">
            <DataObject name="ZBlk"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ARIS.ZBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmpAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ARIS.TmpAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NeutVol"
                     type="CMV"
                     descID="IEC61850_7_4.LNGroupA::ARIS.NeutVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RisTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ARIS.RisTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RisTmpClc"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ARIS.RisTmpClc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StrSeq"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupA::ARIS.StrSeq.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ATCC"
               titleID="IEC61850_7_4.LNGroupA::ATCC.cl.title"
               base="AutomaticControlLN">
            <DataObject name="HiTapPos"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.HiTapPos.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LoTapPos"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LoTapPos.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TapOpR"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapOpR.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapOpL"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapOpL.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapOpStop"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapOpStop.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapOpErr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapOpErr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LTCBlkVLo"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LTCBlkVLo.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LTCBlkVHi"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LTCBlkVHi.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LTCBlkAHi"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LTCBlkAHi.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EndPosR"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.EndPosR.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EndPosL"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.EndPosL.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ErrPar"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::ATCC.ErrPar.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtlV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ATCC.CtlV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LodA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LodA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CircA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ATCC.CircA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhAng"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ATCC.PhAng.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HiCtlV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ATCC.HiCtlV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LoCtlV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LoCtlV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HiDmdA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupA::ATCC.HiDmdA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TapChg"
                     type="BSC"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapChg.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="TapPos"
                     type="ISC"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="VolSpt"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupA::ATCC.VolSpt.desc"
                     presCond="AtLeastOne"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="BndCtrChg"
                     type="BAC"
                     descID="IEC61850_7_4.LNGroupA::ATCC.BndCtrChg.desc"
                     presCond="AtLeastOne"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="ParOp"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupA::ATCC.ParOp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LTCBlk"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LTCBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LTCDragRs"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LTCDragRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRed"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupA::ATCC.VRed.desc"
                     deprecated="true"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="BndCtr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.BndCtr.desc"
                     presCond="AtLeastOne"
                     presCondArgs="2"
                     dsPresCond="F"/>
            <DataObject name="BndWid"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.BndWid.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtlDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupA::ATCC.CtlDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LDCR"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LDCR.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LDCX"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LDCX.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkLV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.BlkLV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkRV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.BlkRV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkVLo"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.BlkVLo.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkVHi"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.BlkVHi.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RnbkRV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.RnbkRV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LimLodA"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LimLodA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LDC"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LDC.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ParTrfMod"
                     type="ENG"
                     underlyingType="ParallelTransfModeKind"
                     descID="IEC61850_7_4.LNGroupA::ATCC.ParTrfMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmDlChr"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TmDlChr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LDCZ"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.LDCZ.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRedVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::ATCC.VRedVal.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapBlkR"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapBlkR.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapBlkL"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupA::ATCC.TapBlkL.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="AVCO"
               titleID="IEC61850_7_4.LNGroupA::AVCO.cl.title"
               base="AutomaticControlLN">
            <DataObject name="BlkEF"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::AVCO.BlkEF.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkAOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::AVCO.BlkAOv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkVOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupA::AVCO.BlkVOv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapChg"
                     type="BSC"
                     descID="IEC61850_7_4.LNGroupA::AVCO.TapChg.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VolSpt"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupA::AVCO.VolSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LimAOv"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::AVCO.LimAOv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LimVOv"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupA::AVCO.LimVOv.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="CALH"
               titleID="IEC61850_7_4.LNGroupC::CALH.cl.title"
               base="FunctionLN">
            <DataObject name="GrAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CALH.GrAlm.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="GrWrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CALH.GrWrn.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="GrInd"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CALH.GrInd.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="AlmLstOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CALH.AlmLstOv.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="CCGR"
               titleID="IEC61850_7_4.LNGroupC::CCGR.cl.title"
               base="AutomaticControlLN">
            <DataObject name="OpTmh"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupC::CCGR.OpTmh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FanOvCur"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CCGR.FanOvCur.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PmpOvCur"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CCGR.PmpOvCur.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PmpAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CCGR.PmpAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EnvTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.EnvTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OilTmpIn"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.OilTmpIn.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="OilTmpOut"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.OilTmpOut.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="OilMotA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.OilMotA.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ClTmpIn"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.ClTmpIn.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="ClTmpOut"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.ClTmpOut.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="ClMotA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.ClMotA.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="FanFlw"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.FanFlw.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CETmpIn"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.CETmpIn.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CETmpOut"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.CETmpOut.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CEPres"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.CEPres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CEFlw"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.CEFlw.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FanA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CCGR.FanA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CEBlk"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupC::CCGR.CEBlk.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CECtl"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupC::CCGR.CECtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PmpCtlGen"
                     type="ENC"
                     underlyingType="StageControlKind"
                     descID="IEC61850_7_4.LNGroupC::CCGR.PmpCtlGen.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PmpCtl"
                     type="ENC"
                     underlyingType="StageControlKind"
                     descID="IEC61850_7_4.LNGroupC::CCGR.PmpCtl.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="FanCtlGen"
                     type="ENC"
                     underlyingType="StageControlKind"
                     descID="IEC61850_7_4.LNGroupC::CCGR.FanCtlGen.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FanCtl"
                     type="ENC"
                     underlyingType="StageControlKind"
                     descID="IEC61850_7_4.LNGroupC::CCGR.FanCtl.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="OilTmpSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupC::CCGR.OilTmpSet.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="ClTmpSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupC::CCGR.ClTmpSet.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="CILO"
               titleID="IEC61850_7_4.LNGroupC::CILO.cl.title"
               base="FunctionLN">
            <DataObject name="EnaOpn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CILO.EnaOpn.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="EnaCls"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CILO.EnaCls.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="CPOW"
               titleID="IEC61850_7_4.LNGroupC::CPOW.cl.title"
               base="FunctionLN">
            <DataObject name="TmExc"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CPOW.TmExc.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrPOW"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CPOW.StrPOW.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpOpn"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupC::CPOW.OpOpn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpCls"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupC::CPOW.OpCls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Pos"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CPOW.Pos.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosA"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CPOW.PosA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosB"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CPOW.PosB.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosC"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CPOW.PosC.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CPOW.MaxDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="CSWI"
               titleID="IEC61850_7_4.LNGroupC::CSWI.cl.title"
               base="ControlledLN">
            <DataObject name="OpOpn"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupC::CSWI.OpOpn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SelOpn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CSWI.SelOpn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpCls"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupC::CSWI.OpCls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SelCls"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CSWI.SelCls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Pos"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CSWI.Pos.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="PosA"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CSWI.PosA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosB"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CSWI.PosB.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosC"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupC::CSWI.PosC.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwModKey"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupC::CSWI.SwModKey.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DscDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSWI.DscDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="CSYN"
               titleID="IEC61850_7_4.LNGroupC::CSYN.cl.title"
               base="SynchronisationLN">
            <DataObject name="Cmd"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CSYN.Cmd.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="RV"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CSYN.RV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LV"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CSYN.LV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RHz"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CSYN.RHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LHz"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupC::CSYN.LHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RotDir"
                     type="ENS"
                     underlyingType="RotationalDirectionKind"
                     descID="IEC61850_7_4.LNGroupC::CSYN.RotDir.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AccClc"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CSYN.AccClc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AccClcDev"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupC::CSYN.AccClcDev.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RelDeaBus"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupC::CSYN.RelDeaBus.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpModSyn"
                     type="ENC"
                     underlyingType="SynchOperationModeKind"
                     descID="IEC61850_7_4.LNGroupC::CSYN.OpModSyn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VNom"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.VNom.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzNom"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.HzNom.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.DlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MltCmd"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.MltCmd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VAdj"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.VAdj.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VChr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.VChr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VIntvTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.VIntvTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinVTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.MinVTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxVTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.MaxVTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzAdj"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.HzAdj.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzChr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.HzChr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzIntvTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.HzIntvTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinHzTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.MinHzTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxHzTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.MaxHzTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzTgtVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.HzTgtVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="KckPls"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupC::CSYN.KckPls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DlSynTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupC::CSYN.DlSynTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="FCNT"
               titleID="IEC61850_7_4.LNGroupF::FCNT.cl.title"
               base="FunctionLN">
            <DataObject name="Up"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FCNT.Up.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Dn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FCNT.Dn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CntVal"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupF::FCNT.CntVal.desc"
                     presCond="M"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="FCSD"
               titleID="IEC61850_7_4.LNGroupF::FCSD.cl.title"
               base="FunctionOutputLN">
            <DataObject name="Crv"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupF::FCSD.Crv.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="FFIL"
               titleID="IEC61850_7_4.LNGroupF::FFIL.cl.title"
               base="FunctionOutputLN">
            <DataObject name="ErrTerm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FFIL.ErrTerm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FilTyp"
                     type="ENG"
                     underlyingType="FilterFunctionKind"
                     descID="IEC61850_7_4.LNGroupF::FFIL.FilTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="KP"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FFIL.KP.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="KLd"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FFIL.KLd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="KLg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FFIL.KLg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Tm1Tmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FFIL.Tm1Tmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Tm1LdTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FFIL.Tm1LdTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Tm2Tmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FFIL.Tm2Tmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Tm2LdTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FFIL.Tm2LdTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Tm3Tmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FFIL.Tm3Tmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Db"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FFIL.Db.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="FLIM"
               titleID="IEC61850_7_4.LNGroupF::FLIM.cl.title"
               base="FunctionOutputLN">
            <DataObject name="HiLim"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FLIM.HiLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LoLim"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FLIM.LoLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HiLimSpt"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FLIM.HiLimSpt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LoLimSpt"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FLIM.LoLimSpt.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="FPID"
               titleID="IEC61850_7_4.LNGroupF::FPID.cl.title"
               base="FunctionOutputLN">
            <DataObject name="PAct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FPID.PAct.desc"
                     presCond="OFcond"
                     presCondArgs="1"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_OFcond(1)_=__((_PAct_))__)_.cond.LNGroupF::FPID.PAct"
                     dsPresCond="O"/>
            <DataObject name="IAct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FPID.IAct.desc"
                     presCond="OFcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_OFcond(2)_=__((_IAct_))__)_.cond.LNGroupF::FPID.IAct"
                     dsPresCond="O"/>
            <DataObject name="DAct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FPID.DAct.desc"
                     presCond="OFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_OFcond(3)_=__((_DAct_))__)_.cond.LNGroupF::FPID.DAct"
                     dsPresCond="O"/>
            <DataObject name="ErrTerm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FPID.ErrTerm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PIDAlg"
                     type="ENG"
                     underlyingType="PIDAlgorithmKind"
                     descID="IEC61850_7_4.LNGroupF::FPID.PIDAlg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="KP"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FPID.KP.desc"
                     presCond="MFcond"
                     presCondArgs="1"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_MFcond(1)_=__((_KP_))__)_.cond.LNGroupF::FPID.KP"
                     dsPresCond="F"/>
            <DataObject name="KI"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FPID.KI.desc"
                     presCond="MFcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_MFcond(2)_=__((_KI,_ITmms_))__)_.cond.LNGroupF::FPID.KI"
                     dsPresCond="F"/>
            <DataObject name="ITmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FPID.ITmms.desc"
                     presCond="MFcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_MFcond(2)_=__((_KI,_ITmms_))__)_.cond.LNGroupF::FPID.ITmms"
                     dsPresCond="F"/>
            <DataObject name="KD"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FPID.KD.desc"
                     presCond="MFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_MFcond(3)_=__((_KD,_DTmms,_DFilTmms_))__)_.cond.LNGroupF::FPID.KD"
                     dsPresCond="F"/>
            <DataObject name="DTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FPID.DTmms.desc"
                     presCond="MFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_MFcond(3)_=__((_KD,_DTmms,_DFilTmms_))__)_.cond.LNGroupF::FPID.DTmms"
                     dsPresCond="F"/>
            <DataObject name="DFilTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FPID.DFilTmms.desc"
                     presCond="MFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.LNGroupF::FPID__(_MFcond(3)_=__((_KD,_DTmms,_DFilTmms_))__)_.cond.LNGroupF::FPID.DFilTmms"
                     dsPresCond="F"/>
            <DataObject name="Bias"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FPID.Bias.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ILim"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FPID.ILim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Drp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FPID.Drp.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="FRMP"
               titleID="IEC61850_7_4.LNGroupF::FRMP.cl.title"
               base="FunctionOutputLN">
            <DataObject name="AdjSt"
                     type="ENS"
                     underlyingType="AdjustmentKind"
                     descID="IEC61850_7_4.LNGroupF::FRMP.AdjSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ErrTerm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FRMP.ErrTerm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RmpUp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FRMP.RmpUp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RmpDn"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FRMP.RmpDn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StepPs"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FRMP.StepPs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StepNg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FRMP.StepNg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="FSCC"
               titleID="IEC61850_7_4.LNGroupF::FSCC.cl.title"
               base="DomainLN">
            <DataObject name="ActSchdRef"
                     type="ORS"
                     descID="IEC61850_7_4.LNGroupF::FSCC.ActSchdRef.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="ValINS"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupF::FSCC.ValINS.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="ValSPS"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FSCC.ValSPS.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="ValENS"
                     type="ENS"
                     underlyingType="EnumDA"
                     descID="IEC61850_7_4.LNGroupF::FSCC.ValENS.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="ValMV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FSCC.ValMV.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="CtlEnt"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupF::FSCC.CtlEnt.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="Schd"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupF::FSCC.Schd.desc"
                     presCond="Mmulti"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="FSCH"
               titleID="IEC61850_7_4.LNGroupF::FSCH.cl.title"
               base="DomainLN">
            <DataObject name="SchdSt"
                     type="ENS"
                     underlyingType="ScheduleStateKind"
                     descID="IEC61850_7_4.LNGroupF::FSCH.SchdSt.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="SchdEntr"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupF::FSCH.SchdEntr.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="ValINS"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValINS.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="ValSPS"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValSPS.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="ValENS"
                     type="ENS"
                     underlyingType="EnumDA"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValENS.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="ActStrTm"
                     type="TCS"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ActStrTm.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="NxtStrTm"
                     type="TCS"
                     descID="IEC61850_7_4.LNGroupF::FSCH.NxtStrTm.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="SchdEnaErr"
                     type="ENS"
                     underlyingType="ScheduleEnablingErrorKind"
                     descID="IEC61850_7_4.LNGroupF::FSCH.SchdEnaErr.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="ValMV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValMV.desc"
                     presCond="AtMostOne"
                     dsPresCond="na"/>
            <DataObject name="EnaReq"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupF::FSCH.EnaReq.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="DsaReq"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupF::FSCH.DsaReq.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="SchdPrio"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FSCH.SchdPrio.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="NumEntr"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FSCH.NumEntr.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="SchdIntv"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FSCH.SchdIntv.desc"
                     presCond="M"
                     dsPresCond="na"/>
            <DataObject name="ValASG"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValASG.desc"
                     presCond="MmultiF"
                     presCondArgs="ValMV"
                     dsPresCond="na"/>
            <DataObject name="ValING"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValING.desc"
                     presCond="MmultiF"
                     presCondArgs="ValINS"
                     dsPresCond="na"/>
            <DataObject name="ValSPG"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValSPG.desc"
                     presCond="MmultiF"
                     presCondArgs="ValSPS"
                     dsPresCond="na"/>
            <DataObject name="ValENG"
                     type="ENG"
                     underlyingType="EnumDA"
                     descID="IEC61850_7_4.LNGroupF::FSCH.ValENG.desc"
                     presCond="MmultiF"
                     presCondArgs="ValENS"
                     dsPresCond="na"/>
            <DataObject name="StrTm"
                     type="TSG"
                     descID="IEC61850_7_4.LNGroupF::FSCH.StrTm.desc"
                     presCond="Omulti"
                     dsPresCond="na"/>
            <DataObject name="EvtTrg"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupF::FSCH.EvtTrg.desc"
                     presCond="O"
                     dsPresCond="na"/>
            <DataObject name="InSyn"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupF::FSCH.InSyn.desc"
                     presCond="MF"
                     presCondArgs="EvtTrg"
                     dsPresCond="na"/>
            <DataObject name="SchdReuse"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupF::FSCH.SchdReuse.desc"
                     presCond="M"
                     dsPresCond="na"/>
         </LNClass>
         <LNClass name="FSPT"
               titleID="IEC61850_7_4.LNGroupF::FSPT.cl.title"
               base="AutomaticControlLN">
            <DataObject name="SptDvAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptDvAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SptUp"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptUp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SptDn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptDn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SptDir"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptDir.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SptEndSt"
                     type="ENS"
                     underlyingType="SetpointEndKind"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptEndSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AdjSt"
                     type="ENS"
                     underlyingType="AdjustmentKind"
                     descID="IEC61850_7_4.LNGroupF::FSPT.AdjSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Out"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FSPT.Out.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SptMem"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptMem.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ErrTerm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupF::FSPT.ErrTerm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SptChg"
                     type="BAC"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptChg.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SptVal"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupF::FSPT.SptVal.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxRst"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FSPT.MaxRst.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinRst"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FSPT.MinRst.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DvAlm"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupF::FSPT.DvAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="FXOT"
               titleID="IEC61850_7_4.LNGroupF::FXOT.cl.title"
               base="ThresholdLN"/>
         <LNClass name="FXUT"
               titleID="IEC61850_7_4.LNGroupF::FXUT.cl.title"
               base="ThresholdLN"/>
         <LNClass name="GAPC"
               titleID="IEC61850_7_4.LNGroupG::GAPC.cl.title"
               base="AutomaticControlLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupG::GAPC.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupG::GAPC.Op.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupG::GAPC.Alm.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="Wrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupG::GAPC.Wrn.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="Ind"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupG::GAPC.Ind.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="SPCSO"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupG::GAPC.SPCSO.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="DPCSO"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupG::GAPC.DPCSO.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="ISCSO"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupG::GAPC.ISCSO.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupG::GAPC.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="GGIO"
               titleID="IEC61850_7_4.LNGroupG::GGIO.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="IntIn"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupG::GGIO.IntIn.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupG::GGIO.Alm.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="Wrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupG::GGIO.Wrn.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="Ind"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupG::GGIO.Ind.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="CntVal"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupG::GGIO.CntVal.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="AnIn"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupG::GGIO.AnIn.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="AnOut"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupG::GGIO.AnOut.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="SPCSO"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupG::GGIO.SPCSO.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="DPCSO"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupG::GGIO.DPCSO.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="ISCSO"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupG::GGIO.ISCSO.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="GLOG"
               titleID="IEC61850_7_4.LNGroupG::GLOG.cl.title"
               base="FunctionLN">
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupG::GLOG.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LogTrg"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupG::GLOG.LogTrg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LogRef"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupG::GLOG.LogRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrgRef"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupG::GLOG.TrgRef.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="GSAL"
               titleID="IEC61850_7_4.LNGroupG::GSAL.cl.title"
               base="FunctionLN">
            <DataObject name="AuthFail"
                     type="SEC"
                     descID="IEC61850_7_4.LNGroupG::GSAL.AuthFail.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="AcsCtlFail"
                     type="SEC"
                     descID="IEC61850_7_4.LNGroupG::GSAL.AcsCtlFail.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="SvcViol"
                     type="SEC"
                     descID="IEC61850_7_4.LNGroupG::GSAL.SvcViol.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Ina"
                     type="SEC"
                     descID="IEC61850_7_4.LNGroupG::GSAL.Ina.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="NumCntRs"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupG::GSAL.NumCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupG::GSAL.OpCntRs.desc"
                     presCond="M"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="IARC"
               titleID="IEC61850_7_4.LNGroupI::IARC.cl.title"
               base="NonProcessInterfaceLN">
            <DataObject name="MemOv"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupI::IARC.MemOv.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="MemUsed"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupI::IARC.MemUsed.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="NumRcd"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupI::IARC.NumRcd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InTrg"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupI::IARC.InTrg.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="InLog"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupI::IARC.InLog.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="MaxNumRcd"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupI::IARC.MaxNumRcd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RcdMod"
                     type="ENG"
                     underlyingType="RecordingModeKind"
                     descID="IEC61850_7_4.LNGroupI::IARC.RcdMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MemFull"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupI::IARC.MemFull.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="IHMI"
               titleID="IEC61850_7_4.LNGroupI::IHMI.cl.title"
               base="NonProcessControllingEquipmentInterfaceLN"/>
         <LNClass name="ISAF"
               titleID="IEC61850_7_4.LNGroupI::ISAF.cl.title"
               base="NonProcessInterfaceLN">
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupI::ISAF.Alm.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupI::ISAF.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AlmRs"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupI::ISAF.AlmRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ITCI"
               titleID="IEC61850_7_4.LNGroupI::ITCI.cl.title"
               base="NonProcessControllingEquipmentInterfaceLN">
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupI::ITCI.Alm.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ITMI"
               titleID="IEC61850_7_4.LNGroupI::ITMI.cl.title"
               base="NonProcessInterfaceLN"/>
         <LNClass name="ITPC"
               titleID="IEC61850_7_4.LNGroupI::ITPC.cl.title"
               base="NonProcessInterfaceLN">
            <DataObject name="GrdRxCmd"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupI::ITPC.GrdRxCmd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LosSig"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupI::ITPC.LosSig.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TxCmdCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupI::ITPC.TxCmdCnt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="RxCmdCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupI::ITPC.RxCmdCnt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="LosSyn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupI::ITPC.LosSyn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Ber"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupI::ITPC.Ber.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Fer"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupI::ITPC.Fer.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CarLev"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupI::ITPC.CarLev.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Snr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupI::ITPC.Snr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LoopTestTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupI::ITPC.LoopTestTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="NumTxCmd"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupI::ITPC.NumTxCmd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NumRxCmd"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupI::ITPC.NumRxCmd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TpcTxMod"
                     type="ENG"
                     underlyingType="TpcAppModeKind"
                     descID="IEC61850_7_4.LNGroupI::ITPC.TpcTxMod.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="TpcRxMod"
                     type="ENG"
                     underlyingType="TpcAppModeKind"
                     descID="IEC61850_7_4.LNGroupI::ITPC.TpcRxMod.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="SecTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupI::ITPC.SecTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BstRat"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupI::ITPC.BstRat.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TxPwr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupI::ITPC.TxPwr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TxCtrHz"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupI::ITPC.TxCtrHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RxCtrHz"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupI::ITPC.RxCtrHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TxBndWid"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupI::ITPC.TxBndWid.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RxBndWid"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupI::ITPC.RxBndWid.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="KFAN"
               titleID="IEC61850_7_4.LNGroupK::KFAN.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="Spd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupK::KFAN.Spd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpCtl"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupK::KFAN.OpCtl.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="SpdSpt"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupK::KFAN.SpdSpt.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="MinOpTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupK::KFAN.MinOpTmm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxOpTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupK::KFAN.MaxOpTmm.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="KFIL"
               titleID="IEC61850_7_4.LNGroupK::KFIL.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="ACAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KFIL.ACAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotPro"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KFIL.MotPro.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Flush"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KFIL.Flush.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FilAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KFIL.FilAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifPresHi"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupK::KFIL.DifPresHi.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FlushCnt"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupK::KFIL.FlushCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpCtl"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupK::KFIL.OpCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AlmSpt"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupK::KFIL.AlmSpt.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="KPMP"
               titleID="IEC61850_7_4.LNGroupK::KPMP.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="Spd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupK::KPMP.Spd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpCtl"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupK::KPMP.OpCtl.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="SpdSpt"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupK::KPMP.SpdSpt.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="MinOpTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupK::KPMP.MinOpTmm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxOpTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupK::KPMP.MaxOpTmm.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="KTNK"
               titleID="IEC61850_7_4.LNGroupK::KTNK.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="LevPct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupK::KTNK.LevPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Vlm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupK::KTNK.Vlm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VlmCap"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupK::KTNK.VlmCap.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TnkTyp"
                     type="ENG"
                     underlyingType="TankFillKind"
                     descID="IEC61850_7_4.LNGroupK::KTNK.TnkTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="KVLV"
               titleID="IEC61850_7_4.LNGroupK::KVLV.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="OpCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupK::KVLV.OpCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClsPos"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KVLV.ClsPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="OpnPos"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KVLV.OpnPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="Mvm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KVLV.Mvm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Stuck"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupK::KVLV.Stuck.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosVlv"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupK::KVLV.PosVlv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Flw"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupK::KVLV.Flw.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PosSpt"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupK::KVLV.PosSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Pos"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupK::KVLV.Pos.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosChg"
                     type="BSC"
                     descID="IEC61850_7_4.LNGroupK::KVLV.PosChg.desc"
                     presCond="AtMostOne"
                     dsPresCond="O"/>
            <DataObject name="PosChgIncr"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupK::KVLV.PosChgIncr.desc"
                     presCond="AtMostOne"
                     dsPresCond="O"/>
            <DataObject name="BlkOpn"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupK::KVLV.BlkOpn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkCls"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupK::KVLV.BlkCls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpnLim"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupK::KVLV.OpnLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ClsLim"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupK::KVLV.ClsLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Incr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupK::KVLV.Incr.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="MENV"
               titleID="IEC61850_7_4.LNGroupM::MENV.cl.title"
               base="FunctionLN">
            <DataObject name="SmokAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupM::MENV.SmokAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FloodAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupM::MENV.FloodAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CO2Em"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.CO2Em.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="COEm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.COEm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="NOxEm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.NOxEm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SOxEm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.SOxEm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Dust"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.Dust.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Snd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.Snd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="O2CmbuGas"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.O2CmbuGas.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="O3Air"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MENV.O3Air.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SmokLev"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MENV.SmokLev.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FloodLev"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MENV.FloodLev.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="MFLK"
               titleID="IEC61850_7_4.LNGroupM::MFLK.cl.title"
               base="FunctionLN">
            <DataObject name="PPPcbLs"
                     type="HST"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPcbLs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhPcbLs"
                     type="HST"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPcbLs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PPPcbLl"
                     type="HST"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPcbLl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhPcbLl"
                     type="HST"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPcbLl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PPPst"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPst.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhPst"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPst.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PPPlt"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPlt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhPlt"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPlt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PPPiMax"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPiMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhPiMax"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPiMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PPPiLoFil"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPiLoFil.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhPiLoFil"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPiLoFil.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PPPiRoot"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPiRoot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhPiRoot"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPiRoot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PPPdmWav"
                     type="HDEL"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPdmWav.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhPdmWav"
                     type="HWYE"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPdmWav.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PPPdmSpec"
                     type="HDEL"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PPPdmSpec.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhPdmSpec"
                     type="HWYE"
                     descID="IEC61850_7_4.LNGroupM::MFLK.PhPdmSpec.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MFLW"
               titleID="IEC61850_7_4.LNGroupM::MFLW.cl.title"
               base="FunctionLN">
            <DataObject name="VlmCnt"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupM::MFLW.VlmCnt.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="FlwRte"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FlwRte.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="FanSpd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FanSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FlwHorDir"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FlwHorDir.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FlwVerDir"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FlwVerDir.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MatDen"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.MatDen.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MatCndct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.MatCndct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MatLev"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.MatLev.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FlwVlvPct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FlwVlvPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MatTyp"
                     type="ENG"
                     underlyingType="MaterialKind"
                     descID="IEC61850_7_4.LNGroupM::MFLW.MatTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="MatSt"
                     type="ENG"
                     underlyingType="MaterialStateKind"
                     descID="IEC61850_7_4.LNGroupM::MFLW.MatSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="FlwRteSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FlwRteSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinXsecArea"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MFLW.MinXsecArea.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FlwVlvTgt"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FlwVlvTgt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FanSpdSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MFLW.FanSpdSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="MHAI"
               titleID="IEC61850_7_4.LNGroupM::MHAI.cl.title"
               base="HarmonicsLN">
            <DataObject name="HA"
                     type="HWYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HPhV"
                     type="HWYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HPhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HPPV"
                     type="HDEL"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HW"
                     type="HWYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HVAr"
                     type="HWYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HVAr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HVA"
                     type="HWYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HVA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HRmsA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HRmsA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HRmsPhV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HRmsPhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HRmsPPV"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HRmsPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HTuW"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HTuW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HTsW"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HTsW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HATm"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HATm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HKFact"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HKFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HTdf"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HTdf.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdOddA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdOddA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdEvnA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdEvnA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TddA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.TddA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TddOddA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.TddOddA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TddEvnA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.TddEvnA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdPhV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdPhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdOddPhV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdOddPhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdEvnPhV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdEvnPhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdPPV"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdOddPPV"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdOddPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdEvnPPV"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MHAI.ThdEvnPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HCfPhV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HCfPhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HCfPPV"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HCfPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HCfA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HCfA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HTiFact"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MHAI.HTiFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MHAN"
               titleID="IEC61850_7_4.LNGroupM::MHAN.cl.title"
               base="HarmonicsLN">
            <DataObject name="HaAmp"
                     type="HMV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaVol"
                     type="HMV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaWatt"
                     type="HMV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaWatt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaVolAmpr"
                     type="HMV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaVolAmpr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaVolAmp"
                     type="HMV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaVolAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaRmsAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaRmsAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaRmsVol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaRmsVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaTuWatt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaTuWatt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaTsWatt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaTsWatt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaAmpTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaAmpTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaKFact"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaKFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaTdFact"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaTdFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.ThdAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdOddAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.ThdOddAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdEvnAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.ThdEvnAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TddAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.TddAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TddOddAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.TddOddAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TddEvnAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.TddEvnAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdVol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.ThdVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdOddVol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.ThdOddVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThdEvnVol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.ThdEvnVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaCfAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaCfAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaCfVol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaCfVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HaTiFact"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHAN.HaTiFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MHET"
               titleID="IEC61850_7_4.LNGroupM::MHET.cl.title"
               base="FunctionLN">
            <DataObject name="MatVlm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHET.MatVlm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MatPct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHET.MatPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MatCal"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHET.MatCal.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HeatOut"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHET.HeatOut.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AccmHeatOut"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHET.AccmHeatOut.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AccmHeatRs"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupM::MHET.AccmHeatRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MatTyp"
                     type="ENG"
                     underlyingType="MaterialKind"
                     descID="IEC61850_7_4.LNGroupM::MHET.MatTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="HeatSpcf"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MHET.HeatSpcf.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxMatCal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MHET.MaxMatCal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxHeatOut"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupM::MHET.MaxHeatOut.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="MHYD"
               titleID="IEC61850_7_4.LNGroupM::MHYD.cl.title"
               base="FunctionLN">
            <DataObject name="FishCnt"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupM::MHYD.FishCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Lev"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHYD.Lev.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Flw"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHYD.Flw.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SpdSrfc"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHYD.SpdSrfc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Tmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHYD.Tmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Cndct"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHYD.Cndct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HydPH"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHYD.HydPH.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Slnt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MHYD.Slnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MMDC"
               titleID="IEC61850_7_4.LNGroupM::MMDC.cl.title"
               base="FunctionLN">
            <DataObject name="Watt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.Watt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Amp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.Amp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Vol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.Vol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VolPsGnd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.VolPsGnd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VolNgGnd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.VolNgGnd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Ris"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.Ris.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RisPsGnd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.RisPsGnd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RisNgGnd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMDC.RisNgGnd.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MMET"
               titleID="IEC61850_7_4.LNGroupM::MMET.cl.title"
               base="FunctionLN">
            <DataObject name="EnvTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.EnvTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WetBlbTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.WetBlbTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CloudCvr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.CloudCvr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EnvHum"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.EnvHum.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DewPt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.DewPt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DffInsol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.DffInsol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DctInsol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.DctInsol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DlDur"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.DlDur.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HorInsol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.HorInsol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HorWdDir"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.HorWdDir.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HorWdSpd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.HorWdSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VerWdDir"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.VerWdDir.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VerWdSpd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.VerWdSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WdGustSpd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.WdGustSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EnvPres"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.EnvPres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RnFll"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.RnFll.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SnwDen"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.SnwDen.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SnwTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.SnwTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SnwCvr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.SnwCvr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SnwFll"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.SnwFll.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SnwEq"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMET.SnwEq.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MMTN"
               titleID="IEC61850_7_4.LNGroupM::MMTN.cl.title"
               base="EnergyLN"/>
         <LNClass name="MMTR"
               titleID="IEC61850_7_4.LNGroupM::MMTR.cl.title"
               base="EnergyLN"/>
         <LNClass name="MMXN"
               titleID="IEC61850_7_4.LNGroupM::MMXN.cl.title"
               base="FunctionLN">
            <DataObject name="Amp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.Amp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Vol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.Vol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Watt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.Watt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VolAmpr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.VolAmpr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VolAmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.VolAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PwrFact"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.PwrFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Imp"
                     type="CMV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.Imp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Hz"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXN.Hz.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MMXU"
               titleID="IEC61850_7_4.LNGroupM::MMXU.cl.title"
               base="FunctionLN">
            <DataObject name="TotW"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.TotW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TotVAr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.TotVAr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TotVA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.TotVA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TotPF"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.TotPF.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Hz"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.Hz.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PPV"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MMXU.PPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PNV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.PNV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PhV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.PhV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="A"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.A.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="W"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.W.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VAr"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.VAr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.VA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PF"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.PF.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Z"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MMXU.Z.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvAPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvAPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvPPVPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvPPVPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvPhVPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvPhVPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvWPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvWPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvVAPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvVAPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvVArPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvVArPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvPFPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvPFPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvZPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.AvZPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxAPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxAPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxPPVPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxPPVPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxPhVPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxPhVPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxWPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxWPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxVAPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxVAPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxVArPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxVArPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxPFPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxPFPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxZPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MaxZPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinAPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinAPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinPPVPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinPPVPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinPhVPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinPhVPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinWPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinWPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinVAPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinVAPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinVArPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinVArPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinPFPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinPFPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MinZPhs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.MinZPhs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HzRte"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MMXU.HzRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClcTotVA"
                     type="ENG"
                     underlyingType="STotalCalcMethodKind"
                     descID="IEC61850_7_4.LNGroupM::MMXU.ClcTotVA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PFSign"
                     type="ENG"
                     underlyingType="PFSignKind"
                     descID="IEC61850_7_4.LNGroupM::MMXU.PFSign.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="MSQI"
               titleID="IEC61850_7_4.LNGroupM::MSQI.cl.title"
               base="FunctionLN">
            <DataObject name="SeqA"
                     type="SEQ"
                     descID="IEC61850_7_4.LNGroupM::MSQI.SeqA.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="SeqV"
                     type="SEQ"
                     descID="IEC61850_7_4.LNGroupM::MSQI.SeqV.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="DQ0Seq"
                     type="SEQ"
                     descID="IEC61850_7_4.LNGroupM::MSQI.DQ0Seq.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MSQI.ImbA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbNgA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MSQI.ImbNgA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbNgV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MSQI.ImbNgV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbPPV"
                     type="DEL"
                     descID="IEC61850_7_4.LNGroupM::MSQI.ImbPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbV"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupM::MSQI.ImbV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbZroA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MSQI.ImbZroA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbZroV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MSQI.ImbZroV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxImbA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MSQI.MaxImbA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxImbPPV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MSQI.MaxImbPPV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxImbV"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupM::MSQI.MaxImbV.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="PDIF"
               titleID="IEC61850_7_4.LNGroupP::PDIF.cl.title"
               base="ProtectionLN">
            <DataObject name="TmASt"
                     type="CSD"
                     descID="IEC61850_7_4.LNGroupP::PDIF.TmASt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PDIF.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PDIF.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="DifAClc"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupP::PDIF.DifAClc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RstA"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupP::PDIF.RstA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TmACrv"
                     type="CURVE"
                     descID="IEC61850_7_4.LNGroupP::PDIF.TmACrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmAChr"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupP::PDIF.TmAChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
            <DataObject name="LinCapac"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIF.LinCapac.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LoSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIF.LoSet.desc"
                     presCond="AtMostOne"
                     dsPresCond="F"/>
            <DataObject name="HiSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIF.HiSet.desc"
                     presCond="AtMostOne"
                     dsPresCond="F"/>
            <DataObject name="MinOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIF.MinOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIF.MaxOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RstMod"
                     type="ENG"
                     underlyingType="RestraintModeKind"
                     descID="IEC61850_7_4.LNGroupP::PDIF.RstMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIF.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PDIR"
               titleID="IEC61850_7_4.LNGroupP::PDIR.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PDIR.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PDIR.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIR.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PDIS"
               titleID="IEC61850_7_4.LNGroupP::PDIS.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PDIS.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PDIS.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="PoRch"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.PoRch.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhStr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.PhStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndStr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.GndStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DirMod"
                     type="ENG"
                     underlyingType="DirectionModeKind"
                     descID="IEC61850_7_4.LNGroupP::PDIS.DirMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PctRch"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.PctRch.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Ofs"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.Ofs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PctOfs"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.PctOfs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RisLod"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.RisLod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AngLod"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.AngLod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmDlMod"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.TmDlMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIS.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhDlMod"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.PhDlMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIS.PhDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndDlMod"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.GndDlMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIS.GndDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="X1"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.X1.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LinAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.LinAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RisGndRch"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.RisGndRch.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RisPhRch"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.RisPhRch.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="K0Fact"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.K0Fact.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="K0FactAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PDIS.K0FactAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PDIS.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PDOP"
               titleID="IEC61850_7_4.LNGroupP::PDOP.cl.title"
               base="PowerProtectionLN"/>
         <LNClass name="PDUP"
               titleID="IEC61850_7_4.LNGroupP::PDUP.cl.title"
               base="PowerProtectionLN"/>
         <LNClass name="PFRC"
               titleID="IEC61850_7_4.LNGroupP::PFRC.cl.title"
               base="FrequencyProtectionLN"/>
         <LNClass name="PHAR"
               titleID="IEC61850_7_4.LNGroupP::PHAR.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PHAR.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="HaRst"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PHAR.HaRst.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhStr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PHAR.PhStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhStop"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PHAR.PhStop.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PHAR.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PHAR.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PHIZ"
               titleID="IEC61850_7_4.LNGroupP::PHIZ.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PHIZ.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PHIZ.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="AStr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PHIZ.AStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VStr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PHIZ.VStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HVStr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PHIZ.HVStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PHIZ.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PHIZ.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PIOC"
               titleID="IEC61850_7_4.LNGroupP::PIOC.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PIOC.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PIOC.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PIOC.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PMRI"
               titleID="IEC61850_7_4.LNGroupP::PMRI.cl.title"
               base="MotorStartupProtectionLN">
            <DataObject name="StrInh"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupP::PMRI.StrInh.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrInhTmm"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupP::PMRI.StrInhTmm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxNumStr"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PMRI.MaxNumStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxWrmStr"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PMRI.MaxWrmStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxStrTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PMRI.MaxStrTmm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EqTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PMRI.EqTmm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InhTmm"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PMRI.InhTmm.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PMSS"
               titleID="IEC61850_7_4.LNGroupP::PMSS.cl.title"
               base="MotorStartupProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PMSS.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotStr"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PMSS.MotStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LokRotTms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PMSS.LokRotTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="POPF"
               titleID="IEC61850_7_4.LNGroupP::POPF.cl.title"
               base="PowerFactorProtectionLN"/>
         <LNClass name="PPAM"
               titleID="IEC61850_7_4.LNGroupP::PPAM.cl.title"
               base="GeneratorProtectionLN"/>
         <LNClass name="PRTR"
               titleID="IEC61850_7_4.LNGroupP::PRTR.cl.title"
               base="GeneratorProtectionLN"/>
         <LNClass name="PSCH"
               titleID="IEC61850_7_4.LNGroupP::PSCH.cl.title"
               base="ProtectionLN">
            <DataObject name="TxPrm"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSCH.TxPrm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TxBlk"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSCH.TxBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TxTr"
                     type="ACT"
                     descID="IEC61850_7_4.LNGroupP::PSCH.TxTr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RxPrm"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSCH.RxPrm.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="RxBlk"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSCH.RxBlk.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="RxTr"
                     type="ACT"
                     descID="IEC61850_7_4.LNGroupP::PSCH.RxTr.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSCH.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="EchoWei"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSCH.EchoWei.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EchoWeiOp"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSCH.EchoWeiOp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RxSrc"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupP::PSCH.RxSrc.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="RxSrcTr"
                     type="ORG"
                     descID="IEC61850_7_4.LNGroupP::PSCH.RxSrcTr.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSCH.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CrdTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSCH.CrdTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DurTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSCH.DurTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnBlkMod"
                     type="ENG"
                     underlyingType="UnblockModeKind"
                     descID="IEC61850_7_4.LNGroupP::PSCH.UnBlkMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnBlkTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSCH.UnBlkTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WeiMod"
                     type="ENG"
                     underlyingType="WeakEndInfeedModeKind"
                     descID="IEC61850_7_4.LNGroupP::PSCH.WeiMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WeiTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSCH.WeiTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PSDE"
               titleID="IEC61850_7_4.LNGroupP::PSDE.cl.title"
               base="EarthfaultProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PSDE.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSDE.Op.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Ang"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PSDE.Ang.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndOp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PSDE.GndOp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSDE.StrDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSDE.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PSOF"
               titleID="IEC61850_7_4.LNGroupP::PSOF.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PSOF.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PSOF.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpAccEx"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupP::PSOF.OpAccEx.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkRec"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupP::PSOF.BlkRec.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EnaTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSOF.EnaTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EnaMod"
                     type="ENG"
                     underlyingType="SOFEnablingModeKind"
                     descID="IEC61850_7_4.LNGroupP::PSOF.EnaMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpModSof"
                     type="ENG"
                     underlyingType="SOFOperationModeKind"
                     descID="IEC61850_7_4.LNGroupP::PSOF.OpModSof.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SetPhV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PSOF.SetPhV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PSOF.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkValV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PSOF.BlkValV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkValA"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PSOF.BlkValA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PSOF.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTDV"
               titleID="IEC61850_7_4.LNGroupP::PTDV.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PTDV.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PTDV.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PTDV.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PTDV.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTEF"
               titleID="IEC61850_7_4.LNGroupP::PTEF.cl.title"
               base="EarthfaultProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PTEF.Str.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PTEF.Op.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTHF"
               titleID="IEC61850_7_4.LNGroupP::PTHF.cl.title"
               base="GeneratorProtectionLN"/>
         <LNClass name="PTOC"
               titleID="IEC61850_7_4.LNGroupP::PTOC.cl.title"
               base="CurrentProtectionLN">
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PTOC.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DirMod"
                     type="ENG"
                     underlyingType="DirectionModeKind"
                     descID="IEC61850_7_4.LNGroupP::PTOC.DirMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTOF"
               titleID="IEC61850_7_4.LNGroupP::PTOF.cl.title"
               base="FrequencyProtectionLN"/>
         <LNClass name="PTOV"
               titleID="IEC61850_7_4.LNGroupP::PTOV.cl.title"
               base="VoltageProtectionLN">
            <DataObject name="TmVSt"
                     type="CSD"
                     descID="IEC61850_7_4.LNGroupP::PTOV.TmVSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PTOV.Op.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmVCrv"
                     type="CURVE"
                     descID="IEC61850_7_4.LNGroupP::PTOV.TmVCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmVChr"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupP::PTOV.TmVChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTRC"
               titleID="IEC61850_7_4.LNGroupP::PTRC.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PTRC.Str.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PTRC.Op.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="Tr"
                     type="ACT"
                     descID="IEC61850_7_4.LNGroupP::PTRC.Tr.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="TrMod"
                     type="ENG"
                     underlyingType="TripModeKind"
                     descID="IEC61850_7_4.LNGroupP::PTRC.TrMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrPlsTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PTRC.TrPlsTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTTR"
               titleID="IEC61850_7_4.LNGroupP::PTTR.cl.title"
               base="ProtectionLN">
            <DataObject name="TmTmpSt"
                     type="CSD"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmTmpSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmASt"
                     type="CSD"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmASt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PTTR.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PTTR.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="AlmThm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupP::PTTR.AlmThm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkThm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupP::PTTR.BlkThm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Amp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupP::PTTR.Amp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Tmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupP::PTTR.Tmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TmpRl"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmpRl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LodRsvAlm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupP::PTTR.LodRsvAlm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LodRsvTr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupP::PTTR.LodRsvTr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TmTmpCrv"
                     type="CURVE"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmTmpCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTmpChr"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmTmpChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
            <DataObject name="TmACrv"
                     type="CURVE"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmACrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmAChr"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmAChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
            <DataObject name="TmpMax"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PTTR.TmpMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PTTR.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PTTR.MinOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxOpTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PTTR.MaxOpTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PTTR.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PTTR.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ConsTms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PTTR.ConsTms.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="AlmVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PTTR.AlmVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DropoutVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PTTR.DropoutVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTUC"
               titleID="IEC61850_7_4.LNGroupP::PTUC.cl.title"
               base="CurrentProtectionLN">
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PTUC.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DirMod"
                     type="ENG"
                     underlyingType="DirectionModeKind"
                     descID="IEC61850_7_4.LNGroupP::PTUC.DirMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PTUF"
               titleID="IEC61850_7_4.LNGroupP::PTUF.cl.title"
               base="FrequencyProtectionLN"/>
         <LNClass name="PTUV"
               titleID="IEC61850_7_4.LNGroupP::PTUV.cl.title"
               base="VoltageProtectionLN">
            <DataObject name="TmVSt"
                     type="CSD"
                     descID="IEC61850_7_4.LNGroupP::PTUV.TmVSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PTUV.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="TmVCrv"
                     type="CURVE"
                     descID="IEC61850_7_4.LNGroupP::PTUV.TmVCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmVChr"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupP::PTUV.TmVChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PUPF"
               titleID="IEC61850_7_4.LNGroupP::PUPF.cl.title"
               base="PowerFactorProtectionLN"/>
         <LNClass name="PVOC"
               titleID="IEC61850_7_4.LNGroupP::PVOC.cl.title"
               base="CurrentProtectionLN">
            <DataObject name="AVSt"
                     type="CSD"
                     descID="IEC61850_7_4.LNGroupP::PVOC.AVSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AVCrv"
                     type="CURVE"
                     descID="IEC61850_7_4.LNGroupP::PVOC.AVCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AVChr"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupP::PVOC.AVChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PVPH"
               titleID="IEC61850_7_4.LNGroupP::PVPH.cl.title"
               base="VoltageProtectionLN">
            <DataObject name="VHzSt"
                     type="CSD"
                     descID="IEC61850_7_4.LNGroupP::PVPH.VHzSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PVPH.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VHzCrv"
                     type="CURVE"
                     descID="IEC61850_7_4.LNGroupP::PVPH.VHzCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VHzChr"
                     type="CSG"
                     descID="IEC61850_7_4.LNGroupP::PVPH.VHzChr.desc"
                     presCond="OmultiRange"
                     presCondArgs="33, 48"
                     dsPresCond="F"/>
            <DataObject name="TypRsCrv"
                     type="ENG"
                     underlyingType="ResetCurveKind"
                     descID="IEC61850_7_4.LNGroupP::PVPH.TypRsCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="PZSU"
               titleID="IEC61850_7_4.LNGroupP::PZSU.cl.title"
               base="ProtectionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupP::PZSU.Str.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupP::PZSU.Op.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupP::PZSU.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PZSU.OpDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RsDlTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupP::PZSU.RsDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="QFVR"
               titleID="IEC61850_7_4.LNGroupQ::QFVR.cl.title"
               base="PowerQualityLN">
            <DataObject name="UnHzStr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupQ::QFVR.UnHzStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OvHzStr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupQ::QFVR.OvHzStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzVaTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QFVR.HzVaTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HzVaMag"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QFVR.HzVaMag.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="UnHzStrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupQ::QFVR.UnHzStrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OvHzStrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupQ::QFVR.OvHzStrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="QITR"
               titleID="IEC61850_7_4.LNGroupQ::QITR.cl.title"
               base="PowerQualityLN">
            <DataObject name="ATrsTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QITR.ATrsTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxATrs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QITR.MaxATrs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupQ::QITR.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="QIUB"
               titleID="IEC61850_7_4.LNGroupQ::QIUB.cl.title"
               base="UnbalanceDetectionLN">
            <DataObject name="AVaTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QIUB.AVaTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxAVa"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QIUB.MaxAVa.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="QVTR"
               titleID="IEC61850_7_4.LNGroupQ::QVTR.cl.title"
               base="PowerQualityLN">
            <DataObject name="VTrsTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QVTR.VTrsTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxVTrs"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QVTR.MaxVTrs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupQ::QVTR.StrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="QVUB"
               titleID="IEC61850_7_4.LNGroupQ::QVUB.cl.title"
               base="UnbalanceDetectionLN">
            <DataObject name="VVaTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QVUB.VVaTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxVVa"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QVUB.MaxVVa.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="QVVR"
               titleID="IEC61850_7_4.LNGroupQ::QVVR.cl.title"
               base="PowerQualityLN">
            <DataObject name="DipStr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.DipStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwlStr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.SwlStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntrStr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.IntrStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AffPhs"
                     type="ENS"
                     underlyingType="AffectedPhasesKind"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.AffPhs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VVa"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.VVa.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VVaTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.VVaTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DipStrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.DipStrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwlStrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.SwlStrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntrStrVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.IntrStrVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntrDetMth"
                     type="ENG"
                     underlyingType="VoltInterruptDetectionKind"
                     descID="IEC61850_7_4.LNGroupQ::QVVR.IntrDetMth.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RADR"
               titleID="IEC61850_7_4.LNGroupR::RADR.cl.title"
               base="DRChannelLN">
            <DataObject name="HiTrgLev"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RADR.HiTrgLev.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LoTrgLev"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RADR.LoTrgLev.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RBDR"
               titleID="IEC61850_7_4.LNGroupR::RBDR.cl.title"
               base="DRChannelLN"/>
         <LNClass name="RBRF"
               titleID="IEC61850_7_4.LNGroupR::RBRF.cl.title"
               base="FunctionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupR::RBRF.Str.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpEx"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RBRF.OpEx.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="OpIn"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RBRF.OpIn.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupR::RBRF.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FailMod"
                     type="ENG"
                     underlyingType="FailureDetectionKind"
                     descID="IEC61850_7_4.LNGroupR::RBRF.FailMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FailTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RBRF.FailTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SPlTrTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RBRF.SPlTrTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TPTrTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RBRF.TPTrTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DetValA"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RBRF.DetValA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ReTrMod"
                     type="ENG"
                     underlyingType="RetripModeKind"
                     descID="IEC61850_7_4.LNGroupR::RBRF.ReTrMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RDIR"
               titleID="IEC61850_7_4.LNGroupR::RDIR.cl.title"
               base="FunctionLN">
            <DataObject name="Dir"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupR::RDIR.Dir.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ChrAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.ChrAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinFwdAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.MinFwdAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinRvAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.MinRvAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxFwdAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.MaxFwdAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxRvAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.MaxRvAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkValA"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.BlkValA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkValV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.BlkValV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PolQty"
                     type="ENG"
                     underlyingType="PolarizingQuantityKind"
                     descID="IEC61850_7_4.LNGroupR::RDIR.PolQty.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MinPPV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RDIR.MinPPV.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RDRE"
               titleID="IEC61850_7_4.LNGroupR::RDRE.cl.title"
               base="RecorderLN">
            <DataObject name="RcdMade"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RDRE.RcdMade.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="FltNum"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupR::RDRE.FltNum.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="GriFltNum"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupR::RDRE.GriFltNum.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RcdStr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupR::RDRE.RcdStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MemUsed"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupR::RDRE.MemUsed.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RcdTrg"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RDRE.RcdTrg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MemRs"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RDRE.MemRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MemClr"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RDRE.MemClr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MemFull"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RDRE.MemFull.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxNumRcd"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RDRE.MaxNumRcd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ReTrgMod"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupR::RDRE.ReTrgMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PerTrgTms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RDRE.PerTrgTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExclTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RDRE.ExclTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RcdMod"
                     type="ENG"
                     underlyingType="RecordingModeKind"
                     descID="IEC61850_7_4.LNGroupR::RDRE.RcdMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StoRte"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RDRE.StoRte.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RDRS"
               titleID="IEC61850_7_4.LNGroupR::RDRS.cl.title"
               base="FunctionLN">
            <DataObject name="AutoUpLod"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupR::RDRS.AutoUpLod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DltRcd"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RDRS.DltRcd.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RFLO"
               titleID="IEC61850_7_4.LNGroupR::RFLO.cl.title"
               base="FunctionLN">
            <DataObject name="FltLoop"
                     type="ENS"
                     underlyingType="FaultLoopKind"
                     descID="IEC61850_7_4.LNGroupR::RFLO.FltLoop.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FltZ"
                     type="CMV"
                     descID="IEC61850_7_4.LNGroupR::RFLO.FltZ.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FltDiskm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupR::RFLO.FltDiskm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupR::RFLO.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="RMXU"
               titleID="IEC61850_7_4.LNGroupR::RMXU.cl.title"
               base="FunctionLN">
            <DataObject name="ALoc"
                     type="WYE"
                     descID="IEC61850_7_4.LNGroupR::RMXU.ALoc.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="AmpLocPhsA"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupR::RMXU.AmpLocPhsA.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="AmpLocPhsB"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupR::RMXU.AmpLocPhsB.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="AmpLocPhsC"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupR::RMXU.AmpLocPhsC.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="AmpLocRes"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupR::RMXU.AmpLocRes.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="RPSB"
               titleID="IEC61850_7_4.LNGroupR::RPSB.cl.title"
               base="FunctionLN">
            <DataObject name="Str"
                     type="ACD"
                     descID="IEC61850_7_4.LNGroupR::RPSB.Str.desc"
                     presCond="MOcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupR::RPSB__(_MOcond(2)_=__((_Str,_BlkZn_))__)_.cond.LNGroupR::RPSB.Str"
                     dsPresCond="F"/>
            <DataObject name="Op"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RPSB.Op.desc"
                     presCond="MOcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.LNGroupR::RPSB__(_MOcond(3)_=__((_Op_))__)_.cond.LNGroupR::RPSB.Op"
                     dsPresCond="F"/>
            <DataObject name="BlkZn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupR::RPSB.BlkZn.desc"
                     presCond="MOcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupR::RPSB__(_MOcond(2)_=__((_Str,_BlkZn_))__)_.cond.LNGroupR::RPSB.BlkZn"
                     dsPresCond="F"/>
            <DataObject name="OpCntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupR::RPSB.OpCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ZeroEna"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupR::RPSB.ZeroEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NgEna"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupR::RPSB.NgEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxEna"
                     type="SPG"
                     descID="IEC61850_7_4.LNGroupR::RPSB.MaxEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwgVal"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RPSB.SwgVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwgRis"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RPSB.SwgRis.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwgReact"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RPSB.SwgReact.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwgTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RPSB.SwgTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnBlkTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RPSB.UnBlkTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxNumSlp"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RPSB.MaxNumSlp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EvTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RPSB.EvTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RREC"
               titleID="IEC61850_7_4.LNGroupR::RREC.cl.title"
               base="FunctionLN">
            <DataObject name="TrBeh"
                     type="ENS"
                     underlyingType="TripBehaviourKind"
                     descID="IEC61850_7_4.LNGroupR::RREC.TrBeh.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RecCyc"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupR::RREC.RecCyc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpCls"
                     type="ACT"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupR::RREC.OpCls.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="AutoRecSt"
                     type="ENS"
                     underlyingType="AutoReclosingKind"
                     descID="IEC61850_7_4.LNGroupR::RREC.AutoRecSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Rec1PhCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupR::RREC.Rec1PhCnt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="Rec3PhCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupR::RREC.Rec3PhCnt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="CycTrMod"
                     type="ENG"
                     underlyingType="TripModeKind"
                     descID="IEC61850_7_4.LNGroupR::RREC.CycTrMod.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="MaxCyc"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.MaxCyc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UseCyc"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.UseCyc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.MaxTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Rec1Tmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.Rec1Tmms.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="Rec13Tmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.Rec13Tmms.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="Rec3Tmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.Rec3Tmms.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="RclTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.RclTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RdyTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupR::RREC.RdyTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="RSYN"
               titleID="IEC61850_7_4.LNGroupR::RSYN.cl.title"
               base="SynchronisationLN">
            <DataObject name="DifV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RSYN.DifV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifHz"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RSYN.DifHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifAng"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupR::RSYN.DifAng.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SARC"
               titleID="IEC61850_7_4.LNGroupS::SARC.cl.title"
               base="SupervisionLN">
            <DataObject name="FADet"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SARC.FADet.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="SwArcDet"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SARC.SwArcDet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FACntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupS::SARC.FACntRs.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="ArcCntRs"
                     type="INC"
                     descID="IEC61850_7_4.LNGroupS::SARC.ArcCntRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="SCBR"
               titleID="IEC61850_7_4.LNGroupS::SCBR.cl.title"
               base="SwitchgearSupervisionLN">
            <DataObject name="ColOpn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SCBR.ColOpn.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ColAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SCBR.ColAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AbrAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SCBR.AbrAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AbrWrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SCBR.AbrWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SCBR.SwA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ActAbr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SCBR.ActAbr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AbrAlmLev"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SCBR.AbrAlmLev.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AbrWrnLev"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SCBR.AbrWrnLev.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SIMG"
               titleID="IEC61850_7_4.LNGroupS::SIMG.cl.title"
               base="LineSupervisionLN">
            <DataObject name="PresAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIMG.PresAlm.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="DenAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIMG.DenAlm.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="TmpAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIMG.TmpAlm.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="InsBlkTmh"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupS::SIMG.InsBlkTmh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Den"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIMG.Den.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="SIML"
               titleID="IEC61850_7_4.LNGroupS::SIML.cl.title"
               base="LineSupervisionLN">
            <DataObject name="TmpAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.TmpAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GasInsAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.GasInsAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GasInsTr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.GasInsTr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GasFlwTr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.GasFlwTr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="H2Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.H2Alm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="H2Wrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.H2Wrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MstAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.MstAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MstWrn"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SIML.MstWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Lev"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.Lev.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="H2O"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.H2O.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="H2OPap"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.H2OPap.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="H2OAir"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.H2OAir.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="H2OTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.H2OTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="H2ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.H2ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="N2ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.N2ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="COppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.COppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CO2ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.CO2ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CH4ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.CH4ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="C2H2ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.C2H2ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="C2H4ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.C2H4ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="C2H6ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.C2H6ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="O2ppm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.O2ppm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CmbuGas"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.CmbuGas.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FltGas"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SIML.FltGas.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="SLTC"
               titleID="IEC61850_7_4.LNGroupS::SLTC.cl.title"
               base="SupervisionLN">
            <DataObject name="OilFil"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SLTC.OilFil.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotDrvBlk"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SLTC.MotDrvBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VacCelAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SLTC.VacCelAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OilFilTr"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SLTC.OilFilTr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Torq"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SLTC.Torq.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MotDrvA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SLTC.MotDrvA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AbrPrt"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SLTC.AbrPrt.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="SOPM"
               titleID="IEC61850_7_4.LNGroupS::SOPM.cl.title"
               base="SupervisionLN">
            <DataObject name="MotOp"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotOp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotStrAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotStrAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HyAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.HyAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HyBlk"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.HyBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EnBlk"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.EnBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EnAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.EnAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HeatAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.HeatAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaIntvTms"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.ChaIntvTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MotStrNum"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotStrNum.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="En"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SOPM.En.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HyPres"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SOPM.HyPres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HyTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SOPM.HyTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MotTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MotA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Tmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SOPM.Tmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MotAlmTms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotAlmTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotAlmNum"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotAlmNum.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotStrTms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupS::SOPM.MotStrTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SPDC"
               titleID="IEC61850_7_4.LNGroupS::SPDC.cl.title"
               base="SupervisionLN">
            <DataObject name="PaDschAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPDC.PaDschAlm.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="OpCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupS::SPDC.OpCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AcuPaDsch"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPDC.AcuPaDsch.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="AppPaDsch"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPDC.AppPaDsch.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="NQS"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPDC.NQS.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="UhfPaDsch"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPDC.UhfPaDsch.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="CtrHz"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SPDC.CtrHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BndWid"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SPDC.BndWid.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SPRS"
               titleID="IEC61850_7_4.LNGroupS::SPRS.cl.title"
               base="SupervisionLN">
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPRS.Alm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPRS.RteAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Trip"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPRS.Trip.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteTrip"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPRS.RteTrip.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Pres"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPRS.Pres.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="PresRte"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPRS.PresRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AlmSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SPRS.AlmSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteAlmSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SPRS.RteAlmSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TripSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SPRS.TripSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteTripSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SPRS.RteTripSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SPTR"
               titleID="IEC61850_7_4.LNGroupS::SPTR.cl.title"
               base="SupervisionLN">
            <DataObject name="HPTmpAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPTR.HPTmpAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HPTmpOp"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPTR.HPTmpOp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HPTmpTr"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupS::SPTR.HPTmpTr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MbrAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPTR.MbrAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CGAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPTR.CGAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HeatAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SPTR.HeatAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AgeRte"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPTR.AgeRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="BotTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPTR.BotTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CoreTmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPTR.CoreTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HPTmpClc"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SPTR.HPTmpClc.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="SSWI"
               titleID="IEC61850_7_4.LNGroupS::SSWI.cl.title"
               base="SwitchgearSupervisionLN"/>
         <LNClass name="STMP"
               titleID="IEC61850_7_4.LNGroupS::STMP.cl.title"
               base="SupervisionLN">
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::STMP.Alm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::STMP.RteAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Trip"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::STMP.Trip.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteTrip"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::STMP.RteTrip.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Tmp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::STMP.Tmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TmpRte"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::STMP.TmpRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AlmSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::STMP.AlmSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteAlmSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::STMP.RteAlmSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TripSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::STMP.TripSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RteTripSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::STMP.RteTripSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SVBR"
               titleID="IEC61850_7_4.LNGroupS::SVBR.cl.title"
               base="SupervisionLN">
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SVBR.Alm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AxDspAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SVBR.AxDspAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Trip"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SVBR.Trip.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AxDspTrip"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupS::SVBR.AxDspTrip.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Vbr"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SVBR.Vbr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VbrPer"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SVBR.VbrPer.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AxDsp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupS::SVBR.AxDsp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VbrAlmSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SVBR.VbrAlmSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AxDspAlmSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SVBR.AxDspAlmSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VbrTripSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SVBR.VbrTripSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AxDspTripSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupS::SVBR.AxDspTripSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="TANG"
               titleID="IEC61850_7_4.LNGroupT::TANG.cl.title"
               base="SensorLN">
            <DataObject name="AngSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TANG.AngSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TAXD"
               titleID="IEC61850_7_4.LNGroupT::TAXD.cl.title"
               base="SensorLN">
            <DataObject name="AxDspSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TAXD.AxDspSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TCTR"
               titleID="IEC61850_7_4.LNGroupT::TCTR.cl.title"
               base="InstrumentTransformerLN">
            <DataObject name="AmpSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TCTR.AmpSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupT::TCTR.ARtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Trp"
                     type="ENG"
                     underlyingType="TransientPerformanceClassKind"
                     descID="IEC61850_7_4.LNGroupT::TCTR.Trp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ScndTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupT::TCTR.ScndTmms.desc"
                     presCond="MOcond"
                     presCondArgs="6"
                     presCondArgsID="IEC61850_7_4.LNGroupT::TCTR__(_MOcond(6)_=__((_ScndTmms_))__)_.cond.LNGroupT::TCTR.ScndTmms"
                     dsPresCond="F"/>
            <DataObject name="DynRngMin"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupT::TCTR.DynRngMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DynRngMax"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupT::TCTR.DynRngMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="TDST"
               titleID="IEC61850_7_4.LNGroupT::TDST.cl.title"
               base="SensorLN">
            <DataObject name="DisSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TDST.DisSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TFLW"
               titleID="IEC61850_7_4.LNGroupT::TFLW.cl.title"
               base="SensorLN">
            <DataObject name="FlwSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TFLW.FlwSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TFRQ"
               titleID="IEC61850_7_4.LNGroupT::TFRQ.cl.title"
               base="SensorLN">
            <DataObject name="HzSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TFRQ.HzSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TGSN"
               titleID="IEC61850_7_4.LNGroupT::TGSN.cl.title"
               base="SensorLN">
            <DataObject name="GenSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TGSN.GenSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="THUM"
               titleID="IEC61850_7_4.LNGroupT::THUM.cl.title"
               base="SensorLN">
            <DataObject name="HumSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::THUM.HumSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TLVL"
               titleID="IEC61850_7_4.LNGroupT::TLVL.cl.title"
               base="SensorLN">
            <DataObject name="LevPctSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TLVL.LevPctSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TMGF"
               titleID="IEC61850_7_4.LNGroupT::TMGF.cl.title"
               base="SensorLN">
            <DataObject name="MagFldSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TMGF.MagFldSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TMVM"
               titleID="IEC61850_7_4.LNGroupT::TMVM.cl.title"
               base="SensorLN">
            <DataObject name="MvmRteSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TMVM.MvmRteSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TPOS"
               titleID="IEC61850_7_4.LNGroupT::TPOS.cl.title"
               base="SensorLN">
            <DataObject name="PosPctSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TPOS.PosPctSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TPRS"
               titleID="IEC61850_7_4.LNGroupT::TPRS.cl.title"
               base="SensorLN">
            <DataObject name="PresSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TPRS.PresSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TRTN"
               titleID="IEC61850_7_4.LNGroupT::TRTN.cl.title"
               base="SensorLN">
            <DataObject name="RotSpdSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TRTN.RotSpdSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TSND"
               titleID="IEC61850_7_4.LNGroupT::TSND.cl.title"
               base="SensorLN">
            <DataObject name="SndSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TSND.SndSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TTMP"
               titleID="IEC61850_7_4.LNGroupT::TTMP.cl.title"
               base="SensorLN">
            <DataObject name="TmpSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TTMP.TmpSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TTNS"
               titleID="IEC61850_7_4.LNGroupT::TTNS.cl.title"
               base="SensorLN">
            <DataObject name="TnsSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TTNS.TnsSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TVBR"
               titleID="IEC61850_7_4.LNGroupT::TVBR.cl.title"
               base="SensorLN">
            <DataObject name="VbrSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TVBR.VbrSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="TVTR"
               titleID="IEC61850_7_4.LNGroupT::TVTR.cl.title"
               base="InstrumentTransformerLN">
            <DataObject name="FuFail"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupT::TVTR.FuFail.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VolSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TVTR.VolSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupT::TVTR.VRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="TWPH"
               titleID="IEC61850_7_4.LNGroupT::TWPH.cl.title"
               base="SensorLN">
            <DataObject name="H2OPHSv"
                     type="SAV"
                     descID="IEC61850_7_4.LNGroupT::TWPH.H2OPHSv.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="XCBR"
               titleID="IEC61850_7_4.LNGroupX::XCBR.cl.title"
               base="SwitchingEquipmentLN">
            <DataObject name="CBOpCap"
                     type="ENS"
                     underlyingType="BreakerOpCapabilityKind"
                     descID="IEC61850_7_4.LNGroupX::XCBR.CBOpCap.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="POWCap"
                     type="ENS"
                     underlyingType="POWSwitchingCapabilityKind"
                     descID="IEC61850_7_4.LNGroupX::XCBR.POWCap.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxOpCap"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupX::XCBR.MaxOpCap.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SumSwARs"
                     type="BCR"
                     descID="IEC61850_7_4.LNGroupX::XCBR.SumSwARs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CBTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupX::XCBR.CBTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="POWOpnTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupX::XCBR.POWOpnTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="POWClsTmms"
                     type="ING"
                     descID="IEC61850_7_4.LNGroupX::XCBR.POWClsTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="XFUS"
               titleID="IEC61850_7_4.LNGroupX::XFUS.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="FuSt"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupX::XFUS.FuSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuTyp"
                     type="ENG"
                     underlyingType="FuseFunctionKind"
                     descID="IEC61850_7_4.LNGroupX::XFUS.FuTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupX::XFUS.ARtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupX::XFUS.VRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="XSWI"
               titleID="IEC61850_7_4.LNGroupX::XSWI.cl.title"
               base="SwitchingEquipmentLN">
            <DataObject name="SwTyp"
                     type="ENS"
                     underlyingType="SwitchFunctionKind"
                     descID="IEC61850_7_4.LNGroupX::XSWI.SwTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="SwOpCap"
                     type="ENS"
                     underlyingType="SwitchingCapabilityKind"
                     descID="IEC61850_7_4.LNGroupX::XSWI.SwOpCap.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="YEFN"
               titleID="IEC61850_7_4.LNGroupY::YEFN.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="EndPosR"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YEFN.EndPosR.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EndPosL"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YEFN.EndPosL.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PotAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YEFN.PotAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MotAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YEFN.MotAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ColPosA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupY::YEFN.ColPosA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ColAEFN"
                     type="CMV"
                     descID="IEC61850_7_4.LNGroupY::YEFN.ColAEFN.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="NeutVol"
                     type="CMV"
                     descID="IEC61850_7_4.LNGroupY::YEFN.NeutVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TapChg"
                     type="BSC"
                     descID="IEC61850_7_4.LNGroupY::YEFN.TapChg.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ColTapPos"
                     type="ISC"
                     descID="IEC61850_7_4.LNGroupY::YEFN.ColTapPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ColPos"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupY::YEFN.ColPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ColChg"
                     type="BAC"
                     descID="IEC61850_7_4.LNGroupY::YEFN.ColChg.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="YLTC"
               titleID="IEC61850_7_4.LNGroupY::YLTC.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="OpCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupY::YLTC.OpCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EndPosR"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YLTC.EndPosR.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="EndPosL"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YLTC.EndPosL.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OoStep"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YLTC.OoStep.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LTCCycAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YLTC.LTCCycAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkLoVisc"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YLTC.BlkLoVisc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TapPos"
                     type="ISC"
                     descID="IEC61850_7_4.LNGroupY::YLTC.TapPos.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="TapChg"
                     type="BSC"
                     descID="IEC61850_7_4.LNGroupY::YLTC.TapChg.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="YPSH"
               titleID="IEC61850_7_4.LNGroupY::YPSH.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="ShOpCap"
                     type="ENS"
                     underlyingType="SwitchingCapabilityKind"
                     descID="IEC61850_7_4.LNGroupY::YPSH.ShOpCap.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Pos"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupY::YPSH.Pos.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BlkOpn"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupY::YPSH.BlkOpn.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BlkCls"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupY::YPSH.BlkCls.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ChaMotEna"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupY::YPSH.ChaMotEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="YPTR"
               titleID="IEC61850_7_4.LNGroupY::YPTR.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="OpNoLod"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OpNoLod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpOvA"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OpOvA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpOvV"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OpOvV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpUnV"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OpUnV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LodFact"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupY::YPTR.LodFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaxVA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupY::YPTR.MaxVA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OvlTm"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OvlTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OvlTmEmg"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OvlTmEmg.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HiVRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupY::YPTR.HiVRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LoVRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupY::YPTR.LoVRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupY::YPTR.VARtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxVASet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupY::YPTR.MaxVASet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OvlTmSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OvlTmSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OvlTmEmgSet"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupY::YPTR.OvlTmEmgSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZAXN"
               titleID="IEC61850_7_4.LNGroupZ::ZAXN.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="Vol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZAXN.Vol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Amp"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZAXN.Amp.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="ZBAT"
               titleID="IEC61850_7_4.LNGroupZ::ZBAT.cl.title"
               base="BatteryLN">
            <DataObject name="TestRsl"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZBAT.TestRsl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BatTest"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupZ::ZBAT.BatTest.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZBSH"
               titleID="IEC61850_7_4.LNGroupZ::ZBSH.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="React"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.React.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AbsReact"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.AbsReact.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LosFact"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.LosFact.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Vol"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.Vol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DspA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.DspA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LkgA"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.LkgA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RefReact"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.RefReact.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RefPF"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.RefPF.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RefV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZBSH.RefV.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZCAB"
               titleID="IEC61850_7_4.LNGroupZ::ZCAB.cl.title"
               base="ConductorLN"/>
         <LNClass name="ZCAP"
               titleID="IEC61850_7_4.LNGroupZ::ZCAP.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="DschBlk"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZCAP.DschBlk.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="CapDS"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZCAP.CapDS.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZCON"
               titleID="IEC61850_7_4.LNGroupZ::ZCON.cl.title"
               base="BaseConverterLN"/>
         <LNClass name="ZGEN"
               titleID="IEC61850_7_4.LNGroupZ::ZGEN.cl.title"
               base="CmdEquipmentInterfaceLN">
            <DataObject name="GnSt"
                     type="ENS"
                     underlyingType="RotatingMachineStateKind"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.GnSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpNoLod"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.OpNoLod.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="RotDir"
                     type="ENS"
                     underlyingType="RotationalDirectionKind"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.RotDir.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpUnExt"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.OpUnExt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpOvExt"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.OpOvExt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="LosOil"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.LosOil.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LosVac"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.LosVac.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PresAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.PresAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GnSpd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.GnSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnCtl"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.GnCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DExt"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.DExt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AuxSco"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.AuxSco.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArR"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.VArR.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArL"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.VArL.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DmdW"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.DmdW.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.WRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.VARtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZGEN.VRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZGIL"
               titleID="IEC61850_7_4.LNGroupZ::ZGIL.cl.title"
               base="EquipmentInterfaceLN"/>
         <LNClass name="ZLIN"
               titleID="IEC61850_7_4.LNGroupZ::ZLIN.cl.title"
               base="ConductorLN"/>
         <LNClass name="ZMOT"
               titleID="IEC61850_7_4.LNGroupZ::ZMOT.cl.title"
               base="CmdEquipmentInterfaceLN">
            <DataObject name="MotSt"
                     type="ENS"
                     underlyingType="RotatingMachineStateKind"
                     descID="IEC61850_7_4.LNGroupZ::ZMOT.MotSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RotThmSt"
                     type="ENS"
                     underlyingType="RotorThermalStateKind"
                     descID="IEC61850_7_4.LNGroupZ::ZMOT.RotThmSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LosOil"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZMOT.LosOil.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LosVac"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZMOT.LosVac.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PresAlm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZMOT.PresAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DExt"
                     type="SPC"
                     descID="IEC61850_7_4.LNGroupZ::ZMOT.DExt.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZREA"
               titleID="IEC61850_7_4.LNGroupZ::ZREA.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZREA.VRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZREA.ARtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZREA.VARtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZREA.VArRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZRES"
               titleID="IEC61850_7_4.LNGroupZ::ZRES.cl.title"
               base="EquipmentInterfaceLN"/>
         <LNClass name="ZRRC"
               titleID="IEC61850_7_4.LNGroupZ::ZRRC.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="GnSt"
                     type="ENS"
                     underlyingType="RotatingMachineStateKind"
                     descID="IEC61850_7_4.LNGroupZ::ZRRC.GnSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GnSpd"
                     type="MV"
                     descID="IEC61850_7_4.LNGroupZ::ZRRC.GnSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnCtl"
                     type="DPC"
                     descID="IEC61850_7_4.LNGroupZ::ZRRC.GnCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZSAR"
               titleID="IEC61850_7_4.LNGroupZ::ZSAR.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="OpCnt"
                     type="INS"
                     descID="IEC61850_7_4.LNGroupZ::ZSAR.OpCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpSar"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_4.LNGroupZ::ZSAR.OpSar.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZSCR"
               titleID="IEC61850_7_4.LNGroupZ::ZSCR.cl.title"
               base="CmdEquipmentInterfaceLN">
            <DataObject name="Alm"
                     type="SPS"
                     descID="IEC61850_7_4.LNGroupZ::ZSCR.Alm.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="AmpSpt"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupZ::ZSCR.AmpSpt.desc"
                     presCond="MFcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupZ::ZSCR__(_MFcond(2)_=__((_SetV,_AmpSpt_))__)_.cond.LNGroupZ::ZSCR.AmpSpt"
                     dsPresCond="O"/>
            <DataObject name="VolSpt"
                     type="APC"
                     descID="IEC61850_7_4.LNGroupZ::ZSCR.VolSpt.desc"
                     presCond="MFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.LNGroupZ::ZSCR__(_MFcond(3)_=__((_SetA,_VolSpt_))__)_.cond.LNGroupZ::ZSCR.VolSpt"
                     dsPresCond="O"/>
            <DataObject name="OpModRect"
                     type="ENG"
                     underlyingType="RectifierControlModeKind"
                     descID="IEC61850_7_4.LNGroupZ::ZSCR.OpModRect.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="SetA"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSCR.SetA.desc"
                     presCond="MFcond"
                     presCondArgs="3"
                     presCondArgsID="IEC61850_7_4.LNGroupZ::ZSCR__(_MFcond(3)_=__((_SetA,_VolSpt_))__)_.cond.LNGroupZ::ZSCR.SetA"
                     dsPresCond="F"/>
            <DataObject name="SetV"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSCR.SetV.desc"
                     presCond="MFcond"
                     presCondArgs="2"
                     presCondArgsID="IEC61850_7_4.LNGroupZ::ZSCR__(_MFcond(2)_=__((_SetV,_AmpSpt_))__)_.cond.LNGroupZ::ZSCR.SetV"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZSMC"
               titleID="IEC61850_7_4.LNGroupZ::ZSMC.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="RotDir"
                     type="ENS"
                     underlyingType="RotationalDirectionKind"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.RotDir.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.VRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.ARtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="WRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.WRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VARtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.VARtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="SpdRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.SpdRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="SpdCrit"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.SpdCrit.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FldRisTmp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.FldRisTmp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SttRisTmp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.SttRisTmp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SttRis"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.SttRis.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PFRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.PFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Iner"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.Iner.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FldAmpRtg"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.FldAmpRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FldAmpRtgZer"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.FldAmpRtgZer.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FldRis"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.FldRis.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BaseImp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.BaseImp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SttLkgX"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.SttLkgX.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xd"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.Xd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xdp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.Xdp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xds"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.Xds.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xq"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.Xq.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xqp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.Xqp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xqs"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.Xqs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="X0"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.X0.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="X2"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.X2.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTdp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTdp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTds"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTds.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTd0p"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTd0p.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTd0s"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTd0s.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTqp"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTqp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTqs"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTqs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTq0p"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTq0p.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTq0s"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTq0s.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmTa"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.TmTa.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SatCffS10"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.SatCffS10.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SatCffS12"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZSMC.SatCffS12.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZTCF"
               titleID="IEC61850_7_4.LNGroupZ::ZTCF.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="PwrHz"
                     type="ASG"
                     descID="IEC61850_7_4.LNGroupZ::ZTCF.PwrHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="ZTCR"
               titleID="IEC61850_7_4.LNGroupZ::ZTCR.cl.title"
               base="EquipmentInterfaceLN"/>
      </LNClasses>
</NS>
`, ID = `<?xml version="1.0" encoding="UTF-8"?>
<NS xmlns="http://www.iec.ch/61850/2016/NSD"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.iec.ch/61850/2016/NSD NSD.xsd"
    id="IEC 61850-7-420"
    version="2019"
    revision="A"
    release="4"
    umlVersion="WG17build8"
    umlDate="2021-09-09T00:00:00Z"
    publicationStage="IS">
   <Copyright>
         <Notice>
			COPYRIGHT (c) IEC, www.iec.ch/tc57/supportdocuments. This version of this NSD is part of IEC_61850-7-420:2020 Edition 2.0; see the IEC_61850-7-420:2020 Edition 2.0 for full legal notices. In case of any differences between the here-below code and the IEC published content, the here-below definition supersedes the IEC publication; it may contain updates. See history files. The whole document has to be taken into account to have a full description of this code component.
			See www.iec.ch/CCv1 for copyright details.
			</Notice>
         <License uri="www.iec.ch/CCv1" kind="Standard"/>
      </Copyright>
   <Changes version="2009"
            revision="A"
            tissues="642-646, 648, 651, 654, 666, 701, 703, 704, 888-889, 903-907, 916, 917, 921-923, 945-947, 955-960, 975-976, 978-989, 992-995, 999-1001, 1003-1006, 1008-1024, 1027-1028, 1031-1033, 1035, 1073-1074, 1087-1090, 1094-1115, 1124, 1126, 1132, 1134, 1153, 1158, 1182, 1183, 1206, 1210, 1215-1219, 1225, 1314, 1320, 1323, 1366, 1392-1394, 1414"/>
   <DependsOn id="IEC 61850-7-4" version="2007" revision="B"/>
   <Abbreviations>
         <Abbreviation name="Add"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Add.desc"/>
         <Abbreviation name="Ava"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Ava.desc"/>
         <Abbreviation name="Avar"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Avar.desc"/>
         <Abbreviation name="Cea"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Cea.desc"/>
         <Abbreviation name="Cnst"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Cnst.desc"/>
         <Abbreviation name="Ctb"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Ctb.desc"/>
         <Abbreviation name="Eff"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Eff.desc"/>
         <Abbreviation name="Egz"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Egz.desc"/>
         <Abbreviation name="Elc"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Elc.desc"/>
         <Abbreviation name="Eps"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Eps.desc"/>
         <Abbreviation name="Esp"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Esp.desc"/>
         <Abbreviation name="Expc"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Expc.desc"/>
         <Abbreviation name="Fct"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Fct.desc"/>
         <Abbreviation name="Frm"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Frm.desc"/>
         <Abbreviation name="Iva"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Iva.desc"/>
         <Abbreviation name="Ivar"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Ivar.desc"/>
         <Abbreviation name="Mn"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Mn.desc"/>
         <Abbreviation name="Ms"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Ms.desc"/>
         <Abbreviation name="Mx"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Mx.desc"/>
         <Abbreviation name="Opl"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Opl.desc"/>
         <Abbreviation name="Ple"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Ple.desc"/>
         <Abbreviation name="Poa"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Poa.desc"/>
         <Abbreviation name="Ren"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Ren.desc"/>
         <Abbreviation name="Rnt"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Rnt.desc"/>
         <Abbreviation name="Rpd"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Rpd.desc"/>
         <Abbreviation name="Rpu"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Rpu.desc"/>
         <Abbreviation name="Rsp"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Rsp.desc"/>
         <Abbreviation name="Rtn"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Rtn.desc"/>
         <Abbreviation name="Sink"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Sink.desc"/>
         <Abbreviation name="Snpt"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Snpt.desc"/>
         <Abbreviation name="Soe"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Soe.desc"/>
         <Abbreviation name="Soh"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Soh.desc"/>
         <Abbreviation name="Susc"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Susc.desc"/>
         <Abbreviation name="Thr"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Thr.desc"/>
         <Abbreviation name="Unit"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Unit.desc"/>
         <Abbreviation name="Wst"
                    descID="IEC61850_7_420.Abbreviations_7_420::Abbr_7_420Term.Wst.desc"/>
      </Abbreviations>
   <Enumerations>
         <Enumeration name="ACSystemKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ACSystemKind.cl.title">
            <Literal name="Single phase" literalVal="1"/>
            <Literal name="Two phases" literalVal="2"/>
            <Literal name="Three phases" literalVal="3"/>
         </Enumeration>
         <Enumeration name="ACToDCConversionKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ACToDCConversionKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="AC to DC" literalVal="1"/>
            <Literal name="AC to AC to DC" literalVal="2"/>
            <Literal name="AC to DC to DC" literalVal="3"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="BatteryTypeKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Lead-acid"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Lead-acid.desc"/>
            <Literal name="Nickel-metal hydrate (NiMH)"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Nickel-metal_hydrate_(NiMH).desc"/>
            <Literal name="Nickel-cadmium (NiCd)"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Nickel-cadmium_(NiCd).desc"/>
            <Literal name="Carbon zinc"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Carbon_zinc.desc"/>
            <Literal name="Lithium ion"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Lithium_ion.desc"/>
            <Literal name="Zinc chloride"
                  literalVal="6"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Zinc_chloride.desc"/>
            <Literal name="Alkaline"
                  literalVal="7"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Alkaline.desc"/>
            <Literal name="Rechargeable alkaline"
                  literalVal="8"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Rechargeable_alkaline.desc"/>
            <Literal name="Sodium sulphur (NaS)" literalVal="9"/>
            <Literal name="Flow" literalVal="10"/>
            <Literal name="Not applicable or not known"
                  literalVal="98"
                  descID="IEC61850_7_420.DOEnums_7_420::BatteryTypeKind.Not_applicable_or_not_known.desc"/>
            <Literal name="Unknown" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="BoilerKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::BoilerKind.cl.title">
            <Literal name="Regular boiler" literalVal="1"/>
            <Literal name="Condensing boiler" literalVal="2"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
         </Enumeration>
         <Enumeration name="CeasetoEnergizeStateKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateKind.cl.title">
            <Literal name="CTE not authorized"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateKind.CTE_not_authorized.desc"/>
            <Literal name="CTE authorized but not requested"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateKind.CTE_authorized_but_not_requested.desc"/>
            <Literal name="CTE auth and requested but DER not in CTE mode"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateKind.CTE_auth_and_requested_but_DER_not_in_CTE_mode.desc"/>
            <Literal name="DER in CTE mode but RTS not authorized"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateKind.DER_in_CTE_mode_but_RTS_not_authorized.desc"/>
            <Literal name="DER in CTE, RTS auth and not requested"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateKind.DER_in_CTE,_RTS_auth_and_not_requested.desc"/>
            <Literal name="RTS authorized and requested"
                  literalVal="6"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateKind.RTS_authorized_and_requested.desc"/>
         </Enumeration>
         <Enumeration name="CeasetoEnergizeStateTransitionKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateTransitionKind.cl.title">
            <Literal name="Cease to energize"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateTransitionKind.Cease_to_energize.desc"/>
            <Literal name="Return to service"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::CeasetoEnergizeStateTransitionKind.Return_to_service.desc"/>
         </Enumeration>
         <Enumeration name="ChargeSourceKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ChargeSourceKind.cl.title">
            <Literal name="Mode A"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::ChargeSourceKind.Mode_A.desc"/>
            <Literal name="Mode B"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::ChargeSourceKind.Mode_B.desc"/>
            <Literal name="Mode C"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::ChargeSourceKind.Mode_C.desc"/>
         </Enumeration>
         <Enumeration name="CHPEnergyConverterKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::CHPEnergyConverterKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Gas turbine" literalVal="1"/>
            <Literal name="Fuel cell" literalVal="2"/>
            <Literal name="Reciprocating engine" literalVal="3"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Unknown" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="CHPGeneratorKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::CHPGeneratorKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Rotating" literalVal="1"/>
            <Literal name="Inverter" literalVal="2"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Unknown" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="CHPOperatingModeKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::CHPOperatingModeKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Heat-production driven" literalVal="1"/>
            <Literal name="Electrical generation driven" literalVal="2"/>
            <Literal name="Combined heat and generation driven" literalVal="3"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Unknown" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="CoolingMethodKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::CoolingMethodKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Passive air cooling (heatsink)" literalVal="1"/>
            <Literal name="Forced air cooling (fan + heatsink)" literalVal="2"/>
            <Literal name="Fluid cooling (water)" literalVal="3"/>
            <Literal name="Heat pipe" literalVal="4"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="DERStateKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::DERStateKind.cl.title">
            <Literal name="on but disconnected and not ready" literalVal="1"/>
            <Literal name="starting up" literalVal="2"/>
            <Literal name="disconnected and available" literalVal="3"/>
            <Literal name="disconnected and authorized" literalVal="4"/>
            <Literal name="synchronizing" literalVal="5"/>
            <Literal name="running" literalVal="6"/>
            <Literal name="stopping and disconnecting under emergency conditions"
                  literalVal="7"/>
            <Literal name="stopping" literalVal="8"/>
            <Literal name="disconnected and blocked"
                  literalVal="9"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateKind.disconnected_and_blocked.desc"/>
            <Literal name="disconnected and in maintenance"
                  literalVal="10"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateKind.disconnected_and_in_maintenance.desc"/>
            <Literal name="failed" literalVal="11"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
         </Enumeration>
         <Enumeration name="DERStateTransitionKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.cl.title">
            <Literal name="Start"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Start.desc"/>
            <Literal name="Connect"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Connect.desc"/>
            <Literal name="Disconnect"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Disconnect.desc"/>
            <Literal name="Disconnect under emergency conditions"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Disconnect_under_emergency_conditions.desc"/>
            <Literal name="Get blocked"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Get_blocked.desc"/>
            <Literal name="Get unblocked"
                  literalVal="6"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Get_unblocked.desc"/>
            <Literal name="Go to maintenance"
                  literalVal="7"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Go_to_maintenance.desc"/>
            <Literal name="Go out of maintenance"
                  literalVal="8"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Go_out_of_maintenance.desc"/>
            <Literal name="Stop"
                  literalVal="9"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Stop.desc"/>
            <Literal name="Turn off controller"
                  literalVal="10"
                  descID="IEC61850_7_420.DOEnums_7_420::DERStateTransitionKind.Turn_off_controller.desc"/>
         </Enumeration>
         <Enumeration name="DERSynchronizationKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::DERSynchronizationKind.cl.title">
            <Literal name="Unavailable to connect" literalVal="1"/>
            <Literal name="Not synchronized, available to connect" literalVal="2"/>
            <Literal name="In synchronization process" literalVal="3"/>
            <Literal name="Synchronized and not connected" literalVal="4"/>
            <Literal name="Synchronized and connected" literalVal="5"/>
            <Literal name="Synchronization failure" literalVal="6"/>
            <Literal name="Disconnecting from grid" literalVal="7"/>
            <Literal name="Not applicable or Unknown" literalVal="98"/>
         </Enumeration>
         <Enumeration name="DERUnitKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::DERUnitKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Diesel / gas engine" literalVal="1"/>
            <Literal name="Gas Turbine engine" literalVal="2"/>
            <Literal name="PV" literalVal="3"/>
            <Literal name="PV plus Storage" literalVal="4"/>
            <Literal name="Lithium Ion Battery Storage" literalVal="5"/>
            <Literal name="Fuel cell" literalVal="6"/>
            <Literal name="Hydro generator" literalVal="7"/>
            <Literal name="Wind turbine" literalVal="8"/>
            <Literal name="Flow battery storage" literalVal="9"/>
            <Literal name="Air compression storage" literalVal="10"/>
            <Literal name="Flywheel storage" literalVal="11"/>
            <Literal name="Capacitor storage" literalVal="12"/>
            <Literal name="Vehicle-to-Grid (V2G)" literalVal="13"/>
            <Literal name="Mixed, hybrid DER" literalVal="50"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="ECPConnKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ECPConnKind.cl.title">
            <Literal name="PoC: Electric point positioned at the connection of the DER to its local EPS"
                  literalVal="1"/>
            <Literal name="IntDER: Electric point positioned internally to the DER"
                  literalVal="2"/>
            <Literal name="PCC: Electric point positioned at the connection of local EPS to area EPS - the EPS contains DERs including local loads"
                  literalVal="3"/>
            <Literal name="PCCD: specific PCC when the EPS contains only DERs with no loads"
                  literalVal="4"/>
            <Literal name="PoCoL: Electric point positioned at the connection of load within the DER local EPS"
                  literalVal="5"/>
            <Literal name="ExtPCC: Electric point positioned at the connection to a PCC external to the area EPS"
                  literalVal="6"/>
            <Literal name="ExtPoC: Electric point positioned at the connection of DER within local EPS outside of the DER local EPS"
                  literalVal="7"/>
            <Literal name="AuxLoad: Connection of auxilliary load to DER" literalVal="8"/>
            <Literal name="PoCG: Connection of group of possibly different types of DERs to local EPS"
                  literalVal="9"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
         </Enumeration>
         <Enumeration name="ECPIslandStateKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ECPIslandStateKind.cl.title">
            <Literal name="Factory configuration (from vendor)" literalVal="1"/>
            <Literal name="Default configuration (after installation)" literalVal="2"/>
            <Literal name="Normal grid-connected configuration" literalVal="3"/>
            <Literal name="Islanded condition 1 (local island behind the PCC)"
                  literalVal="4"/>
            <Literal name="Islanded condition 2 (islanded at PCC)" literalVal="5"/>
            <Literal name="Islanded condition 3 (multiple PCC regional island)"
                  literalVal="6"/>
            <Literal name="1st Alternate grid-connected configuration" literalVal="7"/>
            <Literal name="2nd Alternate grid-connected configuration" literalVal="8"/>
            <Literal name="3rd Alternate grid-connected configuration" literalVal="9"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
         </Enumeration>
         <Enumeration name="EquipmentTestResultKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::EquipmentTestResultKind.cl.title">
            <Literal name="unavailable"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::EquipmentTestResultKind.unavailable.desc"/>
            <Literal name="success"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::EquipmentTestResultKind.success.desc"/>
            <Literal name="fault (bad)"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::EquipmentTestResultKind.fault_(bad).desc"/>
            <Literal name="test running"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::EquipmentTestResultKind.test_running.desc"/>
            <Literal name="test aborted" literalVal="5"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
         </Enumeration>
         <Enumeration name="ExciterKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ExciterKind.cl.title">
            <Literal name="DC"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::ExciterKind.DC.desc"/>
            <Literal name="AC"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::ExciterKind.AC.desc"/>
         </Enumeration>
         <Enumeration name="FrequencyActivePowerRefParamKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::FrequencyActivePowerRefParamKind.cl.title">
            <Literal name="Active power as absolute value" literalVal="1"/>
            <Literal name="Active power as percent of maximum active power"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::FrequencyActivePowerRefParamKind.Active_power_as_percent_of_maximum_active_power.desc"/>
            <Literal name="Active power as percent of snapshot active power reference"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::FrequencyActivePowerRefParamKind.Active_power_as_percent_of_snapshot_active_power_reference.desc"/>
            <Literal name="Active power as percent of the available range active power"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::FrequencyActivePowerRefParamKind.Active_power_as_percent_of_the_available_range_active_power.desc"/>
            <Literal name="Active power as percent of the full range active power"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::FrequencyActivePowerRefParamKind.Active_power_as_percent_of_the_full_range_active_power.desc"/>
         </Enumeration>
         <Enumeration name="FuelDeliveryKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::FuelDeliveryKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Passive" literalVal="1"/>
            <Literal name="Pump" literalVal="2"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="FuelKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::FuelKind.cl.title">
            <Literal name="BIT"
                  literalVal="0"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.BIT.desc"/>
            <Literal name="LIG"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.LIG.desc"/>
            <Literal name="SUB"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.SUB.desc"/>
            <Literal name="WC"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.WC.desc"/>
            <Literal name="SC"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.SC.desc"/>
            <Literal name="DFO"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.DFO.desc"/>
            <Literal name="JF"
                  literalVal="6"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.JF.desc"/>
            <Literal name="KER"
                  literalVal="7"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.KER.desc"/>
            <Literal name="PC"
                  literalVal="8"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.PC.desc"/>
            <Literal name="RFO"
                  literalVal="9"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.RFO.desc"/>
            <Literal name="WO"
                  literalVal="10"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.WO.desc"/>
            <Literal name="NG"
                  literalVal="11"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.NG.desc"/>
            <Literal name="BFG"
                  literalVal="12"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.BFG.desc"/>
            <Literal name="OG"
                  literalVal="13"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.OG.desc"/>
            <Literal name="PG"
                  literalVal="14"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.PG.desc"/>
            <Literal name="NUC"
                  literalVal="15"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.NUC.desc"/>
            <Literal name="AB"
                  literalVal="16"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.AB.desc"/>
            <Literal name="MSW"
                  literalVal="17"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.MSW.desc"/>
            <Literal name="OBS"
                  literalVal="18"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.OBS.desc"/>
            <Literal name="TDF"
                  literalVal="19"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.TDF.desc"/>
            <Literal name="WDS"
                  literalVal="20"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.WDS.desc"/>
            <Literal name="OBL"
                  literalVal="21"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.OBL.desc"/>
            <Literal name="BLQ"
                  literalVal="22"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.BLQ.desc"/>
            <Literal name="SLW"
                  literalVal="23"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.SLW.desc"/>
            <Literal name="WDL"
                  literalVal="24"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.WDL.desc"/>
            <Literal name="LFG"
                  literalVal="25"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.LFG.desc"/>
            <Literal name="OBG"
                  literalVal="26"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.OBG.desc"/>
            <Literal name="GEO"
                  literalVal="27"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.GEO.desc"/>
            <Literal name="WAT"
                  literalVal="28"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.WAT.desc"/>
            <Literal name="SUN"
                  literalVal="29"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.SUN.desc"/>
            <Literal name="WND"
                  literalVal="30"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.WND.desc"/>
            <Literal name="HPS" literalVal="31"/>
            <Literal name="PUR"
                  literalVal="32"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.PUR.desc"/>
            <Literal name="WH"
                  literalVal="33"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.WH.desc"/>
            <Literal name="OTH"
                  literalVal="34"
                  descID="IEC61850_7_420.DOEnums_7_420::FuelKind.OTH.desc"
                  deprecated="true"/>
         </Enumeration>
         <Enumeration name="FuelProcessingInFuelKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::FuelProcessingInFuelKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Hydrogen plus pure oxygen" literalVal="1"/>
            <Literal name="Hydrogen" literalVal="2"/>
            <Literal name="Methanol" literalVal="3"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="FuelProcessingKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::FuelProcessingKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Steam reforming" literalVal="1"/>
            <Literal name="Partial oxidation" literalVal="2"/>
            <Literal name="Autothermal reforming" literalVal="3"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="FuelProcessingOutFuelKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::FuelProcessingOutFuelKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Hydrogen" literalVal="1"/>
            <Literal name="Reformate" literalVal="2"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="GroundingSystemKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::GroundingSystemKind.cl.title">
            <Literal name="IT"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::GroundingSystemKind.IT.desc"/>
            <Literal name="TN-S"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::GroundingSystemKind.TN-S.desc"/>
            <Literal name="TN-C"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::GroundingSystemKind.TN-C.desc"/>
            <Literal name="TN-C-S"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::GroundingSystemKind.TN-C-S.desc"/>
            <Literal name="TT"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::GroundingSystemKind.TT.desc"/>
         </Enumeration>
         <Enumeration name="InverterControlSourceKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::InverterControlSourceKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Current-source inverter (CSI)" literalVal="1"/>
            <Literal name="Voltage-controlled voltage-source inverter (VC-VSI)"
                  literalVal="2"/>
            <Literal name="Current-controlled voltage-source inverter (CC-VSI)"
                  literalVal="3"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="InverterSwitchKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::InverterSwitchKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Field effect transistor" literalVal="1"/>
            <Literal name="Insulated gate bipolar transistor" literalVal="2"/>
            <Literal name="Thyristor" literalVal="3"/>
            <Literal name="Gate turn off thyristor" literalVal="4"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="IsolationKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::IsolationKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Low frequency transformer isolated" literalVal="1"/>
            <Literal name="Hi frequency transformer isolated" literalVal="2"/>
            <Literal name="Non-isolated, grounded" literalVal="3"/>
            <Literal name="Non-isolated, isolated DC source" literalVal="4"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="OutputFilterKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::OutputFilterKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="None" literalVal="1"/>
            <Literal name="Series filter (L)" literalVal="2"/>
            <Literal name="Parallel filter (LC)" literalVal="3"/>
            <Literal name="Series-Parallel (LCL)" literalVal="4"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PhaseFeedKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PhaseFeedKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Feeding from N to A" literalVal="1"/>
            <Literal name="Feeding from N to B" literalVal="2"/>
            <Literal name="Feeding from N to C" literalVal="3"/>
            <Literal name="Feeding from A to B" literalVal="4"/>
            <Literal name="Feeding from A to C" literalVal="5"/>
            <Literal name="Feeding from B to A" literalVal="6"/>
            <Literal name="Feeding from B to C" literalVal="7"/>
            <Literal name="Feeding from C to A" literalVal="8"/>
            <Literal name="Feeding from C to B" literalVal="9"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PhaseKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PhaseKind.cl.title">
            <Literal name="Single phase to neutral" literalVal="1"/>
            <Literal name="Split phase" literalVal="2"/>
            <Literal name="2-phase" literalVal="3"/>
            <Literal name="3-phase delta" literalVal="4"/>
            <Literal name="3-phase wye / 4-wires" literalVal="5"/>
            <Literal name="3-phase wye / 5-wires"
                  literalVal="6"
                  descID="IEC61850_7_420.DOEnums_7_420::PhaseKind.3-phase_wye__per__5-wires.desc"/>
            <Literal name="DC" literalVal="9"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
         </Enumeration>
         <Enumeration name="PVArrayControlModeKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVArrayControlModeKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Maximum power point tracking (MPPT)" literalVal="1"/>
            <Literal name="Power limiter controller" literalVal="2"/>
            <Literal name="DC current limit" literalVal="3"/>
            <Literal name="Array voltage control" literalVal="4"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PVAssemblyKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVAssemblyKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Array" literalVal="1"/>
            <Literal name="Sub-array" literalVal="2"/>
            <Literal name="String" literalVal="3"/>
            <Literal name="Module" literalVal="4"/>
            <Literal name="Plant" literalVal="5"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PVConfigKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVConfigKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Flat plate" literalVal="1"/>
            <Literal name="Concentrating" literalVal="2"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PVControlStateKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVControlStateKind.cl.title">
            <Literal name="Not ready" literalVal="1"/>
            <Literal name="Asleep" literalVal="2"/>
            <Literal name="Awaking up" literalVal="3"/>
            <Literal name="Awake" literalVal="4"/>
            <Literal name="Shutdown / Sleep test" literalVal="5"/>
            <Literal name="Under test" literalVal="6"/>
         </Enumeration>
         <Enumeration name="PVGroundingKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVGroundingKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Positive ground" literalVal="1"/>
            <Literal name="Negative ground" literalVal="2"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Not grounded" literalVal="3"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PVTrackingControlKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVTrackingControlKind.cl.title">
            <Literal name="Stop" literalVal="1"/>
            <Literal name="Start tracking" literalVal="2"/>
            <Literal name="Start reference run" literalVal="3"/>
            <Literal name="Go to manual mode" literalVal="4"/>
            <Literal name="Go to stow position" literalVal="5"/>
            <Literal name="Go to storm position" literalVal="6"/>
            <Literal name="Go to snow position" literalVal="7"/>
            <Literal name="Go to night position" literalVal="8"/>
            <Literal name="Go to maintenance position" literalVal="9"/>
         </Enumeration>
         <Enumeration name="PVTrackingKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Fixed"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.Fixed.desc"/>
            <Literal name="Vertical"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.Vertical.desc"/>
            <Literal name="Inclined"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.Inclined.desc"/>
            <Literal name="Hor Ver"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.Hor_Ver.desc"/>
            <Literal name="Horizontal"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.Horizontal.desc"/>
            <Literal name="Hor Hor NS"
                  literalVal="6"
                  descID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.Hor_Hor_NS.desc"/>
            <Literal name="Hor Hor ES"
                  literalVal="7"
                  descID="IEC61850_7_420.DOEnums_7_420::PVTrackingKind.Hor_Hor_ES.desc"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PVTrackingStatusKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVTrackingStatusKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Stopped" literalVal="1"/>
            <Literal name="Automatic tracking in progress" literalVal="2"/>
            <Literal name="Reference run completed" literalVal="4"/>
            <Literal name="Manual mode" literalVal="5"/>
            <Literal name="Reference run in progress" literalVal="3"/>
            <Literal name="Going to position" literalVal="6"/>
            <Literal name="In target position" literalVal="7"/>
            <Literal name="In stow position" literalVal="8"/>
            <Literal name="In storm position" literalVal="9"/>
            <Literal name="In snow position" literalVal="10"/>
            <Literal name="In night position" literalVal="11"/>
            <Literal name="In maintenance position" literalVal="12"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="PVTrackingTechnologyKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::PVTrackingTechnologyKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Sensory tracking" literalVal="1"/>
            <Literal name="Astronomical tracking" literalVal="2"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="QuadrantRunningStateKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::QuadrantRunningStateKind.cl.title">
            <Literal name="P greater than zero, Q greater than zero" literalVal="1"/>
            <Literal name="P less than zero, Q greater than zero" literalVal="2"/>
            <Literal name="P less than zero, Q less than zero" literalVal="3"/>
            <Literal name="P greater than zero, Q less than zero" literalVal="4"/>
            <Literal name="P equals zero, Q greater than zero" literalVal="5"/>
            <Literal name="P equals zero, Q less than zero" literalVal="6"/>
            <Literal name="P greater than zero, Q equals zero" literalVal="7"/>
            <Literal name="P less than zero, Q equals zero" literalVal="8"/>
            <Literal name="P equals zero, Q equals zero"
                  literalVal="9"
                  descID="IEC61850_7_420.DOEnums_7_420::QuadrantRunningStateKind.P_equals_zero,_Q_equals_zero.desc"/>
         </Enumeration>
         <Enumeration name="ReactivePowerRefParamKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ReactivePowerRefParamKind.cl.title">
            <Literal name="Reactive power in percent of WMax"
                  literalVal="1"
                  descID="IEC61850_7_420.DOEnums_7_420::ReactivePowerRefParamKind.Reactive_power_in_percent_of_WMax.desc"/>
            <Literal name="Reactive power in percent of VArMax"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::ReactivePowerRefParamKind.Reactive_power_in_percent_of_VArMax.desc"/>
            <Literal name="Reactive power in percent of VArAvl"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::ReactivePowerRefParamKind.Reactive_power_in_percent_of_VArAvl.desc"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
         </Enumeration>
         <Enumeration name="ThermalEnergyMediumKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ThermalEnergyMediumKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Water" literalVal="1"/>
            <Literal name="Steam" literalVal="2"/>
            <Literal name="Air" literalVal="3"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="ThermalEnergyStorageKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::ThermalEnergyStorageKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="For heating with storage" literalVal="1"/>
            <Literal name="For heating without storage" literalVal="2"/>
            <Literal name="For cooling with storage" literalVal="3"/>
            <Literal name="For cooling without storage" literalVal="4"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="VoltageActivePowerRefParamKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::VoltageActivePowerRefParamKind.cl.title">
            <Literal name="Active power as absolute value" literalVal="1"/>
            <Literal name="Active power as percent of maximum active power"
                  literalVal="2"
                  descID="IEC61850_7_420.DOEnums_7_420::VoltageActivePowerRefParamKind.Active_power_as_percent_of_maximum_active_power.desc"/>
            <Literal name="Active power as percent of snapshot active power reference"
                  literalVal="3"
                  descID="IEC61850_7_420.DOEnums_7_420::VoltageActivePowerRefParamKind.Active_power_as_percent_of_snapshot_active_power_reference.desc"/>
            <Literal name="Active power as percent of the available range active power"
                  literalVal="4"
                  descID="IEC61850_7_420.DOEnums_7_420::VoltageActivePowerRefParamKind.Active_power_as_percent_of_the_available_range_active_power.desc"/>
            <Literal name="Active power as percent of the full range active power"
                  literalVal="5"
                  descID="IEC61850_7_420.DOEnums_7_420::VoltageActivePowerRefParamKind.Active_power_as_percent_of_the_full_range_active_power.desc"/>
         </Enumeration>
         <Enumeration name="VoltageRegulationKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::VoltageRegulationKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="Regulated output: fixed voltage" literalVal="1"/>
            <Literal name="Regulated output: variable voltage" literalVal="2"/>
            <Literal name="Filtered output: load dependent" literalVal="3"/>
            <Literal name="Unregulated and unfiltered" literalVal="4"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
         <Enumeration name="WaveformConditioningKind"
                   titleID="IEC61850_7_420.DOEnums_7_420::WaveformConditioningKind.cl.title">
            <Literal name="Not applicable or Unknown" literalVal="0" deprecated="true"/>
            <Literal name="None" literalVal="1"/>
            <Literal name="EMI filter" literalVal="2"/>
            <Literal name="Line filter" literalVal="3"/>
            <Literal name="EMI/Line filter" literalVal="4"/>
            <Literal name="Unified power factor" literalVal="5"/>
            <Literal name="Not applicable or not known" literalVal="98"/>
            <Literal name="Other" literalVal="99" deprecated="true"/>
         </Enumeration>
      </Enumerations>
   <LNClasses>
         <AbstractLNClass name="DEResourceLN"
                       titleID="IEC61850_7_420.AbstractDerLNs_7_420::DEResourceLN.cl.title"
                       base="AllEnergyDEResourceLN"/>
         <AbstractLNClass name="AllEnergyDEResourceLN"
                       titleID="IEC61850_7_420.AbstractDerLNs_7_420::AllEnergyDEResourceLN.cl.title"
                       base="ControlEquipmentInterfaceLN">
            <DataObject name="DERId"
                     type="VSG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::AllEnergyDEResourceLN.DERId.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="DER_NameplateRatingsLN"
                       titleID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.cl.title"
                       base="DEResourceLN">
            <DataObject name="OutEcpRef"
                     type="ORG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.OutEcpRef.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="EcpConnTyp"
                     type="ENG"
                     underlyingType="ECPConnKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.EcpConnTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhsConnTyp"
                     type="ENG"
                     underlyingType="PhaseKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.PhsConnTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="DERTyp"
                     type="ENG"
                     underlyingType="DERUnitKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.DERTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OvPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.OvPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.UnPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TmpMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.TmpMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FltRtgPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.FltRtgPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndReactRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.GndReactRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FltAMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.FltAMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SelfVRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.SelfVRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FltDurMaxTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.FltDurMaxTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SelfWRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.SelfWRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SelfPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.SelfPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RvSeq"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.RvSeq.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SelfVRngRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.SelfVRngRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EfcRtgPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.EfcRtgPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndRisRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.GndRisRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SuscRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.SuscRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RegClas"
                     type="VSG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.RegClas.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="HzNomRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.HzNomRtg.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="HzMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.HzMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_NameplateRatingsLN.HzMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="DER_StateAbstractLN"
                       titleID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.cl.title"
                       base="DER_ActualPowerInformationLN">
            <DataObject name="DEROpSt"
                     type="ENS"
                     underlyingType="DERStateKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.DEROpSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="TestRsl"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.TestRsl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TestAddRsl"
                     type="ENS"
                     underlyingType="EquipmentTestResultKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.TestAddRsl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AuthConn"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.AuthConn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DEROpStCtl"
                     type="ENC"
                     underlyingType="DERStateTransitionKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.DEROpStCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CeaEgzCtl"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.CeaEgzCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WSpt"
                     type="APC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.WSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VArSpt"
                     type="APC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.VArSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EmgMod"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.EmgMod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AuthDscon"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.AuthDscon.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TestEna"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.TestEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Test"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.Test.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrMaxTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.StrMaxTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OffMinTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.OffMinTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OnMinTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.OnMinTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StopDlMinTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.StopDlMinTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StopMaxTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.StopMaxTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrDlMinTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.StrDlMinTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AutoStr"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.AutoStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AutoConn"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_StateAbstractLN.AutoConn.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="DER_ActualPowerInformationLN"
                       titleID="IEC61850_7_420.AbstractDerLNs_7_420::DER_ActualPowerInformationLN.cl.title"
                       base="DER_OperationalSettingsLN">
            <DataObject name="SelfSvcWh"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_ActualPowerInformationLN.SelfSvcWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VAPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_ActualPowerInformationLN.VAPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlUpW"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_ActualPowerInformationLN.AvlUpW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlDnW"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_ActualPowerInformationLN.AvlDnW.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="DER_OperationalSettingsLN"
                       titleID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.cl.title"
                       base="DER_NameplateRatingsLN">
            <DataObject name="PFSign"
                     type="ENG"
                     underlyingType="PFSignKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.PFSign.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OplPct"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.OplPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OvPF"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.OvPF.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PFExtSet"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.PFExtSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IsldCtlFol"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.IsldCtlFol.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ClcTotVA"
                     type="ENG"
                     underlyingType="STotalCalcMethodKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.ClcTotVA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FllBckTmExp"
                     type="ING"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.FllBckTmExp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AvarZerWMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.AvarZerWMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IvarZerWMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::DER_OperationalSettingsLN.IvarZerWMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="NonStorageOperationalSettingsLN"
                       titleID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.cl.title"
                       base="DER_StateAbstractLN">
            <DataObject name="VArTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.VArTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvarTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.AvarTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="IvarTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.IvarTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VArAvl"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.VArAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvarAvl"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.AvarAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="IvarAvl"
                     type="MV"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.IvarAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.WMax.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="WOvPFMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.WOvPFMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WUnPFMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.WUnPFMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRmp"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.WRmp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VArMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.VArMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AvarMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.AvarMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IvarMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.IvarMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.VMax.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.VMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.AMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VAMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.VAMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AvaMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.AvaMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IvaMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.IvaMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArSptRef"
                     type="ENG"
                     underlyingType="ReactivePowerRefParamKind"
                     descID="IEC61850_7_420.AbstractDerLNs_7_420::NonStorageOperationalSettingsLN.VArSptRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ElectricalReferenceLN"
                       titleID="IEC61850_7_420.AbstractEcpLNs_7_420::ElectricalReferenceLN.cl.title"
                       base="FunctionLN">
            <DataObject name="ElcStCtlRef"
                     type="ORG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::ElectricalReferenceLN.ElcStCtlRef.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="ElcRefId"
                     type="VSG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::ElectricalReferenceLN.ElcRefId.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ElcMsRef"
                     type="ORG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::ElectricalReferenceLN.ElcMsRef.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="PhysicalElectricalConnectionPointLN"
                       titleID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.cl.title"
                       base="ElectricalReferenceLN">
            <DataObject name="EcpIsldSt"
                     type="ENS"
                     underlyingType="ECPIslandStateKind"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.EcpIsldSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhsConnTyp"
                     type="ENG"
                     underlyingType="PhaseKind"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.PhsConnTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GndSys"
                     type="ENG"
                     underlyingType="GroundingSystemKind"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.GndSys.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRef"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.VRef.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VRefPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.VRefPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.VArRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VARtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.VARtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.WRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.VRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzNom"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.HzNom.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.VMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.VMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DERMsIncl"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.DERMsIncl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RefFrm"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.RefFrm.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="EcpIsldAuto"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::PhysicalElectricalConnectionPointLN.EcpIsldAuto.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="VirtualElectricalReferenceLN"
                       titleID="IEC61850_7_420.AbstractEcpLNs_7_420::VirtualElectricalReferenceLN.cl.title"
                       base="ElectricalReferenceLN">
            <DataObject name="InclElcRef"
                     type="ORG"
                     descID="IEC61850_7_420.AbstractEcpLNs_7_420::VirtualElectricalReferenceLN.InclElcRef.desc"
                     presCond="Mmulti"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="DER_GeneratorLN"
                       titleID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.cl.title"
                       base="GeneratorNameplateRatingsLN">
            <DataObject name="GnSynSt"
                     type="ENS"
                     underlyingType="DERSynchronizationKind"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnSynSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RmpLodSw"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.RmpLodSw.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TotStrCnt"
                     type="INS"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.TotStrCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RemExpcOpTms"
                     type="INS"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.RemExpcOpTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CnstWMax"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.CnstWMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnOpTm"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnOpTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnStabTm"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnStabTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnClDnTm"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnClDnTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AutoVRegPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.AutoVRegPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnEnTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnEnTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnEnPer"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnEnPer.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RenWPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.RenWPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="RenVArPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.RenVArPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnOnCnt"
                     type="INC"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnOnCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PerStrCnt"
                     type="INC"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.PerStrCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OpTms"
                     type="INC"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.OpTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnEnPerRs"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::DER_GeneratorLN.GnEnPerRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="GeneratorUnitLN"
                       titleID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorUnitLN.cl.title"
                       base="ControlEquipmentInterfaceLN"/>
         <AbstractLNClass name="GeneratorNameplateRatingsLN"
                       titleID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.cl.title"
                       base="NonStorageOperationalSettingsLN">
            <DataObject name="WMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.WMaxRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="WOvPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.WOvPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WUnPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.WUnPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VAMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.VAMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.VArMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AvarMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.AvarMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IvarMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.IvarMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.AMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.VMaxRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.VMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ConsWMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.ConsWMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ConsWMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.ConsWMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EmgWMinRtg"
                     type="CSG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.EmgWMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EmgWMaxRtg"
                     type="CSG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.EmgWMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DsconWMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.DsconWMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRpuMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.WRpuMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRpdMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.WRpdMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtbWMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.CtbWMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtbVArMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.CtbVArMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WCtb"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.WCtb.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArCtb"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.VArCtb.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RenWMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.RenWMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RenVArMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractGenLNs_7_420::GeneratorNameplateRatingsLN.RenVArMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="StorageOperationalSettingsLN"
                       titleID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.cl.title"
                       base="DER_StateAbstractLN">
            <DataObject name="ChaAvarTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaAvarTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschAvarTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschAvarTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaIvarTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaIvarTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschIvarTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschIvarTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaAvarAvl"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaAvarAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschAvarAvl"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschAvarAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaIvarAvl"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaIvarAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschIvarAvl"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschIvarAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EffWh"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.EffWh.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="EffWhPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.EffWhPct.desc"
                     presCond="AtLeastOne"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="ChaWMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaWMax.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="DschWMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschWMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaWRmp"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaWRmp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWRmp"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschWRmp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVArMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaVArMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschVArMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschVArMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVAMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaVAMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschVAMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschVAMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAvarMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaAvarMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAvarMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschAvarMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaIvarMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaIvarMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschIvarMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschIvarMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaVMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschVMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschVMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaVMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschVMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschVMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaAMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschAMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaEfc"
                     type="CSG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaEfc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschEfc"
                     type="CSG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschEfc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UseWhMaxPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.UseWhMaxPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UseWhMinPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.UseWhMinPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UseWh"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.UseWh.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaSrc"
                     type="ENG"
                     underlyingType="ChargeSourceKind"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaSrc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaWOvPFMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaWOvPFMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWOvPFMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschWOvPFMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaWUnPFMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.ChaWUnPFMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWUnPFMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.DschWUnPFMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RenChaEna"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageOperationalSettingsLN.RenChaEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="StorageNameplateRatingsLN"
                       titleID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.cl.title"
                       base="StorageOperationalSettingsLN">
            <DataObject name="ChaWMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaWMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschWMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaWRmpRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaWRmpRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWRmpRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschWRmpRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaWOvPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaWOvPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWOvPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschWOvPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaWUnPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaWUnPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWUnPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschWUnPFRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVAMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaVAMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschVAMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschVAMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAvarRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaAvarRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAvarRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschAvarRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaIvarRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaIvarRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschIvarRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschIvarRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaVMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschVMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschVMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaVMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschVMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschVMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaAMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschAMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WhRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.WhRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WhMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.WhMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WhMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.WhMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaEfcRtg"
                     type="CSG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaEfcRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschEfcRtg"
                     type="CSG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.DschEfcRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaSrcRtg"
                     type="ENG"
                     underlyingType="ChargeSourceKind"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::StorageNameplateRatingsLN.ChaSrcRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="DER_StorageLN"
                       titleID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.cl.title"
                       base="StorageNameplateRatingsLN">
            <DataObject name="SocHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocHiWrn"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocHiWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocLoAlm"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocLoWrn"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocLoWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SohLoAlm"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SohLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaCycCnt"
                     type="INS"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.ChaCycCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InWh"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.InWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutWh"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.OutWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SocWh"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="UseSocPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.UseSocPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SocEffWhPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocEffWhPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaWhTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.ChaWhTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschWhTot"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.DschWhTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlDschW"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.AvlDschW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlChaW"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.AvlChaW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaVAPct"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.ChaVAPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlChaWTm"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.AvlChaWTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlDschWTm"
                     type="MV"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.AvlDschWTm.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaWhTotRs"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.ChaWhTotRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWhTotRs"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.DschWhTotRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EqGn"
                     type="ORG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.EqGn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EqLod"
                     type="ORG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.EqLod.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocHiAlsPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocHiAlsPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocHiWrsPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocHiWrsPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocLoAlsPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocLoAlsPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocLoWrsPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SocLoWrsPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SohLoAlsPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.SohLoAlsPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RntEffPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractStoLNs_7_420::DER_StorageLN.RntEffPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="StorageUnitLN"
                       titleID="IEC61850_7_420.AbstractStoLNs_7_420::StorageUnitLN.cl.title"
                       base="ControlEquipmentInterfaceLN"/>
         <AbstractLNClass name="DER_LoadLN"
                       titleID="IEC61850_7_420.AbstractLodLNs_7_420::DER_LoadLN.cl.title"
                       base="LoadNameplateRatingsLN"/>
         <AbstractLNClass name="LoadNameplateRatingsLN"
                       titleID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.cl.title"
                       base="NonStorageOperationalSettingsLN">
            <DataObject name="WMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.WMaxRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="WOvPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.WOvPFRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="WUnPFRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.WUnPFRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.VMaxRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.VMinRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="AMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.AMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VAMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.VAMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRpuMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.WRpuMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRpdMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLodLNs_7_420::LoadNameplateRatingsLN.WRpdMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="LoadUnitLN"
                       titleID="IEC61850_7_420.AbstractLodLNs_7_420::LoadUnitLN.cl.title"
                       base="ControlEquipmentInterfaceLN"/>
         <AbstractLNClass name="DERConverterLN"
                       titleID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.cl.title"
                       base="BaseConverterLN">
            <DataObject name="DCPwrSt"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.DCPwrSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TestRsl"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.TestRsl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TestAddRsl"
                     type="ENS"
                     underlyingType="EquipmentTestResultKind"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.TestAddRsl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DCPwrBlk"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.DCPwrBlk.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Test"
                     type="SPC"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.Test.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WSpt"
                     type="APC"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.WSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VArSpt"
                     type="APC"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.VArSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CmutSelf"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.CmutSelf.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ClMthTyp"
                     type="ENG"
                     underlyingType="CoolingMethodKind"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.ClMthTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IsoTyp"
                     type="ENG"
                     underlyingType="IsolationKind"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.IsoTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ACTyp"
                     type="ENG"
                     underlyingType="ACSystemKind"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.ACTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InAMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.InAMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InVMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.InVMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutWSet"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractOtherLNs_7_420::DERConverterLN.OutWSet.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="LowPassFilterOnFunctionInputLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::LowPassFilterOnFunctionInputLN.cl.title"
                       base="OperationalFunctionLN">
            <DataObject name="InFilByp"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::LowPassFilterOnFunctionInputLN.InFilByp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RspTmms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::LowPassFilterOnFunctionInputLN.RspTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="LowPassFilterOnFunctionOutputLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::LowPassFilterOnFunctionOutputLN.cl.title"
                       base="LowPassFilterOnFunctionInputLN">
            <DataObject name="OutFilByp"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::LowPassFilterOnFunctionOutputLN.OutFilByp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OplTmsMax"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::LowPassFilterOnFunctionOutputLN.OplTmsMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OplTmsMin"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::LowPassFilterOnFunctionOutputLN.OplTmsMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ElectricalContextReferenceLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ElectricalContextReferenceLN.cl.title"
                       base="ControlledLN">
            <DataObject name="InEcpRef"
                     type="ORG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ElectricalContextReferenceLN.InEcpRef.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="EcpConnTyp"
                     type="ENG"
                     underlyingType="ECPConnKind"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ElectricalContextReferenceLN.EcpConnTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="OperationalFunctionLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.cl.title"
                       base="ElectricalContextReferenceLN">
            <DataObject name="RvrtTmExp"
                     type="SPS"
                     transient="true"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.RvrtTmExp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ModPrio"
                     type="INC"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.ModPrio.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ActDlTmms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.ActDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WinTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.WinTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RvrtTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.RvrtTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RmpTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.RmpTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ModPsAcc"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.ModPsAcc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ModNgAcc"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.ModNgAcc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocUseMaxPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.SocUseMaxPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SocUseMinPct"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::OperationalFunctionLN.SocUseMinPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="RampRatesLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.cl.title"
                       base="LowPassFilterOnFunctionOutputLN">
            <DataObject name="RmpRteUse"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.RmpRteUse.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="RpuMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.RpuMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RpdMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.RpdMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaRpuMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.ChaRpuMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaRpdMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.ChaRpdMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EmgRpuMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.EmgRpuMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EmgRpdMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.EmgRpdMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaEmgRpuMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.ChaEmgRpuMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaEmgRpdMax"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.ChaEmgRpdMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RpuMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.RpuMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RpdMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::RampRatesLN.RpdMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ActivePowerLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ActivePowerLN.cl.title"
                       base="RampRatesLN">
            <DataObject name="SocExpcTms"
                     type="INS"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ActivePowerLN.SocExpcTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqW"
                     type="MV"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ActivePowerLN.ReqW.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="SocExpc"
                     type="MV"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ActivePowerLN.SocExpc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SocWhExpc"
                     type="MV"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ActivePowerLN.SocWhExpc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WSpt"
                     type="APC"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ActivePowerLN.WSpt.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="WSptPct"
                     type="APC"
                     descID="IEC61850_7_420.AbstractLNs7_420_Op_Functions::ActivePowerLN.WSptPct.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
         </AbstractLNClass>
         <AbstractLNClass name="HysteresisSnapshotLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.cl.title"
                       base="RampRatesLN">
            <DataObject name="WRef"
                     type="MV"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.WRef.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqW"
                     type="MV"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.ReqW.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="HysEna"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.HysEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SnptBarEna"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.SnptBarEna.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrDlTmms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.StrDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StopDlTmms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.StopDlTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WMaxRefEna"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.WMaxRefEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FilTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.FilTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RtnRmpRte"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::HysteresisSnapshotLN.RtnRmpRte.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="FrequencyActivePowerLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.cl.title"
                       base="HysteresisSnapshotLN">
            <DataObject name="HzWCrv"
                     type="CSG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.HzWCrv.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="HzWCrvRef"
                     type="ENG"
                     underlyingType="FrequencyActivePowerRefParamKind"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.HzWCrvRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WGra"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.WGra.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="F"/>
            <DataObject name="HzRef"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.HzRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzStr"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.HzStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzStop"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.HzStop.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaWGra"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.ChaWGra.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="F"/>
            <DataObject name="HzChgRteTms"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::FrequencyActivePowerLN.HzChgRteTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="RideThroughLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.cl.title"
                       base="OperationalFunctionLN">
            <DataObject name="ModRtSt"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.ModRtSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="TrZnSt"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.TrZnSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CeaZnSt"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.CeaZnSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PrmZnSt"
                     type="SPS"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.PrmZnSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RtRs"
                     type="INC"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.RtRs.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EvtStopTm"
                     type="ING"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.EvtStopTm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PreScCapMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.PreScCapMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PstScCapMin"
                     type="ASG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::RideThroughLN.PstScCapMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ReactivePowerLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::ReactivePowerLN.cl.title"
                       base="RampRatesLN">
            <DataObject name="ReqVAr"
                     type="MV"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::ReactivePowerLN.ReqVAr.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="VArTgtSpt"
                     type="APC"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::ReactivePowerLN.VArTgtSpt.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="VArTgtSptPct"
                     type="APC"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::ReactivePowerLN.VArTgtSptPct.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
            <DataObject name="VArSptRef"
                     type="ENG"
                     underlyingType="ReactivePowerRefParamKind"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::ReactivePowerLN.VArSptRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArAct"
                     type="SPG"
                     descID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::ReactivePowerLN.VArAct.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </AbstractLNClass>
         <AbstractLNClass name="ActivePowerLimitLN"
                       titleID="IEC61850_7_420.AbstractLNs7_420GridCodeModes::ActivePowerLimitLN.cl.title"
                       base="RampRatesLN"/>
         <LNClass name="DECP"
               titleID="IEC61850_7_420.ECP_LNs::DECP.cl.title"
               base="PhysicalElectricalConnectionPointLN"/>
         <LNClass name="DPCC"
               titleID="IEC61850_7_420.ECP_LNs::DPCC.cl.title"
               base="PhysicalElectricalConnectionPointLN">
            <DataObject name="AreaEpsEcpId"
                     type="VSG"
                     descID="IEC61850_7_420.ECP_LNs::DPCC.AreaEpsEcpId.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="AreaEpsWMax"
                     type="ASG"
                     descID="IEC61850_7_420.ECP_LNs::DPCC.AreaEpsWMax.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DVER"
               titleID="IEC61850_7_420.ECP_LNs::DVER.cl.title"
               base="VirtualElectricalReferenceLN"/>
         <LNClass name="DPMC"
               titleID="IEC61850_7_420.DERPowerManagementLN::DPMC.cl.title"
               base="ControllingLN">
            <DataObject name="PFExtQudEsp"
                     type="SPS"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.PFExtQudEsp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ReqPFExtQud"
                     type="SPS"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqPFExtQud.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="WTopFct"
                     type="ORS"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.WTopFct.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="VArTopFct"
                     type="ORS"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.VArTopFct.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="PQSt"
                     type="ENS"
                     underlyingType="QuadrantRunningStateKind"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.PQSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DifWEsp"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.DifWEsp.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="DifVArEsp"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.DifVArEsp.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="PFEsp"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.PFEsp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqPF"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqPF.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ReqW"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqW.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ReqTotW"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqTotW.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqWMin"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqWMin.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ReqWMax"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqWMax.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ReqTotWMin"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqTotWMin.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqTotWMax"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqTotWMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqVAr"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqVAr.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ReqTotVAr"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqTotVAr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqVArMin"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqVArMin.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ReqVArMax"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqVArMax.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ReqTotVArMin"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqTotVArMin.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ReqTotVArMax"
                     type="MV"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.ReqTotVArMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.WSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="DifWSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.DifWSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="WMinSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.WMinSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="WMaxSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.WMaxSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="VArSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.VArSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="DifVArSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.DifVArSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="VArMaxSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.VArMaxSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="VArMinSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.VArMinSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="PFSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.PFSpt.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="PFExtQudSpt"
                     type="SPC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.PFExtQudSpt.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="CeaEgzCtl"
                     type="SPC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.CeaEgzCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RenChaEna"
                     type="SPC"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.RenChaEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DERRef"
                     type="ORG"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.DERRef.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OutEcpRef"
                     type="ORG"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.OutEcpRef.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="FctRef"
                     type="ORG"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.FctRef.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="StrWRpuPct"
                     type="ASG"
                     descID="IEC61850_7_420.DERPowerManagementLN::DPMC.StrWRpuPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DMDR"
               titleID="IEC61850_7_420.DERMixedLNs::DMDR.cl.title"
               base="DER_StateAbstractLN">
            <DataObject name="InclDER"
                     type="ORG"
                     descID="IEC61850_7_420.DERMixedLNs::DMDR.InclDER.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="InclGn"
                     type="ORG"
                     descID="IEC61850_7_420.DERMixedLNs::DMDR.InclGn.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="InclSto"
                     type="ORG"
                     descID="IEC61850_7_420.DERMixedLNs::DMDR.InclSto.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="InclLod"
                     type="ORG"
                     descID="IEC61850_7_420.DERMixedLNs::DMDR.InclLod.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="EqGn"
                     type="ORG"
                     descID="IEC61850_7_420.DERMixedLNs::DMDR.EqGn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EqSto"
                     type="ORG"
                     descID="IEC61850_7_420.DERMixedLNs::DMDR.EqSto.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EqLod"
                     type="ORG"
                     descID="IEC61850_7_420.DERMixedLNs::DMDR.EqLod.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DGEN"
               titleID="IEC61850_7_420.DERGeneratorLNs::DGEN.cl.title"
               base="DER_GeneratorLN">
            <DataObject name="GnOpSt"
                     type="ENS"
                     underlyingType="DERGeneratorStateKind"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.GnOpSt.desc"
                     deprecated="true"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpTmsRs"
                     type="INS"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.OpTmsRs.desc"
                     deprecated="true"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="GnH"
                     type="HMV"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.GnH.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="GnCtl"
                     type="DPC"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.GnCtl.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GnRL"
                     type="DPC"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.GnRL.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GnBlk"
                     type="SPC"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.GnBlk.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GnOnCntRs"
                     type="SPC"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.GnOnCntRs.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PerStrCntRs"
                     type="SPC"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.PerStrCntRs.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InclGn"
                     type="ORG"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.InclGn.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="DERUnit"
                     type="ORG"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.DERUnit.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EqGn"
                     type="ORG"
                     descID="IEC61850_7_420.DERGeneratorLNs::DGEN.EqGn.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DSTO"
               titleID="IEC61850_7_420.DERStorageLNs::DSTO.cl.title"
               base="DER_StorageLN">
            <DataObject name="EqSto"
                     type="ORG"
                     descID="IEC61850_7_420.DERStorageLNs::DSTO.EqSto.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InclSto"
                     type="ORG"
                     descID="IEC61850_7_420.DERStorageLNs::DSTO.InclSto.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="DERUnit"
                     type="ORG"
                     descID="IEC61850_7_420.DERStorageLNs::DSTO.DERUnit.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DLOD"
               titleID="IEC61850_7_420.DERLoadLNs::DLOD.cl.title"
               base="DER_LoadLN">
            <DataObject name="InclLod"
                     type="ORG"
                     descID="IEC61850_7_420.DERLoadLNs::DLOD.InclLod.desc"
                     presCond="Omulti"
                     dsPresCond="F"/>
            <DataObject name="DERUnit"
                     type="ORG"
                     descID="IEC61850_7_420.DERLoadLNs::DLOD.DERUnit.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EqLod"
                     type="ORG"
                     descID="IEC61850_7_420.DERLoadLNs::DLOD.EqLod.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SBAT"
               titleID="IEC61850_7_420.Battery_LNs::SBAT.cl.title"
               base="SupervisionLN">
            <DataObject name="BatEF"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.BatEF.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CelVolLoAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelVolLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CelVolHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelVolHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAmpHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.DschAmpHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAmpHiWrn"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.DschAmpHiWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAmpHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ChaAmpHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAmpHiWrn"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ChaAmpHiWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpHiWrn"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpHiWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpLoAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpLoWrn"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpLoWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbTmpAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbTmpAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbTmpWrn"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbTmpWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbVolAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbVolAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbVolWrn"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbVolWrn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtTmpHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtTmpHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtTmpLoAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtTmpLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVolHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtVolHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVolLoAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtVolLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVolHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnVolHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVolLoAlm"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnVolLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnA"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="IntnV"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CelVolLo"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelVolLo.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CelVolHi"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelVolHi.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CelTmpMax"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelTmpMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CelTmpMin"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelTmpMin.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="IntnAmp"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnAmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="IntnTmp"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmp.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="ExtTmp"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ExtVol"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="IntnVol"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnVol.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CelVolRs"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelVolRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CelVolLoAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelVolLoAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CelVolHiAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.CelVolHiAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAmpHiAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.DschAmpHiAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAmpHiWrs"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.DschAmpHiWrs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAmpHiAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ChaAmpHiAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaAmpHiWrs"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ChaAmpHiWrs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpHiAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpHiAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpHiWrs"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpHiWrs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpLoAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpLoAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnTmpLoWrs"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnTmpLoWrs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbTmpAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbTmpAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbTmpWrs"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbTmpWrs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbVolAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbVolAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UnbVolWrs"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.UnbVolWrs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtTmpHiAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtTmpHiAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtTmpLoAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtTmpLoAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVolHiAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtVolHiAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVolLoAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.ExtVolLoAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVolMxLim"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnVolMxLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVolMnLim"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnVolMnLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVolHiAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnVolHiAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVolLoAls"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::SBAT.IntnVolLoAls.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DBAT"
               titleID="IEC61850_7_420.Battery_LNs::DBAT.cl.title"
               base="StorageUnitLN">
            <DataObject name="SocPro"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.SocPro.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaSt"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ChaSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschSt"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DschSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TestRsl"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.TestRsl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TestAddRsl"
                     type="ENS"
                     underlyingType="EquipmentTestResultKind"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.TestAddRsl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DCSwCls"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DCSwCls.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BatSt"
                     type="SPS"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.BatSt.desc"
                     deprecated="true"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Amp"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.Amp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="Watt"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.Watt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaAmpLim"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ChaAmpLim.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EffAhr"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.EffAhr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaVolLim"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ChaVolLim.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschAmpLim"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DschAmpLim.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CelStrgCnt"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.CelStrgCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlChaAhr"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.AvlChaAhr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AvlDschAhr"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.AvlDschAhr.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChaAhrTot"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ChaAhrTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschAhrTot"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DschAhrTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SocEffAhrPct"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.SocEffAhrPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SocDvPct"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.SocDvPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VolChgRte"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.VolChgRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DschVolLim"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DschVolLim.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CycSocRngPct"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.CycSocRngPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CycAmpAv"
                     type="MV"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.CycAmpAv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="BatTest"
                     type="SPC"
                     transient="true"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.BatTest.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BatOn"
                     type="SPC"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.BatOn.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BatTyp"
                     type="ENG"
                     underlyingType="BatteryTypeKind"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.BatTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ChaAmpMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ChaAmpMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AhrRtg"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.AhrRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EffAhrRtg"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.EffAhrRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AhrMinRtg"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.AhrMinRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ChaVolMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ChaVolMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschAmpMxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DschAmpMxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVolMaxRtg"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ExtVolMaxRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVolNom"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.ExtVolNom.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVolNom"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.IntnVolNom.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntnVNom"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.IntnVNom.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SelfDschWRte"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.SelfDschWRte.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CelParCnt"
                     type="ING"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.CelParCnt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CelSerCnt"
                     type="ING"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.CelSerCnt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWattCrv"
                     type="CSG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DschWattCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschWattTm"
                     type="CSG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.DschWattTm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BatVNom"
                     type="ASG"
                     descID="IEC61850_7_420.Battery_LNs::DBAT.BatVNom.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DPVA"
               titleID="IEC61850_7_420.PhotovoltaicLNs::DPVA.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="Typ"
                     type="ENG"
                     underlyingType="PVAssemblyKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.Typ.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="GndConn"
                     type="ENG"
                     underlyingType="PVGroundingKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.GndConn.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulCnt"
                     type="ING"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.MdulCnt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrgCnt"
                     type="ING"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.StrgCnt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SubArrCnt"
                     type="ING"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.SubArrCnt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ArrArea"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.ArrArea.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ArrWRtg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.ArrWRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Tilt"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.Tilt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Azi"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVA.Azi.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DPVM"
               titleID="IEC61850_7_420.PhotovoltaicLNs::DPVM.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="AVCrvIx"
                     type="INS"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.AVCrvIx.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MdulCfgTyp"
                     type="ENG"
                     underlyingType="PVConfigKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulCfgTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulAVCrv"
                     type="CSG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulAVCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulWRtg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulWRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulW200Rtg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulW200Rtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxMdulV"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MaxMdulV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxMdulA"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MaxMdulA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulOcV"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulOcV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulScA"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulScA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulWTmpDrt"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulWTmpDrt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulATmpDrt"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulATmpDrt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulVTmpDrt"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulVTmpDrt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MdulDrtPct"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVM.MdulDrtPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DPVC"
               titleID="IEC61850_7_420.PhotovoltaicLNs::DPVC.cl.title"
               base="GeneratorUnitLN">
            <DataObject name="CtlModSt"
                     type="INS"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.CtlModSt.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PVCtlSt"
                     type="ENS"
                     underlyingType="PVControlStateKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.PVCtlSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ArrModCtl"
                     type="ENC"
                     underlyingType="PVArrayControlModeKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.ArrModCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkRefV"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.TrkRefV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkWkupV"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.TrkWkupV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkDlWkupTms"
                     type="ING"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.TrkDlWkupTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkDlSlpTms"
                     type="ING"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.TrkDlSlpTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkSlpW"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.TrkSlpW.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkRte"
                     type="ING"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.TrkRte.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkVStep"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DPVC.TrkVStep.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DTRC"
               titleID="IEC61850_7_420.PhotovoltaicLNs::DTRC.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="TrkAlm"
                     type="SPS"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.TrkAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="TrkSt"
                     type="ENS"
                     underlyingType="PVTrackingStatusKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.TrkSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AziDeg"
                     type="MV"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.AziDeg.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ElDeg"
                     type="MV"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.ElDeg.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TrkCtl"
                     type="ENC"
                     underlyingType="PVTrackingControlKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.TrkCtl.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="TrkTyp"
                     type="ENG"
                     underlyingType="PVTrackingKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.TrkTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="TrkTech"
                     type="ENG"
                     underlyingType="PVTrackingTechnologyKind"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.TrkTech.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StowAziDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.StowAziDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StowElDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.StowElDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StormAziDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.StormAziDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StormElDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.StormElDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SnwAziDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.SnwAziDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SnwElDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.SnwElDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NightAziDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.NightAziDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NightElDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.NightElDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaintAziDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.MaintAziDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaintElDeg"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.MaintElDeg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntvAzi"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.IntvAzi.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntvEl"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.IntvEl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="IntvTm"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.IntvTm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AziDegTgt"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.AziDegTgt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ElDegTgt"
                     type="ASG"
                     descID="IEC61850_7_420.PhotovoltaicLNs::DTRC.ElDegTgt.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DCIP"
               titleID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.cl.title"
               base="GeneratorUnitLN">
            <DataObject name="EngOnOff"
                     type="SPS"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.EngOnOff.desc"
                     deprecated="true"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="EngSpd"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.EngSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EngTorq"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.EngTorq.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EngTmDeg"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.EngTmDeg.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImpactHzPct"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ImpactHzPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="BlowFlw"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.BlowFlw.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InOxFlwRte"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.InOxFlwRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WstGasFlwRte"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.WstGasFlwRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LubCsmp"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.LubCsmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TrsVLim"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.TrsVLim.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbALim"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ImbALim.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ImbVLim"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ImbVLim.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HACrvPct"
                     type="HMV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.HACrvPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HVCrvPct"
                     type="HMV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.HVCrvPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChgLimVPct"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ChgLimVPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChgLimAng"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ChgLimAng.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ChgLimRatAng"
                     type="MV"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ChgLimRatAng.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CrankCtl"
                     type="SPC"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.CrankCtl.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DiagEna"
                     type="DPC"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.DiagEna.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EmgCtl"
                     type="DPC"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.EmgCtl.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EngCtl"
                     type="DPC"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.EngCtl.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HeatRteCrv"
                     type="CSG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.HeatRteCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NumPle"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.NumPle.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SpdMin"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.SpdMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SpdMax"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.SpdMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SpdNom"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.SpdNom.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SpdTgt"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.SpdTgt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EngTorqTgt"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.EngTorqTgt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WMaxVArCrv"
                     type="CSG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.WMaxVArCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WMinVArCrv"
                     type="CSG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.WMinVArCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WVArVLimCrv"
                     type="CSG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.WVArVLimCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OcDirTms"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.OcDirTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OcSubDirTms"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.OcSubDirTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OcSubQudTms"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.OcSubQudTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ScDirTms"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ScDirTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ScSubDirTms"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ScSubDirTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ScSubQudTms"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ScSubQudTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InerTms"
                     type="ING"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.InerTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InOxFlwTgt"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.InOxFlwTgt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LubCsmpTgt"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.LubCsmpTgt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SttLkgX"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.SttLkgX.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="X0"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.X0.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="X2"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.X2.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xd"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.Xd.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xdp"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.Xdp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xds"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.Xds.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xqs"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.Xqs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xqp"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.Xqp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Xq"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.Xq.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ZerSeqRis"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.ZerSeqRis.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PosSeqRis"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.PosSeqRis.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NgSeqRis"
                     type="ASG"
                     descID="IEC61850_7_420.ReciprocatingEngineLNs::DCIP.NgSeqRis.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DFCL"
               titleID="IEC61850_7_420.FuelCellLNs::DFCL.cl.title"
               base="GeneratorUnitLN">
            <DataObject name="ConnGriCnt"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.ConnGriCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LifeEfcPct"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.LifeEfcPct.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="InstEfcPct"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.InstEfcPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaintTms"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.MaintTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StrCnt"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.StrCnt.desc"
                     deprecated="true"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="LifeTms"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.LifeTms.desc"
                     deprecated="true"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="FuelCsmp"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.FuelCsmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WtrCsmp"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.WtrCsmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InOxFlwRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.InOxFlwRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WtrLev"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.WtrLev.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutH2Rte"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.OutH2Rte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutH2Lev"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.OutH2Lev.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WtrCndct"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.WtrCndct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="LifeWh"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.LifeWh.desc"
                     deprecated="true"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="FuelStop"
                     type="SPC"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.FuelStop.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="StrCntRs"
                     type="SPC"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.StrCntRs.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EmgCtl"
                     type="SPC"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.EmgCtl.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GriIndpWRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.GriIndpWRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GriDepRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.GriDepRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HzRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.HzRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuelTyp"
                     type="ENG"
                     underlyingType="FuelKind"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.FuelTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EfcPct"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.EfcPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ALim"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.ALim.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VLim"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.VLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFCL.VRtg.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DSTK"
               titleID="IEC61850_7_420.FuelCellLNs::DSTK.cl.title"
               base="FunctionLN">
            <DataObject name="StcSt"
                     type="SPS"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="CelVTrCnt"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.CelVTrCnt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StcLodTms"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcLodTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="MaintTms"
                     type="INS"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.MaintTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StcWh"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StcEfcPct"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcEfcPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutDCV"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.OutDCV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutDCA"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.OutDCA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InClTmp"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.InClTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutClTmp"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.OutClTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClFlwRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.ClFlwRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ClPres"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.ClPres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="H2FlwRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.H2FlwRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InH2Pres"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.InH2Pres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InOxFlwRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.InOxFlwRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InOxPres"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.InOxPres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="StcWRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcWRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StcVRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcVRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StcARtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcARtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StcFuelTyp"
                     type="ENG"
                     underlyingType="FuelKind"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.StcFuelTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CelCnt"
                     type="ING"
                     descID="IEC61850_7_420.FuelCellLNs::DSTK.CelCnt.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DFPM"
               titleID="IEC61850_7_420.FuelCellLNs::DFPM.cl.title"
               base="FunctionLN">
            <DataObject name="FPMSt"
                     type="SPS"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.FPMSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InAccmWh"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.InAccmWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutAccmWh"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.OutAccmWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="CnvEfc"
                     type="MV"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.CnvEfc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ProcTyp"
                     type="ENG"
                     underlyingType="FuelProcessingKind"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.ProcTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ThmRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.ThmRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InFuelTyp"
                     type="ENG"
                     underlyingType="FuelProcessingInFuelKind"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.InFuelTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutFuelTyp"
                     type="ENG"
                     underlyingType="FuelProcessingOutFuelKind"
                     descID="IEC61850_7_420.FuelCellLNs::DFPM.OutFuelTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="KFUL"
               titleID="IEC61850_7_420.FuelSystemLNs::KFUL.cl.title"
               base="SupervisionLN">
            <DataObject name="AccmOpTms"
                     type="INS"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.AccmOpTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FuelCostAv"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.FuelCostAv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FuelEfcPct"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.FuelEfcPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AccmTotFuel"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.AccmTotFuel.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AccmFuel"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.AccmFuel.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FuelRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.FuelRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FuelCalAv"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.FuelCalAv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="AccmFuelRs"
                     type="SPC"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.AccmFuelRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="AccmOpTmRs"
                     type="SPC"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.AccmOpTmRs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuelTyp"
                     type="ENG"
                     underlyingType="FuelKind"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.FuelTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="Ccy"
                     type="CUG"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.Ccy.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuelCost"
                     type="ASG"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.FuelCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GrossCalVal"
                     type="ASG"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.GrossCalVal.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuelEfcRtg"
                     type="ASG"
                     descID="IEC61850_7_420.FuelSystemLNs::KFUL.FuelEfcRtg.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="KFLV"
               titleID="IEC61850_7_420.FuelSystemLNs::KFLV.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="FuelSt"
                     type="SPS"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.FuelSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InFuelRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.InFuelRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutFuelRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.OutFuelRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InFuelTmp"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.InFuelTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="OutFuelTmp"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.OutFuelTmp.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FuelRalA"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.FuelRalA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FuelRalPres"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.FuelRalPres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="EngFuelRte"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.EngFuelRte.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TmPres"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.TmPres.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="TmRalActrA"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.TmRalActrA.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="PmpActrA"
                     type="MV"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.PmpActrA.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FuelStr"
                     type="SPC"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.FuelStr.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuelStop"
                     type="SPC"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.FuelStop.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuelDlvTyp"
                     type="ENG"
                     underlyingType="FuelDeliveryKind"
                     descID="IEC61850_7_420.FuelSystemLNs::KFLV.FuelDlvTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DCHC"
               titleID="IEC61850_7_420.CHP_LNs::DCHC.cl.title"
               base="GeneratorUnitLN">
            <DataObject name="MaintTms"
                     type="INS"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.MaintTms.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HtPwrEfc"
                     type="MV"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.HtPwrEfc.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="HtTyp"
                     type="ENG"
                     underlyingType="ThermalEnergyMediumKind"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.HtTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="MaxHtCap"
                     type="ASG"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.MaxHtCap.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HtEfcPct"
                     type="ASG"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.HtEfcPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ClTyp"
                     type="ENG"
                     underlyingType="ThermalEnergyMediumKind"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.ClTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EnCnvTyp"
                     type="ENG"
                     underlyingType="CHPEnergyConverterKind"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.EnCnvTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="GnTyp"
                     type="ENG"
                     underlyingType="CHPGeneratorKind"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.GnTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FuelTyp"
                     type="ENG"
                     underlyingType="FuelKind"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.FuelTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OpModCHP"
                     type="ENG"
                     underlyingType="CHPOperatingModeKind"
                     descID="IEC61850_7_420.CHP_LNs::DCHC.OpModCHP.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DCTS"
               titleID="IEC61850_7_420.CHP_LNs::DCTS.cl.title"
               base="FunctionLN">
            <DataObject name="ThmCapTot"
                     type="MV"
                     descID="IEC61850_7_420.CHP_LNs::DCTS.ThmCapTot.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThmCapPct"
                     type="MV"
                     descID="IEC61850_7_420.CHP_LNs::DCTS.ThmCapPct.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThmIn"
                     type="MV"
                     descID="IEC61850_7_420.CHP_LNs::DCTS.ThmIn.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThmOut"
                     type="MV"
                     descID="IEC61850_7_420.CHP_LNs::DCTS.ThmOut.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThmLos"
                     type="MV"
                     descID="IEC61850_7_420.CHP_LNs::DCTS.ThmLos.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ThmStoTyp"
                     type="ENG"
                     underlyingType="ThermalEnergyStorageKind"
                     descID="IEC61850_7_420.CHP_LNs::DCTS.ThmStoTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ThmOutEst"
                     type="ORG"
                     descID="IEC61850_7_420.CHP_LNs::DCTS.ThmOutEst.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DCHB"
               titleID="IEC61850_7_420.CHP_LNs::DCHB.cl.title"
               base="ControlEquipmentInterfaceLN">
            <DataObject name="BoilRdy"
                     type="SPS"
                     descID="IEC61850_7_420.CHP_LNs::DCHB.BoilRdy.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BoilDnReg"
                     type="SPS"
                     descID="IEC61850_7_420.CHP_LNs::DCHB.BoilDnReg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BoilWh"
                     type="MV"
                     descID="IEC61850_7_420.CHP_LNs::DCHB.BoilWh.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="BoilCtl"
                     type="SPC"
                     descID="IEC61850_7_420.CHP_LNs::DCHB.BoilCtl.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="BoilTyp"
                     type="ENG"
                     underlyingType="BoilerKind"
                     descID="IEC61850_7_420.CHP_LNs::DCHB.BoilTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DEXC"
               titleID="IEC61850_7_420.DERExcitationLNs::DEXC.cl.title"
               base="EquipmentInterfaceLN">
            <DataObject name="ExtSt"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="DrpV"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.DrpV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PwrStab"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.PwrStab.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxHiVLim"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.MaxHiVLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="MaxLoVLim"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.MaxLoVLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FlshAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.FlshAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PwrSupAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.PwrSupAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DCAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.DCAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ACAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ACAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="UPSAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.UPSAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkA"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.BlkA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkV"
                     type="SPS"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.BlkV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtTyp"
                     type="ENG"
                     underlyingType="ExciterKind"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="NoLodExtV"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.NoLodExtV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="NoLodExtA"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.NoLodExtA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PFExtV"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.PFExtV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PFExtA"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.PFExtA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtForc"
                     type="SPG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtForc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtInerTms"
                     type="ING"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtInerTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtGain"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtGain.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhLdComp"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.PhLdComp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VSpt"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.VSpt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtlHzHiLim"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.CtlHzHiLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtlHzLoLim"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.CtlHzLoLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StabSigWash"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.StabSigWash.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StabGain"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.StabGain.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtlHzHiAlm"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.CtlHzHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtCeilV"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtCeilV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CtlHzLoAlm"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.CtlHzLoAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtCeilA"
                     type="ASG"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtCeilA.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVTms"
                     type="ING"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtVTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ExtVDurTms"
                     type="ING"
                     descID="IEC61850_7_420.DERExcitationLNs::DEXC.ExtVDurTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DINV"
               titleID="IEC61850_7_420.DERInverterLNs::DINV.cl.title"
               base="DERConverterLN">
            <DataObject name="InvACLosAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.InvACLosAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InvDCLosAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.InvDCLosAlm.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InvGriLosAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.InvGriLosAlm.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="InvSwAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.InvSwAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="Stdby"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.Stdby.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CurLev"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.CurLev.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InvManStopSt"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.InvManStopSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GriModSt"
                     type="ENS"
                     underlyingType="GridConnectStateKind"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.GriModSt.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArAvl"
                     type="MV"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.VArAvl.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DCVSpt"
                     type="APC"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.DCVSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="InvSwTyp"
                     type="ENG"
                     underlyingType="InverterSwitchKind"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.InvSwTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InvCtlSrc"
                     type="ENG"
                     underlyingType="InverterControlSourceKind"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.InvCtlSrc.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WRtg"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.WRtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VARtg"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.VARtg.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="WVArVLim"
                     type="CSG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.WVArVLim.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WVArVLimSet"
                     type="CSG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.WVArVLimSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="SwHz"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.SwHz.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhsACfg"
                     type="ENG"
                     underlyingType="PhaseFeedKind"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.PhsACfg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhsBCfg"
                     type="ENG"
                     underlyingType="PhaseFeedKind"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.PhsBCfg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PhsCCfg"
                     type="ENG"
                     underlyingType="PhaseFeedKind"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.PhsCCfg.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="GriMod"
                     type="ENG"
                     underlyingType="GridConnectModeKind"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.GriMod.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutHzSet"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.OutHzSet.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutPFSet"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.OutPFSet.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutVArSet"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DINV.OutVArSet.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DRTF"
               titleID="IEC61850_7_420.DERInverterLNs::DRTF.cl.title"
               base="DERConverterLN">
            <DataObject name="VRegTyp"
                     type="ENG"
                     underlyingType="VoltageRegulationKind"
                     descID="IEC61850_7_420.DERInverterLNs::DRTF.VRegTyp.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="CnvTyp"
                     type="ENG"
                     underlyingType="ACToDCConversionKind"
                     descID="IEC61850_7_420.DERInverterLNs::DRTF.CnvTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutFilTyp"
                     type="ENG"
                     underlyingType="OutputFilterKind"
                     descID="IEC61850_7_420.DERInverterLNs::DRTF.OutFilTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="InWavTyp"
                     type="ENG"
                     underlyingType="WaveformConditioningKind"
                     descID="IEC61850_7_420.DERInverterLNs::DRTF.InWavTyp.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutVSet"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DRTF.OutVSet.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="OutALim"
                     type="ASG"
                     descID="IEC61850_7_420.DERInverterLNs::DRTF.OutALim.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="SINV"
               titleID="IEC61850_7_420.DERInverterLNs::SINV.cl.title"
               base="SupervisionLN">
            <DataObject name="TmpHiAlm"
                     type="SPS"
                     descID="IEC61850_7_420.DERInverterLNs::SINV.TmpHiAlm.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="EnclTmp"
                     type="MV"
                     descID="IEC61850_7_420.DERInverterLNs::SINV.EnclTmp.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="HeatSinkTmp"
                     type="MV"
                     descID="IEC61850_7_420.DERInverterLNs::SINV.HeatSinkTmp.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="TrfTmp"
                     type="MV"
                     descID="IEC61850_7_420.DERInverterLNs::SINV.TrfTmp.desc"
                     presCond="Omulti"
                     dsPresCond="O"/>
            <DataObject name="FanSpd"
                     type="MV"
                     descID="IEC61850_7_420.DERInverterLNs::SINV.FanSpd.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="DCCT"
               titleID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.cl.title"
               base="FunctionLN">
            <DataObject name="Ccy"
                     type="CUG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.Ccy.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.OpCost.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="OpWhCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.OpWhCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.StrCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StopCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.StopCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RampCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.RampCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HeatRteCost"
                     type="CSG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.HeatRteCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CRteCost"
                     type="CSG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CRteCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CnttExptWLim"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CnttExptWLim.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CnttImptWLim"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CnttImptWLim.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CnttPF"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CnttPF.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CnttHiV"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CnttHiV.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CnttLoV"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CnttLoV.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CnttAnc"
                     type="ENG"
                     underlyingType="AncillaryServiceKind"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CnttAnc.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HeatRtePrc"
                     type="SCR"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.HeatRtePrc.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CRtePrc"
                     type="SCR"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCCT.CRtePrc.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DCST"
               titleID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.cl.title"
               base="FunctionLN">
            <DataObject name="Ccy"
                     type="CUG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.Ccy.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HeatRteAct"
                     type="CSG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.HeatRteAct.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="HeatRteCost"
                     type="CSG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.HeatRteCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RampCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.RampCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StrCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.StrCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="StopCost"
                     type="ASG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.StopCost.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CostRamp"
                     type="CSG"
                     descID="IEC61850_7_420.DERFinancialLNs_7_420::DCST.CostRamp.desc"
                     deprecated="true"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="MMET"
               titleID="IEC61850_7_420.MeasurementExtLN::MMETExt.cl.title"
               isExtension="true">
            <DataObject name="PoaInsol"
                     type="MV"
                     descID="IEC61850_7_420.MeasurementExtLN::MMETExt.PoaInsol.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="MMXU"
               titleID="IEC61850_7_420.MeasurementExtLN::MMXUExt.cl.title"
               isExtension="true">
            <DataObject name="PFExtQud"
                     type="SPS"
                     descID="IEC61850_7_420.MeasurementExtLN::MMXUExt.PFExtQud.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PQSt"
                     type="ENS"
                     underlyingType="QuadrantRunningStateKind"
                     descID="IEC61850_7_420.MeasurementExtLN::MMXUExt.PQSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DCTE"
               titleID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.cl.title"
               base="OperationalFunctionLN">
            <DataObject name="CeaEgzReqSt"
                     type="ENS"
                     underlyingType="CeasetoEnergizeStateKind"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.CeaEgzReqSt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="CeaEgzReq"
                     type="SPS"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.CeaEgzReq.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="CeaEgzAuth"
                     type="SPC"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.CeaEgzAuth.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="CeaEgzReqCtl"
                     type="ENC"
                     underlyingType="CeasetoEnergizeStateTransitionKind"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.CeaEgzReqCtl.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="RtnSvcAuth"
                     type="SPC"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.RtnSvcAuth.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="RtnSvcAuto"
                     type="SPG"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.RtnSvcAuto.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="RtnRmpTmms"
                     type="ING"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.RtnRmpTmms.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="RtnDlTmms"
                     type="ING"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.RtnDlTmms.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VArLimPct"
                     type="ASG"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.VArLimPct.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VHiLim"
                     type="ASG"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.VHiLim.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="VLoLim"
                     type="ASG"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.VLoLim.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="HzHiLim"
                     type="ASG"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.HzHiLim.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="HzLoLim"
                     type="ASG"
                     descID="IEC61850_7_420.CeasetoEnergizeLN::DCTE.HzLoLim.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DHVT"
               titleID="IEC61850_7_420.Voltage_Ride-ThroughLNs::DHVT.cl.title"
               base="RideThroughLN"/>
         <LNClass name="DLVT"
               titleID="IEC61850_7_420.Voltage_Ride-ThroughLNs::DLVT.cl.title"
               base="RideThroughLN"/>
         <LNClass name="DHFT"
               titleID="IEC61850_7_420.Frequency_Ride-ThroughLNs::DHFT.cl.title"
               base="RideThroughLN">
            <DataObject name="HzChgMaxRte"
                     type="ING"
                     descID="IEC61850_7_420.Frequency_Ride-ThroughLNs::DHFT.HzChgMaxRte.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DLFT"
               titleID="IEC61850_7_420.Frequency_Ride-ThroughLNs::DLFT.cl.title"
               base="RideThroughLN">
            <DataObject name="HzChgMaxRte"
                     type="ING"
                     descID="IEC61850_7_420.Frequency_Ride-ThroughLNs::DLFT.HzChgMaxRte.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DHFW"
               titleID="IEC61850_7_420.Frequency-ActivePowerLNs::DHFW.cl.title"
               base="FrequencyActivePowerLN"/>
         <LNClass name="DLFW"
               titleID="IEC61850_7_420.Frequency-ActivePowerLNs::DLFW.cl.title"
               base="FrequencyActivePowerLN"/>
         <LNClass name="DAGC"
               titleID="IEC61850_7_420.ActivePowerLNs::DAGC.cl.title"
               base="ActivePowerLN">
            <DataObject name="WMinAvl"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DAGC.WMinAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WMaxAvl"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DAGC.WMaxAvl.desc"
                     presCond="O"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="DTCD"
               titleID="IEC61850_7_420.ActivePowerLNs::DTCD.cl.title"
               base="ActivePowerLN">
            <DataObject name="SocDate"
                     type="TCS"
                     descID="IEC61850_7_420.ActivePowerLNs::DTCD.SocDate.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="WhReq"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DTCD.WhReq.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="DurMin"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DTCD.DurMin.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="SocUseTgtPct"
                     type="ING"
                     descID="IEC61850_7_420.ActivePowerLNs::DTCD.SocUseTgtPct.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="DateTgt"
                     type="TSG"
                     descID="IEC61850_7_420.ActivePowerLNs::DTCD.DateTgt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ChaDurMax"
                     type="ING"
                     descID="IEC61850_7_420.ActivePowerLNs::DTCD.ChaDurMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DschDurMax"
                     type="ING"
                     descID="IEC61850_7_420.ActivePowerLNs::DTCD.DschDurMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DVWC"
               titleID="IEC61850_7_420.ActivePowerLNs::DVWC.cl.title"
               base="HysteresisSnapshotLN">
            <DataObject name="ReqWMax"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DVWC.ReqWMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VRefEsp"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DVWC.VRefEsp.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="VWCrv"
                     type="CSG"
                     descID="IEC61850_7_420.ActivePowerLNs::DVWC.VWCrv.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VWCrvRef"
                     type="ENG"
                     underlyingType="VoltageActivePowerRefParamKind"
                     descID="IEC61850_7_420.ActivePowerLNs::DVWC.VWCrvRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRefOfs"
                     type="ASG"
                     descID="IEC61850_7_420.ActivePowerLNs::DVWC.VRefOfs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRefPct"
                     type="ASG"
                     descID="IEC61850_7_420.ActivePowerLNs::DVWC.VRefPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DWFL"
               titleID="IEC61850_7_420.ActivePowerLNs::DWFL.cl.title"
               base="ActivePowerLN">
            <DataObject name="FolWRef"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DWFL.FolWRef.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="FolWThr"
                     type="ASG"
                     descID="IEC61850_7_420.ActivePowerLNs::DWFL.FolWThr.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="FolWPct"
                     type="ASG"
                     descID="IEC61850_7_420.ActivePowerLNs::DWFL.FolWPct.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="FolWTgt"
                     type="ASG"
                     descID="IEC61850_7_420.ActivePowerLNs::DWFL.FolWTgt.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DWGC"
               titleID="IEC61850_7_420.ActivePowerLNs::DWGC.cl.title"
               base="ActivePowerLN"/>
         <LNClass name="DWMN"
               titleID="IEC61850_7_420.ActivePowerLNs::DWMN.cl.title"
               base="ActivePowerLimitLN">
            <DataObject name="ReqWMin"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DWMN.ReqWMin.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WMinSptPct"
                     type="APC"
                     descID="IEC61850_7_420.ActivePowerLNs::DWMN.WMinSptPct.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="WMinSpt"
                     type="APC"
                     descID="IEC61850_7_420.ActivePowerLNs::DWMN.WMinSpt.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="DWMX"
               titleID="IEC61850_7_420.ActivePowerLNs::DWMX.cl.title"
               base="ActivePowerLimitLN">
            <DataObject name="ReqWMax"
                     type="MV"
                     descID="IEC61850_7_420.ActivePowerLNs::DWMX.ReqWMax.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="WMaxSptPct"
                     type="APC"
                     descID="IEC61850_7_420.ActivePowerLNs::DWMX.WMaxSptPct.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="O"/>
            <DataObject name="WMaxSpt"
                     type="APC"
                     descID="IEC61850_7_420.ActivePowerLNs::DWMX.WMaxSpt.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="O"/>
         </LNClass>
         <LNClass name="DFPF"
               titleID="IEC61850_7_420.PowerFactorLNs::DFPF.cl.title"
               base="RampRatesLN">
            <DataObject name="ReqPFExt"
                     type="SPS"
                     descID="IEC61850_7_420.PowerFactorLNs::DFPF.ReqPFExt.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ReqPF"
                     type="MV"
                     descID="IEC61850_7_420.PowerFactorLNs::DFPF.ReqPF.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="PFGnTgtSpt"
                     type="APC"
                     descID="IEC61850_7_420.PowerFactorLNs::DFPF.PFGnTgtSpt.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="PFGnExtQud"
                     type="SPC"
                     descID="IEC61850_7_420.PowerFactorLNs::DFPF.PFGnExtQud.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="PFLodTgtSpt"
                     type="APC"
                     descID="IEC61850_7_420.PowerFactorLNs::DFPF.PFLodTgtSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="PFLodExtQud"
                     type="SPC"
                     descID="IEC61850_7_420.PowerFactorLNs::DFPF.PFLodExtQud.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DVVR"
               titleID="IEC61850_7_420.ReactivePowerLNs::DVVR.cl.title"
               base="ReactivePowerLN">
            <DataObject name="VRefEsp"
                     type="MV"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VRefEsp.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="VRefSpt"
                     type="APC"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VRefSpt.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VVArCrv"
                     type="CSG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VVArCrv.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="1"
                     dsPresCond="F"/>
            <DataObject name="VRefAdjEna"
                     type="SPG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VRefAdjEna.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRefTmms"
                     type="ING"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VRefTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VRefOfs"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VRefOfs.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VVArCrvDel"
                     type="CSG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VVArCrvDel.desc"
                     presCond="AllOnlyOneGroup"
                     presCondArgs="2"
                     dsPresCond="F"/>
            <DataObject name="VRefPct"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DVVR.VRefPct.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DVAR"
               titleID="IEC61850_7_420.ReactivePowerLNs::DVAR.cl.title"
               base="ReactivePowerLN"/>
         <LNClass name="DWVR"
               titleID="IEC61850_7_420.ReactivePowerLNs::DWVR.cl.title"
               base="ReactivePowerLN">
            <DataObject name="WVArCrv"
                     type="CSG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DWVR.WVArCrv.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="WBarEna"
                     type="SPG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DWVR.WBarEna.desc"
                     presCond="M"
                     dsPresCond="F"/>
         </LNClass>
         <LNClass name="DRGS"
               titleID="IEC61850_7_420.ReactivePowerLNs::DRGS.cl.title"
               base="ReactivePowerLN">
            <DataObject name="HiVRtSt"
                     type="SPS"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.HiVRtSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="LoVRtSt"
                     type="SPS"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.LoVRtSt.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="ReqA"
                     type="MV"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.ReqA.desc"
                     presCond="M"
                     dsPresCond="O"/>
            <DataObject name="DelV"
                     type="MV"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.DelV.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="VAv"
                     type="MV"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.VAv.desc"
                     presCond="O"
                     dsPresCond="O"/>
            <DataObject name="ArGraMod"
                     type="SPG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.ArGraMod.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ArGraSag"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.ArGraSag.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="ArGraSwl"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.ArGraSwl.desc"
                     presCond="M"
                     dsPresCond="F"/>
            <DataObject name="HysBlkZnV"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.HysBlkZnV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkZnV"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.BlkZnV.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="BlkZnTmms"
                     type="ING"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.BlkZnTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="FilTms"
                     type="ING"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.FilTms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="HoldTmms"
                     type="ING"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.HoldTmms.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DbVMin"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.DbVMin.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="DbVMax"
                     type="ASG"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.DbVMax.desc"
                     presCond="O"
                     dsPresCond="F"/>
            <DataObject name="VArSptRef"
                     type="ENG"
                     underlyingType="ReactivePowerRefParamKind"
                     descID="IEC61850_7_420.ReactivePowerLNs::DRGS.VArSptRef.desc"
                     presCond="O"
                     dsPresCond="F"/>
         </LNClass>
      </LNClasses>
</NS>
`;
class DD {
  parseFromString(e) {
    const t = new DOMParser().parseFromString(e, "text/xml");
    return this.parseFromDocument(t);
  }
  parseFromStrings(e) {
    const t = e.map((s) => new DOMParser().parseFromString(s, "text/xml"));
    return this.parseFromDocuments(t);
  }
  parseFromDocument(e) {
    return {
      lNodeType: this.parseLNodeTypeSpecs(e),
      doType: this.parseDOTypeSpecs(e),
      daType: this.parseDATypeSpecs(e),
      enumType: this.parseEnumTypeSpecs(e)
    };
  }
  parseFromDocuments(e) {
    const t = {
      lNodeType: {},
      doType: {},
      daType: {},
      enumType: {}
    };
    return e.forEach((s) => {
      const a = this.parseFromDocument(s);
      this.mergeSpecs(t, a);
    }), t;
  }
  mergeSpecs(e, t) {
    for (const s of ["lNodeType", "doType", "daType", "enumType"])
      for (const [a, r] of Object.entries(t[s]))
        e[s][a] || (e[s][a] = {}), Object.assign(e[s][a], r);
  }
  /**
   * Parses LNodeType specifications.
   */
  parseLNodeTypeSpecs(e) {
    const t = {};
    return e.querySelectorAll("LNClass").forEach((a) => this.parseLNodeTypeSpecFromElement(a, void 0, t, e)), t;
  }
  /**
   * Parses a single LNClass element and its DataObjects.
   * If it has a base (abstract lnClass) attribute, it recursively parses the base LNClass first.
   */
  parseLNodeTypeSpecFromElement(e, t, s, a) {
    const r = t ?? e.getAttribute("name");
    if (!r)
      return;
    s[r] || (s[r] = {});
    const o = e.getAttribute("base");
    if (o) {
      const i = a.querySelector(`AbstractLNClass[name="${o}"]`);
      i && this.parseLNodeTypeSpecFromElement(i, r, s, a);
    }
    Array.from(e.children).filter((i) => i.tagName === "DataObject").forEach((i) => {
      if (i.getAttribute("deprecated") === "true")
        return;
      const d = this.parseDataObject(i, "DO");
      d != null && d.name && (s[r][d.name] = d);
    });
  }
  /**
   * Parses DOType specifications (CDC elements).
   */
  parseDOTypeSpecs(e) {
    const t = {};
    return e.querySelectorAll("CDC").forEach((a) => {
      const r = a.getAttribute("name");
      r && (t[r] || (t[r] = {}), Array.from(a.children).filter((o) => o.tagName === "SubDataObject").forEach((o) => {
        if (o.getAttribute("deprecated") === "true")
          return;
        const i = this.parseDataObject(o, "SDO");
        i != null && i.name && (t[r][i.name] = i);
      }), Array.from(a.children).filter((o) => o.tagName === "DataAttribute").forEach((o) => {
        if (o.getAttribute("deprecated") === "true")
          return;
        const i = this.parseDataAttribute(o, "DA");
        i != null && i.name && (t[r][i.name] = i);
      }));
    }), t;
  }
  /**
   * Parses DAType specifications (ConstructedAttribute elements).
   */
  parseDATypeSpecs(e) {
    const t = {};
    return e.querySelectorAll("ConstructedAttribute").forEach((a) => {
      const r = a.getAttribute("name");
      r && (t[r] || (t[r] = {}), Array.from(a.children).filter((o) => o.tagName === "SubDataAttribute").forEach((o) => {
        if (o.getAttribute("deprecated") === "true")
          return;
        const i = this.parseDataAttribute(o, "BDA");
        i != null && i.name && (t[r][i.name] = i);
      }));
    }), t;
  }
  /**
   * Parses EnumType specifications (Enumeration elements).
   */
  parseEnumTypeSpecs(e) {
    const t = {};
    return e.querySelectorAll("Enumeration").forEach((a) => {
      const r = a.getAttribute("name");
      r && (t[r] || (t[r] = {}), Array.from(a.children).filter((o) => o.tagName === "Literal").forEach((o) => {
        if (o.getAttribute("deprecated") === "true")
          return;
        const i = o.getAttribute("name"), d = o.getAttribute("literalVal");
        i && (t[r][i] = {
          name: i,
          tagName: "EnumVal",
          isMandatory: !1,
          requiresReference: !1,
          objectType: void 0,
          refTypeKind: void 0,
          attributes: { literalValue: d }
        });
      }));
    }), t;
  }
  /**
   * Parses a DataAttribute element into an ObjectSpecification.
   * Skips if deprecated.
   * Only parases fc, dchg, qchg and dupd attributes for DA elements.
   */
  parseDataAttribute(e, t) {
    if (e.getAttribute("deprecated") === "true")
      return null;
    const s = e.getAttribute("name"), a = e.getAttribute("type"), r = e.getAttribute("presCond"), o = e.getAttribute("typeKind");
    if (!s || !a || !r)
      return null;
    const i = {};
    t === "DA" && ["fc", "dchg", "qchg", "dupd"].forEach((C) => this.addAttributeIfExists(e, i, C));
    let d, c = a, l = !1;
    return o === "ENUMERATED" ? (d = x.EnumType, c = "Enum", l = !0) : o === "CONSTRUCTED" && (d = x.DAType, c = "Struct", l = !0), c && (i.bType = c), {
      name: s,
      tagName: t,
      isMandatory: r === "M",
      requiresReference: l,
      objectType: a,
      refTypeKind: d,
      attributes: i
    };
  }
  /**
   * Parses a DataObject element into an ObjectSpecification.
   */
  parseDataObject(e, t) {
    if (e.getAttribute("deprecated") === "true")
      return null;
    const s = e.getAttribute("name"), a = e.getAttribute("type"), r = e.getAttribute("presCond");
    return !s || !a || !r ? null : {
      name: s,
      tagName: t,
      isMandatory: r === "M",
      requiresReference: !0,
      objectType: a,
      refTypeKind: x.DOType
    };
  }
  /**
   * Adds an attribute to the attributes object if it exists on the element.
   */
  addAttributeIfExists(e, t, s) {
    const a = e.getAttribute(s);
    a && (t[s] = a);
  }
}
const Is = class Is {
  constructor() {
    this.specs = new DD().parseFromStrings([mD, pD, _D, ID]);
  }
  getTypeSpecification(e, t) {
    const s = Is.typeKindToSpecKey[e];
    if (!s)
      return null;
    const a = this.specs[s][t];
    return a ? Object.values(a) : null;
  }
  getLNodeTypeSpecification(e) {
    const t = this.specs.lNodeType[e];
    return t ? Object.values(t) : null;
  }
  getSpecificationsForType(e) {
    const t = Is.typeKindToSpecKey[e];
    return t ? this.specs[t] : {};
  }
};
Is.typeKindToSpecKey = {
  [x.LNodeType]: "lNodeType",
  [x.DOType]: "doType",
  [x.DAType]: "daType",
  [x.EnumType]: "enumType"
};
let ra = Is;
class ac {
  constructor(e, t, s) {
    this.typeRepo = e, this.dataTypeService = t, this.typeSpecificationService = s;
  }
  async getTypeById(e) {
    const t = this.typeRepo.findDataTypeById(x.LNodeType, e);
    if (!t)
      throw new Error(`Unable to find logical node type with id ${e}`);
    const s = await this.dataTypeService.getObjectReferenceDetails(x.LNodeType, t.lnClass, t.children);
    return {
      id: t.id,
      lnClass: t.lnClass,
      children: s
    };
  }
  async isLNodeIdTaken(e) {
    const t = this.typeRepo.findDataTypeById(x.LNodeType, e);
    return Promise.resolve(!!t);
  }
  async createOrUpdateType(e) {
    if (!e)
      throw new Error("No data provided");
    if (!e.id)
      throw new Error("No id provided");
    if (!e.instanceType)
      throw new Error("No innstance type provided");
    const t = await this.dataTypeService.getConfiguredObjectReferenceDetails(x.LNodeType, e.instanceType, e.children), s = { id: e.id, lnClass: e.instanceType, children: t };
    return this.typeRepo.upsertDataType(x.LNodeType, s), Promise.resolve(!0);
  }
  async duplicateType(e, t) {
    const s = this.typeRepo.findDataTypeById(x.LNodeType, e);
    if (!s)
      throw new Error(`Unable to find logical node type with id ${e}`);
    const a = t || this.generateUniqueId(s.id), r = {
      ...s,
      id: a
    };
    return this.typeRepo.upsertDataType(x.LNodeType, r), this.getTypeById(a);
  }
  async deleteTypeById(e) {
    return Promise.resolve(
      this.typeRepo.deleteDataTypeById(x.LNodeType, e)
    );
  }
  async getReferencedTypes(e, t) {
    const s = await this.dataTypeService.getReferencedTypes(x.LNodeType, e, t);
    return jn.mapDataTypesToBasicTypes(s);
  }
  async getAssignableTypes(e, t = []) {
    const s = await this.dataTypeService.getAssignableTypes(x.LNodeType, e, t);
    return jn.mapDataTypesToBasicTypes(s);
  }
  async getDefaultType(e) {
    const t = await this.dataTypeService.getDefaultObjectReferenceDetails(x.LNodeType, e);
    return Promise.resolve({
      id: "",
      lnClass: e,
      children: t
    });
  }
  async getAllTypes() {
    const e = this.typeRepo.findAllDataTypesByKind(x.LNodeType);
    return Promise.resolve(e.map((t) => jn.mapLNodeTypeToBasicType(t)));
  }
  generateUniqueId(e) {
    let t = `${e}_copy`, s = 2;
    for (; this.typeRepo.findDataTypeById(x.LNodeType, t); )
      t = `${e}_copy${s}`, s++;
    return t;
  }
  getTypeOptions() {
    return this.dataTypeService.getTypeOptions(x.LNodeType);
  }
}
const bD = [
  {
    lnClass: "LPHD",
    description: "Physical Device Status Information"
  },
  {
    lnClass: "LLN0",
    description: "Logical Device Status Information"
  },
  {
    lnClass: "LCCH",
    description: "Communication Channel Status Information"
  },
  {
    lnClass: "LGOS",
    description: "GOOSE Subscription Status Information"
  },
  {
    lnClass: "LSVS",
    description: "SMV-Stream Subscription Status Information"
  },
  {
    lnClass: "LTIM",
    description: "Local Time Information of an IED"
  },
  {
    lnClass: "LTMS",
    description: "Configuration & Supervision of Time synchronization in IED"
  },
  {
    lnClass: "LTRK",
    description: "Server Status Information in an IED"
  },
  {
    lnClass: "ANCR",
    description: "Regulation Functions for Petersen Coils"
  },
  {
    lnClass: "ARCO",
    description: "Regulation Functions for Capacitor Banks"
  },
  {
    lnClass: "ARIS",
    description: "General automatic wattmetric Increase with Thermal Supervision"
  },
  {
    lnClass: "ATCC",
    description: "Transformator Tap Changer Regulation Functions"
  },
  {
    lnClass: "AVCO",
    description: "General Voltage Regulation"
  },
  {
    lnClass: "CALH",
    description: "Management of Group Warnings and Alarms"
  },
  {
    lnClass: "CCGR",
    description: "Control of Cooling Equipment (Fans, Pumps, etc.)"
  },
  {
    lnClass: "CILO",
    description: "Control of Interlocking Functions"
  },
  {
    lnClass: "CPOW",
    description: "Measurement-Based Line Switching Control"
  },
  {
    lnClass: "CSWI",
    description: "Control of Circuit Breakers and Disconnectors"
  },
  {
    lnClass: "CSYN",
    description: "Control for Synchronizing conditions (Voltage, Frequency, Phase)"
  },
  {
    lnClass: "FCNT",
    description: "Counting of Pulses Not Originating from the Power Grid"
  },
  {
    lnClass: "FCSD",
    description: "Algorithms for Representing Curve-Shaped Value Pairs"
  },
  {
    lnClass: "FFIL",
    description: "Filtering Functions for Incoming Signals"
  },
  {
    lnClass: "FLIM",
    description: "Functions for Defining temporary/permanent limits for a Variable"
  },
  {
    lnClass: "FPID",
    description: "Functions for Handling Information for a PID-Controller"
  },
  {
    lnClass: "FRMP",
    description: "Provides Ramp Functions"
  },
  {
    lnClass: "FSCC",
    description: "Provides Scheduling Control Functions"
  },
  {
    lnClass: "FSCH",
    description: "Offers Scheduling Methods"
  },
  {
    lnClass: "FSPT",
    description: "General Node for Control and Regulation type Logical Nodes"
  },
  {
    lnClass: "FXOT",
    description: "Handling of General Maximum Values"
  },
  {
    lnClass: "FXUT",
    description: "Handling of General Minimum Values"
  },
  {
    lnClass: "GAPC",
    description: "Generic Node for Control and Process Applications"
  },
  {
    lnClass: "GGIO",
    description: "Generic Node for I/O Applications"
  },
  {
    lnClass: "GLOG",
    description: "Generic Node for Recording and Logging"
  },
  {
    lnClass: "GSAL",
    description: "Generic Node for Security Applications"
  },
  {
    lnClass: "IARC",
    description: "unctions for Trigger-Based Data Archiving"
  },
  {
    lnClass: "IHMI",
    description: "Functions for HMI Communication"
  },
  {
    lnClass: "ISAF",
    description: "Functions for Safety Alarms (Fire Detectors, Gas Sensors, etc.)"
  },
  {
    lnClass: "ITCI",
    description: "Functions for telecontrol systems"
  },
  {
    lnClass: "ITMI",
    description: "Functions for telemonitoring system"
  },
  {
    lnClass: "ITPC",
    description: "Functions for Monitoring Communication Channels"
  },
  {
    lnClass: "KFAN",
    description: "Control Functions for Fans"
  },
  {
    lnClass: "KFIL",
    description: "Control Functions for Mechanical Filters"
  },
  {
    lnClass: "KPMP",
    description: "Control Functions for Pumps"
  },
  {
    lnClass: "KTNK",
    description: "Control Functions for Tanks (Water, Hydraulic, Pneumatic, etc.)"
  },
  {
    lnClass: "KVLV",
    description: "Control Functions for Valves and Gates"
  },
  {
    lnClass: "MENV",
    description: "Measurement Functions for Emissions (Smoke, CO, CO₂, NOx, SOx)"
  },
  {
    lnClass: "MFLK",
    description: "Measurement Functions of flicker inducing voltage fluctuations"
  },
  {
    lnClass: "MFLW",
    description: "Functions for Flow Measurement (Liquids, Gas, Steam, etc.)"
  },
  {
    lnClass: "MHAI",
    description: "Measurement Functions for Three-Phase Harmonic/interharmonic Oscillations"
  },
  {
    lnClass: "MHAN",
    description: "Measurement Functions for Single-Phase Harmonic/interharmonic Oscillations"
  },
  {
    lnClass: "MHET",
    description: "General Temperature Measurement Functions of heat in Material (air, water etc.)"
  },
  {
    lnClass: "MHYD",
    description: "Functions for Hydrometric Measurements"
  },
  {
    lnClass: "MMDC",
    description: "Measurement Functions for DC Systems"
  },
  {
    lnClass: "MMET",
    description: "Functions for Meteorological Measurements/Informations"
  },
  {
    lnClass: "MMTN",
    description: "Functions for Billing-Relevant Energy Measurement (Single-Phase)"
  },
  {
    lnClass: "MMTR",
    description: "Functions for Billing-Relevant Energy Measurement (Three-Phase)"
  },
  {
    lnClass: "MMXN",
    description: "Functions for Non-Phase-Specific Electrical Measurements"
  },
  {
    lnClass: "MMXU",
    description: "Functions for electrical measurements in three-phase systems (Current, Voltage etc.)"
  },
  {
    lnClass: "MSQI",
    description: "Functions for Phasor & asymmetry analysis (sequence & imbalance)"
  },
  {
    lnClass: "PDIF",
    description: "Functions for Current Differential Protection"
  },
  {
    lnClass: "PDIR",
    description: "Directional comparison for fault location"
  },
  {
    lnClass: "PDIS",
    description: "Distance protection function"
  },
  {
    lnClass: "PDOP",
    description: "Power-based overload protection function"
  },
  {
    lnClass: "PDUP",
    description: "Power-based underload protection function"
  },
  {
    lnClass: "PFRC",
    description: "Frequency protection function with rate-of-change (df/dt) monitoring"
  },
  {
    lnClass: "PHAR",
    description: "Harmonic handling for differential protection (PDIF)"
  },
  {
    lnClass: "PHIZ",
    description: "Handling of high-impedance (resistance) insulation faults"
  },
  {
    lnClass: "PIOC",
    description: "Instantaneous overcurrent protection"
  },
  {
    lnClass: "PMRI",
    description: "Motor start-up protection"
  },
  {
    lnClass: "PMSS",
    description: "Motor start-up protection for excessive starting time during start-up"
  },
  {
    lnClass: "POPF",
    description: "Overload protection based on power factor (cos φ)"
  },
  {
    lnClass: "PPAM",
    description: "Asynchronism handling in generators"
  },
  {
    lnClass: "PRTR",
    description: "Field short-circuit protection based on 6th harmonic detection"
  },
  {
    lnClass: "PSCH",
    description: "Functions for higher-level protection schemes for lines"
  },
  {
    lnClass: "PSDE",
    description: "Earthfault handling in compensated and isolated networks"
  },
  {
    lnClass: "PSOF",
    description: "Protection Function Instantaneous tripping on switch-on-to-fault conditions"
  },
  {
    lnClass: "PTDV",
    description: "Functions for Voltage Differential Protection"
  },
  {
    lnClass: "PTEF",
    description: "Transient earth fault protection in compensated networks"
  },
  {
    lnClass: "PTHF",
    description: "Thyristor protection"
  },
  {
    lnClass: "PTOC",
    description: "Time-based overcurrent protection"
  },
  {
    lnClass: "PTOF",
    description: "Overfrequency protection"
  },
  {
    lnClass: "PTOV",
    description: "Overvoltage protection"
  },
  {
    lnClass: "PTRC",
    description: "Functions for trip management"
  },
  {
    lnClass: "PTTR",
    description: "Thermal overload protection"
  },
  {
    lnClass: "PTUC",
    description: "Undercurrent/Underpower protection"
  },
  {
    lnClass: "PTUF",
    description: "Underfrequency protection"
  },
  {
    lnClass: "PTUV",
    description: "Undervoltage protection"
  },
  {
    lnClass: "PUPF",
    description: "Underload protection based on power factor (cos φ)"
  },
  {
    lnClass: "PVOC",
    description: "Voltage controlled time overcurrent protection"
  },
  {
    lnClass: "PVPH",
    description: "Frequency-dependent voltage protection"
  },
  {
    lnClass: "PZSU",
    description: "zero speed or underspeed protection (Actuator failure protection)"
  },
  {
    lnClass: "QFVR",
    description: "Analysis of frequency variation"
  },
  {
    lnClass: "QITR",
    description: "Analysis of current transients"
  },
  {
    lnClass: "QIUB",
    description: "Analysis of current unbalance variation"
  },
  {
    lnClass: "QVTR",
    description: "Analysis of voltage transients"
  },
  {
    lnClass: "QVUB",
    description: "Analysis of voltgae unbalance variation"
  },
  {
    lnClass: "QVVR",
    description: "Analysis of voltage variations"
  },
  {
    lnClass: "RADR",
    description: "Control functions of an analog disturbance recorder channel"
  },
  {
    lnClass: "RBDR",
    description: "Control functions of a binary disturbance recorder channel"
  },
  {
    lnClass: "RBRF",
    description: "Control functions for breaker failure backup protection"
  },
  {
    lnClass: "RDIR",
    description: "Provides directional input/information"
  },
  {
    lnClass: "RDRE",
    description: "Control functions for disturbance recorder"
  },
  {
    lnClass: "RDRS",
    description: "Supervision and control of disturbance recorder upload"
  },
  {
    lnClass: "RFLO",
    description: "Fault location calculation functions (calculated in ohm)"
  },
  {
    lnClass: "RMXU",
    description: "Calculation functions of process data for differential protection"
  },
  {
    lnClass: "RPSB",
    description: "Blocking functions for differential protection during periodic fluctuations"
  },
  {
    lnClass: "RREC",
    description: "Auto-reclosing functions (AWE)"
  },
  {
    lnClass: "RSYN",
    description: "Functions for synchrocheck based on voltage phasor comparison"
  },
  {
    lnClass: "SARC",
    description: "Arc monitoring and diagnostics"
  },
  {
    lnClass: "SCBR",
    description: "Supervision of circuit breakers (position and wear)"
  },
  {
    lnClass: "SIMG",
    description: "Supervision of gas-insulated equipment"
  },
  {
    lnClass: "SIML",
    description: "Supervision of liquid-insulated equipment (oil etc.)"
  },
  {
    lnClass: "SLTC",
    description: "Supervision of on-load tap changers"
  },
  {
    lnClass: "SOPM",
    description: "Supervision of operating mechanism for switches (circuit breaker, motor, spring etc.)"
  },
  {
    lnClass: "SPDC",
    description: "Supervision of partial discharges"
  },
  {
    lnClass: "SPRS",
    description: "General pressure supervision"
  },
  {
    lnClass: "SPTR",
    description: "Supervision of power transformers"
  },
  {
    lnClass: "SSWI",
    description: "Supervision of the mechanics of disconnectors and grounding switches"
  },
  {
    lnClass: "STMP",
    description: "General temperature supervision"
  },
  {
    lnClass: "SVBR",
    description: "General vibration supervision for rotating machinery"
  },
  {
    lnClass: "TANG",
    description: "Angle measurement between two physical objects"
  },
  {
    lnClass: "TAXD",
    description: "Measurement of axial displacement of a physical object"
  },
  {
    lnClass: "TCTR",
    description: "Measurement of electric current using current transformers"
  },
  {
    lnClass: "TDST",
    description: "Distance measurement to a moving object"
  },
  {
    lnClass: "TFLW",
    description: "Measurement of media flow rates of various liquids"
  },
  {
    lnClass: "TFRQ",
    description: "Frequency measurement of non-electrical phenomena (e.g., sounds, vibrations)"
  },
  {
    lnClass: "TGSN",
    description: "Measurement functions for a generic sensor"
  },
  {
    lnClass: "THUM",
    description: "Humidity measurement"
  },
  {
    lnClass: "TLVL",
    description: "Measurement of media level/fill level"
  },
  {
    lnClass: "TMGF",
    description: "Measurement of magnetic field strength"
  },
  {
    lnClass: "TMVM",
    description: "Relative velocity measurement of a physical object"
  },
  {
    lnClass: "TPOS",
    description: "Relative position measurement of a movable and physical object"
  },
  {
    lnClass: "TPRS",
    description: "General pressure measurement"
  },
  {
    lnClass: "TRTN",
    description: "Measurement of the rotational speed of a rotating machine"
  },
  {
    lnClass: "TSND",
    description: "Measurement of local sound pressure level"
  },
  {
    lnClass: "TTMP",
    description: "General temperature measurement"
  },
  {
    lnClass: "TTNS",
    description: "General measurement of mechanical tension in a physical object"
  },
  {
    lnClass: "TVBR",
    description: "General vibration measurement"
  },
  {
    lnClass: "TVTR",
    description: "Measurement of electrical voltage via voltage transformer"
  },
  {
    lnClass: "TWPH",
    description: "General measurement of chemical pH levle value"
  },
  {
    lnClass: "XCBR",
    description: "Modeling of a circuit breaker"
  },
  {
    lnClass: "XFUS",
    description: "Modeling of a fuse switch"
  },
  {
    lnClass: "XSWI",
    description: "Modeling of grounding and disconnect switches"
  },
  {
    lnClass: "YEFN",
    description: "Modeling of a Petersen coil (power transfomer)"
  },
  {
    lnClass: "YLTC",
    description: "Modeling of a tap changer"
  },
  {
    lnClass: "YPSH",
    description: "Modeling of a switchable power shunt"
  },
  {
    lnClass: "YPTR",
    description: "Modeling of a power transformer"
  },
  {
    lnClass: "ZAXN",
    description: "Modeling of an electrical auxiliary network"
  },
  {
    lnClass: "ZBAT",
    description: "Modeling of a battery"
  },
  {
    lnClass: "ZBSH",
    description: "Modeling of a bushing (busbar)"
  },
  {
    lnClass: "ZCAB",
    description: "Modeling of an power cable (underground cable)"
  },
  {
    lnClass: "ZCAP",
    description: "Modeling of a capacitor bank (MSCDN)"
  },
  {
    lnClass: "ZCON",
    description: "Modeling of a converter"
  },
  {
    lnClass: "ZGEN",
    description: "Modeling of a generator"
  },
  {
    lnClass: "ZGIL",
    description: "Modeling of a gas insulated line"
  },
  {
    lnClass: "ZLIN",
    description: "Modeling of an overhead line"
  },
  {
    lnClass: "ZMOT",
    description: "Modeling of a motor"
  },
  {
    lnClass: "ZREA",
    description: "Modeling of a reaktor"
  },
  {
    lnClass: "ZRES",
    description: "Modeling of a ohmic resistor"
  },
  {
    lnClass: "ZRRC",
    description: "Modeling of a rotating reactive component"
  },
  {
    lnClass: "ZSAR",
    description: "Modeling of a surge arrestor"
  },
  {
    lnClass: "ZSCR",
    description: "Modeling of an electronic controllable rectifier"
  },
  {
    lnClass: "ZSMC",
    description: "Modeling of a synchronous machine"
  },
  {
    lnClass: "ZTCF",
    description: "Modeling of an electrical thyristor controlled frequency converter"
  },
  {
    lnClass: "ZTCR",
    description: "Modeling of an electrical thyristor controlled reactive component"
  }
], fD = [
  { name: "BasePrimitiveCDC", description: "Common attributes for primitive CDC" },
  { name: "BaseComposedCDC", description: "Common attributes for composed CDC" },
  { name: "SubstitutionCDC", description: "Common attributes for substitution" },
  { name: "SPS", description: "Single point status" },
  { name: "DPS", description: "Double point status" },
  { name: "INS", description: "Integer status" },
  { name: "ENS", description: "Enumerated status" },
  { name: "ACT", description: "Protection activation information" },
  { name: "ACD", description: "Directional protection indication information" },
  { name: "SEC", description: "Security violation counting" },
  { name: "BCR", description: "Binary counter reading" },
  { name: "HST", description: "Histogram" },
  { name: "VSS", description: "Visible string status" },
  { name: "ORS", description: "Object reference status" },
  { name: "TCS", description: "Time value status" },
  { name: "HarmonicMeasurandCDC", description: "Common harmonic measurand information" },
  { name: "MV", description: "Measured value" },
  { name: "CMV", description: "Complex measured value" },
  { name: "SAV", description: "Sampled value" },
  { name: "WYE", description: "Phase to ground/neutral related measured values of a 3-phase system" },
  { name: "DEL", description: "Phase to phase related measured values of a 3-phase system" },
  { name: "SEQ", description: "Sequence" },
  { name: "HMV", description: "Harmonic value" },
  { name: "HWYE", description: "Harmonic value for WYE" },
  { name: "HDEL", description: "Harmonic value for DEL" },
  { name: "ControlTestingCDC", description: "Control testing" },
  { name: "SPC", description: "Controllable single point" },
  { name: "DPC", description: "Controllable double point" },
  { name: "INC", description: "Controllable integer status" },
  { name: "ENC", description: "Controllable enumerated status" },
  { name: "BSC", description: "Binary controlled step position information" },
  { name: "ISC", description: "Integer controlled step position information" },
  { name: "APC", description: "Controllable analogue process value" },
  { name: "BAC", description: "Binary controlled analogue process value" },
  { name: "SPG", description: "Single point setting" },
  { name: "ING", description: "Integer status setting" },
  { name: "ENG", description: "Enumerated status setting" },
  { name: "ORG", description: "Object reference setting" },
  { name: "TSG", description: "Time setting" },
  { name: "CUG", description: "Currency setting" },
  { name: "VSG", description: "Visible string setting" },
  { name: "ASG", description: "Analogue setting" },
  { name: "CURVE", description: "Setting curve" },
  { name: "CSG", description: "Curve shape setting" },
  { name: "DPL", description: "Device name plate" },
  { name: "LPL", description: "Logical node name plate" },
  { name: "CSD", description: "Curve shape description" },
  { name: "VSD", description: "Visible string description" },
  { name: "CST", description: "Common service tracking" },
  { name: "BTS", description: "Buffered report tracking service" },
  { name: "UTS", description: "Unbuffered report tracking service" },
  { name: "LTS", description: "Log control block tracking service" },
  { name: "GTS", description: "GOOSE control block tracking service" },
  { name: "MTS", description: "MSVCB tracking service" },
  { name: "NTS", description: "USVCB tracking service" },
  { name: "STS", description: "SGCB tracking service" },
  { name: "CTS", description: "Control service tracking" }
];
function AD(n) {
  return n.reduce((e, t) => {
    var s;
    return !t.refTypeKind || !t.objectType || (e.has(t.refTypeKind) || e.set(t.refTypeKind, /* @__PURE__ */ new Set()), (s = e.get(t.refTypeKind)) == null || s.add(t.objectType)), e;
  }, /* @__PURE__ */ new Map());
}
class ED {
  constructor(e, t) {
    this.typeRepo = e, this.typeSpecificationService = t;
  }
  async getObjectReferenceDetails(e, t, s) {
    const a = this.typeSpecificationService.getTypeSpecification(e, t);
    if (!a)
      throw new Error(`No type specification found for type ${e} with id ${t}`);
    return this.specsToObjectReferenceDetails(a, s);
  }
  async getConfiguredObjectReferenceDetails(e, t, s) {
    return (await this.getObjectReferenceDetails(e, t, s)).filter((r) => r.meta.isConfigured);
  }
  async getDefaultObjectReferenceDetails(e, t) {
    return this.getObjectReferenceDetails(e, t, []);
  }
  async getReferencedTypes(e, t, s) {
    if (!this.typeRepo.findDataTypeById(e, t))
      throw new Error(`Unable to find data type of kind ${e} with id ${t}`);
    const r = this.typeRepo.findReferencedTypesById(e, t, s);
    return Promise.resolve(r);
  }
  async getAssignableTypes(e, t, s) {
    const a = this.typeSpecificationService.getTypeSpecification(e, t);
    if (!a)
      throw new Error(`No type specification found for type ${e} with id ${t}`);
    const r = a.filter((d) => d.requiresReference && (s.length === 0 || s.includes(d.name))).filter((d) => d.requiresReference && !!d.refTypeKind), o = AD(r), i = (d) => {
      const c = Array.from(o.get(d) ?? []).flatMap((C) => this.typeRepo.findAllDataTypesByKind(d, C)), l = o.has(d) ? this.typeRepo.findAllDataTypesWithoutInstanceType(d) : [];
      return [...c, ...l];
    };
    return {
      lNodeTypes: i(x.LNodeType),
      dataObjectTypes: i(x.DOType),
      dataAttributeTypes: i(x.DAType),
      enumTypes: i(x.EnumType)
    };
  }
  getTypeOptions(e) {
    const t = this.typeSpecificationService.getSpecificationsForType(e), s = Object.keys(t).map((a) => {
      var o, i;
      let r = "";
      return e === x.LNodeType ? r = ((o = bD.find((d) => d.lnClass === a)) == null ? void 0 : o.description) ?? "" : e === x.DOType && (r = ((i = fD.find((d) => d.name === a)) == null ? void 0 : i.description) ?? ""), { id: a, description: r };
    });
    return Promise.resolve(s);
  }
  specsToObjectReferenceDetails(e, t) {
    return e.map((s) => {
      const a = t.find((r) => r.name === s.name);
      return {
        name: s.name,
        tagName: s.tagName,
        typeRef: a == null ? void 0 : a.typeRef,
        attributes: s.attributes,
        meta: {
          isMandatory: !!s.isMandatory,
          isConfigured: !!s.isMandatory || !!a,
          requiresReference: !!s.requiresReference,
          objectType: s.objectType,
          refTypeKind: s.refTypeKind
        }
      };
    });
  }
}
class OD {
  constructor(e, t, s) {
    this.typeRepo = e, this.dataTypeService = t, this.typeSpecificationService = s;
  }
  async getTypeById(e) {
    const t = this.typeRepo.findDataTypeById(x.DOType, e);
    if (!t)
      throw new Error(`Unable to find DOType with id ${e}`);
    const s = await this.dataTypeService.getObjectReferenceDetails(x.DOType, t.cdc, t.children);
    return {
      ...t,
      children: s
    };
  }
  async isDOIdTaken(e) {
    const t = this.typeRepo.findDataTypeById(x.DOType, e);
    return Promise.resolve(!!t);
  }
  async createOrUpdateType(e) {
    if (!e)
      throw new Error("No data provided");
    if (!e.id)
      throw new Error("No id provided");
    if (!e.instanceType)
      throw new Error("No instanceType (cdc) provided");
    const t = await this.dataTypeService.getConfiguredObjectReferenceDetails(x.DOType, e.instanceType, e.children), s = {
      id: e.id,
      cdc: e.instanceType,
      children: t
    };
    return this.typeRepo.upsertDataType(x.DOType, s), !0;
  }
  async getReferencedTypes(e, t) {
    const s = await this.dataTypeService.getReferencedTypes(x.DOType, e, t);
    return jn.mapDataTypesToBasicTypes(s);
  }
  async getDefaultType(e) {
    const t = await this.dataTypeService.getDefaultObjectReferenceDetails(x.DOType, e);
    return Promise.resolve({
      id: "",
      cdc: e,
      children: t
    });
  }
  async getAssignableTypes(e, t) {
    const s = await this.dataTypeService.getAssignableTypes(x.DOType, e, t);
    return jn.mapDataTypesToBasicTypes(s);
  }
  async getTypeOptions() {
    return this.dataTypeService.getTypeOptions(x.DOType);
  }
}
class SD {
  constructor(e, t, s) {
    this.typeRepo = e, this.dataTypeService = t, this.typeSpecificationService = s;
  }
  async getTypeById(e) {
    const t = this.typeRepo.findDataTypeById(x.DAType, e);
    if (!t)
      throw new Error(`Unable to find DAType with id ${e}`);
    let s;
    try {
      s = await this.dataTypeService.getObjectReferenceDetails(x.DAType, t.instanceType, t.children);
    } catch {
      s = this.toDefaultDetails(t);
    }
    return {
      ...t,
      children: s
    };
  }
  async isDAIdTaken(e) {
    const t = this.typeRepo.findDataTypeById(x.DAType, e);
    return Promise.resolve(!!t);
  }
  async createOrUpdateType(e) {
    if (!e)
      throw new Error("No data provided");
    if (!e.id)
      throw new Error("No id provided");
    if (!e.instanceType)
      throw new Error("No instanceType provided");
    const t = await this.dataTypeService.getConfiguredObjectReferenceDetails(x.DAType, e.instanceType, e.children);
    t.forEach((a) => a.tagName = "BDA");
    const s = {
      id: e.id,
      instanceType: e.instanceType,
      children: t
    };
    return this.typeRepo.upsertDataType(x.DAType, s), !0;
  }
  async getReferencedTypes(e, t) {
    const s = await this.dataTypeService.getReferencedTypes(x.DAType, e, t);
    return jn.mapDataTypesToBasicTypes(s);
  }
  async getDefaultType(e) {
    const t = await this.dataTypeService.getDefaultObjectReferenceDetails(x.DAType, e);
    return Promise.resolve({
      id: "",
      instanceType: e,
      children: t
    });
  }
  async getAssignableTypes(e, t) {
    const s = await this.dataTypeService.getAssignableTypes(x.DAType, e, t);
    return jn.mapDataTypesToBasicTypes(s);
  }
  async getTypeOptions() {
    return this.dataTypeService.getTypeOptions(x.DAType);
  }
  toDefaultDetails(e) {
    return e.children.map((s) => {
      var o;
      let a;
      const r = (o = s.attributes) == null ? void 0 : o.bType;
      return r && r === "Struct" ? a = x.DAType : r && r === "Enum" && (a = x.EnumType), {
        ...s,
        meta: {
          isConfigured: !0,
          isMandatory: !1,
          objectType: void 0,
          requiresReference: !!a,
          refTypeKind: a
        }
      };
    });
  }
}
class LD {
  constructor(e, t) {
    this.typeRepo = e, this.dataTypeService = t;
  }
  async getTypeById(e) {
    const t = this.typeRepo.findDataTypeById(x.EnumType, e);
    if (!t)
      throw new Error(`Unable to find DOType with id ${e}`);
    let s;
    try {
      s = await this.dataTypeService.getObjectReferenceDetails(x.EnumType, t.instanceType, t.children);
    } catch {
      s = this.toDefaultDetails(t);
    }
    return {
      ...t,
      children: s
    };
  }
  async isEnumIdTaken(e) {
    return this.typeRepo.findDataTypeById(x.EnumType, e) !== null;
  }
  async createOrUpdateType(e) {
    if (!e)
      throw new Error("No data provided");
    if (!e.id)
      throw new Error("No id provided");
    if (!e.instanceType)
      throw new Error("No instanceType provided");
    const t = await this.dataTypeService.getConfiguredObjectReferenceDetails(x.EnumType, e.instanceType, e.children), s = {
      id: e.id,
      instanceType: e.instanceType,
      children: t
    };
    return this.typeRepo.upsertDataType(x.EnumType, s), !0;
  }
  async getDefaultType(e) {
    const t = await this.dataTypeService.getDefaultObjectReferenceDetails(x.EnumType, e);
    return Promise.resolve({
      id: "",
      children: t
    });
  }
  getTypeOptions() {
    return this.dataTypeService.getTypeOptions(x.EnumType);
  }
  toDefaultDetails(e) {
    return e.children.map((s) => ({
      ...s,
      meta: {
        isConfigured: !0,
        isMandatory: !1,
        requiresReference: !1,
        objectType: ""
      }
    }));
  }
}
let ws = null, ka = null, An = null, $a = null, er = null, tr = null, nr = null, qn = null, zn = null;
function rc(n, e) {
  if (ws = n, ka = e, !ws || !ka)
    throw new Error("Invalid arguments passed to initServices.");
  An ? An.setDocument(ws) : An = new xa(ws, ka), qn || (qn = new ra()), zn || (zn = new ED(An, qn)), $a = new ac(An, zn, qn), er = new OD(An, zn, qn), tr = new SD(An, zn, qn), nr = new LD(An, zn);
}
function hr() {
  if (!nr)
    throw new Error("EnumTypeService not initialized. Call initServices() first.");
  return nr;
}
function yr() {
  if (!tr)
    throw new Error("DoTypeService not initialized. Call initServices() first.");
  return tr;
}
function Nr() {
  if (!er)
    throw new Error("DoTypeService not initialized. Call initServices() first.");
  return er;
}
function Ns() {
  if (!$a)
    throw new Error("LNodeTypeV2Service not initialized. Call initServices() first.");
  return $a;
}
const Bs = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  LNodeTypeService: ac,
  NsdSpecificationService: ra,
  getDATypeService: yr,
  getDOTypeService: Nr,
  getEnumTypeService: hr,
  getLNodeTypeService: Ns,
  initServices: rc
}, Symbol.toStringTag, { value: "Module" }));
function gD(n) {
  let e, t, s;
  function a(o) {
    n[5](o);
  }
  let r = {
    dialogTitle: "Create Logical Node Type",
    confirmText: "Create",
    idLabel: "Logical Node ID",
    autocompleteLabel: "Logical Node Class",
    getOptions: (
      /*func*/
      n[3]
    ),
    isIdTaken: (
      /*func_1*/
      n[4]
    ),
    onConfirm: (
      /*handleConfirm*/
      n[2]
    )
  };
  return (
    /*open*/
    n[0] !== void 0 && (r.open = /*open*/
    n[0]), e = new fa({ props: r }), de.push(() => Ve(e, "open", a)), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, [i]) {
        const d = {};
        !t && i & /*open*/
        1 && (t = !0, d.open = /*open*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function hD(n, e, t) {
  const s = Ns();
  let { open: a = !1 } = e;
  const r = (c, l) => {
    un("confirm", { id: c, lnClass: l });
  }, o = () => s.getTypeOptions(), i = (c) => s.isLNodeIdTaken(c);
  function d(c) {
    a = c, t(0, a);
  }
  return n.$$set = (c) => {
    "open" in c && t(0, a = c.open);
  }, [a, s, r, o, i, d];
}
class yD extends me {
  constructor(e) {
    super(), ue(this, e, hD, gD, Ce, { open: 0 });
  }
}
function ND(n) {
  let e, t, s = (
    /*node*/
    n[0].name + ""
  ), a;
  return {
    c() {
      e = Z("div"), t = Z("strong"), a = Se(s), R(e, "class", "node-name-cell");
    },
    m(r, o) {
      G(r, e, o), U(e, t), U(t, a);
    },
    p(r, o) {
      o & /*node*/
      1 && s !== (s = /*node*/
      r[0].name + "") && je(a, s);
    },
    d(r) {
      r && F(e);
    }
  };
}
function TD(n) {
  let e = (
    /*node*/
    n[0].class + ""
  ), t;
  return {
    c() {
      t = Se(e);
    },
    m(s, a) {
      G(s, t, a);
    },
    p(s, a) {
      a & /*node*/
      1 && e !== (e = /*node*/
      s[0].class + "") && je(t, e);
    },
    d(s) {
      s && F(t);
    }
  };
}
function PD(n) {
  let e = (
    /*node*/
    n[0].references + ""
  ), t;
  return {
    c() {
      t = Se(e);
    },
    m(s, a) {
      G(s, t, a);
    },
    p(s, a) {
      a & /*node*/
      1 && e !== (e = /*node*/
      s[0].references + "") && je(t, e);
    },
    d(s) {
      s && F(t);
    }
  };
}
function vD(n) {
  let e, t, s, a;
  return e = new gn({
    props: {
      tooltip: "Duplicate",
      type: "duplicate",
      onClick: (
        /*onDuplicate*/
        n[1]
      )
    }
  }), s = new gn({
    props: {
      tooltip: "Delete",
      type: "delete",
      fillColor: "red",
      onClick: (
        /*onDelete*/
        n[2]
      )
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), G(r, t, o), q(s, r, o), a = !0;
    },
    p(r, o) {
      const i = {};
      o & /*onDuplicate*/
      2 && (i.onClick = /*onDuplicate*/
      r[1]), e.$set(i);
      const d = {};
      o & /*onDelete*/
      4 && (d.onClick = /*onDelete*/
      r[2]), s.$set(d);
    },
    i(r) {
      a || (L(e.$$.fragment, r), L(s.$$.fragment, r), a = !0);
    },
    o(r) {
      h(e.$$.fragment, r), h(s.$$.fragment, r), a = !1;
    },
    d(r) {
      r && F(t), z(e, r), z(s, r);
    }
  };
}
function MD(n) {
  let e, t, s, a, r, o, i, d;
  return e = new qt({
    props: {
      $$slots: { default: [ND] },
      $$scope: { ctx: n }
    }
  }), s = new qt({
    props: {
      $$slots: { default: [TD] },
      $$scope: { ctx: n }
    }
  }), r = new qt({
    props: {
      $$slots: { default: [PD] },
      $$scope: { ctx: n }
    }
  }), i = new qt({
    props: {
      $$slots: { default: [vD] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment), a = $(), X(r.$$.fragment), o = $(), X(i.$$.fragment);
    },
    m(c, l) {
      q(e, c, l), G(c, t, l), q(s, c, l), G(c, a, l), q(r, c, l), G(c, o, l), q(i, c, l), d = !0;
    },
    p(c, l) {
      const C = {};
      l & /*$$scope, node*/
      17 && (C.$$scope = { dirty: l, ctx: c }), e.$set(C);
      const u = {};
      l & /*$$scope, node*/
      17 && (u.$$scope = { dirty: l, ctx: c }), s.$set(u);
      const m = {};
      l & /*$$scope, node*/
      17 && (m.$$scope = { dirty: l, ctx: c }), r.$set(m);
      const p = {};
      l & /*$$scope, onDelete, onDuplicate*/
      22 && (p.$$scope = { dirty: l, ctx: c }), i.$set(p);
    },
    i(c) {
      d || (L(e.$$.fragment, c), L(s.$$.fragment, c), L(r.$$.fragment, c), L(i.$$.fragment, c), d = !0);
    },
    o(c) {
      h(e.$$.fragment, c), h(s.$$.fragment, c), h(r.$$.fragment, c), h(i.$$.fragment, c), d = !1;
    },
    d(c) {
      c && (F(t), F(a), F(o)), z(e, c), z(s, c), z(r, c), z(i, c);
    }
  };
}
function RD(n) {
  let e, t;
  return e = new Ca({
    props: {
      key: (
        /*node*/
        n[0].name
      ),
      class: "mdc-data-table__logical-node-row",
      style: "background: white",
      $$slots: { default: [MD] },
      $$scope: { ctx: n }
    }
  }), e.$on("click", function() {
    Fe(
      /*onClick*/
      n[3]
    ) && n[3].apply(this, arguments);
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      n = s;
      const r = {};
      a & /*node*/
      1 && (r.key = /*node*/
      n[0].name), a & /*$$scope, onDelete, onDuplicate, node*/
      23 && (r.$$scope = { dirty: a, ctx: n }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function FD(n, e, t) {
  let { node: s } = e, { onDuplicate: a } = e, { onDelete: r } = e, { onClick: o } = e;
  return n.$$set = (i) => {
    "node" in i && t(0, s = i.node), "onDuplicate" in i && t(1, a = i.onDuplicate), "onDelete" in i && t(2, r = i.onDelete), "onClick" in i && t(3, o = i.onClick);
  }, [s, a, r, o];
}
class GD extends me {
  constructor(e) {
    super(), ue(this, e, FD, RD, Ce, {
      node: 0,
      onDuplicate: 1,
      onDelete: 2,
      onClick: 3
    });
  }
}
const Es = Ft({
  path: ["overview"]
}), VD = Ft(null), Aa = Ft(null);
function Tr(n) {
  const e = Ft([]);
  let t = [];
  const { subscribe: s, set: a, update: r } = e;
  async function o() {
    const b = await n(), S = b.map((f) => ({ ...f, isMarked: !1 }));
    t = JSON.parse(JSON.stringify(b)), a(S);
  }
  function i(b, S) {
    r(
      (f) => f.map((E) => E.name === b ? { ...E, ...S } : E)
    );
  }
  function d(b) {
    r(
      (S) => S.map(
        (f) => f.name === b ? { ...f, meta: { ...f.meta, isConfigured: !f.meta.isConfigured } } : f
      )
    );
  }
  function c(b) {
    r(
      (S) => S.map((f) => f.name === b ? { ...f, isMarked: !f.isMarked } : f)
    );
  }
  function l(b, S) {
    r(
      (f) => f.map((E) => E.name === b ? { ...E, typeRef: S, meta: { ...E.meta, isConfigured: !0 } } : E)
    );
  }
  function C(b) {
    r(
      (S) => S.map((f) => f.name === b ? { ...f, typeRef: void 0, meta: { ...f.meta, isConfigured: !1 } } : f)
    );
  }
  function u() {
    a(JSON.parse(JSON.stringify(t)));
  }
  function m() {
    e.update((b) => (t = JSON.parse(JSON.stringify(b)), b));
  }
  const p = Zn(e, (b) => b.filter((S) => S.isMarked)), D = Zn(p, (b) => b.map((S) => S.name)), _ = Zn(e, (b) => b.filter((S) => S.meta.isConfigured || S.meta.isMandatory)), A = Zn(e, (b) => b.length !== t.length ? !0 : b.some((S, f) => {
    const E = t[f];
    return S.meta.isConfigured !== E.meta.isConfigured ? !0 : S.meta.isConfigured ? S.name !== E.name || S.typeRef !== E.typeRef : !1;
  }));
  return {
    subscribe: s,
    reload: o,
    updateItem: i,
    toggleConfigured: d,
    toggleMarked: c,
    setTypeReference: l,
    removeTypeReference: C,
    markedItems: p,
    markedItemIds: D,
    configuredItems: _,
    isDirty: A,
    reset: u,
    commit: m
  };
}
function Go(n, e, t) {
  const s = n.slice();
  return s[20] = e[t], s;
}
function jD(n) {
  let e;
  return {
    c() {
      e = Se("ADD NEW LNODE TYPE");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function kD(n) {
  let e;
  return {
    c() {
      e = Z("strong"), e.textContent = "Name";
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    d(t) {
      t && F(e);
    }
  };
}
function wD(n) {
  let e;
  return {
    c() {
      e = Se("arrow_drop_up");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function BD(n) {
  let e, t, s, a;
  return e = new ur({
    props: {
      $$slots: { default: [kD] },
      $$scope: { ctx: n }
    }
  }), s = new mr({
    props: {
      class: "material-icons",
      $$slots: { default: [wD] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), G(r, t, o), q(s, r, o), a = !0;
    },
    p(r, o) {
      const i = {};
      o & /*$$scope*/
      8388608 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
      const d = {};
      o & /*$$scope*/
      8388608 && (d.$$scope = { dirty: o, ctx: r }), s.$set(d);
    },
    i(r) {
      a || (L(e.$$.fragment, r), L(s.$$.fragment, r), a = !0);
    },
    o(r) {
      h(e.$$.fragment, r), h(s.$$.fragment, r), a = !1;
    },
    d(r) {
      r && F(t), z(e, r), z(s, r);
    }
  };
}
function UD(n) {
  let e;
  return {
    c() {
      e = Z("strong"), e.textContent = "Class";
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    d(t) {
      t && F(e);
    }
  };
}
function HD(n) {
  let e;
  return {
    c() {
      e = Se("arrow_drop_up");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function KD(n) {
  let e, t, s, a;
  return e = new ur({
    props: {
      $$slots: { default: [UD] },
      $$scope: { ctx: n }
    }
  }), s = new mr({
    props: {
      class: "material-icons",
      $$slots: { default: [HD] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), G(r, t, o), q(s, r, o), a = !0;
    },
    p(r, o) {
      const i = {};
      o & /*$$scope*/
      8388608 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
      const d = {};
      o & /*$$scope*/
      8388608 && (d.$$scope = { dirty: o, ctx: r }), s.$set(d);
    },
    i(r) {
      a || (L(e.$$.fragment, r), L(s.$$.fragment, r), a = !0);
    },
    o(r) {
      h(e.$$.fragment, r), h(s.$$.fragment, r), a = !1;
    },
    d(r) {
      r && F(t), z(e, r), z(s, r);
    }
  };
}
function WD(n) {
  let e;
  return {
    c() {
      e = Z("strong"), e.textContent = "References";
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    d(t) {
      t && F(e);
    }
  };
}
function qD(n) {
  let e, t;
  return e = new ur({
    props: {
      $$slots: { default: [WD] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope*/
      8388608 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function zD(n) {
  let e, t, s, a, r, o, i, d;
  return e = new qt({
    props: {
      columnId: "id",
      style: "width: 100%; min-width: 150px; background: rgba(0, 0, 0, 0.1);",
      $$slots: { default: [BD] },
      $$scope: { ctx: n }
    }
  }), s = new qt({
    props: {
      columnId: "lnClass",
      style: "min-width: 200px; background: rgba(0, 0, 0, 0.1);",
      $$slots: { default: [KD] },
      $$scope: { ctx: n }
    }
  }), r = new qt({
    props: {
      columnId: "references",
      sortable: !1,
      style: "background: rgba(0, 0, 0, 0.1);",
      $$slots: { default: [qD] },
      $$scope: { ctx: n }
    }
  }), i = new qt({
    props: {
      sortable: !1,
      style: "background: rgba(0,0,0,0.1)"
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment), a = $(), X(r.$$.fragment), o = $(), X(i.$$.fragment);
    },
    m(c, l) {
      q(e, c, l), G(c, t, l), q(s, c, l), G(c, a, l), q(r, c, l), G(c, o, l), q(i, c, l), d = !0;
    },
    p(c, l) {
      const C = {};
      l & /*$$scope*/
      8388608 && (C.$$scope = { dirty: l, ctx: c }), e.$set(C);
      const u = {};
      l & /*$$scope*/
      8388608 && (u.$$scope = { dirty: l, ctx: c }), s.$set(u);
      const m = {};
      l & /*$$scope*/
      8388608 && (m.$$scope = { dirty: l, ctx: c }), r.$set(m);
    },
    i(c) {
      d || (L(e.$$.fragment, c), L(s.$$.fragment, c), L(r.$$.fragment, c), L(i.$$.fragment, c), d = !0);
    },
    o(c) {
      h(e.$$.fragment, c), h(s.$$.fragment, c), h(r.$$.fragment, c), h(i.$$.fragment, c), d = !1;
    },
    d(c) {
      c && (F(t), F(a), F(o)), z(e, c), z(s, c), z(r, c), z(i, c);
    }
  };
}
function XD(n) {
  let e, t;
  return e = new Ca({
    props: {
      $$slots: { default: [zD] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope*/
      8388608 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Vo(n) {
  let e;
  return {
    c() {
      e = Z("tr"), e.innerHTML = '<td colspan="4" style="text-align: center; color: #888; padding: 32px;">No logical node types found.</td>';
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function jo(n, e) {
  let t, s, a;
  function r() {
    return (
      /*func*/
      e[11](
        /*node*/
        e[20]
      )
    );
  }
  function o() {
    return (
      /*func_1*/
      e[12](
        /*node*/
        e[20]
      )
    );
  }
  function i() {
    return (
      /*func_2*/
      e[13](
        /*node*/
        e[20]
      )
    );
  }
  return s = new GD({
    props: {
      node: {
        name: (
          /*node*/
          e[20].id
        ),
        class: (
          /*node*/
          e[20].instanceType
        ),
        references: (
          /*node*/
          e[20].references
        )
      },
      onDuplicate: r,
      onDelete: o,
      onClick: i
    }
  }), {
    key: n,
    first: null,
    c() {
      t = st(), X(s.$$.fragment), this.first = t;
    },
    m(d, c) {
      G(d, t, c), q(s, d, c), a = !0;
    },
    p(d, c) {
      e = d;
      const l = {};
      c & /*filteredAndSortedItems*/
      8 && (l.node = {
        name: (
          /*node*/
          e[20].id
        ),
        class: (
          /*node*/
          e[20].instanceType
        ),
        references: (
          /*node*/
          e[20].references
        )
      }), c & /*filteredAndSortedItems*/
      8 && (l.onDuplicate = r), c & /*filteredAndSortedItems*/
      8 && (l.onDelete = o), c & /*filteredAndSortedItems*/
      8 && (l.onClick = i), s.$set(l);
    },
    i(d) {
      a || (L(s.$$.fragment, d), a = !0);
    },
    o(d) {
      h(s.$$.fragment, d), a = !1;
    },
    d(d) {
      d && F(t), z(s, d);
    }
  };
}
function ZD(n) {
  let e, t = [], s = /* @__PURE__ */ new Map(), a, r, o = (
    /*filteredAndSortedItems*/
    n[3].length === 0 && Vo()
  ), i = Vt(
    /*filteredAndSortedItems*/
    n[3]
  );
  const d = (c) => (
    /*node*/
    c[20].id
  );
  for (let c = 0; c < i.length; c += 1) {
    let l = Go(n, i, c), C = d(l);
    s.set(C, t[c] = jo(C, l));
  }
  return {
    c() {
      o && o.c(), e = $();
      for (let c = 0; c < t.length; c += 1)
        t[c].c();
      a = st();
    },
    m(c, l) {
      o && o.m(c, l), G(c, e, l);
      for (let C = 0; C < t.length; C += 1)
        t[C] && t[C].m(c, l);
      G(c, a, l), r = !0;
    },
    p(c, l) {
      /*filteredAndSortedItems*/
      c[3].length === 0 ? o || (o = Vo(), o.c(), o.m(e.parentNode, e)) : o && (o.d(1), o = null), l & /*filteredAndSortedItems, handleDuplicate, handleDelete, handleNodeClick*/
      120 && (i = Vt(
        /*filteredAndSortedItems*/
        c[3]
      ), he(), t = Ss(t, l, d, 1, c, i, s, a.parentNode, Os, jo, a, Go), ye());
    },
    i(c) {
      if (!r) {
        for (let l = 0; l < i.length; l += 1)
          L(t[l]);
        r = !0;
      }
    },
    o(c) {
      for (let l = 0; l < t.length; l += 1)
        h(t[l]);
      r = !1;
    },
    d(c) {
      c && (F(e), F(a)), o && o.d(c);
      for (let l = 0; l < t.length; l += 1)
        t[l].d(c);
    }
  };
}
function YD(n) {
  let e, t, s, a, r;
  e = new Md({
    props: {
      $$slots: { default: [XD] },
      $$scope: { ctx: n }
    }
  });
  let o = JD;
  return a = new Rd({
    props: {
      $$slots: { default: [ZD] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), s = $(), X(a.$$.fragment);
    },
    m(i, d) {
      q(e, i, d), G(i, t, d), G(i, s, d), q(a, i, d), r = !0;
    },
    p(i, d) {
      const c = {};
      d & /*$$scope*/
      8388608 && (c.$$scope = { dirty: d, ctx: i }), e.$set(c);
      const l = {};
      d & /*$$scope, filteredAndSortedItems*/
      8388616 && (l.$$scope = { dirty: d, ctx: i }), a.$set(l);
    },
    i(i) {
      r || (L(e.$$.fragment, i), L(o), L(a.$$.fragment, i), r = !0);
    },
    o(i) {
      h(e.$$.fragment, i), h(o), h(a.$$.fragment, i), r = !1;
    },
    d(i) {
      i && (F(t), F(s)), z(e, i), z(a, i);
    }
  };
}
function QD(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m;
  function p(S) {
    n[10](S);
  }
  let D = {
    label: "Search Logical Node Types",
    icon: "search",
    variant: "outlined"
  };
  /*nodeSearchTerm*/
  n[0] !== void 0 && (D.value = /*nodeSearchTerm*/
  n[0]), a = new pr({ props: D }), de.push(() => Ve(a, "value", p)), i = new ia({
    props: {
      variant: "unelevated",
      callback: (
        /*openCreateDialog*/
        n[7]
      ),
      $$slots: { default: [jD] },
      $$scope: { ctx: n }
    }
  });
  function _(S) {
    n[14](S);
  }
  function A(S) {
    n[15](S);
  }
  let b = {
    sortable: !0,
    "table$aria-label": "Logical Node List",
    style: "width: 100%;",
    $$slots: { default: [YD] },
    $$scope: { ctx: n }
  };
  return (
    /*sort*/
    n[1] !== void 0 && (b.sort = /*sort*/
    n[1]), /*sortDirection*/
    n[2] !== void 0 && (b.sortDirection = /*sortDirection*/
    n[2]), l = new vd({ props: b }), de.push(() => Ve(l, "sort", _)), de.push(() => Ve(l, "sortDirection", A)), {
      c() {
        e = Z("div"), t = Z("div"), s = Z("div"), X(a.$$.fragment), o = $(), X(i.$$.fragment), d = $(), c = Z("div"), X(l.$$.fragment), R(s, "class", "toolbar-left svelte-lwcikv"), R(t, "class", "overview-toolbar svelte-lwcikv"), R(c, "class", "logical-nodes-list"), R(e, "class", "logical-nodes-overview");
      },
      m(S, f) {
        G(S, e, f), U(e, t), U(t, s), q(a, s, null), U(t, o), q(i, t, null), U(e, d), U(e, c), q(l, c, null), m = !0;
      },
      p(S, [f]) {
        const E = {};
        !r && f & /*nodeSearchTerm*/
        1 && (r = !0, E.value = /*nodeSearchTerm*/
        S[0], we(() => r = !1)), a.$set(E);
        const y = {};
        f & /*$$scope*/
        8388608 && (y.$$scope = { dirty: f, ctx: S }), i.$set(y);
        const I = {};
        f & /*$$scope, filteredAndSortedItems*/
        8388616 && (I.$$scope = { dirty: f, ctx: S }), !C && f & /*sort*/
        2 && (C = !0, I.sort = /*sort*/
        S[1], we(() => C = !1)), !u && f & /*sortDirection*/
        4 && (u = !0, I.sortDirection = /*sortDirection*/
        S[2], we(() => u = !1)), l.$set(I);
      },
      i(S) {
        m || (L(a.$$.fragment, S), L(i.$$.fragment, S), L(l.$$.fragment, S), m = !0);
      },
      o(S) {
        h(a.$$.fragment, S), h(i.$$.fragment, S), h(l.$$.fragment, S), m = !1;
      },
      d(S) {
        S && F(e), z(a), z(i), z(l);
      }
    }
  );
}
let JD = !1;
function xD(n, e, t) {
  let { doc: s } = e;
  Qt();
  const a = Ns();
  let r = "", o = "id", i = "ascending", d = [];
  function c() {
    a.getAllTypes().then((y) => {
      t(9, d = y);
    });
  }
  let l = [];
  const C = (y) => {
    a.duplicateType(y);
  }, u = (y) => {
    kn(Pd, {
      title: "Confirm Delete Logical Node Type",
      message: `Are you sure you want to delete the logical node type "${y}"? This action cannot be undone.`,
      confirmActionText: "Delete",
      cancelActionText: "Cancel",
      color: "red"
    }).then((I) => {
      I.type === "confirm" && a.deleteTypeById(y).then(() => {
        t(9, d = d.filter((N) => N.id !== y));
      });
    });
  }, m = (y) => {
    Es.set({ path: ["view"], meta: { lNodeTypeId: y } });
  };
  function p() {
    kn(yD).then((y) => {
      y.type === "confirm" && D(y.data);
    });
  }
  function D({ id: y, lnClass: I }) {
    Es.set({
      path: ["create"],
      meta: { lNodeTypeId: y, lnClass: I }
    });
  }
  function _(y) {
    r = y, t(0, r);
  }
  const A = (y) => C(y.id), b = (y) => u(y.id), S = (y) => m(y.id);
  function f(y) {
    o = y, t(1, o);
  }
  function E(y) {
    i = y, t(2, i);
  }
  return n.$$set = (y) => {
    "doc" in y && t(8, s = y.doc);
  }, n.$$.update = () => {
    n.$$.dirty & /*doc*/
    256 && s && a && c(), n.$$.dirty & /*items, nodeSearchTerm, sort, sortDirection*/
    519 && t(3, l = d.filter((y) => y.id.toLowerCase().includes(r.toLowerCase())).sort((y, I) => {
      const N = y[o], j = I[o];
      return i === "ascending" ? N > j ? 1 : -1 : N < j ? 1 : -1;
    }));
  }, [
    r,
    o,
    i,
    l,
    C,
    u,
    m,
    p,
    s,
    d,
    _,
    A,
    b,
    S,
    f,
    E
  ];
}
class $D extends me {
  constructor(e) {
    super(), ue(this, e, xD, QD, Ce, { doc: 8 });
  }
}
function eb(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m, p, D, _, A = [
    {
      class: s = le({
        [
          /*input$class*/
          n[9]
        ]: !0,
        "mdc-checkbox__native-control": !0
      })
    },
    { type: "checkbox" },
    /*inputProps*/
    n[20],
    { disabled: (
      /*disabled*/
      n[1]
    ) },
    {
      __value: a = /*isUninitializedValue*/
      n[19](
        /*valueKey*/
        n[7]
      ) ? (
        /*value*/
        n[6]
      ) : (
        /*valueKey*/
        n[7]
      )
    },
    {
      "data-indeterminate": r = !/*isUninitializedValue*/
      n[19](
        /*indeterminate*/
        n[0]
      ) && /*indeterminate*/
      n[0] ? "true" : void 0
    },
    /*nativeControlAttrs*/
    n[16],
    Je(
      /*$$restProps*/
      n[26],
      "input$"
    )
  ], b = {};
  for (let E = 0; E < A.length; E += 1)
    b = te(b, A[E]);
  let S = [
    {
      class: C = le({
        [
          /*className*/
          n[3]
        ]: !0,
        "mdc-checkbox": !0,
        "mdc-checkbox--disabled": (
          /*disabled*/
          n[1]
        ),
        "mdc-checkbox--touch": (
          /*touch*/
          n[5]
        ),
        "mdc-data-table__header-row-checkbox": (
          /*context*/
          n[21] === "data-table" && /*dataTableHeader*/
          n[22]
        ),
        "mdc-data-table__row-checkbox": (
          /*context*/
          n[21] === "data-table" && !/*dataTableHeader*/
          n[22]
        ),
        .../*internalClasses*/
        n[14]
      })
    },
    {
      style: u = Object.entries(
        /*internalStyles*/
        n[15]
      ).map(ko).concat([
        /*style*/
        n[4]
      ]).join(" ")
    },
    jt(
      /*$$restProps*/
      n[26],
      ["input$"]
    )
  ], f = {};
  for (let E = 0; E < S.length; E += 1)
    f = te(f, S[E]);
  return {
    c() {
      e = Z("div"), t = Z("input"), i = $(), d = Z("div"), d.innerHTML = '<svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24"><path class="mdc-checkbox__checkmark-path" fill="none" d="M1.73,12.91 8.1,19.28 22.79,4.59"></path></svg> <div class="mdc-checkbox__mixedmark"></div>', c = $(), l = Z("div"), Ae(t, b), R(d, "class", "mdc-checkbox__background"), R(l, "class", "mdc-checkbox__ripple"), Ae(e, f);
    },
    m(E, y) {
      G(E, e, y), U(e, t), t.autofocus && t.focus(), n[36](t), t.checked = /*nativeChecked*/
      n[12], U(e, i), U(e, d), U(e, c), U(e, l), n[38](e), D || (_ = [
        De(o = rt.call(
          null,
          t,
          /*input$use*/
          n[8]
        )),
        ce(
          t,
          "change",
          /*input_change_handler*/
          n[37]
        ),
        ce(
          t,
          "blur",
          /*blur_handler*/
          n[34]
        ),
        ce(
          t,
          "focus",
          /*focus_handler*/
          n[35]
        ),
        De(m = rt.call(
          null,
          e,
          /*use*/
          n[2]
        )),
        De(
          /*forwardEvents*/
          n[18].call(null, e)
        ),
        De(p = Yt.call(null, e, {
          unbounded: !0,
          addClass: (
            /*addClass*/
            n[23]
          ),
          removeClass: (
            /*removeClass*/
            n[24]
          ),
          addStyle: (
            /*addStyle*/
            n[25]
          ),
          active: (
            /*rippleActive*/
            n[17]
          ),
          eventTarget: (
            /*checkbox*/
            n[11]
          )
        })),
        ce(
          e,
          "animationend",
          /*animationend_handler*/
          n[39]
        )
      ], D = !0);
    },
    p(E, y) {
      Ae(t, b = Ee(A, [
        y[0] & /*input$class*/
        512 && s !== (s = le({
          [
            /*input$class*/
            E[9]
          ]: !0,
          "mdc-checkbox__native-control": !0
        })) && { class: s },
        { type: "checkbox" },
        /*inputProps*/
        E[20],
        y[0] & /*disabled*/
        2 && { disabled: (
          /*disabled*/
          E[1]
        ) },
        y[0] & /*valueKey, value*/
        192 && a !== (a = /*isUninitializedValue*/
        E[19](
          /*valueKey*/
          E[7]
        ) ? (
          /*value*/
          E[6]
        ) : (
          /*valueKey*/
          E[7]
        )) && { __value: a },
        y[0] & /*indeterminate*/
        1 && r !== (r = !/*isUninitializedValue*/
        E[19](
          /*indeterminate*/
          E[0]
        ) && /*indeterminate*/
        E[0] ? "true" : void 0) && {
          "data-indeterminate": r
        },
        y[0] & /*nativeControlAttrs*/
        65536 && /*nativeControlAttrs*/
        E[16],
        y[0] & /*$$restProps*/
        67108864 && Je(
          /*$$restProps*/
          E[26],
          "input$"
        )
      ])), o && Fe(o.update) && y[0] & /*input$use*/
      256 && o.update.call(
        null,
        /*input$use*/
        E[8]
      ), y[0] & /*nativeChecked*/
      4096 && (t.checked = /*nativeChecked*/
      E[12]), Ae(e, f = Ee(S, [
        y[0] & /*className, disabled, touch, internalClasses*/
        16426 && C !== (C = le({
          [
            /*className*/
            E[3]
          ]: !0,
          "mdc-checkbox": !0,
          "mdc-checkbox--disabled": (
            /*disabled*/
            E[1]
          ),
          "mdc-checkbox--touch": (
            /*touch*/
            E[5]
          ),
          "mdc-data-table__header-row-checkbox": (
            /*context*/
            E[21] === "data-table" && /*dataTableHeader*/
            E[22]
          ),
          "mdc-data-table__row-checkbox": (
            /*context*/
            E[21] === "data-table" && !/*dataTableHeader*/
            E[22]
          ),
          .../*internalClasses*/
          E[14]
        })) && { class: C },
        y[0] & /*internalStyles, style*/
        32784 && u !== (u = Object.entries(
          /*internalStyles*/
          E[15]
        ).map(ko).concat([
          /*style*/
          E[4]
        ]).join(" ")) && { style: u },
        y[0] & /*$$restProps*/
        67108864 && jt(
          /*$$restProps*/
          E[26],
          ["input$"]
        )
      ])), m && Fe(m.update) && y[0] & /*use*/
      4 && m.update.call(
        null,
        /*use*/
        E[2]
      ), p && Fe(p.update) && y[0] & /*rippleActive, checkbox*/
      133120 && p.update.call(null, {
        unbounded: !0,
        addClass: (
          /*addClass*/
          E[23]
        ),
        removeClass: (
          /*removeClass*/
          E[24]
        ),
        addStyle: (
          /*addStyle*/
          E[25]
        ),
        active: (
          /*rippleActive*/
          E[17]
        ),
        eventTarget: (
          /*checkbox*/
          E[11]
        )
      });
    },
    i: Le,
    o: Le,
    d(E) {
      E && F(e), n[36](null), n[38](null), D = !1, ze(_);
    }
  };
}
const ko = ([n, e]) => `${n}: ${e};`;
function tb(n, e, t) {
  const s = [
    "use",
    "class",
    "style",
    "disabled",
    "touch",
    "indeterminate",
    "group",
    "checked",
    "value",
    "valueKey",
    "input$use",
    "input$class",
    "getId",
    "getElement"
  ];
  let a = Te(e, s);
  var r;
  const o = lt(tt());
  let i = () => {
  };
  function d(se) {
    return se === i;
  }
  let { use: c = [] } = e, { class: l = "" } = e, { style: C = "" } = e, { disabled: u = !1 } = e, { touch: m = !1 } = e, { indeterminate: p = i } = e, { group: D = i } = e, { checked: _ = i } = e, { value: A = null } = e, { valueKey: b = i } = e, { input$use: S = [] } = e, { input$class: f = "" } = e, E, y, I, N = {}, j = {}, v = {}, O = !1, M = (r = Qe("SMUI:generic:input:props")) !== null && r !== void 0 ? r : {}, P = d(D) ? d(_) ? !1 : _ ?? void 0 : D.indexOf(A) !== -1, g = Qe("SMUI:checkbox:context"), W = Qe("SMUI:data-table:row:header"), B = _, H = d(D) ? [] : [...D], w = P;
  at(() => {
    t(11, I.indeterminate = !d(p) && p, I), t(10, y = new Cp({
      addClass: T,
      forceLayout: () => E.offsetWidth,
      hasNativeControl: () => !0,
      isAttachedToDOM: () => !!E.parentNode,
      isChecked: () => P ?? !1,
      isIndeterminate: () => d(p) ? !1 : p,
      removeClass: Y,
      removeNativeControlAttr: ke,
      setNativeControlAttr: Ge,
      setNativeControlDisabled: (V) => t(1, u = V)
    }));
    const se = {
      _smui_checkbox_accessor: !0,
      get element() {
        return _e();
      },
      get checked() {
        return P ?? !1;
      },
      set checked(V) {
        P !== V && t(12, P = V);
      },
      get indeterminate() {
        return d(p) ? !1 : p;
      },
      set indeterminate(V) {
        t(0, p = V);
      },
      activateRipple() {
        u || t(17, O = !0);
      },
      deactivateRipple() {
        t(17, O = !1);
      }
    };
    return Oe(E, "SMUIGenericInput:mount", se), Oe(E, "SMUICheckbox:mount", se), y.init(), () => {
      Oe(E, "SMUIGenericInput:unmount", se), Oe(E, "SMUICheckbox:unmount", se), y.destroy();
    };
  });
  function T(se) {
    N[se] || t(14, N[se] = !0, N);
  }
  function Y(se) {
    (!(se in N) || N[se]) && t(14, N[se] = !1, N);
  }
  function Ie(se, V) {
    j[se] != V && (V === "" || V == null ? (delete j[se], t(15, j)) : t(15, j[se] = V, j));
  }
  function Ge(se, V) {
    v[se] !== V && t(16, v[se] = V, v);
  }
  function ke(se) {
    (!(se in v) || v[se] != null) && t(16, v[se] = void 0, v);
  }
  function ae() {
    return M && M.id;
  }
  function _e() {
    return E;
  }
  function We(se) {
    Cn.call(this, n, se);
  }
  function Be(se) {
    Cn.call(this, n, se);
  }
  function xe(se) {
    de[se ? "unshift" : "push"](() => {
      I = se, t(11, I), t(27, D), t(33, w), t(12, P), t(6, A), t(32, H), t(28, _), t(31, B), t(0, p), t(10, y);
    });
  }
  function it() {
    P = this.checked, t(12, P), t(27, D), t(33, w), t(6, A), t(32, H), t(28, _), t(31, B), t(0, p), t(11, I), t(10, y);
  }
  function oe(se) {
    de[se ? "unshift" : "push"](() => {
      E = se, t(13, E);
    });
  }
  const J = () => y && y.handleAnimationEnd();
  return n.$$set = (se) => {
    e = te(te({}, e), ct(se)), t(26, a = Te(e, s)), "use" in se && t(2, c = se.use), "class" in se && t(3, l = se.class), "style" in se && t(4, C = se.style), "disabled" in se && t(1, u = se.disabled), "touch" in se && t(5, m = se.touch), "indeterminate" in se && t(0, p = se.indeterminate), "group" in se && t(27, D = se.group), "checked" in se && t(28, _ = se.checked), "value" in se && t(6, A = se.value), "valueKey" in se && t(7, b = se.valueKey), "input$use" in se && t(8, S = se.input$use), "input$class" in se && t(9, f = se.input$class);
  }, n.$$.update = () => {
    if (n.$$.dirty[0] & /*group, nativeChecked, value, checked, indeterminate, checkbox, instance*/
    402660417 | n.$$.dirty[1] & /*previousNativeChecked, previousGroup, previousChecked*/
    7) {
      let se = !1;
      if (!d(D))
        if (w !== P) {
          const V = D.indexOf(A);
          P && V === -1 ? (D.push(A), t(27, D), t(33, w), t(12, P), t(6, A), t(32, H), t(28, _), t(31, B), t(0, p), t(11, I), t(10, y)) : !P && V !== -1 && (D.splice(V, 1), t(27, D), t(33, w), t(12, P), t(6, A), t(32, H), t(28, _), t(31, B), t(0, p), t(11, I), t(10, y)), se = !0;
        } else {
          const V = H.indexOf(A), ge = D.indexOf(A);
          V > -1 && ge === -1 ? (t(12, P = !1), se = !0) : ge > -1 && V === -1 && (t(12, P = !0), se = !0);
        }
      d(_) ? !!w != !!P && (se = !0) : _ !== (P ?? null) && (_ === B ? (t(28, _ = P ?? null), d(p) || t(0, p = !1)) : t(12, P = _ ?? void 0), se = !0), I && (d(p) ? I.indeterminate && (t(11, I.indeterminate = !1, I), se = !0) : !p && I.indeterminate ? (t(11, I.indeterminate = !1, I), se = !0) : p && !I.indeterminate && (t(11, I.indeterminate = !0, I), se = !0)), t(31, B = _), t(32, H = d(D) ? [] : [...D]), t(33, w = P), se && y && y.handleChange();
    }
  }, [
    p,
    u,
    c,
    l,
    C,
    m,
    A,
    b,
    S,
    f,
    y,
    I,
    P,
    E,
    N,
    j,
    v,
    O,
    o,
    d,
    M,
    g,
    W,
    T,
    Y,
    Ie,
    a,
    D,
    _,
    ae,
    _e,
    B,
    H,
    w,
    We,
    Be,
    xe,
    it,
    oe,
    J
  ];
}
class Pr extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      tb,
      eb,
      Ce,
      {
        use: 2,
        class: 3,
        style: 4,
        disabled: 1,
        touch: 5,
        indeterminate: 0,
        group: 27,
        checked: 28,
        value: 6,
        valueKey: 7,
        input$use: 8,
        input$class: 9,
        getId: 29,
        getElement: 30
      },
      null,
      [-1, -1]
    );
  }
  get getId() {
    return this.$$.ctx[29];
  }
  get getElement() {
    return this.$$.ctx[30];
  }
}
function wo(n) {
  let e, t, s, a;
  const r = [sb, nb], o = [];
  function i(d, c) {
    return (
      /*isMandatory*/
      d[12] ? 0 : 1
    );
  }
  return t = i(n), s = o[t] = r[t](n), {
    c() {
      e = Z("div"), s.c(), R(e, "class", "selection svelte-1r3el0p");
    },
    m(d, c) {
      G(d, e, c), o[t].m(e, null), a = !0;
    },
    p(d, c) {
      let l = t;
      t = i(d), t === l ? o[t].p(d, c) : (he(), h(o[l], 1, 1, () => {
        o[l] = null;
      }), ye(), s = o[t], s ? s.p(d, c) : (s = o[t] = r[t](d), s.c()), L(s, 1), s.m(e, null));
    },
    i(d) {
      a || (L(s), a = !0);
    },
    o(d) {
      h(s), a = !1;
    },
    d(d) {
      d && F(e), o[t].d();
    }
  };
}
function nb(n) {
  let e, t;
  return e = new la({
    props: {
      content: "Configure",
      hoverDelay: 500,
      $$slots: { default: [ab] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, selected*/
      1073743872 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function sb(n) {
  let e, t;
  return e = new la({
    props: {
      content: "Mandatory Object",
      hoverDelay: 500,
      $$slots: { default: [rb] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, onPrimaryColor*/
      1074790400 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function ab(n) {
  let e, t;
  return e = new Pr({ props: { checked: (
    /*selected*/
    n[11]
  ) } }), e.$on(
    "change",
    /*change_handler*/
    n[29]
  ), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*selected*/
      2048 && (r.checked = /*selected*/
      s[11]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function rb(n) {
  let e, t;
  return e = new Qm({
    props: {
      width: "33px",
      svgStyles: `fill: ${/*onPrimaryColor*/
      n[20]}`
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*onPrimaryColor*/
      1048576 && (r.svgStyles = `fill: ${/*onPrimaryColor*/
      s[20]}`), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Bo(n) {
  let e, t;
  return e = new gn({
    props: {
      type: "link-off",
      tooltip: "Remove Reference",
      onClick: (
        /*handleOnUnlink*/
        n[27]
      ),
      fillColor: (
        /*onPrimaryColor*/
        n[20]
      )
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*onPrimaryColor*/
      1048576 && (r.fillColor = /*onPrimaryColor*/
      s[20]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Uo(n) {
  let e, t;
  return e = new gn({
    props: {
      type: "wand-stars",
      tooltip: "Apply Defaults",
      onClick: (
        /*handleOnApplyDefaults*/
        n[26]
      ),
      fillColor: (
        /*onPrimaryColor*/
        n[20]
      )
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*onPrimaryColor*/
      1048576 && (r.fillColor = /*onPrimaryColor*/
      s[20]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Ho(n) {
  let e, t;
  return e = new gn({
    props: {
      type: "visibility",
      tooltip: "Mark",
      onClick: (
        /*toggleMark*/
        n[24]
      ),
      fillColor: (
        /*marked*/
        n[14] ? "#D9D800" : (
          /*onPrimaryColor*/
          n[20]
        )
      )
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*marked, onPrimaryColor*/
      1064960 && (r.fillColor = /*marked*/
      s[14] ? "#D9D800" : (
        /*onPrimaryColor*/
        s[20]
      )), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Ko(n) {
  let e, t;
  return e = new gn({
    props: {
      type: "edit",
      tooltip: "Edit",
      onClick: (
        /*handleOnEdit*/
        n[25]
      ),
      fillColor: (
        /*onPrimaryColor*/
        n[20]
      )
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*onPrimaryColor*/
      1048576 && (r.fillColor = /*onPrimaryColor*/
      s[20]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function ib(n) {
  let e;
  return {
    c() {
      e = Z("span");
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    i: Le,
    o: Le,
    d(t) {
      t && F(e);
    }
  };
}
function ob(n) {
  let e, t, s, a;
  const r = [lb, cb, db], o = [];
  function i(d, c) {
    return (
      /*subtitle*/
      d[1] ? 0 : (
        /*isMandatory*/
        (d[12] || /*selected*/
        d[11]) && !/*subtitle*/
        d[1] && /*referencable*/
        d[19] ? 1 : !/*subtitle*/
        d[1] && /*referencable*/
        d[19] && !/*isMandatory*/
        d[12] && !/*selected*/
        d[11] ? 2 : -1
      )
    );
  }
  return ~(t = i(n)) && (s = o[t] = r[t](n)), {
    c() {
      e = Z("span"), s && s.c(), R(e, "class", "oscd-card-subtitle svelte-1r3el0p"), ut(
        e,
        "error-state",
        /*isMandatory*/
        (n[12] || /*selected*/
        n[11]) && !/*subtitle*/
        n[1] && /*referencable*/
        n[19]
      ), ut(e, "empty", !/*subtitle*/
      n[1] && /*referencable*/
      n[19] && !/*isMandatory*/
      n[12] && !/*selected*/
      n[11]), ut(
        e,
        "drop",
        /*isDragTarget*/
        n[15] && /*canDrop*/
        n[16]
      );
    },
    m(d, c) {
      G(d, e, c), ~t && o[t].m(e, null), a = !0;
    },
    p(d, c) {
      let l = t;
      t = i(d), t === l ? ~t && o[t].p(d, c) : (s && (he(), h(o[l], 1, 1, () => {
        o[l] = null;
      }), ye()), ~t ? (s = o[t], s ? s.p(d, c) : (s = o[t] = r[t](d), s.c()), L(s, 1), s.m(e, null)) : s = null), (!a || c & /*isMandatory, selected, subtitle, referencable*/
      530434) && ut(
        e,
        "error-state",
        /*isMandatory*/
        (d[12] || /*selected*/
        d[11]) && !/*subtitle*/
        d[1] && /*referencable*/
        d[19]
      ), (!a || c & /*subtitle, referencable, isMandatory, selected*/
      530434) && ut(e, "empty", !/*subtitle*/
      d[1] && /*referencable*/
      d[19] && !/*isMandatory*/
      d[12] && !/*selected*/
      d[11]), (!a || c & /*isDragTarget, canDrop*/
      98304) && ut(
        e,
        "drop",
        /*isDragTarget*/
        d[15] && /*canDrop*/
        d[16]
      );
    },
    i(d) {
      a || (L(s), a = !0);
    },
    o(d) {
      h(s), a = !1;
    },
    d(d) {
      d && F(e), ~t && o[t].d();
    }
  };
}
function db(n) {
  let e;
  return {
    c() {
      e = Se("Add reference");
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    i: Le,
    o: Le,
    d(t) {
      t && F(e);
    }
  };
}
function cb(n) {
  let e, t, s;
  return e = new km({ props: { fill: "#FF6B6B", size: "15px" } }), {
    c() {
      X(e.$$.fragment), t = Se(`
      Add reference`);
    },
    m(a, r) {
      q(e, a, r), G(a, t, r), s = !0;
    },
    p: Le,
    i(a) {
      s || (L(e.$$.fragment, a), s = !0);
    },
    o(a) {
      h(e.$$.fragment, a), s = !1;
    },
    d(a) {
      a && F(t), z(e, a);
    }
  };
}
function lb(n) {
  let e, t;
  return e = new la({
    props: {
      content: (
        /*subtitle*/
        n[1]
      ),
      hoverDelay: 500,
      side: "right",
      $$slots: { default: [Cb] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*subtitle*/
      2 && (r.content = /*subtitle*/
      s[1]), a & /*$$scope, canClickReference, subtitle, onPrimaryColor*/
      1074790914 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Wo(n) {
  let e, t;
  return e = new $m({
    props: {
      fill: (
        /*onPrimaryColor*/
        n[20]
      ),
      size: "15px"
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*onPrimaryColor*/
      1048576 && (r.fill = /*onPrimaryColor*/
      s[20]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Cb(n) {
  let e, t, s = (
    /*subtitle*/
    (n[1].length > 25 ? (
      /*subtitle*/
      n[1].slice(0, 25) + "..."
    ) : (
      /*subtitle*/
      n[1]
    )) + ""
  ), a, r, o, i, d = (
    /*canClickReference*/
    n[9] && Wo(n)
  );
  return {
    c() {
      e = Z("button"), d && d.c(), t = $(), a = Se(s), R(e, "class", "oscd-card-subtitle--with-tooltip svelte-1r3el0p"), ut(
        e,
        "pointer",
        /*canClickReference*/
        n[9]
      );
    },
    m(c, l) {
      G(c, e, l), d && d.m(e, null), U(e, t), U(e, a), r = !0, o || (i = ce(
        e,
        "click",
        /*handleOnReferenceClick*/
        n[28]
      ), o = !0);
    },
    p(c, l) {
      /*canClickReference*/
      c[9] ? d ? (d.p(c, l), l & /*canClickReference*/
      512 && L(d, 1)) : (d = Wo(c), d.c(), L(d, 1), d.m(e, t)) : d && (he(), h(d, 1, 1, () => {
        d = null;
      }), ye()), (!r || l & /*subtitle*/
      2) && s !== (s = /*subtitle*/
      (c[1].length > 25 ? (
        /*subtitle*/
        c[1].slice(0, 25) + "..."
      ) : (
        /*subtitle*/
        c[1]
      )) + "") && je(a, s), (!r || l & /*canClickReference*/
      512) && ut(
        e,
        "pointer",
        /*canClickReference*/
        c[9]
      );
    },
    i(c) {
      r || (L(d), r = !0);
    },
    o(c) {
      h(d), r = !1;
    },
    d(c) {
      c && F(e), d && d.d(), o = !1, i();
    }
  };
}
function qo(n) {
  let e, t;
  return {
    c() {
      e = Z("span"), t = Se(
        /*badgeText*/
        n[3]
      ), R(e, "class", "oscd-card-chip svelte-1r3el0p");
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*badgeText*/
      8 && je(
        t,
        /*badgeText*/
        s[3]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function ub(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m, p, D, _, A, b, S, f, E, y, I, N, j = (
    /*selectionEnabled*/
    n[10] && /*showSelectionIndicator*/
    n[13] && wo(n)
  ), v = (
    /*canUnlink*/
    n[8] && Bo(n)
  ), O = (
    /*canApplyDefaults*/
    n[6] && Uo(n)
  ), M = (
    /*canMark*/
    n[5] && Ho(n)
  ), P = (
    /*canEdit*/
    n[4] && Ko(n)
  );
  const g = [ob, ib], W = [];
  function B(w, T) {
    return (
      /*referencable*/
      w[19] ? 0 : 1
    );
  }
  A = B(n), b = W[A] = g[A](n);
  let H = (
    /*badgeText*/
    n[3] && qo(n)
  );
  return {
    c() {
      e = Z("div"), j && j.c(), t = $(), s = Z("div"), a = Z("div"), r = Z("span"), o = Se(
        /*title*/
        n[0]
      ), i = $(), d = Z("div"), c = Z("span"), l = Se(
        /*references*/
        n[2]
      ), C = $(), v && v.c(), u = $(), O && O.c(), m = $(), M && M.c(), p = $(), P && P.c(), D = $(), _ = Z("div"), b.c(), S = $(), H && H.c(), R(r, "class", "oscd-card-title svelte-1r3el0p"), R(c, "class", "oscd-references svelte-1r3el0p"), ut(c, "invisible", !/*references*/
      n[2]), R(d, "class", "actions svelte-1r3el0p"), R(a, "class", "header-row svelte-1r3el0p"), R(_, "class", "sub-row svelte-1r3el0p"), R(s, "class", "content svelte-1r3el0p"), R(e, "class", f = "oscd-card-item " + /*cardState*/
      n[21] + " svelte-1r3el0p"), R(e, "role", E = /*canClick*/
      n[7] ? "button" : "undefined"), ut(
        e,
        "marked",
        /*marked*/
        n[14]
      ), ut(
        e,
        "is-over",
        /*isOver*/
        n[17]
      ), ut(
        e,
        "error",
        /*isMandatory*/
        (n[12] || /*selected*/
        n[11]) && /*referencable*/
        n[19] && !/*subtitle*/
        n[1] && !/*isDragTarget*/
        n[15]
      ), ut(
        e,
        "draggable",
        /*canDrag*/
        n[18]
      );
    },
    m(w, T) {
      G(w, e, T), j && j.m(e, null), U(e, t), U(e, s), U(s, a), U(a, r), U(r, o), U(a, i), U(a, d), U(d, c), U(c, l), U(d, C), v && v.m(d, null), U(d, u), O && O.m(d, null), U(d, m), M && M.m(d, null), U(d, p), P && P.m(d, null), U(s, D), U(s, _), W[A].m(_, null), U(_, S), H && H.m(_, null), y = !0, I || (N = ce(
        e,
        "click",
        /*handleOnClick*/
        n[23]
      ), I = !0);
    },
    p(w, [T]) {
      /*selectionEnabled*/
      w[10] && /*showSelectionIndicator*/
      w[13] ? j ? (j.p(w, T), T & /*selectionEnabled, showSelectionIndicator*/
      9216 && L(j, 1)) : (j = wo(w), j.c(), L(j, 1), j.m(e, t)) : j && (he(), h(j, 1, 1, () => {
        j = null;
      }), ye()), (!y || T & /*title*/
      1) && je(
        o,
        /*title*/
        w[0]
      ), (!y || T & /*references*/
      4) && je(
        l,
        /*references*/
        w[2]
      ), (!y || T & /*references*/
      4) && ut(c, "invisible", !/*references*/
      w[2]), /*canUnlink*/
      w[8] ? v ? (v.p(w, T), T & /*canUnlink*/
      256 && L(v, 1)) : (v = Bo(w), v.c(), L(v, 1), v.m(d, u)) : v && (he(), h(v, 1, 1, () => {
        v = null;
      }), ye()), /*canApplyDefaults*/
      w[6] ? O ? (O.p(w, T), T & /*canApplyDefaults*/
      64 && L(O, 1)) : (O = Uo(w), O.c(), L(O, 1), O.m(d, m)) : O && (he(), h(O, 1, 1, () => {
        O = null;
      }), ye()), /*canMark*/
      w[5] ? M ? (M.p(w, T), T & /*canMark*/
      32 && L(M, 1)) : (M = Ho(w), M.c(), L(M, 1), M.m(d, p)) : M && (he(), h(M, 1, 1, () => {
        M = null;
      }), ye()), /*canEdit*/
      w[4] ? P ? (P.p(w, T), T & /*canEdit*/
      16 && L(P, 1)) : (P = Ko(w), P.c(), L(P, 1), P.m(d, null)) : P && (he(), h(P, 1, 1, () => {
        P = null;
      }), ye());
      let Y = A;
      A = B(w), A === Y ? W[A].p(w, T) : (he(), h(W[Y], 1, 1, () => {
        W[Y] = null;
      }), ye(), b = W[A], b ? b.p(w, T) : (b = W[A] = g[A](w), b.c()), L(b, 1), b.m(_, S)), /*badgeText*/
      w[3] ? H ? H.p(w, T) : (H = qo(w), H.c(), H.m(_, null)) : H && (H.d(1), H = null), (!y || T & /*cardState*/
      2097152 && f !== (f = "oscd-card-item " + /*cardState*/
      w[21] + " svelte-1r3el0p")) && R(e, "class", f), (!y || T & /*canClick*/
      128 && E !== (E = /*canClick*/
      w[7] ? "button" : "undefined")) && R(e, "role", E), (!y || T & /*cardState, marked*/
      2113536) && ut(
        e,
        "marked",
        /*marked*/
        w[14]
      ), (!y || T & /*cardState, isOver*/
      2228224) && ut(
        e,
        "is-over",
        /*isOver*/
        w[17]
      ), (!y || T & /*cardState, isMandatory, selected, referencable, subtitle, isDragTarget*/
      2660354) && ut(
        e,
        "error",
        /*isMandatory*/
        (w[12] || /*selected*/
        w[11]) && /*referencable*/
        w[19] && !/*subtitle*/
        w[1] && !/*isDragTarget*/
        w[15]
      ), (!y || T & /*cardState, canDrag*/
      2359296) && ut(
        e,
        "draggable",
        /*canDrag*/
        w[18]
      );
    },
    i(w) {
      y || (L(j), L(v), L(O), L(M), L(P), L(b), y = !0);
    },
    o(w) {
      h(j), h(v), h(O), h(M), h(P), h(b), y = !1;
    },
    d(w) {
      w && F(e), j && j.d(), v && v.d(), O && O.d(), M && M.d(), P && P.d(), W[A].d(), H && H.d(), I = !1, N();
    }
  };
}
function mb(n, e, t, s, a) {
  return n ? e ? "drag-can-drop" : "drag-cannot-drop" : t ? s ? "mandatory" : a ? "selected" : "unselected" : "default";
}
function pb(n, e, t) {
  let s, a;
  const r = Qt();
  let { title: o } = e, { subtitle: i = null } = e, { references: d = null } = e, { badgeText: c = null } = e, { canEdit: l = !1 } = e, { canMark: C = !1 } = e, { canApplyDefaults: u = !1 } = e, { canClick: m = !1 } = e, { canUnlink: p = !0 } = e, { canClickReference: D = !0 } = e, { selectionEnabled: _ = !1 } = e, { selected: A = !1 } = e, { isMandatory: b = !1 } = e, { showSelectionIndicator: S } = e, { marked: f = !1 } = e, { isDragTarget: E = !1 } = e, { canDrop: y = !1 } = e, { isOver: I = !1 } = e, { canDrag: N = !1 } = e, { referencable: j = !1 } = e;
  function v() {
    m && r("click");
  }
  function O() {
    C && r("marked", !f);
  }
  function M() {
    l && r("edit");
  }
  function P() {
    u && r("applyDefaults");
  }
  function g() {
    p && r("unlink");
  }
  function W() {
    D && r("referenceClick");
  }
  const B = () => r("selectChange");
  return n.$$set = (H) => {
    "title" in H && t(0, o = H.title), "subtitle" in H && t(1, i = H.subtitle), "references" in H && t(2, d = H.references), "badgeText" in H && t(3, c = H.badgeText), "canEdit" in H && t(4, l = H.canEdit), "canMark" in H && t(5, C = H.canMark), "canApplyDefaults" in H && t(6, u = H.canApplyDefaults), "canClick" in H && t(7, m = H.canClick), "canUnlink" in H && t(8, p = H.canUnlink), "canClickReference" in H && t(9, D = H.canClickReference), "selectionEnabled" in H && t(10, _ = H.selectionEnabled), "selected" in H && t(11, A = H.selected), "isMandatory" in H && t(12, b = H.isMandatory), "showSelectionIndicator" in H && t(13, S = H.showSelectionIndicator), "marked" in H && t(14, f = H.marked), "isDragTarget" in H && t(15, E = H.isDragTarget), "canDrop" in H && t(16, y = H.canDrop), "isOver" in H && t(17, I = H.isOver), "canDrag" in H && t(18, N = H.canDrag), "referencable" in H && t(19, j = H.referencable);
  }, n.$$.update = () => {
    n.$$.dirty & /*isDragTarget, canDrop, selectionEnabled, isMandatory, selected*/
    105472 && t(21, s = mb(E, y, _, b, A)), n.$$.dirty & /*selected, isMandatory, isDragTarget*/
    38912 && t(20, a = (A || b) && !E ? "white" : "var(--mdc-theme-primary)");
  }, [
    o,
    i,
    d,
    c,
    l,
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    b,
    S,
    f,
    E,
    y,
    I,
    N,
    j,
    a,
    s,
    r,
    v,
    O,
    M,
    P,
    g,
    W,
    B
  ];
}
class _b extends me {
  constructor(e) {
    super(), ue(this, e, pb, ub, Ce, {
      title: 0,
      subtitle: 1,
      references: 2,
      badgeText: 3,
      canEdit: 4,
      canMark: 5,
      canApplyDefaults: 6,
      canClick: 7,
      canUnlink: 8,
      canClickReference: 9,
      selectionEnabled: 10,
      selected: 11,
      isMandatory: 12,
      showSelectionIndicator: 13,
      marked: 14,
      isDragTarget: 15,
      canDrop: 16,
      isOver: 17,
      canDrag: 18,
      referencable: 19
    });
  }
}
function sr(n, e) {
  return !!e && typeof n.acceptDrop == "function";
}
function ar(n, e) {
  return sr(n, e) && n.acceptDrop(e);
}
function zo(n, e, t) {
  const s = n.slice();
  return s[27] = e[t], s[28] = e, s[29] = t, s;
}
function Xo(n, e) {
  let t, s, a, r, o, i, d = Le, c, l, C;
  function u(I) {
    e[14](
      I,
      /*item*/
      e[27]
    );
  }
  function m(...I) {
    return (
      /*marked_handler*/
      e[15](
        /*item*/
        e[27],
        ...I
      )
    );
  }
  function p() {
    return (
      /*selectChange_handler*/
      e[16](
        /*item*/
        e[27]
      )
    );
  }
  function D() {
    return (
      /*click_handler*/
      e[17](
        /*item*/
        e[27]
      )
    );
  }
  function _() {
    return (
      /*edit_handler*/
      e[18](
        /*item*/
        e[27]
      )
    );
  }
  function A() {
    return (
      /*applyDefaults_handler*/
      e[19](
        /*item*/
        e[27]
      )
    );
  }
  function b() {
    return (
      /*unlink_handler*/
      e[20](
        /*item*/
        e[27]
      )
    );
  }
  function S(...I) {
    return (
      /*referenceClick_handler*/
      e[21](
        /*item*/
        e[27],
        ...I
      )
    );
  }
  let f = {
    title: (
      /*item*/
      e[27].title
    ),
    subtitle: (
      /*item*/
      e[27].subtitle
    ),
    references: (
      /*item*/
      e[27].references
    ),
    badgeText: (
      /*item*/
      e[27].badgeText
    ),
    canEdit: (
      /*item*/
      e[27].canEdit
    ),
    canMark: (
      /*item*/
      e[27].canMark
    ),
    selectionEnabled: (
      /*selectable*/
      e[1]
    ),
    showSelectionIndicator: (
      /*showSelectionIndicator*/
      e[2]
    ),
    canApplyDefaults: (
      /*item*/
      e[27].canApplyDefaults
    ),
    canUnlink: (
      /*item*/
      e[27].canUnlink
    ),
    isDragTarget: sr(
      /*item*/
      e[27],
      /*dropCandidate*/
      e[4]
    ),
    canDrop: ar(
      /*item*/
      e[27],
      /*dropCandidate*/
      e[4]
    ),
    canDrag: (
      /*itemsDraggable*/
      e[3]
    ),
    isOver: (
      /*isOverId*/
      e[6] === /*item*/
      e[27].id
    ),
    marked: (
      /*item*/
      e[27].marked
    ),
    isMandatory: (
      /*item*/
      e[27].isMandatory
    ),
    referencable: (
      /*item*/
      e[27].referencable
    )
  };
  /*item*/
  e[27].selected !== void 0 && (f.selected = /*item*/
  e[27].selected), s = new _b({ props: f }), de.push(() => Ve(s, "selected", u)), s.$on("marked", m), s.$on("selectChange", p), s.$on("click", D), s.$on("edit", _), s.$on("applyDefaults", A), s.$on("unlink", b), s.$on("referenceClick", S);
  function E(...I) {
    return (
      /*consider_handler*/
      e[22](
        /*item*/
        e[27],
        ...I
      )
    );
  }
  function y(...I) {
    return (
      /*finalize_handler*/
      e[23](
        /*item*/
        e[27],
        ...I
      )
    );
  }
  return {
    key: n,
    first: null,
    c() {
      t = Z("div"), X(s.$$.fragment), r = $(), R(t, "class", "card-wrapper"), this.first = t;
    },
    m(I, N) {
      G(I, t, N), q(s, t, null), U(t, r), c = !0, l || (C = [
        De(o = Jd.call(null, t, {
          items: [
            /*item*/
            e[27]
          ],
          dragDisabled: !0,
          dropAnimationDisabled: !0,
          dropTargetStyle: {},
          type: (
            /*dragAndDropType*/
            e[5]
          )
        })),
        ce(t, "consider", E),
        ce(t, "finalize", y)
      ], l = !0);
    },
    p(I, N) {
      e = I;
      const j = {};
      N & /*workItems*/
      1 && (j.title = /*item*/
      e[27].title), N & /*workItems*/
      1 && (j.subtitle = /*item*/
      e[27].subtitle), N & /*workItems*/
      1 && (j.references = /*item*/
      e[27].references), N & /*workItems*/
      1 && (j.badgeText = /*item*/
      e[27].badgeText), N & /*workItems*/
      1 && (j.canEdit = /*item*/
      e[27].canEdit), N & /*workItems*/
      1 && (j.canMark = /*item*/
      e[27].canMark), N & /*selectable*/
      2 && (j.selectionEnabled = /*selectable*/
      e[1]), N & /*showSelectionIndicator*/
      4 && (j.showSelectionIndicator = /*showSelectionIndicator*/
      e[2]), N & /*workItems*/
      1 && (j.canApplyDefaults = /*item*/
      e[27].canApplyDefaults), N & /*workItems*/
      1 && (j.canUnlink = /*item*/
      e[27].canUnlink), N & /*workItems, dropCandidate*/
      17 && (j.isDragTarget = sr(
        /*item*/
        e[27],
        /*dropCandidate*/
        e[4]
      )), N & /*workItems, dropCandidate*/
      17 && (j.canDrop = ar(
        /*item*/
        e[27],
        /*dropCandidate*/
        e[4]
      )), N & /*itemsDraggable*/
      8 && (j.canDrag = /*itemsDraggable*/
      e[3]), N & /*isOverId, workItems*/
      65 && (j.isOver = /*isOverId*/
      e[6] === /*item*/
      e[27].id), N & /*workItems*/
      1 && (j.marked = /*item*/
      e[27].marked), N & /*workItems*/
      1 && (j.isMandatory = /*item*/
      e[27].isMandatory), N & /*workItems*/
      1 && (j.referencable = /*item*/
      e[27].referencable), !a && N & /*workItems*/
      1 && (a = !0, j.selected = /*item*/
      e[27].selected, we(() => a = !1)), s.$set(j), o && Fe(o.update) && N & /*workItems, dragAndDropType*/
      33 && o.update.call(null, {
        items: [
          /*item*/
          e[27]
        ],
        dragDisabled: !0,
        dropAnimationDisabled: !0,
        dropTargetStyle: {},
        type: (
          /*dragAndDropType*/
          e[5]
        )
      });
    },
    r() {
      i = t.getBoundingClientRect();
    },
    f() {
      Zc(t), d();
    },
    a() {
      d(), d = Xc(t, i, pI, { duration: 400 });
    },
    i(I) {
      c || (L(s.$$.fragment, I), c = !0);
    },
    o(I) {
      h(s.$$.fragment, I), c = !1;
    },
    d(I) {
      I && F(t), z(s), l = !1, ze(C);
    }
  };
}
function Ib(n) {
  let e, t = [], s = /* @__PURE__ */ new Map(), a, r, o, i, d = Vt(
    /*workItems*/
    n[0]
  );
  const c = (l) => (
    /*item*/
    l[27].id
  );
  for (let l = 0; l < d.length; l += 1) {
    let C = zo(n, d, l), u = c(C);
    s.set(u, t[l] = Xo(u, C));
  }
  return {
    c() {
      e = Z("div");
      for (let l = 0; l < t.length; l += 1)
        t[l].c();
      R(e, "class", "oscd-card-list svelte-v36z9g");
    },
    m(l, C) {
      G(l, e, C);
      for (let u = 0; u < t.length; u += 1)
        t[u] && t[u].m(e, null);
      r = !0, o || (i = [
        De(a = Jd.call(null, e, {
          items: (
            /*workItems*/
            n[0]
          ),
          dragDisabled: !/*itemsDraggable*/
          n[3],
          dropAnimationDisabled: !0,
          dropTargetStyle: {},
          type: (
            /*dragAndDropType*/
            n[5]
          )
        })),
        ce(
          e,
          "consider",
          /*consider_handler_1*/
          n[24]
        ),
        ce(
          e,
          "finalize",
          /*finalize_handler_1*/
          n[25]
        )
      ], o = !0);
    },
    p(l, [C]) {
      if (C & /*workItems, dragAndDropType, handleDropConsider, handleDropFinalize, selectable, showSelectionIndicator, dropCandidate, itemsDraggable, isOverId, dispatch, forwardEvent*/
      6655) {
        d = Vt(
          /*workItems*/
          l[0]
        ), he();
        for (let u = 0; u < t.length; u += 1)
          t[u].r();
        t = Ss(t, C, c, 1, l, d, s, e, tl, Xo, null, zo);
        for (let u = 0; u < t.length; u += 1)
          t[u].a();
        ye();
      }
      a && Fe(a.update) && C & /*workItems, itemsDraggable, dragAndDropType*/
      41 && a.update.call(null, {
        items: (
          /*workItems*/
          l[0]
        ),
        dragDisabled: !/*itemsDraggable*/
        l[3],
        dropAnimationDisabled: !0,
        dropTargetStyle: {},
        type: (
          /*dragAndDropType*/
          l[5]
        )
      });
    },
    i(l) {
      if (!r) {
        for (let C = 0; C < d.length; C += 1)
          L(t[C]);
        r = !0;
      }
    },
    o(l) {
      for (let C = 0; C < t.length; C += 1)
        h(t[C]);
      r = !1;
    },
    d(l) {
      l && F(e);
      for (let C = 0; C < t.length; C += 1)
        t[C].d();
      o = !1, ze(i);
    }
  };
}
function Db(n, e, t) {
  const s = Qt();
  let { selectable: a = !1 } = e, { showSelectionIndicator: r = !1 } = e, { itemsDraggable: o } = e, { items: i = [] } = e, { workItems: d = i } = e, { dropCandidate: c = null } = e, { dragAndDropType: l } = e, C = null;
  function u(g, W) {
    s(g, { itemId: W.id, item: W });
  }
  function m(g) {
    var W;
    s("itemDragChange", {
      itemId: (W = g == null ? void 0 : g.id) !== null && W !== void 0 ? W : null,
      item: g ?? null
    });
  }
  function p(g) {
    const { detail: W } = g, { trigger: B, id: H } = W.info;
    if (B === St.DRAG_STARTED) {
      const w = d.findIndex((Y) => Y.id === H), T = `${H}_copy`;
      g.detail.items = g.detail.items.filter((Y) => !Y[hs]), g.detail.items.splice(w, 0, Object.assign(Object.assign({}, d[w]), { id: T })), t(0, d = g.detail.items), m(i[w]);
    } else
      t(0, d = [...d]);
  }
  function D(g) {
    t(0, d = [...i]), m(null);
  }
  function _(g, W) {
    const { detail: B } = g, { trigger: H } = B.info;
    H === St.DRAGGED_ENTERED && t(6, C = W), H === St.DRAGGED_LEFT && t(6, C = null);
  }
  function A(g, W) {
    const B = i.find((H) => H.id === W);
    s("itemDrop", { targetItem: B }), m(null), t(6, C = null);
  }
  function b(g, W) {
    n.$$.not_equal(W.selected, g) && (W.selected = g, t(0, d), t(13, i));
  }
  const S = (g, W) => s("itemMarkChange", { item: g, itemId: g.id, marked: W.detail }), f = (g) => s("itemSelectChange", { item: g, itemId: g.id }), E = (g) => u("itemClick", g), y = (g) => u("itemEdit", g), I = (g) => u("itemApplyDefaults", g), N = (g) => u("itemUnlink", g), j = (g, W) => s("itemReferenceClick", {
    item: g,
    itemId: g.id,
    reference: W.detail
  }), v = (g, W) => _(W, g.id), O = (g, W) => A(W, g.id), M = (g) => p(g), P = (g) => D();
  return n.$$set = (g) => {
    "selectable" in g && t(1, a = g.selectable), "showSelectionIndicator" in g && t(2, r = g.showSelectionIndicator), "itemsDraggable" in g && t(3, o = g.itemsDraggable), "items" in g && t(13, i = g.items), "workItems" in g && t(0, d = g.workItems), "dropCandidate" in g && t(4, c = g.dropCandidate), "dragAndDropType" in g && t(5, l = g.dragAndDropType);
  }, n.$$.update = () => {
    n.$$.dirty & /*items*/
    8192 && t(0, d = [...i]);
  }, [
    d,
    a,
    r,
    o,
    c,
    l,
    C,
    s,
    u,
    p,
    D,
    _,
    A,
    i,
    b,
    S,
    f,
    E,
    y,
    I,
    N,
    j,
    v,
    O,
    M,
    P
  ];
}
class bb extends me {
  constructor(e) {
    super(), ue(this, e, Db, Ib, Ce, {
      selectable: 1,
      showSelectionIndicator: 2,
      itemsDraggable: 3,
      items: 13,
      workItems: 0,
      dropCandidate: 4,
      dragAndDropType: 5
    });
  }
}
const fb = (n) => ({}), Zo = (n) => ({});
function Yo(n) {
  let e, t;
  return {
    c() {
      e = Z("span"), t = Se(
        /*subtitle*/
        n[1]
      ), R(e, "class", "title-secondary svelte-1nq7lze");
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*subtitle*/
      2 && je(
        t,
        /*subtitle*/
        s[1]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function Ab(n) {
  let e;
  return {
    c() {
      e = Se(
        /*actionLabel*/
        n[2]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s & /*actionLabel*/
      4 && je(
        e,
        /*actionLabel*/
        t[2]
      );
    },
    d(t) {
      t && F(e);
    }
  };
}
function Eb(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u = (
    /*subtitle*/
    n[1] && Yo(n)
  );
  d = new ia({
    props: {
      callback: (
        /*func*/
        n[6]
      ),
      backgroundColor: "white",
      $$slots: { default: [Ab] },
      $$scope: { ctx: n }
    }
  });
  const m = (
    /*#slots*/
    n[5]["bot-action"]
  ), p = Pe(
    m,
    n,
    /*$$scope*/
    n[7],
    Zo
  );
  return {
    c() {
      e = Z("div"), t = Z("div"), s = Z("h3"), a = Se(
        /*title*/
        n[0]
      ), r = $(), u && u.c(), o = $(), i = Z("div"), X(d.$$.fragment), c = $(), l = Z("div"), p && p.c(), R(s, "class", "title-main svelte-1nq7lze"), R(i, "class", "svelte-1nq7lze"), ut(i, "invisible", !/*hasAction*/
      n[3] || !/*actionLabel*/
      n[2]), R(t, "class", "title-bar svelte-1nq7lze"), R(l, "class", "search-container svelte-1nq7lze"), R(e, "class", "header-container svelte-1nq7lze");
    },
    m(D, _) {
      G(D, e, _), U(e, t), U(t, s), U(s, a), U(s, r), u && u.m(s, null), U(t, o), U(t, i), q(d, i, null), U(e, c), U(e, l), p && p.m(l, null), C = !0;
    },
    p(D, [_]) {
      (!C || _ & /*title*/
      1) && je(
        a,
        /*title*/
        D[0]
      ), /*subtitle*/
      D[1] ? u ? u.p(D, _) : (u = Yo(D), u.c(), u.m(s, null)) : u && (u.d(1), u = null);
      const A = {};
      _ & /*$$scope, actionLabel*/
      132 && (A.$$scope = { dirty: _, ctx: D }), d.$set(A), (!C || _ & /*hasAction, actionLabel*/
      12) && ut(i, "invisible", !/*hasAction*/
      D[3] || !/*actionLabel*/
      D[2]), p && p.p && (!C || _ & /*$$scope*/
      128) && Me(
        p,
        m,
        D,
        /*$$scope*/
        D[7],
        C ? ve(
          m,
          /*$$scope*/
          D[7],
          _,
          fb
        ) : Re(
          /*$$scope*/
          D[7]
        ),
        Zo
      );
    },
    i(D) {
      C || (L(d.$$.fragment, D), L(p, D), C = !0);
    },
    o(D) {
      h(d.$$.fragment, D), h(p, D), C = !1;
    },
    d(D) {
      D && F(e), u && u.d(), z(d), p && p.d(D);
    }
  };
}
function Ob(n, e, t) {
  let { $$slots: s = {}, $$scope: a } = e;
  const r = Qt();
  let { title: o } = e, { subtitle: i = null } = e, { actionLabel: d = null } = e, { hasAction: c = !1 } = e;
  const l = () => r("action");
  return n.$$set = (C) => {
    "title" in C && t(0, o = C.title), "subtitle" in C && t(1, i = C.subtitle), "actionLabel" in C && t(2, d = C.actionLabel), "hasAction" in C && t(3, c = C.hasAction), "$$scope" in C && t(7, a = C.$$scope);
  }, [o, i, d, c, r, s, l, a];
}
class ic extends me {
  constructor(e) {
    super(), ue(this, e, Ob, Eb, Ce, {
      title: 0,
      subtitle: 1,
      actionLabel: 2,
      hasAction: 3
    });
  }
}
function Qo(n) {
  let e, t, s;
  function a(o) {
    n[8](o);
  }
  let r = {
    icon: "search",
    label: (
      /*searchPlaceHolder*/
      n[5]
    ),
    variant: "outlined",
    styles: "background: var(--oscd-base2,#fff)"
  };
  return (
    /*search*/
    n[0] !== void 0 && (r.value = /*search*/
    n[0]), e = new pr({ props: r }), de.push(() => Ve(e, "value", a)), e.$on(
      "input",
      /*input_handler*/
      n[9]
    ), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, i) {
        const d = {};
        i & /*searchPlaceHolder*/
        32 && (d.label = /*searchPlaceHolder*/
        o[5]), !t && i & /*search*/
        1 && (t = !0, d.value = /*search*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function Sb(n) {
  let e, t, s = (
    /*hasSearch*/
    n[4] && Qo(n)
  );
  return {
    c() {
      s && s.c(), e = st();
    },
    m(a, r) {
      s && s.m(a, r), G(a, e, r), t = !0;
    },
    p(a, r) {
      /*hasSearch*/
      a[4] ? s ? (s.p(a, r), r & /*hasSearch*/
      16 && L(s, 1)) : (s = Qo(a), s.c(), L(s, 1), s.m(e.parentNode, e)) : s && (he(), h(s, 1, 1, () => {
        s = null;
      }), ye());
    },
    i(a) {
      t || (L(s), t = !0);
    },
    o(a) {
      h(s), t = !1;
    },
    d(a) {
      a && F(e), s && s.d(a);
    }
  };
}
function Lb(n) {
  let e, t;
  return e = new ic({
    props: {
      title: (
        /*title*/
        n[1]
      ),
      subtitle: (
        /*subtitle*/
        n[2]
      ),
      actionLabel: (
        /*actionLabel*/
        n[3]
      ),
      hasAction: (
        /*hasAction*/
        n[6]
      ),
      $$slots: { "bot-action": [Sb] },
      $$scope: { ctx: n }
    }
  }), e.$on(
    "action",
    /*action_handler*/
    n[10]
  ), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*title*/
      2 && (r.title = /*title*/
      s[1]), a & /*subtitle*/
      4 && (r.subtitle = /*subtitle*/
      s[2]), a & /*actionLabel*/
      8 && (r.actionLabel = /*actionLabel*/
      s[3]), a & /*hasAction*/
      64 && (r.hasAction = /*hasAction*/
      s[6]), a & /*$$scope, searchPlaceHolder, search, hasSearch*/
      2097 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function gb(n, e, t) {
  const s = Qt();
  let { title: a } = e, { subtitle: r = null } = e, { actionLabel: o = null } = e, { search: i = "" } = e, { hasSearch: d = !1 } = e, { searchPlaceHolder: c = "Search..." } = e, { hasAction: l = !1 } = e;
  function C(p) {
    i = p, t(0, i);
  }
  const u = () => s("search", { value: i }), m = () => s("action");
  return n.$$set = (p) => {
    "title" in p && t(1, a = p.title), "subtitle" in p && t(2, r = p.subtitle), "actionLabel" in p && t(3, o = p.actionLabel), "search" in p && t(0, i = p.search), "hasSearch" in p && t(4, d = p.hasSearch), "searchPlaceHolder" in p && t(5, c = p.searchPlaceHolder), "hasAction" in p && t(6, l = p.hasAction);
  }, [
    i,
    a,
    r,
    o,
    d,
    c,
    l,
    s,
    C,
    u,
    m
  ];
}
class hb extends me {
  constructor(e) {
    super(), ue(this, e, gb, Lb, Ce, {
      title: 1,
      subtitle: 2,
      actionLabel: 3,
      search: 0,
      hasSearch: 4,
      searchPlaceHolder: 5,
      hasAction: 6
    });
  }
}
function yb(n) {
  let e;
  return {
    c() {
      e = Se(
        /*secondaryActionLabel*/
        n[4]
      );
    },
    m(t, s) {
      G(t, e, s);
    },
    p(t, s) {
      s & /*secondaryActionLabel*/
      16 && je(
        e,
        /*secondaryActionLabel*/
        t[4]
      );
    },
    d(t) {
      t && F(e);
    }
  };
}
function Nb(n) {
  let e, t;
  return e = new ia({
    props: {
      variant: "raised",
      callback: (
        /*func*/
        n[6]
      ),
      $$slots: { default: [yb] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, secondaryActionLabel*/
      144 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Tb(n) {
  let e, t;
  return e = new ic({
    props: {
      title: (
        /*title*/
        n[0]
      ),
      subtitle: (
        /*subtitle*/
        n[1]
      ),
      actionLabel: (
        /*actionLabel*/
        n[2]
      ),
      hasAction: (
        /*hasAction*/
        n[3]
      ),
      $$slots: { "bot-action": [Nb] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, [a]) {
      const r = {};
      a & /*title*/
      1 && (r.title = /*title*/
      s[0]), a & /*subtitle*/
      2 && (r.subtitle = /*subtitle*/
      s[1]), a & /*actionLabel*/
      4 && (r.actionLabel = /*actionLabel*/
      s[2]), a & /*hasAction*/
      8 && (r.hasAction = /*hasAction*/
      s[3]), a & /*$$scope, secondaryActionLabel*/
      144 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Pb(n, e, t) {
  const s = Qt();
  let { title: a } = e, { subtitle: r = null } = e, { actionLabel: o = null } = e, { hasAction: i = !1 } = e, { secondaryActionLabel: d = null } = e;
  const c = () => s("secondaryAction");
  return n.$$set = (l) => {
    "title" in l && t(0, a = l.title), "subtitle" in l && t(1, r = l.subtitle), "actionLabel" in l && t(2, o = l.actionLabel), "hasAction" in l && t(3, i = l.hasAction), "secondaryActionLabel" in l && t(4, d = l.secondaryActionLabel);
  }, [a, r, o, i, d, s, c];
}
class vb extends me {
  constructor(e) {
    super(), ue(this, e, Pb, Tb, Ce, {
      title: 0,
      subtitle: 1,
      actionLabel: 2,
      hasAction: 3,
      secondaryActionLabel: 4
    });
  }
}
function Mb(n) {
  let e, t;
  return e = new vb({
    props: {
      title: (
        /*title*/
        n[0]
      ),
      subtitle: (
        /*subtitle*/
        n[1]
      ),
      hasAction: (
        /*hasAction*/
        n[5]
      ),
      actionLabel: (
        /*actionLabel*/
        n[2]
      ),
      secondaryActionLabel: "Apply Defaults"
    }
  }), e.$on(
    "action",
    /*action_handler_1*/
    n[21]
  ), e.$on(
    "secondaryAction",
    /*secondaryAction_handler*/
    n[22]
  ), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a[0] & /*title*/
      1 && (r.title = /*title*/
      s[0]), a[0] & /*subtitle*/
      2 && (r.subtitle = /*subtitle*/
      s[1]), a[0] & /*hasAction*/
      32 && (r.hasAction = /*hasAction*/
      s[5]), a[0] & /*actionLabel*/
      4 && (r.actionLabel = /*actionLabel*/
      s[2]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Rb(n) {
  let e, t, s;
  function a(o) {
    n[19](o);
  }
  let r = {
    title: (
      /*title*/
      n[0]
    ),
    subtitle: (
      /*subtitle*/
      n[1]
    ),
    searchPlaceHolder: (
      /*searchPlaceHolder*/
      n[4]
    ),
    hasSearch: (
      /*hasSearch*/
      n[3]
    ),
    hasAction: (
      /*hasAction*/
      n[5]
    ),
    actionLabel: (
      /*actionLabel*/
      n[2]
    )
  };
  return (
    /*searchQuery*/
    n[14] !== void 0 && (r.search = /*searchQuery*/
    n[14]), e = new hb({ props: r }), de.push(() => Ve(e, "search", a)), e.$on(
      "action",
      /*action_handler*/
      n[20]
    ), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, i) {
        const d = {};
        i[0] & /*title*/
        1 && (d.title = /*title*/
        o[0]), i[0] & /*subtitle*/
        2 && (d.subtitle = /*subtitle*/
        o[1]), i[0] & /*searchPlaceHolder*/
        16 && (d.searchPlaceHolder = /*searchPlaceHolder*/
        o[4]), i[0] & /*hasSearch*/
        8 && (d.hasSearch = /*hasSearch*/
        o[3]), i[0] & /*hasAction*/
        32 && (d.hasAction = /*hasAction*/
        o[5]), i[0] & /*actionLabel*/
        4 && (d.actionLabel = /*actionLabel*/
        o[2]), !t && i[0] & /*searchQuery*/
        16384 && (t = !0, d.search = /*searchQuery*/
        o[14], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function Fb(n) {
  let e, t, s, a, r, o, i;
  const d = [Rb, Mb], c = [];
  function l(C, u) {
    return (
      /*showApplyDefaults*/
      C[6] ? 1 : 0
    );
  }
  return t = l(n), s = c[t] = d[t](n), o = new bb({
    props: {
      items: (
        /*filteredItems*/
        n[15]
      ),
      selectable: (
        /*canSelectItems*/
        n[9]
      ),
      itemsDraggable: (
        /*itemsDraggable*/
        n[11]
      ),
      dropCandidate: (
        /*dropCandidate*/
        n[12]
      ),
      showSelectionIndicator: (
        /*showSelectionIndicator*/
        n[10]
      ),
      dragAndDropType: (
        /*dragAndDropType*/
        n[13]
      )
    }
  }), o.$on(
    "itemClick",
    /*itemClick_handler*/
    n[23]
  ), o.$on(
    "itemEdit",
    /*itemEdit_handler*/
    n[24]
  ), o.$on(
    "itemApplyDefaults",
    /*itemApplyDefaults_handler*/
    n[25]
  ), o.$on(
    "itemUnlink",
    /*itemUnlink_handler*/
    n[26]
  ), o.$on(
    "itemMarkChange",
    /*itemMarkChange_handler*/
    n[27]
  ), o.$on(
    "itemSelectChange",
    /*itemSelectChange_handler*/
    n[28]
  ), o.$on(
    "itemDragChange",
    /*itemDragChange_handler*/
    n[29]
  ), o.$on(
    "itemDrop",
    /*itemDrop_handler*/
    n[30]
  ), o.$on(
    "itemReferenceClick",
    /*itemReferenceClick_handler*/
    n[31]
  ), {
    c() {
      e = Z("div"), s.c(), a = $(), r = Z("div"), X(o.$$.fragment), R(r, "class", "oscd-tcolumn__list svelte-11v2c3n"), R(e, "class", "oscd-tcolumn svelte-11v2c3n"), ut(
        e,
        "apply-defaults",
        /*highlighted*/
        n[7]
      ), ut(
        e,
        "drag-border",
        /*dragAndDropBorder*/
        n[8]
      );
    },
    m(C, u) {
      G(C, e, u), c[t].m(e, null), U(e, a), U(e, r), q(o, r, null), i = !0;
    },
    p(C, u) {
      let m = t;
      t = l(C), t === m ? c[t].p(C, u) : (he(), h(c[m], 1, 1, () => {
        c[m] = null;
      }), ye(), s = c[t], s ? s.p(C, u) : (s = c[t] = d[t](C), s.c()), L(s, 1), s.m(e, a));
      const p = {};
      u[0] & /*filteredItems*/
      32768 && (p.items = /*filteredItems*/
      C[15]), u[0] & /*canSelectItems*/
      512 && (p.selectable = /*canSelectItems*/
      C[9]), u[0] & /*itemsDraggable*/
      2048 && (p.itemsDraggable = /*itemsDraggable*/
      C[11]), u[0] & /*dropCandidate*/
      4096 && (p.dropCandidate = /*dropCandidate*/
      C[12]), u[0] & /*showSelectionIndicator*/
      1024 && (p.showSelectionIndicator = /*showSelectionIndicator*/
      C[10]), u[0] & /*dragAndDropType*/
      8192 && (p.dragAndDropType = /*dragAndDropType*/
      C[13]), o.$set(p), (!i || u[0] & /*highlighted*/
      128) && ut(
        e,
        "apply-defaults",
        /*highlighted*/
        C[7]
      ), (!i || u[0] & /*dragAndDropBorder*/
      256) && ut(
        e,
        "drag-border",
        /*dragAndDropBorder*/
        C[8]
      );
    },
    i(C) {
      i || (L(s), L(o.$$.fragment, C), i = !0);
    },
    o(C) {
      h(s), h(o.$$.fragment, C), i = !1;
    },
    d(C) {
      C && F(e), c[t].d(), z(o);
    }
  };
}
function Gb(n, e) {
  var t;
  const s = e.toLowerCase().trim();
  return n.title.toLowerCase().includes(s) || ((t = n.subtitle) === null || t === void 0 ? void 0 : t.toLowerCase().includes(s));
}
function Vb(n, e) {
  return n.filter((t) => Gb(t, e));
}
function jb(n, e, t) {
  const s = Qt();
  let { title: a } = e, { subtitle: r = null } = e, { actionLabel: o = "Action" } = e, { hasSearch: i = !1 } = e, { searchPlaceHolder: d = "Search..." } = e, { hasAction: c = !1 } = e, { showApplyDefaults: l = !1 } = e, { highlighted: C = !1 } = e, { dragAndDropBorder: u = !1 } = e, { canSelectItems: m = !1 } = e, { showSelectionIndicator: p = !1 } = e, { itemsDraggable: D = !1 } = e, { dropCandidate: _ = null } = e, { dragAndDropType: A } = e, { items: b = [] } = e, S = "", f = [];
  function E(T, Y) {
    s(T, Y);
  }
  function y(T) {
    S = T, t(14, S);
  }
  const I = () => s("columnActionClick"), N = () => s("columnActionClick"), j = () => s("applyDefaults"), v = (T) => E("itemClick", T.detail), O = (T) => E("itemEdit", T.detail), M = (T) => E("itemApplyDefaults", T.detail), P = (T) => E("itemUnlink", T.detail), g = (T) => E("itemMarkChange", T.detail), W = (T) => E("itemSelectChange", T.detail), B = (T) => E("itemDragChange", T.detail), H = (T) => E("itemDrop", T.detail), w = (T) => E("itemReferenceClick", T.detail);
  return n.$$set = (T) => {
    "title" in T && t(0, a = T.title), "subtitle" in T && t(1, r = T.subtitle), "actionLabel" in T && t(2, o = T.actionLabel), "hasSearch" in T && t(3, i = T.hasSearch), "searchPlaceHolder" in T && t(4, d = T.searchPlaceHolder), "hasAction" in T && t(5, c = T.hasAction), "showApplyDefaults" in T && t(6, l = T.showApplyDefaults), "highlighted" in T && t(7, C = T.highlighted), "dragAndDropBorder" in T && t(8, u = T.dragAndDropBorder), "canSelectItems" in T && t(9, m = T.canSelectItems), "showSelectionIndicator" in T && t(10, p = T.showSelectionIndicator), "itemsDraggable" in T && t(11, D = T.itemsDraggable), "dropCandidate" in T && t(12, _ = T.dropCandidate), "dragAndDropType" in T && t(13, A = T.dragAndDropType), "items" in T && t(18, b = T.items);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*items, searchQuery*/
    278528 && t(15, f = Vb(b, S));
  }, [
    a,
    r,
    o,
    i,
    d,
    c,
    l,
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    S,
    f,
    s,
    E,
    b,
    y,
    I,
    N,
    j,
    v,
    O,
    M,
    P,
    g,
    W,
    B,
    H,
    w
  ];
}
class kb extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      jb,
      Fb,
      Ce,
      {
        title: 0,
        subtitle: 1,
        actionLabel: 2,
        hasSearch: 3,
        searchPlaceHolder: 4,
        hasAction: 5,
        showApplyDefaults: 6,
        highlighted: 7,
        dragAndDropBorder: 8,
        canSelectItems: 9,
        showSelectionIndicator: 10,
        itemsDraggable: 11,
        dropCandidate: 12,
        dragAndDropType: 13,
        items: 18
      },
      null,
      [-1, -1]
    );
  }
}
function Jo(n, e, t) {
  const s = n.slice();
  return s[20] = e[t], s[22] = t, s;
}
function xo(n) {
  let e, t, s, a;
  return t = new mr({
    props: {
      class: "material-icons",
      disabled: !0,
      $$slots: { default: [wb] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      e = Z("div"), X(t.$$.fragment), s = $(), R(e, "class", "seperator");
    },
    m(r, o) {
      G(r, e, o), q(t, e, null), U(e, s), a = !0;
    },
    i(r) {
      a || (L(t.$$.fragment, r), a = !0);
    },
    o(r) {
      h(t.$$.fragment, r), a = !1;
    },
    d(r) {
      r && F(e), z(t);
    }
  };
}
function wb(n) {
  let e;
  return {
    c() {
      e = Se("chevron_right");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function $o(n, e) {
  let t, s, a, r, o;
  function i(...S) {
    return (
      /*columnActionClick_handler*/
      e[7](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function d(...S) {
    return (
      /*applyDefaults_handler*/
      e[8](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function c(...S) {
    return (
      /*itemClick_handler*/
      e[9](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function l(...S) {
    return (
      /*itemEdit_handler*/
      e[10](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function C(...S) {
    return (
      /*itemApplyDefaults_handler*/
      e[11](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function u(...S) {
    return (
      /*itemUnlink_handler*/
      e[12](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function m(...S) {
    return (
      /*itemMarkChange_handler*/
      e[13](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function p(...S) {
    return (
      /*itemSelectChange_handler*/
      e[14](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function D(...S) {
    return (
      /*itemDragChange_handler*/
      e[15](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function _(...S) {
    return (
      /*itemDrop_handler*/
      e[16](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  function A(...S) {
    return (
      /*itemReferenceClick_handler*/
      e[17](
        /*column*/
        e[20],
        ...S
      )
    );
  }
  s = new kb({
    props: {
      title: (
        /*column*/
        e[20].title
      ),
      subtitle: (
        /*column*/
        e[20].subtitle
      ),
      highlighted: (
        /*column*/
        e[20].highlighted
      ),
      dragAndDropBorder: (
        /*column*/
        e[20].dragAndDropBorder
      ),
      actionLabel: (
        /*column*/
        e[20].actionLabel
      ),
      hasSearch: (
        /*column*/
        e[20].hasSearch
      ),
      searchPlaceHolder: (
        /*column*/
        e[20].searchPlaceholder
      ),
      hasAction: (
        /*column*/
        e[20].hasAction
      ),
      showApplyDefaults: (
        /*column*/
        e[20].showApplyDefaults
      ),
      canSelectItems: (
        /*column*/
        e[20].canSelectItems
      ),
      showSelectionIndicator: (
        /*column*/
        e[20].showSelectionIndicator
      ),
      itemsDraggable: (
        /*column*/
        e[20].itemsDraggable
      ),
      items: (
        /*data*/
        e[0][
          /*column*/
          e[20].id
        ]
      ),
      dragAndDropType: (
        /*boardId*/
        e[3]
      ),
      dropCandidate: (
        /*dropCandidate*/
        e[2]
      )
    }
  }), s.$on("columnActionClick", i), s.$on("applyDefaults", d), s.$on("itemClick", c), s.$on("itemEdit", l), s.$on("itemApplyDefaults", C), s.$on("itemUnlink", u), s.$on("itemMarkChange", m), s.$on("itemSelectChange", p), s.$on("itemDragChange", D), s.$on("itemDrop", _), s.$on("itemReferenceClick", A);
  let b = (
    /*index*/
    e[22] < /*columns*/
    e[1].length - 1 && xo(e)
  );
  return {
    key: n,
    first: null,
    c() {
      t = st(), X(s.$$.fragment), a = $(), b && b.c(), r = st(), this.first = t;
    },
    m(S, f) {
      G(S, t, f), q(s, S, f), G(S, a, f), b && b.m(S, f), G(S, r, f), o = !0;
    },
    p(S, f) {
      e = S;
      const E = {};
      f & /*columns*/
      2 && (E.title = /*column*/
      e[20].title), f & /*columns*/
      2 && (E.subtitle = /*column*/
      e[20].subtitle), f & /*columns*/
      2 && (E.highlighted = /*column*/
      e[20].highlighted), f & /*columns*/
      2 && (E.dragAndDropBorder = /*column*/
      e[20].dragAndDropBorder), f & /*columns*/
      2 && (E.actionLabel = /*column*/
      e[20].actionLabel), f & /*columns*/
      2 && (E.hasSearch = /*column*/
      e[20].hasSearch), f & /*columns*/
      2 && (E.searchPlaceHolder = /*column*/
      e[20].searchPlaceholder), f & /*columns*/
      2 && (E.hasAction = /*column*/
      e[20].hasAction), f & /*columns*/
      2 && (E.showApplyDefaults = /*column*/
      e[20].showApplyDefaults), f & /*columns*/
      2 && (E.canSelectItems = /*column*/
      e[20].canSelectItems), f & /*columns*/
      2 && (E.showSelectionIndicator = /*column*/
      e[20].showSelectionIndicator), f & /*columns*/
      2 && (E.itemsDraggable = /*column*/
      e[20].itemsDraggable), f & /*data, columns*/
      3 && (E.items = /*data*/
      e[0][
        /*column*/
        e[20].id
      ]), f & /*boardId*/
      8 && (E.dragAndDropType = /*boardId*/
      e[3]), f & /*dropCandidate*/
      4 && (E.dropCandidate = /*dropCandidate*/
      e[2]), s.$set(E), /*index*/
      e[22] < /*columns*/
      e[1].length - 1 ? b ? f & /*columns*/
      2 && L(b, 1) : (b = xo(e), b.c(), L(b, 1), b.m(r.parentNode, r)) : b && (he(), h(b, 1, 1, () => {
        b = null;
      }), ye());
    },
    i(S) {
      o || (L(s.$$.fragment, S), L(b), o = !0);
    },
    o(S) {
      h(s.$$.fragment, S), h(b), o = !1;
    },
    d(S) {
      S && (F(t), F(a), F(r)), z(s, S), b && b.d(S);
    }
  };
}
function Bb(n) {
  let e, t = [], s = /* @__PURE__ */ new Map(), a, r = Vt(
    /*columns*/
    n[1]
  );
  const o = (i) => (
    /*column*/
    i[20].id
  );
  for (let i = 0; i < r.length; i += 1) {
    let d = Jo(n, r, i), c = o(d);
    s.set(c, t[i] = $o(c, d));
  }
  return {
    c() {
      e = Z("div");
      for (let i = 0; i < t.length; i += 1)
        t[i].c();
      R(e, "class", "oscd-board svelte-1jo4jzs");
    },
    m(i, d) {
      G(i, e, d);
      for (let c = 0; c < t.length; c += 1)
        t[c] && t[c].m(e, null);
      a = !0;
    },
    p(i, [d]) {
      d & /*columns, data, boardId, dropCandidate, forwardEvent, handleOnItemDrag, handleItemDrop*/
      127 && (r = Vt(
        /*columns*/
        i[1]
      ), he(), t = Ss(t, d, o, 1, i, r, s, e, Os, $o, null, Jo), ye());
    },
    i(i) {
      if (!a) {
        for (let d = 0; d < r.length; d += 1)
          L(t[d]);
        a = !0;
      }
    },
    o(i) {
      for (let d = 0; d < t.length; d += 1)
        h(t[d]);
      a = !1;
    },
    d(i) {
      i && F(e);
      for (let d = 0; d < t.length; d += 1)
        t[d].d();
    }
  };
}
function Ub(n, e, t) {
  const s = Qt();
  let { columns: a = [] } = e, { data: r = [] } = e, o = null, i;
  at(() => {
    t(3, i = dp());
  });
  function d(I, N, j) {
    s(I, Object.assign({ columnId: N }, j));
  }
  function c(I) {
    s("itemDrop", I);
  }
  function l(I, N) {
    const j = N.targetItem;
    if (!o || !j)
      return;
    const v = o;
    ar(j, v) && c({
      source: Object.assign({}, v),
      target: {
        columnId: I,
        itemId: j.id,
        item: j
      }
    });
  }
  function C(I, N) {
    if (!N.item || !N.item) {
      t(2, o = null);
      return;
    }
    t(2, o = Object.assign({ columnId: I }, N));
  }
  const u = (I, N) => d("columnActionClick", I.id, N.detail), m = (I, N) => d("applyDefaults", I.id, N.detail), p = (I, N) => d("itemClick", I.id, N.detail), D = (I, N) => d("itemEdit", I.id, N.detail), _ = (I, N) => d("itemApplyDefaults", I.id, N.detail), A = (I, N) => d("itemUnlink", I.id, N.detail), b = (I, N) => d("itemMarkChange", I.id, N.detail), S = (I, N) => d("itemSelectChange", I.id, N.detail), f = (I, N) => C(I.id, N.detail), E = (I, N) => l(I.id, N.detail), y = (I, N) => d("itemReferenceClick", I.id, N.detail);
  return n.$$set = (I) => {
    "columns" in I && t(1, a = I.columns), "data" in I && t(0, r = I.data);
  }, n.$$.update = () => {
    if (n.$$.dirty & /*columns, data*/
    3 && a.forEach((I) => {
      r[I.id] || (t(0, r[I.id] = [], r), console.warn(`Warning: No data found for column with id "${I.id}"`));
    }), n.$$.dirty & /*columns*/
    2) {
      const I = a.map((j) => j.id);
      if (new Set(I).size !== I.length)
        throw new Error("Duplicate column ids detected! Each column id must be unique.");
    }
    if (n.$$.dirty & /*columns, data*/
    3)
      for (const I of a) {
        const j = (r[I.id] || []).map((O) => O.id);
        if (new Set(j).size !== j.length)
          throw new Error(`Duplicate item ids detected in column "${I.id}". Each item id must be unique.`);
      }
  }, [
    r,
    a,
    o,
    i,
    d,
    l,
    C,
    u,
    m,
    p,
    D,
    _,
    A,
    b,
    S,
    f,
    E,
    y
  ];
}
class vr extends me {
  constructor(e) {
    super(), ue(this, e, Ub, Bb, Ce, { columns: 1, data: 0 });
  }
}
let Gn;
async function Hb(n, e, t) {
  if (Gn || (Gn = Ns()), n === "create") {
    const s = await Gn.getDefaultType(t);
    return s.id = e, s;
  } else
    return Gn.getTypeById(e);
}
async function Kb(n, e, t, s = []) {
  const a = {
    lNodeTypes: [],
    dataObjectTypes: [],
    dataAttributeTypes: [],
    enumTypes: []
  };
  if (n === "create") {
    const r = await Gn.getAssignableTypes(
      t,
      s
    );
    a.dataObjectTypes = r.dataObjectTypes;
  } else {
    const r = await Gn.getReferencedTypes(
      e,
      s
    );
    if (a.dataAttributeTypes = r.dataAttributeTypes, a.enumTypes = r.enumTypes, n === "edit") {
      const o = await Gn.getAssignableTypes(
        t,
        s
      );
      a.dataObjectTypes = o.dataObjectTypes;
    } else
      a.dataObjectTypes = r.dataObjectTypes;
  }
  return a;
}
function Wb(n) {
  return [
    {
      id: "refs",
      title: "Referenced Data Types",
      searchPlaceholder: "Search Referenced Types...",
      hasSearch: !0,
      highlighted: !0,
      dragAndDropBorder: n,
      canSelectItems: !0,
      showSelectionIndicator: n,
      itemsDraggable: !1
    },
    {
      id: "doTypes",
      title: "Data Object Types",
      searchPlaceholder: "Search Object Types...",
      actionLabel: "Create",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: n,
      dragAndDropBorder: n
    },
    {
      id: "daTypes",
      title: "Data Attribute Types",
      searchPlaceholder: "Search Attribute Types...",
      actionLabel: "Create",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: !1
    },
    {
      id: "enumTypes",
      title: "Enum Types",
      searchPlaceholder: "Search Enum Types...",
      actionLabel: "Create",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: !1
    }
  ];
}
function qb(n, e) {
  const t = { label: "Logical Node Types", enabled: !0 }, s = n ? { label: "New Logical Node Type", secondaryLabel: `${e == null ? void 0 : e.id} ${e != null && e.lnClass ? "(" + e.lnClass + ")" : ""}`, enabled: !1 } : { label: "Current-LN", secondaryLabel: `${e == null ? void 0 : e.id} ${e != null && e.lnClass ? "(" + e.lnClass + ")" : ""}`, enabled: !1 };
  return [t, s];
}
function Dn(n, e) {
  return n.sort((t, s) => {
    if (t.instanceType && s.instanceType) {
      const a = t.instanceType.localeCompare(s.instanceType);
      if (a !== 0)
        return a;
    } else {
      if (t.instanceType)
        return -1;
      if (s.instanceType)
        return 1;
    }
    return t.id.localeCompare(s.id);
  }).map((t) => iD(t, e));
}
function Mr(n, e, t) {
  return [...n].filter((s) => e || s.meta.isConfigured).map((s) => rD(s, e, t)).sort((s, a) => {
    const r = s.isMandatory ? 0 : s.selected ? 1 : 2, o = a.isMandatory ? 0 : a.selected ? 1 : 2;
    return r !== o ? r - o : s.title.localeCompare(a.title);
  });
}
function Rr(n, e) {
  return zb(
    n.meta.requiresReference,
    n.meta.refTypeKind,
    n.meta.objectType,
    e.typeKind,
    e.instanceType
  );
}
function zb(n, e, t, s, a) {
  return n && e === s && (!a || t === a);
}
function Xb(n) {
  let e, t, s;
  function a(o) {
    n[5](o);
  }
  let r = {
    dialogTitle: "Create New Data Object Type",
    confirmText: "Next",
    idLabel: "ID",
    autocompleteLabel: "Common Data Class (cdc)",
    getOptions: (
      /*func*/
      n[3]
    ),
    isIdTaken: (
      /*func_1*/
      n[4]
    ),
    onConfirm: (
      /*handleConfirm*/
      n[2]
    )
  };
  return (
    /*open*/
    n[0] !== void 0 && (r.open = /*open*/
    n[0]), e = new fa({ props: r }), de.push(() => Ve(e, "open", a)), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, [i]) {
        const d = {};
        !t && i & /*open*/
        1 && (t = !0, d.open = /*open*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function Zb(n, e, t) {
  const s = Nr();
  let { open: a = !1 } = e;
  const r = (c, l) => {
    un("confirm", { id: c, cdc: l });
  }, o = () => s.getTypeOptions(), i = (c) => s.isDOIdTaken(c);
  function d(c) {
    a = c, t(0, a);
  }
  return n.$$set = (c) => {
    "open" in c && t(0, a = c.open);
  }, [a, s, r, o, i, d];
}
class Yb extends me {
  constructor(e) {
    super(), ue(this, e, Zb, Xb, Ce, { open: 0 });
  }
}
function Qb(n) {
  return [
    {
      id: "refs",
      title: "Data Object Structure",
      searchPlaceholder: "Search Object Structures...",
      hasSearch: !0,
      highlighted: !0,
      dragAndDropBorder: n,
      canSelectItems: !0,
      showSelectionIndicator: n,
      itemsDraggable: !1
    },
    {
      id: "dataObjectTypes",
      title: "Data Object Types (SDO)",
      searchPlaceholder: "Search Object Types...",
      actionLabel: "Add New",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: n,
      dragAndDropBorder: n
    },
    {
      id: "dataAttributeTypes",
      title: "Data Attribute Types",
      searchPlaceholder: "Search Attribute Types...",
      actionLabel: "Add New",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: n,
      dragAndDropBorder: n
    },
    {
      id: "enumTypes",
      title: "Enum Types",
      actionLabel: "Add New",
      searchPlaceholder: "Search Enum Types...",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: n,
      dragAndDropBorder: n
    }
  ];
}
function Jb(n) {
  let e;
  return {
    c() {
      e = Z("span"), e.textContent = "Unknown", R(e, "class", "instance-badge unknown svelte-1fsfdu8");
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    d(t) {
      t && F(e);
    }
  };
}
function xb(n) {
  let e, t;
  return {
    c() {
      e = Z("span"), t = Se(
        /*instanceType*/
        n[3]
      ), R(e, "class", "instance-badge static svelte-1fsfdu8");
    },
    m(s, a) {
      G(s, e, a), U(e, t);
    },
    p(s, a) {
      a & /*instanceType*/
      8 && je(
        t,
        /*instanceType*/
        s[3]
      );
    },
    d(s) {
      s && F(e);
    }
  };
}
function $b(n) {
  let e, t;
  return e = new ss({
    props: {
      variant: "unelevated",
      color: "primary",
      $$slots: { default: [tf] },
      $$scope: { ctx: n }
    }
  }), e.$on(
    "click",
    /*handleInstanceTypeSelect*/
    n[7]
  ), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, type*/
      2050 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function ef(n) {
  let e, t, s;
  function a(o) {
    n[8](o);
  }
  let r = {
    preventToggleOnClick: !0,
    id: `edit-mode-switch-${/*typeId*/
    n[2]}`,
    label: "Edit Mode",
    labelStyle: "font-weight: bold; text-transform: uppercase; color: var(--mdc-theme-primary);"
  };
  return (
    /*isEditMode*/
    n[0] !== void 0 && (r.checked = /*isEditMode*/
    n[0]), e = new Fd({ props: r }), de.push(() => Ve(e, "checked", a)), e.$on(
      "change",
      /*change_handler*/
      n[9]
    ), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, i) {
        const d = {};
        i & /*typeId*/
        4 && (d.id = `edit-mode-switch-${/*typeId*/
        o[2]}`), !t && i & /*isEditMode*/
        1 && (t = !0, d.checked = /*isEditMode*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function tf(n) {
  let e, t = (
    /*getInstanceText*/
    n[6](
      /*type*/
      n[1]
    ) + ""
  ), s, a;
  return {
    c() {
      e = Se("Choose "), s = Se(t), a = Se(" to Edit");
    },
    m(r, o) {
      G(r, e, o), G(r, s, o), G(r, a, o);
    },
    p(r, o) {
      o & /*type*/
      2 && t !== (t = /*getInstanceText*/
      r[6](
        /*type*/
        r[1]
      ) + "") && je(s, t);
    },
    d(r) {
      r && (F(e), F(s), F(a));
    }
  };
}
function nf(n) {
  let e, t, s, a, r, o, i = (
    /*getTypeText*/
    n[5](
      /*type*/
      n[1]
    ) + ""
  ), d, c, l, C, u, m, p, D, _, A, b = (
    /*getInstanceText*/
    n[6](
      /*type*/
      n[1]
    ) + ""
  ), S, f, E, y, I, N, j;
  function v(B, H) {
    return (
      /*instanceType*/
      B[3] ? xb : Jb
    );
  }
  let O = v(n), M = O(n);
  const P = [ef, $b], g = [];
  function W(B, H) {
    return (
      /*instanceType*/
      B[3] ? 0 : 1
    );
  }
  return I = W(n), N = g[I] = P[I](n), {
    c() {
      e = Z("div"), t = Z("div"), s = Z("div"), a = Z("span"), a.textContent = "Type", r = $(), o = Z("span"), d = Se(i), c = $(), l = Z("div"), C = Z("span"), C.textContent = "Type ID", u = $(), m = Z("span"), p = Se(
        /*typeId*/
        n[2]
      ), D = $(), _ = Z("div"), A = Z("span"), S = Se(b), f = $(), M.c(), E = $(), y = Z("div"), N.c(), R(a, "class", "label svelte-1fsfdu8"), R(o, "class", "value strong svelte-1fsfdu8"), R(s, "class", "section svelte-1fsfdu8"), R(C, "class", "label svelte-1fsfdu8"), R(m, "class", "value mono svelte-1fsfdu8"), R(l, "class", "section svelte-1fsfdu8"), R(A, "class", "label svelte-1fsfdu8"), R(_, "class", "section svelte-1fsfdu8"), R(t, "class", "info-section svelte-1fsfdu8"), R(y, "class", "actions-section svelte-1fsfdu8"), R(e, "class", "header-bar svelte-1fsfdu8");
    },
    m(B, H) {
      G(B, e, H), U(e, t), U(t, s), U(s, a), U(s, r), U(s, o), U(o, d), U(t, c), U(t, l), U(l, C), U(l, u), U(l, m), U(m, p), U(t, D), U(t, _), U(_, A), U(A, S), U(_, f), M.m(_, null), U(e, E), U(e, y), g[I].m(y, null), j = !0;
    },
    p(B, [H]) {
      (!j || H & /*type*/
      2) && i !== (i = /*getTypeText*/
      B[5](
        /*type*/
        B[1]
      ) + "") && je(d, i), (!j || H & /*typeId*/
      4) && je(
        p,
        /*typeId*/
        B[2]
      ), (!j || H & /*type*/
      2) && b !== (b = /*getInstanceText*/
      B[6](
        /*type*/
        B[1]
      ) + "") && je(S, b), O === (O = v(B)) && M ? M.p(B, H) : (M.d(1), M = O(B), M && (M.c(), M.m(_, null)));
      let w = I;
      I = W(B), I === w ? g[I].p(B, H) : (he(), h(g[w], 1, 1, () => {
        g[w] = null;
      }), ye(), N = g[I], N ? N.p(B, H) : (N = g[I] = P[I](B), N.c()), L(N, 1), N.m(y, null));
    },
    i(B) {
      j || (L(N), j = !0);
    },
    o(B) {
      h(N), j = !1;
    },
    d(B) {
      B && F(e), M.d(), g[I].d();
    }
  };
}
function sf(n, e, t) {
  const s = Qt();
  let { type: a } = e, { typeId: r } = e, { instanceType: o = null } = e, { isEditMode: i = !1 } = e;
  const d = (p) => s("modeChange", p ? "edit" : "view");
  function c(p) {
    switch (p) {
      case x.DOType:
        return "DO";
      case x.DAType:
        return "DA";
      case x.EnumType:
        return "Enum";
      default:
        return "Unknown";
    }
  }
  function l(p) {
    switch (p) {
      case x.LNodeType:
        return "ln-Class";
      case x.DOType:
        return "cdc";
      case x.DAType:
      case x.EnumType:
      default:
        return "Instance";
    }
  }
  function C() {
    wf(a, `The type of ${r} is unknown. To edit this type a ${c(a)} must be chosen. Existing changes will be overwritten.`).then((p) => {
      p && s("instanceTypeChange", p);
    });
  }
  function u(p) {
    i = p, t(0, i);
  }
  const m = (p) => d(p.detail);
  return n.$$set = (p) => {
    "type" in p && t(1, a = p.type), "typeId" in p && t(2, r = p.typeId), "instanceType" in p && t(3, o = p.instanceType), "isEditMode" in p && t(0, i = p.isEditMode);
  }, [
    i,
    a,
    r,
    o,
    d,
    c,
    l,
    C,
    u,
    m
  ];
}
class Fr extends me {
  constructor(e) {
    super(), ue(this, e, sf, nf, Ce, {
      type: 1,
      typeId: 2,
      instanceType: 3,
      isEditMode: 0
    });
  }
}
function Ea({ onSave: n, onDiscard: e, initialMode: t = "view" }) {
  const s = Ft(t || "view"), a = Ft(), r = Ft(!1), o = Zn(s, (A) => A === "edit" || A === "create"), i = Zn([s, a], ([A, b]) => (A === "edit" || A === "create") && b);
  o.subscribe((A) => r.set(A));
  async function d() {
    await n(), l(), rn(s) === "create" && s.set("edit");
  }
  function c() {
    a.set(!0);
  }
  function l() {
    a.set(!1);
  }
  async function C() {
    if (rn(a) || rn(s) === "create") {
      const A = await kf();
      return A.action === "save" ? (await d(), rn(s) === "create" && s.set("edit"), !0) : A.action === "discard" ? (await e(), l(), !0) : !1;
    }
    return !0;
  }
  async function u(A) {
    const b = rn(s);
    return (b === "edit" || b === "create") && A === "view" && !await C() ? !1 : (s.set(A), !0);
  }
  function m() {
    return rn(o);
  }
  function p() {
    return rn(s) === "edit";
  }
  function D() {
    return rn(s) === "view";
  }
  function _() {
    return rn(s) === "create";
  }
  return {
    mode: s,
    dirty: a,
    canEdit: o,
    getCanEdit: m,
    isCreateMode: _,
    isEditMode: p,
    isViewMode: D,
    isSavable: i,
    isEditModeSwitchState: r,
    save: d,
    makeDirty: c,
    makeClean: l,
    confirmLeave: C,
    switchMode: u
  };
}
function af(n) {
  var d;
  let e, t, s, a, r;
  function o(c) {
    n[27](c);
  }
  let i = {
    typeId: (
      /*typeId*/
      n[0]
    ),
    type: x.DOType,
    instanceType: (
      /*dataObjectType*/
      (d = n[1]) == null ? void 0 : d.cdc
    )
  };
  return (
    /*$isEditModeSwitchState*/
    n[4] !== void 0 && (i.isEditMode = /*$isEditModeSwitchState*/
    n[4]), e = new Fr({ props: i }), de.push(() => Ve(e, "isEditMode", o)), e.$on(
      "modeChange",
      /*modeChange_handler*/
      n[28]
    ), a = new vr({
      props: {
        columns: (
          /*columns*/
          n[2]
        ),
        data: (
          /*boardData*/
          n[3]
        )
      }
    }), a.$on(
      "itemMarkChange",
      /*itemMarkChange_handler*/
      n[29]
    ), a.$on(
      "itemSelectChange",
      /*itemSelectChange_handler*/
      n[30]
    ), a.$on(
      "itemDrop",
      /*itemDrop_handler*/
      n[31]
    ), a.$on(
      "itemEdit",
      /*itemEdit_handler*/
      n[32]
    ), a.$on(
      "itemReferenceClick",
      /*itemReferenceClick_handler*/
      n[33]
    ), a.$on(
      "itemUnlink",
      /*itemUnlink_handler*/
      n[34]
    ), a.$on(
      "columnActionClick",
      /*columnActionClick_handler*/
      n[35]
    ), {
      c() {
        X(e.$$.fragment), s = $(), X(a.$$.fragment);
      },
      m(c, l) {
        q(e, c, l), G(c, s, l), q(a, c, l), r = !0;
      },
      p(c, l) {
        var m;
        const C = {};
        l[0] & /*typeId*/
        1 && (C.typeId = /*typeId*/
        c[0]), l[0] & /*dataObjectType*/
        2 && (C.instanceType = /*dataObjectType*/
        (m = c[1]) == null ? void 0 : m.cdc), !t && l[0] & /*$isEditModeSwitchState*/
        16 && (t = !0, C.isEditMode = /*$isEditModeSwitchState*/
        c[4], we(() => t = !1)), e.$set(C);
        const u = {};
        l[0] & /*columns*/
        4 && (u.columns = /*columns*/
        c[2]), l[0] & /*boardData*/
        8 && (u.data = /*boardData*/
        c[3]), a.$set(u);
      },
      i(c) {
        r || (L(e.$$.fragment, c), L(a.$$.fragment, c), r = !0);
      },
      o(c) {
        h(e.$$.fragment, c), h(a.$$.fragment, c), r = !1;
      },
      d(c) {
        c && F(s), z(e, c), z(a, c);
      }
    }
  );
}
function rf(n, e, t) {
  let s, a, r, o, i, d, c, l;
  const C = Nr();
  let { mode: u = "view" } = e, { typeId: m } = e, { cdc: p = null } = e;
  const D = Tr(() => He(void 0, void 0, void 0, function* () {
    return y.children;
  }));
  Ye(n, D, (V) => t(23, r = V));
  const { markedItemIds: _, configuredItems: A, isDirty: b } = D;
  Ye(n, _, (V) => t(24, i = V)), Ye(n, A, (V) => t(36, o = V)), Ye(n, b, (V) => t(25, d = V));
  const S = Ea({
    onSave: () => He(void 0, void 0, void 0, function* () {
      return g();
    }),
    onDiscard: () => He(void 0, void 0, void 0, function* () {
      return D.reset();
    }),
    initialMode: u
  }), { canEdit: f, isEditModeSwitchState: E } = S;
  Ye(n, f, (V) => t(26, c = V)), Ye(n, E, (V) => t(4, l = V));
  let y = null, I = {
    lNodeTypes: [],
    dataObjectTypes: [],
    dataAttributeTypes: [],
    enumTypes: []
  }, N = [];
  at(() => {
    v();
    const V = Aa.subscribe(() => He(void 0, void 0, void 0, function* () {
      d ? t(21, I = yield P(S.getCanEdit(), m, p, i)) : yield O();
    }));
    return () => V();
  });
  const j = (V) => He(void 0, void 0, void 0, function* () {
    return V === "save" ? (yield S.save(), !0) : yield S.confirmLeave();
  });
  function v() {
    W(), O();
  }
  function O() {
    return He(this, void 0, void 0, function* () {
      t(1, y = yield M(S.isCreateMode(), m, p)), t(0, m = y.id), t(18, p = y.cdc), yield D.reload();
    });
  }
  function M(V, ge, Q) {
    return He(this, void 0, void 0, function* () {
      if (V) {
        const pe = yield C.getDefaultType(Q);
        return pe.id = ge, pe;
      }
      return yield C.getTypeById(ge);
    });
  }
  function P(V, ge, Q, pe) {
    return He(this, void 0, void 0, function* () {
      return V ? yield C.getAssignableTypes(Q, pe) : yield C.getReferencedTypes(ge, pe);
    });
  }
  function g() {
    C.createOrUpdateType({
      id: y.id,
      instanceType: y.cdc,
      children: o.map((V) => ({
        name: V.name,
        typeRef: V == null ? void 0 : V.typeRef
      }))
    });
  }
  function W() {
    if (u === "create" && (!m || !p))
      throw new Error("Type ID and CDC are required in create mode");
    if ((u === "edit" || u === "view") && !m)
      throw new Error("Type ID is required");
  }
  function B({ itemId: V }) {
    D.toggleMarked(V);
  }
  function H({ itemId: V }) {
    D.toggleConfigured(V);
  }
  function w({ source: V, target: ge }) {
    !V || !ge || D.setTypeReference(ge.itemId, V.itemId);
  }
  function T(V, ge) {
    ge === "dataObjectTypes" ? Oa("edit", V) : ge === "dataAttributeTypes" ? Ts("edit", V) : ge === "enumTypes" && Ps("edit", V);
  }
  function Y(V) {
    const ge = r.find((Q) => Q.name === V);
    jr(ge, "edit");
  }
  function Ie({ columnId: V }) {
    V === "dataObjectTypes" ? oc() : V === "dataAttributeTypes" ? Gr() : V === "enumTypes" && Vr();
  }
  function Ge(V) {
    return He(this, void 0, void 0, function* () {
      (yield S.switchMode(V)) && (yield O());
    });
  }
  function ke(V, ge) {
    const Q = I[V.columnId].find((pe) => pe.id === V.itemId);
    return Rr(ge, Q);
  }
  function ae(V) {
    l = V, E.set(l);
  }
  const _e = (V) => Ge(V.detail), We = (V) => B(V.detail), Be = (V) => H(V.detail), xe = (V) => w(V.detail), it = ({ detail: { itemId: V, columnId: ge } }) => T(V, ge), oe = ({ detail: { itemId: V } }) => Y(V), J = ({ detail: { itemId: V } }) => D.removeTypeReference(V), se = ({ detail: { columnId: V } }) => Ie({ columnId: V });
  return n.$$set = (V) => {
    "mode" in V && t(19, u = V.mode), "typeId" in V && t(0, m = V.typeId), "cdc" in V && t(18, p = V.cdc);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*$refStore, $canEdit*/
    75497472 && t(22, N = Mr(r, c, ke)), n.$$.dirty[0] & /*dataObjectType, $markedItemIds*/
    16777218 && y && P(S.getCanEdit(), y.id, y.cdc, i).then((V) => t(21, I = V)), n.$$.dirty[0] & /*referenceDataObjects, dataTypes*/
    6291456 && t(3, s = {
      refs: N,
      dataObjectTypes: Dn(I.dataObjectTypes, !0),
      dataAttributeTypes: Dn(I.dataAttributeTypes, !0),
      enumTypes: Dn(I.enumTypes, !0)
    }), n.$$.dirty[0] & /*$canEdit*/
    67108864 && t(2, a = Qb(c)), n.$$.dirty[0] & /*$isDirty*/
    33554432 && (d ? S.makeDirty() : S.makeClean());
  }, [
    m,
    y,
    a,
    s,
    l,
    D,
    _,
    A,
    b,
    f,
    E,
    B,
    H,
    w,
    T,
    Y,
    Ie,
    Ge,
    p,
    u,
    j,
    I,
    N,
    r,
    i,
    d,
    c,
    ae,
    _e,
    We,
    Be,
    xe,
    it,
    oe,
    J,
    se
  ];
}
class of extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      rf,
      af,
      Ce,
      {
        mode: 19,
        typeId: 0,
        cdc: 18,
        canClose: 20
      },
      null,
      [-1, -1]
    );
  }
  get canClose() {
    return this.$$.ctx[20];
  }
}
function df(n) {
  let e, t, s;
  function a(o) {
    n[5](o);
  }
  let r = {
    dialogTitle: "Create Data Attribute Type",
    confirmText: "Next",
    idLabel: "Data Attribute Type ID",
    autocompleteLabel: "Data Attribute Instance",
    getOptions: (
      /*func*/
      n[3]
    ),
    isIdTaken: (
      /*func_1*/
      n[4]
    ),
    onConfirm: (
      /*handleConfirm*/
      n[2]
    )
  };
  return (
    /*open*/
    n[0] !== void 0 && (r.open = /*open*/
    n[0]), e = new fa({ props: r }), de.push(() => Ve(e, "open", a)), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, [i]) {
        const d = {};
        !t && i & /*open*/
        1 && (t = !0, d.open = /*open*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function cf(n, e, t) {
  const s = yr();
  let { open: a = !1 } = e;
  const r = (c, l) => {
    un("confirm", { id: c, instanceType: l });
  }, o = () => s.getTypeOptions(), i = (c) => s.isDAIdTaken(c);
  function d(c) {
    a = c, t(0, a);
  }
  return n.$$set = (c) => {
    "open" in c && t(0, a = c.open);
  }, [a, s, r, o, i, d];
}
class lf extends me {
  constructor(e) {
    super(), ue(this, e, cf, df, Ce, { open: 0 });
  }
}
function Cf(n) {
  let e, t, s;
  function a(o) {
    n[5](o);
  }
  let r = {
    dialogTitle: "Create Enum Type",
    confirmText: "Next",
    idLabel: "Enum Type ID",
    autocompleteLabel: "Enum Instance",
    getOptions: (
      /*func*/
      n[3]
    ),
    isIdTaken: (
      /*func_1*/
      n[4]
    ),
    onConfirm: (
      /*handleConfirm*/
      n[2]
    )
  };
  return (
    /*open*/
    n[0] !== void 0 && (r.open = /*open*/
    n[0]), e = new fa({ props: r }), de.push(() => Ve(e, "open", a)), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, [i]) {
        const d = {};
        !t && i & /*open*/
        1 && (t = !0, d.open = /*open*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function uf(n, e, t) {
  const s = hr();
  let { open: a = !1 } = e;
  const r = (c, l) => {
    un("confirm", { id: c, instanceType: l });
  }, o = () => s.getTypeOptions(), i = (c) => s.isEnumIdTaken(c);
  function d(c) {
    a = c, t(0, a);
  }
  return n.$$set = (c) => {
    "open" in c && t(0, a = c.open);
  }, [a, s, r, o, i, d];
}
class mf extends me {
  constructor(e) {
    super(), ue(this, e, uf, Cf, Ce, { open: 0 });
  }
}
function pf(n) {
  return [
    {
      id: "refs",
      title: "Data Object Structure",
      hasSearch: !0,
      searchPlaceholder: "Search Object Structures...",
      highlighted: !0,
      itemsDraggable: !1,
      dragAndDropBorder: n,
      canSelectItems: !0,
      showSelectionIndicator: n
    },
    {
      id: "dataAttributeTypes",
      title: "Data Attribute Types (BDA)",
      searchPlaceholder: "Search Attribute Types...",
      actionLabel: "Add New",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: n,
      dragAndDropBorder: n
    },
    {
      id: "enumTypes",
      title: "Enum Types",
      searchPlaceholder: "Search Enum Types...",
      actionLabel: "Add New",
      hasSearch: !0,
      hasAction: !0,
      itemsDraggable: n,
      dragAndDropBorder: n
    }
  ];
}
function _f(n) {
  var r;
  let e, t, s, a;
  return e = new Fr({
    props: {
      typeId: (
        /*typeId*/
        n[1]
      ),
      type: x.DAType,
      instanceType: (
        /*dataAttributeTypes*/
        (r = n[2]) == null ? void 0 : r.instanceType
      ),
      isEditMode: (
        /*$isEditModeSwitchState*/
        n[5]
      )
    }
  }), e.$on(
    "modeChange",
    /*modeChange_handler*/
    n[29]
  ), e.$on(
    "instanceTypeChange",
    /*instanceTypeChange_handler*/
    n[30]
  ), s = new vr({
    props: {
      columns: (
        /*columns*/
        n[3]
      ),
      data: (
        /*boardData*/
        n[4]
      )
    }
  }), s.$on(
    "itemMarkChange",
    /*itemMarkChange_handler*/
    n[31]
  ), s.$on(
    "itemSelectChange",
    /*itemSelectChange_handler*/
    n[32]
  ), s.$on(
    "itemDrop",
    /*itemDrop_handler*/
    n[33]
  ), s.$on(
    "columnActionClick",
    /*columnActionClick_handler*/
    n[34]
  ), s.$on(
    "itemEdit",
    /*itemEdit_handler*/
    n[35]
  ), s.$on(
    "itemReferenceClick",
    /*itemReferenceClick_handler*/
    n[36]
  ), s.$on(
    "itemUnlink",
    /*itemUnlink_handler*/
    n[37]
  ), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment);
    },
    m(o, i) {
      q(e, o, i), G(o, t, i), q(s, o, i), a = !0;
    },
    p(o, i) {
      var l;
      const d = {};
      i[0] & /*typeId*/
      2 && (d.typeId = /*typeId*/
      o[1]), i[0] & /*dataAttributeTypes*/
      4 && (d.instanceType = /*dataAttributeTypes*/
      (l = o[2]) == null ? void 0 : l.instanceType), i[0] & /*$isEditModeSwitchState*/
      32 && (d.isEditMode = /*$isEditModeSwitchState*/
      o[5]), e.$set(d);
      const c = {};
      i[0] & /*columns*/
      8 && (c.columns = /*columns*/
      o[3]), i[0] & /*boardData*/
      16 && (c.data = /*boardData*/
      o[4]), s.$set(c);
    },
    i(o) {
      a || (L(e.$$.fragment, o), L(s.$$.fragment, o), a = !0);
    },
    o(o) {
      h(e.$$.fragment, o), h(s.$$.fragment, o), a = !1;
    },
    d(o) {
      o && F(t), z(e, o), z(s, o);
    }
  };
}
function If(n, e, t) {
  let s, a, r, o, i, d, c, l;
  const C = yr();
  let { mode: u = "view" } = e, { typeId: m } = e, { instanceType: p = null } = e;
  const D = Tr(() => He(void 0, void 0, void 0, function* () {
    return y.children;
  }));
  Ye(n, D, (V) => t(25, r = V));
  const { markedItemIds: _, configuredItems: A, isDirty: b } = D;
  Ye(n, _, (V) => t(27, d = V)), Ye(n, A, (V) => t(38, i = V)), Ye(n, b, (V) => t(28, c = V));
  const S = Ea({
    onSave: () => He(void 0, void 0, void 0, function* () {
      return B();
    }),
    onDiscard: () => He(void 0, void 0, void 0, function* () {
      return D.reset();
    }),
    initialMode: p ? u : "view"
  }), { canEdit: f, isEditModeSwitchState: E } = S;
  Ye(n, f, (V) => t(26, o = V)), Ye(n, E, (V) => t(5, l = V));
  let y = null, I = {
    lNodeTypes: [],
    dataObjectTypes: [],
    dataAttributeTypes: [],
    enumTypes: []
  }, N = [];
  at(() => {
    v();
    const V = Aa.subscribe(() => He(void 0, void 0, void 0, function* () {
      c ? t(23, I = yield P(S.getCanEdit(), m, p, d)) : yield O();
    }));
    return () => V();
  });
  const j = (V) => He(void 0, void 0, void 0, function* () {
    return V === "save" ? (yield S.save(), !0) : yield S.confirmLeave();
  });
  function v() {
    Ge(), O();
  }
  function O() {
    return He(this, void 0, void 0, function* () {
      const V = yield M(S.isCreateMode(), m, p);
      (!(V != null && V.instanceType) || V.instanceType === "") && t(21, u = "view"), t(2, y = V), yield D.reload();
    });
  }
  function M(V, ge, Q) {
    return He(this, void 0, void 0, function* () {
      if (V) {
        const pe = yield C.getDefaultType(Q);
        return pe.id = ge, pe;
      } else
        return yield C.getTypeById(ge);
    });
  }
  function P(V, ge, Q, pe) {
    return He(this, void 0, void 0, function* () {
      return V ? yield C.getAssignableTypes(Q, pe) : yield C.getReferencedTypes(ge, pe);
    });
  }
  function g({ itemId: V }) {
    D.toggleMarked(V);
  }
  function W({ itemId: V }) {
    D.toggleConfigured(V);
  }
  function B() {
    C.createOrUpdateType({
      id: y.id,
      instanceType: y.instanceType,
      children: i.map((V) => ({
        name: V.name,
        typeRef: V == null ? void 0 : V.typeRef
      }))
    });
  }
  function H(V, ge) {
    const Q = o ? "edit" : "view";
    ge === "dataAttributeTypes" ? Ts(Q, V) : ge === "enumTypes" && Ps(Q, V);
  }
  function w(V) {
    const ge = r.find((Q) => Q.name === V);
    jr(ge, "view");
  }
  function T({ columnId: V }) {
    V === "dataAttributeTypes" ? Gr() : V === "enumTypes" && Vr();
  }
  function Y({ source: V, target: ge }) {
    !V || !ge || D.setTypeReference(ge.itemId, V.itemId);
  }
  function Ie(V, ge) {
    const Q = I[V.columnId].find((pe) => pe.id === V.itemId);
    return Rr(ge, Q);
  }
  function Ge() {
    if (u === "create" && (!m || !p))
      throw new Error("Type ID and instanceType are required in create mode");
    if ((u === "edit" || u === "view") && !m)
      throw new Error("Type ID is required");
  }
  function ke(V) {
    S.switchMode(V), O();
  }
  const ae = (V) => ke(V.detail), _e = (V) => {
    t(0, p = V.detail), S.switchMode("create"), v();
  }, We = (V) => g(V.detail), Be = (V) => W(V.detail), xe = (V) => Y(V.detail), it = (V) => T(V.detail), oe = (V) => H(V.detail.itemId, V.detail.columnId), J = (V) => w(V.detail.itemId), se = ({ detail: { itemId: V } }) => D.removeTypeReference(V);
  return n.$$set = (V) => {
    "mode" in V && t(21, u = V.mode), "typeId" in V && t(1, m = V.typeId), "instanceType" in V && t(0, p = V.instanceType);
  }, n.$$.update = () => {
    n.$$.dirty[0] & /*$refStore*/
    33554432 && t(24, N = Mr(r, S.getCanEdit(), Ie)), n.$$.dirty[0] & /*dataAttributeTypes, $markedItemIds*/
    134217732 && y && P(S.getCanEdit(), y.id, y.instanceType, d).then((V) => t(23, I = V)), n.$$.dirty[0] & /*referenceDataObjects, dataTypes*/
    25165824 && t(4, s = {
      refs: N,
      dataObjectTypes: Dn(I.dataObjectTypes, !0),
      dataAttributeTypes: Dn(I.dataAttributeTypes, !0),
      enumTypes: Dn(I.enumTypes, !0)
    }), n.$$.dirty[0] & /*$canEdit*/
    67108864 && t(3, a = pf(o)), n.$$.dirty[0] & /*$isDirty*/
    268435456 && (c ? S.makeDirty() : S.makeClean());
  }, [
    p,
    m,
    y,
    a,
    s,
    l,
    D,
    _,
    A,
    b,
    S,
    f,
    E,
    v,
    g,
    W,
    H,
    w,
    T,
    Y,
    ke,
    u,
    j,
    I,
    N,
    r,
    o,
    d,
    c,
    ae,
    _e,
    We,
    Be,
    xe,
    it,
    oe,
    J,
    se
  ];
}
class Df extends me {
  constructor(e) {
    super(), ue(
      this,
      e,
      If,
      _f,
      Ce,
      {
        mode: 21,
        typeId: 1,
        instanceType: 0,
        canClose: 22
      },
      null,
      [-1, -1]
    );
  }
  get canClose() {
    return this.$$.ctx[22];
  }
}
function ed(n, e, t) {
  const s = n.slice();
  return s[27] = e[t], s;
}
function td(n) {
  let e, t;
  return e = new vd({
    props: {
      style: "width: 100%; margin-top: 1rem;",
      $$slots: { default: [Nf] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, filteredItems, selected, $canEdit*/
      1073742160 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function nd(n) {
  let e, t;
  return e = new qt({
    props: {
      checkbox: !0,
      $$slots: { default: [bf] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function bf(n) {
  let e, t;
  return e = new Pr({}), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function ff(n) {
  let e;
  return {
    c() {
      e = Z("strong"), e.textContent = "Ord";
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    d(t) {
      t && F(e);
    }
  };
}
function Af(n) {
  let e;
  return {
    c() {
      e = Z("strong"), e.textContent = "Label";
    },
    m(t, s) {
      G(t, e, s);
    },
    p: Le,
    d(t) {
      t && F(e);
    }
  };
}
function Ef(n) {
  let e, t, s, a, r, o = (
    /*$canEdit*/
    n[8] && nd(n)
  );
  return t = new qt({
    props: {
      numeric: !0,
      $$slots: { default: [ff] },
      $$scope: { ctx: n }
    }
  }), a = new qt({
    props: {
      $$slots: { default: [Af] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      o && o.c(), e = $(), X(t.$$.fragment), s = $(), X(a.$$.fragment);
    },
    m(i, d) {
      o && o.m(i, d), G(i, e, d), q(t, i, d), G(i, s, d), q(a, i, d), r = !0;
    },
    p(i, d) {
      /*$canEdit*/
      i[8] ? o ? d & /*$canEdit*/
      256 && L(o, 1) : (o = nd(i), o.c(), L(o, 1), o.m(e.parentNode, e)) : o && (he(), h(o, 1, 1, () => {
        o = null;
      }), ye());
      const c = {};
      d & /*$$scope*/
      1073741824 && (c.$$scope = { dirty: d, ctx: i }), t.$set(c);
      const l = {};
      d & /*$$scope*/
      1073741824 && (l.$$scope = { dirty: d, ctx: i }), a.$set(l);
    },
    i(i) {
      r || (L(o), L(t.$$.fragment, i), L(a.$$.fragment, i), r = !0);
    },
    o(i) {
      h(o), h(t.$$.fragment, i), h(a.$$.fragment, i), r = !1;
    },
    d(i) {
      i && (F(e), F(s)), o && o.d(i), z(t, i), z(a, i);
    }
  };
}
function Of(n) {
  let e, t;
  return e = new Ca({
    props: {
      $$slots: { default: [Ef] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, $canEdit*/
      1073742080 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function sd(n) {
  let e, t;
  return e = new qt({
    props: {
      checkbox: !0,
      $$slots: { default: [Sf] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*$$scope, filteredItems, selected*/
      1073741904 && (r.$$scope = { dirty: a, ctx: s }), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Sf(n) {
  let e, t, s;
  function a(o) {
    n[21](o);
  }
  let r = {
    value: (
      /*item*/
      n[27].name
    ),
    valueKey: (
      /*item*/
      n[27].name
    )
  };
  return (
    /*selected*/
    n[4] !== void 0 && (r.group = /*selected*/
    n[4]), e = new Pr({ props: r }), de.push(() => Ve(e, "group", a)), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, i) {
        const d = {};
        i & /*filteredItems*/
        64 && (d.value = /*item*/
        o[27].name), i & /*filteredItems*/
        64 && (d.valueKey = /*item*/
        o[27].name), !t && i & /*selected*/
        16 && (t = !0, d.group = /*selected*/
        o[4], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function Lf(n) {
  let e = (
    /*item*/
    n[27].attributes.literalValue + ""
  ), t;
  return {
    c() {
      t = Se(e);
    },
    m(s, a) {
      G(s, t, a);
    },
    p(s, a) {
      a & /*filteredItems*/
      64 && e !== (e = /*item*/
      s[27].attributes.literalValue + "") && je(t, e);
    },
    d(s) {
      s && F(t);
    }
  };
}
function gf(n) {
  let e, t = (
    /*item*/
    n[27].name + ""
  ), s;
  return {
    c() {
      e = Z("strong"), s = Se(t);
    },
    m(a, r) {
      G(a, e, r), U(e, s);
    },
    p(a, r) {
      r & /*filteredItems*/
      64 && t !== (t = /*item*/
      a[27].name + "") && je(s, t);
    },
    d(a) {
      a && F(e);
    }
  };
}
function hf(n) {
  let e, t, s, a, r, o, i = (
    /*$canEdit*/
    n[8] && sd(n)
  );
  return t = new qt({
    props: {
      style: "width: 80px;",
      numeric: !0,
      $$slots: { default: [Lf] },
      $$scope: { ctx: n }
    }
  }), a = new qt({
    props: {
      $$slots: { default: [gf] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      i && i.c(), e = $(), X(t.$$.fragment), s = $(), X(a.$$.fragment), r = $();
    },
    m(d, c) {
      i && i.m(d, c), G(d, e, c), q(t, d, c), G(d, s, c), q(a, d, c), G(d, r, c), o = !0;
    },
    p(d, c) {
      /*$canEdit*/
      d[8] ? i ? (i.p(d, c), c & /*$canEdit*/
      256 && L(i, 1)) : (i = sd(d), i.c(), L(i, 1), i.m(e.parentNode, e)) : i && (he(), h(i, 1, 1, () => {
        i = null;
      }), ye());
      const l = {};
      c & /*$$scope, filteredItems*/
      1073741888 && (l.$$scope = { dirty: c, ctx: d }), t.$set(l);
      const C = {};
      c & /*$$scope, filteredItems*/
      1073741888 && (C.$$scope = { dirty: c, ctx: d }), a.$set(C);
    },
    i(d) {
      o || (L(i), L(t.$$.fragment, d), L(a.$$.fragment, d), o = !0);
    },
    o(d) {
      h(i), h(t.$$.fragment, d), h(a.$$.fragment, d), o = !1;
    },
    d(d) {
      d && (F(e), F(s), F(r)), i && i.d(d), z(t, d), z(a, d);
    }
  };
}
function ad(n, e) {
  let t, s, a;
  return s = new Ca({
    props: {
      style: "background: white",
      $$slots: { default: [hf] },
      $$scope: { ctx: e }
    }
  }), {
    key: n,
    first: null,
    c() {
      t = st(), X(s.$$.fragment), this.first = t;
    },
    m(r, o) {
      G(r, t, o), q(s, r, o), a = !0;
    },
    p(r, o) {
      e = r;
      const i = {};
      o & /*$$scope, filteredItems, selected, $canEdit*/
      1073742160 && (i.$$scope = { dirty: o, ctx: e }), s.$set(i);
    },
    i(r) {
      a || (L(s.$$.fragment, r), a = !0);
    },
    o(r) {
      h(s.$$.fragment, r), a = !1;
    },
    d(r) {
      r && F(t), z(s, r);
    }
  };
}
function yf(n) {
  let e = [], t = /* @__PURE__ */ new Map(), s, a, r = Vt(
    /*filteredItems*/
    n[6]
  );
  const o = (i) => (
    /*item*/
    i[27].name
  );
  for (let i = 0; i < r.length; i += 1) {
    let d = ed(n, r, i), c = o(d);
    t.set(c, e[i] = ad(c, d));
  }
  return {
    c() {
      for (let i = 0; i < e.length; i += 1)
        e[i].c();
      s = st();
    },
    m(i, d) {
      for (let c = 0; c < e.length; c += 1)
        e[c] && e[c].m(i, d);
      G(i, s, d), a = !0;
    },
    p(i, d) {
      d & /*filteredItems, selected, $canEdit*/
      336 && (r = Vt(
        /*filteredItems*/
        i[6]
      ), he(), e = Ss(e, d, o, 1, i, r, t, s.parentNode, Os, ad, s, ed), ye());
    },
    i(i) {
      if (!a) {
        for (let d = 0; d < r.length; d += 1)
          L(e[d]);
        a = !0;
      }
    },
    o(i) {
      for (let d = 0; d < e.length; d += 1)
        h(e[d]);
      a = !1;
    },
    d(i) {
      i && F(s);
      for (let d = 0; d < e.length; d += 1)
        e[d].d(i);
    }
  };
}
function Nf(n) {
  let e, t, s, a;
  return e = new Md({
    props: {
      style: "font-weight: bold;",
      $$slots: { default: [Of] },
      $$scope: { ctx: n }
    }
  }), s = new Rd({
    props: {
      $$slots: { default: [yf] },
      $$scope: { ctx: n }
    }
  }), {
    c() {
      X(e.$$.fragment), t = $(), X(s.$$.fragment);
    },
    m(r, o) {
      q(e, r, o), G(r, t, o), q(s, r, o), a = !0;
    },
    p(r, o) {
      const i = {};
      o & /*$$scope, $canEdit*/
      1073742080 && (i.$$scope = { dirty: o, ctx: r }), e.$set(i);
      const d = {};
      o & /*$$scope, filteredItems, selected, $canEdit*/
      1073742160 && (d.$$scope = { dirty: o, ctx: r }), s.$set(d);
    },
    i(r) {
      a || (L(e.$$.fragment, r), L(s.$$.fragment, r), a = !0);
    },
    o(r) {
      h(e.$$.fragment, r), h(s.$$.fragment, r), a = !1;
    },
    d(r) {
      r && F(t), z(e, r), z(s, r);
    }
  };
}
function Tf(n) {
  var p;
  let e, t, s, a, r, o, i, d;
  function c(D) {
    n[17](D);
  }
  let l = {
    typeId: (
      /*typeId*/
      n[1]
    ),
    type: x.EnumType,
    instanceType: (
      /*enumType*/
      (p = n[2]) == null ? void 0 : p.instanceType
    )
  };
  /*$isEditModeSwitchState*/
  n[7] !== void 0 && (l.isEditMode = /*$isEditModeSwitchState*/
  n[7]), e = new Fr({ props: l }), de.push(() => Ve(e, "isEditMode", c)), e.$on(
    "modeChange",
    /*modeChange_handler*/
    n[18]
  ), e.$on(
    "instanceTypeChange",
    /*instanceTypeChange_handler*/
    n[19]
  );
  function C(D) {
    n[20](D);
  }
  let u = {
    icon: "search",
    label: "Search...",
    variant: "outlined"
  };
  /*searchQuery*/
  n[3] !== void 0 && (u.value = /*searchQuery*/
  n[3]), r = new pr({ props: u }), de.push(() => Ve(r, "value", C));
  let m = !/*isLoading*/
  n[5] && td(n);
  return {
    c() {
      X(e.$$.fragment), s = $(), a = Z("div"), X(r.$$.fragment), i = $(), m && m.c(), R(a, "class", "oscd-card oscd-container enum-type-details");
    },
    m(D, _) {
      q(e, D, _), G(D, s, _), G(D, a, _), q(r, a, null), U(a, i), m && m.m(a, null), d = !0;
    },
    p(D, [_]) {
      var S;
      const A = {};
      _ & /*typeId*/
      2 && (A.typeId = /*typeId*/
      D[1]), _ & /*enumType*/
      4 && (A.instanceType = /*enumType*/
      (S = D[2]) == null ? void 0 : S.instanceType), !t && _ & /*$isEditModeSwitchState*/
      128 && (t = !0, A.isEditMode = /*$isEditModeSwitchState*/
      D[7], we(() => t = !1)), e.$set(A);
      const b = {};
      !o && _ & /*searchQuery*/
      8 && (o = !0, b.value = /*searchQuery*/
      D[3], we(() => o = !1)), r.$set(b), /*isLoading*/
      D[5] ? m && (he(), h(m, 1, 1, () => {
        m = null;
      }), ye()) : m ? (m.p(D, _), _ & /*isLoading*/
      32 && L(m, 1)) : (m = td(D), m.c(), L(m, 1), m.m(a, null));
    },
    i(D) {
      d || (L(e.$$.fragment, D), L(r.$$.fragment, D), L(m), d = !0);
    },
    o(D) {
      h(e.$$.fragment, D), h(r.$$.fragment, D), h(m), d = !1;
    },
    d(D) {
      D && (F(s), F(a)), z(e, D), z(r), m && m.d();
    }
  };
}
function Pf(n) {
  n.children.forEach((e) => e.meta.isConfigured = !0);
}
function vf(n, e, t) {
  let s, a, r;
  var o;
  const i = hr();
  let { mode: d = "view" } = e, { typeId: c } = e, { instanceTypeId: l = null } = e;
  const C = Ea({
    onSave: () => He(void 0, void 0, void 0, function* () {
      return E();
    }),
    onDiscard: () => He(void 0, void 0, void 0, function* () {
    }),
    initialMode: l ? d : "view"
  }), { canEdit: u, isEditModeSwitchState: m } = C;
  Ye(n, u, (g) => t(8, r = g)), Ye(n, m, (g) => t(7, a = g));
  let p = null, D = "", _ = [], A = !1;
  at(() => He(void 0, void 0, void 0, function* () {
    yield b();
  }));
  function b() {
    return He(this, void 0, void 0, function* () {
      t(5, A = !0), t(2, p = C.isCreateMode() ? yield S(c, l) : yield f(c)), t(4, _ = p.children.filter((g) => g.meta.isConfigured).map((g) => g.name)), t(5, A = !1);
    });
  }
  function S(g, W) {
    return He(this, void 0, void 0, function* () {
      const B = yield i.getDefaultType(W);
      return B.id = g, B.instanceType = W, g = B.id, W = B.instanceType, Pf(B), B;
    });
  }
  function f(g) {
    return He(this, void 0, void 0, function* () {
      return yield i.getTypeById(g);
    });
  }
  function E() {
    i.createOrUpdateType({
      id: p.id,
      instanceType: p.instanceType,
      children: _.map((g) => ({ name: g }))
    });
  }
  const y = (g) => He(void 0, void 0, void 0, function* () {
    return g === "save" ? (yield C.save(), !0) : C.confirmLeave();
  });
  function I() {
    if (!p)
      return !1;
    const g = p.children.filter((B) => B.meta.isConfigured).map((B) => B.name).sort(), W = _.slice().sort();
    return JSON.stringify(g) !== JSON.stringify(W);
  }
  function N(g) {
    return He(this, void 0, void 0, function* () {
      (yield C.switchMode(g)) && (yield b());
    });
  }
  function j(g) {
    a = g, m.set(a);
  }
  const v = (g) => N(g.detail), O = (g) => {
    t(0, l = g.detail), C.switchMode("create"), b();
  };
  function M(g) {
    D = g, t(3, D);
  }
  function P(g) {
    _ = g, t(4, _);
  }
  return n.$$set = (g) => {
    "mode" in g && t(14, d = g.mode), "typeId" in g && t(1, c = g.typeId), "instanceTypeId" in g && t(0, l = g.instanceTypeId);
  }, n.$$.update = () => {
    n.$$.dirty & /*enumType, searchQuery, _a*/
    65548 && t(6, s = t(16, o = p == null ? void 0 : p.children.filter((g) => g.name.toLowerCase().includes(D.toLowerCase()))) !== null && o !== void 0 ? o : []), n.$$.dirty & /*selected*/
    16 && _ && (I() ? C.makeDirty() : C.makeClean());
  }, [
    l,
    c,
    p,
    D,
    _,
    A,
    s,
    a,
    r,
    C,
    u,
    m,
    b,
    N,
    d,
    y,
    o,
    j,
    v,
    O,
    M,
    P
  ];
}
class Mf extends me {
  constructor(e) {
    super(), ue(this, e, vf, Tf, Ce, {
      mode: 14,
      typeId: 1,
      instanceTypeId: 0,
      canClose: 15
    });
  }
  get canClose() {
    return this.$$.ctx[15];
  }
}
function rd(n) {
  let e, t = (
    /*match*/
    n[11].description + ""
  ), s;
  return {
    c() {
      e = Z("div"), s = Se(t), R(e, "class", "subtitle svelte-1ymw80b");
    },
    m(a, r) {
      G(a, e, r), U(e, s);
    },
    p(a, r) {
      r & /*match*/
      2048 && t !== (t = /*match*/
      a[11].description + "") && je(s, t);
    },
    d(a) {
      a && F(e);
    }
  };
}
function Rf(n) {
  let e, t, s = (
    /*match*/
    n[11].id + ""
  ), a, r, o = (
    /*match*/
    n[11].id && rd(n)
  );
  return {
    c() {
      e = Z("div"), t = Z("div"), a = Se(s), r = $(), o && o.c(), R(t, "class", "title svelte-1ymw80b"), R(e, "class", "custom-item");
    },
    m(i, d) {
      G(i, e, d), U(e, t), U(t, a), U(e, r), o && o.m(e, null);
    },
    p(i, d) {
      d & /*match*/
      2048 && s !== (s = /*match*/
      i[11].id + "") && je(a, s), /*match*/
      i[11].id ? o ? o.p(i, d) : (o = rd(i), o.c(), o.m(e, null)) : o && (o.d(1), o = null);
    },
    d(i) {
      i && F(e), o && o.d();
    }
  };
}
function Ff(n) {
  let e, t, s, a, r, o, i;
  function d(l) {
    n[9](l);
  }
  let c = {
    label: `Select ${/*typeToInstanceText*/
    n[7](
      /*type*/
      n[1]
    )}`,
    options: (
      /*options*/
      n[4]
    ),
    getOptionLabel: (
      /*getOptionLabel*/
      n[6]
    ),
    textfield$required: !0,
    menu$style: "max-height: 500px;",
    $$slots: {
      match: [
        Rf,
        ({ match: l }) => ({ 11: l }),
        ({ match: l }) => l ? 2048 : 0
      ]
    },
    $$scope: { ctx: n }
  };
  return (
    /*selectedItem*/
    n[3] !== void 0 && (c.value = /*selectedItem*/
    n[3]), r = new ec({ props: c }), de.push(() => Ve(r, "value", d)), {
      c() {
        e = Z("div"), t = Z("p"), s = Se(
          /*text*/
          n[2]
        ), a = $(), X(r.$$.fragment), R(e, "slot", "content");
      },
      m(l, C) {
        G(l, e, C), U(e, t), U(t, s), U(e, a), q(r, e, null), i = !0;
      },
      p(l, C) {
        (!i || C & /*text*/
        4) && je(
          s,
          /*text*/
          l[2]
        );
        const u = {};
        C & /*type*/
        2 && (u.label = `Select ${/*typeToInstanceText*/
        l[7](
          /*type*/
          l[1]
        )}`), C & /*options*/
        16 && (u.options = /*options*/
        l[4]), C & /*$$scope, match*/
        6144 && (u.$$scope = { dirty: C, ctx: l }), !o && C & /*selectedItem*/
        8 && (o = !0, u.value = /*selectedItem*/
        l[3], we(() => o = !1)), r.$set(u);
      },
      i(l) {
        i || (L(r.$$.fragment, l), i = !0);
      },
      o(l) {
        h(r.$$.fragment, l), i = !1;
      },
      d(l) {
        l && F(e), z(r);
      }
    }
  );
}
function Gf(n) {
  let e, t, s;
  function a(o) {
    n[10](o);
  }
  let r = {
    title: `Select ${/*typeToInstanceText*/
    n[7](
      /*type*/
      n[1]
    )}`,
    maxWidth: "800px",
    confirmDisabled: !/*isValid*/
    n[5],
    $$slots: { content: [Ff] },
    $$scope: { ctx: n }
  };
  return (
    /*open*/
    n[0] !== void 0 && (r.open = /*open*/
    n[0]), e = new Ir({ props: r }), de.push(() => Ve(e, "open", a)), e.$on(
      "confirm",
      /*handleConfirm*/
      n[8]
    ), {
      c() {
        X(e.$$.fragment);
      },
      m(o, i) {
        q(e, o, i), s = !0;
      },
      p(o, [i]) {
        const d = {};
        i & /*type*/
        2 && (d.title = `Select ${/*typeToInstanceText*/
        o[7](
          /*type*/
          o[1]
        )}`), i & /*isValid*/
        32 && (d.confirmDisabled = !/*isValid*/
        o[5]), i & /*$$scope, type, options, selectedItem, text*/
        4126 && (d.$$scope = { dirty: i, ctx: o }), !t && i & /*open*/
        1 && (t = !0, d.open = /*open*/
        o[0], we(() => t = !1)), e.$set(d);
      },
      i(o) {
        s || (L(e.$$.fragment, o), s = !0);
      },
      o(o) {
        h(e.$$.fragment, o), s = !1;
      },
      d(o) {
        z(e, o);
      }
    }
  );
}
function Vf(n, e, t) {
  let s, { type: a } = e, { text: r = void 0 } = e, { open: o = !1 } = e, i = null, d = [], c = (p) => {
    var D;
    return (D = p == null ? void 0 : p.id) !== null && D !== void 0 ? D : "";
  };
  at(() => {
    switch (a) {
      case x.LNodeType:
        Promise.resolve().then(() => Bs).then(({ getLNodeTypeService: p }) => {
          p().getTypeOptions().then((_) => t(4, d = _));
        });
        break;
      case x.DOType:
        Promise.resolve().then(() => Bs).then(({ getDOTypeService: p }) => {
          p().getTypeOptions().then((_) => t(4, d = _));
        });
        break;
      case x.DAType:
        Promise.resolve().then(() => Bs).then(({ getDATypeService: p }) => {
          p().getTypeOptions().then((_) => t(4, d = _));
        });
        break;
      case x.EnumType:
        Promise.resolve().then(() => Bs).then(({ getEnumTypeService: p }) => {
          p().getTypeOptions().then((_) => t(4, d = _));
        });
        break;
      default:
        throw new Error(`Unsupported type: ${a}`);
    }
  });
  function l(p) {
    switch (p) {
      case x.LNodeType:
        return "LnClass";
      case x.DOType:
        return "CDC";
      case x.DAType:
      case x.EnumType:
      default:
        return "Instance";
    }
  }
  function C() {
    un("confirm", { instanceType: i.id });
  }
  function u(p) {
    i = p, t(3, i);
  }
  function m(p) {
    o = p, t(0, o);
  }
  return n.$$set = (p) => {
    "type" in p && t(1, a = p.type), "text" in p && t(2, r = p.text), "open" in p && t(0, o = p.open);
  }, n.$$.update = () => {
    n.$$.dirty & /*selectedItem*/
    8 && t(5, s = i !== null);
  }, [
    o,
    a,
    r,
    i,
    d,
    s,
    c,
    l,
    C,
    u,
    m
  ];
}
class jf extends me {
  constructor(e) {
    super(), ue(this, e, Vf, Gf, Ce, { type: 1, text: 2, open: 0 });
  }
}
function Oa(n, e, t) {
  Sr({
    component: of,
    title: "DO Details",
    props: { mode: n, typeId: e, cdc: t }
  });
}
async function kf() {
  const n = await kn(Pd, {
    title: "Unsaved Changes",
    message: "You have unsaved changes. Do you want to save them?",
    confirmActionText: "Save",
    cancelActionText: "Discard"
  });
  return n.type === "confirm" ? { action: "save" } : n.type === "cancel" ? { action: "discard" } : { action: "cancel" };
}
function Ts(n, e, t) {
  Sr({
    component: Df,
    title: "DA Details",
    props: { mode: n, typeId: e, instanceType: t }
  });
}
function Ps(n, e, t) {
  Sr({
    component: Mf,
    title: "Enum Details",
    props: { mode: n, typeId: e, instanceTypeId: t }
  });
}
function oc() {
  kn(Yb).then((n) => {
    n.type === "confirm" && Oa("create", n.data.id, n.data.cdc);
  });
}
function Gr() {
  kn(lf).then((n) => {
    n.type === "confirm" && Ts(
      "create",
      n.data.id,
      n.data.instanceType
    );
  });
}
function Vr() {
  kn(mf).then((n) => {
    n.type === "confirm" && Ps(
      "create",
      n.data.id,
      n.data.instanceType
    );
  });
}
function jr(n, e) {
  if (!n || !n.typeRef || n.typeRef === "")
    return;
  const t = n.typeRef;
  n.meta.refTypeKind === x.DOType ? Oa(e, t) : n.meta.refTypeKind === x.DAType ? Ts(e, t) : n.meta.refTypeKind === x.EnumType && Ps(e, t);
}
async function wf(n, e) {
  const t = await kn(jf, { type: n, text: e });
  if (t.type === "confirm")
    return t.data.instanceType;
}
function Bf(n) {
  let e;
  return {
    c() {
      e = Se("SAVE CHANGES");
    },
    m(t, s) {
      G(t, e, s);
    },
    d(t) {
      t && F(e);
    }
  };
}
function Uf(n) {
  let e, t, s, a, r, o, i, d, c, l, C, u, m;
  s = new Rp({
    props: {
      activeIndex: 1,
      breadcrumbs: (
        /*breadcrumbs*/
        n[2]
      )
    }
  }), s.$on(
    "click",
    /*click_handler*/
    n[33]
  );
  function p(_) {
    n[34](_);
  }
  let D = {
    preventToggleOnClick: !0,
    id: "edit-mode-switch",
    label: "Edit Mode",
    labelStyle: "font-weight: bold; text-transform: uppercase; color: var(--mdc-theme-primary);"
  };
  return (
    /*$isEditModeSwitchState*/
    n[3] !== void 0 && (D.checked = /*$isEditModeSwitchState*/
    n[3]), o = new Fd({ props: D }), de.push(() => Ve(o, "checked", p)), o.$on(
      "change",
      /*change_handler*/
      n[35]
    ), c = new ia({
      props: {
        disabled: !/*$isSavable*/
        n[4],
        callback: (
          /*func*/
          n[36]
        ),
        variant: "unelevated",
        $$slots: { default: [Bf] },
        $$scope: { ctx: n }
      }
    }), u = new vr({
      props: {
        columns: (
          /*columns*/
          n[0]
        ),
        data: (
          /*boardData*/
          n[1]
        )
      }
    }), u.$on(
      "columnActionClick",
      /*columnActionClick_handler*/
      n[37]
    ), u.$on(
      "itemEdit",
      /*itemEdit_handler*/
      n[38]
    ), u.$on(
      "itemMarkChange",
      /*itemMarkChange_handler*/
      n[39]
    ), u.$on(
      "itemSelectChange",
      /*itemSelectChange_handler*/
      n[40]
    ), u.$on(
      "itemDrop",
      /*itemDrop_handler*/
      n[41]
    ), u.$on(
      "itemApplyDefaults",
      /*itemApplyDefaults_handler*/
      n[42]
    ), u.$on(
      "itemUnlink",
      /*itemUnlink_handler*/
      n[43]
    ), u.$on(
      "itemReferenceClick",
      /*itemReferenceClick_handler*/
      n[44]
    ), {
      c() {
        e = Z("div"), t = Z("div"), X(s.$$.fragment), a = $(), r = Z("div"), X(o.$$.fragment), d = $(), X(c.$$.fragment), l = $(), C = Z("div"), X(u.$$.fragment), R(r, "class", "oscd-details-toolbar-right svelte-1dbtp1y"), R(t, "class", "oscd-details-toolbar svelte-1dbtp1y"), R(C, "class", "oscd-details-board svelte-1dbtp1y"), R(e, "class", "oscd-details");
      },
      m(_, A) {
        G(_, e, A), U(e, t), q(s, t, null), U(t, a), U(t, r), q(o, r, null), U(r, d), q(c, r, null), U(e, l), U(e, C), q(u, C, null), m = !0;
      },
      p(_, A) {
        const b = {};
        A[0] & /*breadcrumbs*/
        4 && (b.breadcrumbs = /*breadcrumbs*/
        _[2]), s.$set(b);
        const S = {};
        !i && A[0] & /*$isEditModeSwitchState*/
        8 && (i = !0, S.checked = /*$isEditModeSwitchState*/
        _[3], we(() => i = !1)), o.$set(S);
        const f = {};
        A[0] & /*$isSavable*/
        16 && (f.disabled = !/*$isSavable*/
        _[4]), A[1] & /*$$scope*/
        33554432 && (f.$$scope = { dirty: A, ctx: _ }), c.$set(f);
        const E = {};
        A[0] & /*columns*/
        1 && (E.columns = /*columns*/
        _[0]), A[0] & /*boardData*/
        2 && (E.data = /*boardData*/
        _[1]), u.$set(E);
      },
      i(_) {
        m || (L(s.$$.fragment, _), L(o.$$.fragment, _), L(c.$$.fragment, _), L(u.$$.fragment, _), m = !0);
      },
      o(_) {
        h(s.$$.fragment, _), h(o.$$.fragment, _), h(c.$$.fragment, _), h(u.$$.fragment, _), m = !1;
      },
      d(_) {
        _ && F(e), z(s), z(o), z(c), z(u);
      }
    }
  );
}
function Hf(n, e, t) {
  let s, a, r, o, i, d, c, l, C, u, m, p, D;
  Ye(n, Es, (re) => t(48, u = re));
  let { doc: _ } = e;
  const A = Ns(), b = Tr(() => He(void 0, void 0, void 0, function* () {
    return g.children;
  }));
  Ye(n, b, (re) => t(28, o = re));
  const { markedItems: S, configuredItems: f, isDirty: E } = b;
  Ye(n, S, (re) => t(30, c = re)), Ye(n, f, (re) => t(47, i = re)), Ye(n, E, (re) => t(32, C = re));
  const y = Ea({
    onSave: () => He(void 0, void 0, void 0, function* () {
      return ke();
    }),
    onDiscard: () => He(void 0, void 0, void 0, function* () {
      return b.reset();
    }),
    initialMode: "view"
  }), { canEdit: I, isEditModeSwitchState: N, mode: j, dirty: v, isSavable: O } = y;
  Ye(n, I, (re) => t(31, l = re)), Ye(n, N, (re) => t(3, p = re)), Ye(n, j, (re) => t(29, d = re)), Ye(n, v, (re) => t(49, m = re)), Ye(n, O, (re) => t(4, D = re));
  let M, P, g = null, W = {
    lNodeTypes: [],
    dataObjectTypes: [],
    dataAttributeTypes: [],
    enumTypes: []
  };
  at(() => {
    var re, Ue;
    B(), M = (re = u == null ? void 0 : u.meta) === null || re === void 0 ? void 0 : re.lNodeTypeId, P = (Ue = u == null ? void 0 : u.meta) === null || Ue === void 0 ? void 0 : Ue.lnClass;
    const At = Aa.subscribe((ne) => {
      m ? T([]) : w(M, P);
    });
    return () => {
      At();
    };
  });
  function B() {
    const re = (u == null ? void 0 : u.path[0]) === "create" ? "create" : (u == null ? void 0 : u.path[0]) === "edit" ? "edit" : "view";
    y.switchMode(re);
  }
  let H = [];
  function w(re, Ue) {
    return He(this, void 0, void 0, function* () {
      t(25, g = yield Hb(d, re, Ue)), re = g.id, Ue = g.lnClass, yield b.reload();
    });
  }
  function T(re) {
    return He(this, void 0, void 0, function* () {
      g && Kb(d, g.id, g.lnClass, re.map((Ue) => Ue.name)).then((Ue) => t(26, W = Ue));
    });
  }
  function Y(re) {
    b.toggleMarked(re);
  }
  function Ie({ itemId: re }) {
    b.toggleConfigured(re);
  }
  function Ge({ source: re, target: Ue }) {
    !re || !Ue || re.columnId === "doTypes" && Ue.columnId === "refs" && b.setTypeReference(Ue.itemId, re.itemId);
  }
  function ke() {
    if (!g)
      return;
    let re = i.map((Ue) => ({ name: Ue.name, typeRef: Ue.typeRef }));
    A.createOrUpdateType({
      id: g.id,
      instanceType: g.lnClass,
      children: re
    }), b.commit();
  }
  function ae({ columnId: re }) {
    re === "doTypes" ? oc() : re === "daTypes" ? Gr() : re === "enumTypes" && Vr();
  }
  function _e(re, Ue) {
    const At = I ? "edit" : "view";
    Ue === "doTypes" ? Oa(At, re) : Ue === "daTypes" ? Ts(At, re) : Ue === "enumTypes" && Ps(At, re);
  }
  function We({ index: re }) {
    return He(this, void 0, void 0, function* () {
      (yield y.confirmLeave()) && re === 0 && Es.set({ path: ["overview"] });
    });
  }
  function Be(re) {
    return He(this, void 0, void 0, function* () {
      (yield y.switchMode(re ? "edit" : "view")) && (yield w(M, P));
    });
  }
  function xe({ itemId: re }) {
    b.removeTypeReference(re);
  }
  function it({ itemId: re }) {
    const Ue = o.find((At) => At.name === re);
    jr(Ue, "view");
  }
  function oe(re, Ue) {
    const At = W.dataObjectTypes.find((ne) => ne.id === re.itemId);
    return Rr(Ue, At);
  }
  const J = (re) => We(re.detail);
  function se(re) {
    p = re, N.set(p);
  }
  const V = (re) => Be(re.detail), ge = () => y.save(), Q = (re) => ae(re.detail), pe = ({ detail: { itemId: re, columnId: Ue } }) => _e(re, Ue), $e = ({ detail: { itemId: re } }) => Y(re), Lt = (re) => Ie(re.detail), Ht = (re) => Ge(re.detail), k = (re) => console.log(re.detail), ie = (re) => xe(re.detail), Ke = (re) => it(re.detail);
  return n.$$set = (re) => {
    "doc" in re && t(24, _ = re.doc);
  }, n.$$.update = () => {
    n.$$.dirty[1] & /*$refStoreIsDirty*/
    2 && (C ? y.makeDirty() : y.makeClean()), n.$$.dirty[0] & /*$mode, logicalNodeType*/
    570425344 && t(2, s = qb(d === "create", g)), n.$$.dirty[0] & /*$refStore*/
    268435456 | n.$$.dirty[1] & /*$canEdit*/
    1 && t(27, H = Mr(o, l, oe)), n.$$.dirty[0] & /*referenceDataObjects, dataTypes*/
    201326592 && t(1, a = {
      refs: H,
      doTypes: Dn(W.dataObjectTypes, !0),
      daTypes: Dn(W.dataAttributeTypes, !0),
      enumTypes: Dn(W.enumTypes, !0)
    }), n.$$.dirty[1] & /*$canEdit*/
    1 && t(0, r = Wb(l)), n.$$.dirty[0] & /*logicalNodeType, $markedItems*/
    1107296256 && g && T(c);
  }, [
    r,
    a,
    s,
    p,
    D,
    b,
    S,
    f,
    E,
    y,
    I,
    N,
    j,
    v,
    O,
    Y,
    Ie,
    Ge,
    ae,
    _e,
    We,
    Be,
    xe,
    it,
    _,
    g,
    W,
    H,
    o,
    d,
    c,
    l,
    C,
    J,
    se,
    V,
    ge,
    Q,
    pe,
    $e,
    Lt,
    Ht,
    k,
    ie,
    Ke
  ];
}
class Kf extends me {
  constructor(e) {
    super(), ue(this, e, Hf, Uf, Ce, { doc: 24 }, null, [-1, -1]);
  }
}
function Wf(n) {
  let e, t, s, a;
  const r = [Xf, zf], o = [];
  function i(d, c) {
    return (
      /*$route*/
      d[2].path[0] === "overview" ? 0 : 1
    );
  }
  return t = i(n), s = o[t] = r[t](n), {
    c() {
      e = Z("div"), s.c(), R(e, "class", "template-generator-container svelte-1buwo4");
    },
    m(d, c) {
      G(d, e, c), o[t].m(e, null), a = !0;
    },
    p(d, c) {
      let l = t;
      t = i(d), t === l ? o[t].p(d, c) : (he(), h(o[l], 1, 1, () => {
        o[l] = null;
      }), ye(), s = o[t], s ? s.p(d, c) : (s = o[t] = r[t](d), s.c()), L(s, 1), s.m(e, null));
    },
    i(d) {
      a || (L(s), a = !0);
    },
    o(d) {
      h(s), a = !1;
    },
    d(d) {
      d && F(e), o[t].d();
    }
  };
}
function qf(n) {
  let e, t, s, a, r;
  return {
    c() {
      e = Z("input"), t = $(), s = Z("p"), s.textContent = "Please load an XML file to start.", R(e, "type", "file"), R(e, "accept", ".ssd");
    },
    m(o, i) {
      G(o, e, i), G(o, t, i), G(o, s, i), a || (r = ce(
        e,
        "change",
        /*handleFileChange*/
        n[3]
      ), a = !0);
    },
    p: Le,
    i: Le,
    o: Le,
    d(o) {
      o && (F(e), F(t), F(s)), a = !1, r();
    }
  };
}
function zf(n) {
  let e, t;
  return e = new Kf({ props: { doc: (
    /*doc*/
    n[0]
  ) } }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*doc*/
      1 && (r.doc = /*doc*/
      s[0]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Xf(n) {
  let e, t;
  return e = new $D({ props: { doc: (
    /*doc*/
    n[0]
  ) } }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*doc*/
      1 && (r.doc = /*doc*/
      s[0]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function Zf(n) {
  let e, t, s, a, r, o, i, d;
  const c = [qf, Wf], l = [];
  function C(u, m) {
    return !/*doc*/
    u[0] && /*devMode*/
    u[1] ? 0 : 1;
  }
  return t = C(n), s = l[t] = c[t](n), r = new am({}), i = new AI({}), {
    c() {
      e = Z("div"), s.c(), a = $(), X(r.$$.fragment), o = $(), X(i.$$.fragment), R(e, "class", "oscd-app");
    },
    m(u, m) {
      G(u, e, m), l[t].m(e, null), G(u, a, m), q(r, u, m), G(u, o, m), q(i, u, m), d = !0;
    },
    p(u, [m]) {
      let p = t;
      t = C(u), t === p ? l[t].p(u, m) : (he(), h(l[p], 1, 1, () => {
        l[p] = null;
      }), ye(), s = l[t], s ? s.p(u, m) : (s = l[t] = c[t](u), s.c()), L(s, 1), s.m(e, null));
    },
    i(u) {
      d || (L(s), L(r.$$.fragment, u), L(i.$$.fragment, u), d = !0);
    },
    o(u) {
      h(s), h(r.$$.fragment, u), h(i.$$.fragment, u), d = !1;
    },
    d(u) {
      u && (F(e), F(a), F(o)), l[t].d(), z(r, u), z(i, u);
    }
  };
}
function Yf() {
  const n = document.createElement("div");
  return n.id = "oscd-host", n.addEventListener("oscd-edit-v2", (e) => {
    console.log("Mock host clicked:", e);
  }), document.body.appendChild(n), n;
}
function Qf(n, e, t) {
  let s;
  Ye(n, Es, (d) => t(2, s = d));
  let { doc: a = null } = e, { devMode: r = !1 } = e, { host: o = null } = e;
  function i(d) {
    var c;
    return He(this, void 0, void 0, function* () {
      const l = (c = d.target.files) === null || c === void 0 ? void 0 : c[0];
      if (!l)
        return;
      const C = yield l.text(), u = new DOMParser();
      t(0, a = u.parseFromString(C, "application/xml"));
    });
  }
  return at(() => {
    r && t(4, o = Yf()), VD.set(o);
  }), n.$$set = (d) => {
    "doc" in d && t(0, a = d.doc), "devMode" in d && t(1, r = d.devMode), "host" in d && t(4, o = d.host);
  }, n.$$.update = () => {
    n.$$.dirty & /*doc, host*/
    17 && a && (rc(a, o), Aa.set(a));
  }, [a, r, s, i, o];
}
class Jf extends me {
  constructor(e) {
    super(), ue(this, e, Qf, Zf, Ce, { doc: 0, devMode: 1, host: 4 });
  }
}
function id(n) {
  let e, t;
  return e = new Jf({
    props: {
      doc: (
        /*doc*/
        n[0]
      ),
      host: (
        /*host*/
        n[2]
      )
    }
  }), {
    c() {
      X(e.$$.fragment);
    },
    m(s, a) {
      q(e, s, a), t = !0;
    },
    p(s, a) {
      const r = {};
      a & /*doc*/
      1 && (r.doc = /*doc*/
      s[0]), a & /*host*/
      4 && (r.host = /*host*/
      s[2]), e.$set(r);
    },
    i(s) {
      t || (L(e.$$.fragment, s), t = !0);
    },
    o(s) {
      h(e.$$.fragment, s), t = !1;
    },
    d(s) {
      z(e, s);
    }
  };
}
function xf(n) {
  let e, t, s, a, r, o = (
    /*doc*/
    (n[0] || /*dev*/
    n[1]) && id(n)
  );
  return {
    c() {
      o && o.c(), e = $(), t = Z("input"), s = $(), a = Z("input"), R(t, "type", "hidden"), R(t, "name", "package-name"), t.value = Ad, R(a, "type", "hidden"), R(a, "name", "package-version"), a.value = Ed;
    },
    m(i, d) {
      o && o.m(i, d), G(i, e, d), G(i, t, d), G(i, s, d), G(i, a, d), r = !0;
    },
    p(i, [d]) {
      /*doc*/
      i[0] || /*dev*/
      i[1] ? o ? (o.p(i, d), d & /*doc, dev*/
      3 && L(o, 1)) : (o = id(i), o.c(), L(o, 1), o.m(e.parentNode, e)) : o && (he(), h(o, 1, 1, () => {
        o = null;
      }), ye());
    },
    i(i) {
      r || (L(o), r = !0);
    },
    o(i) {
      h(o), r = !1;
    },
    d(i) {
      i && (F(e), F(t), F(s), F(a)), o && o.d(i);
    }
  };
}
function $f(n, e, t) {
  let { doc: s } = e, { dev: a = !1 } = e, { host: r } = e;
  return n.$$set = (o) => {
    "doc" in o && t(0, s = o.doc), "dev" in o && t(1, a = o.dev), "host" in o && t(2, r = o.host);
  }, [s, a, r];
}
class eA extends me {
  constructor(e) {
    super(), ue(this, e, $f, xf, Ce, { doc: 0, dev: 1, host: 2 });
  }
}
class aA extends HTMLElement {
  connectedCallback() {
    var t;
    this.attachShadow({ mode: "open" }), this.plugin = new eA({
      target: this.shadowRoot,
      props: {
        doc: this._doc,
        editCount: -1,
        host: this
      }
    });
    const e = tA();
    (t = this.shadowRoot) == null || t.appendChild(e);
  }
  set doc(e) {
    this._doc = e, this.plugin && this.plugin.$set({ doc: e });
  }
  set editCount(e) {
    this.plugin && this.plugin.$set({ editCount: e });
  }
}
function tA() {
  const n = `${Ad}-v${Ed}-style`, e = nA(), t = document.createElement("link");
  return t.rel = "stylesheet", t.type = "text/css", t.href = e, t.id = n, t;
}
function nA() {
  const n = new URL(import.meta.url), e = n.origin, t = n.pathname.split("/").slice(0, -1).filter(Boolean).join("/");
  return [e, t, "style.css"].filter(Boolean).join("/");
}
export {
  aA as default
};
